{"title": "Redes de Computadoras, Cuarta Edicion - PDF Free Download", "author": "Guest", "url": "https://epdf.tips/redes-de-computadoras-cuarta-edicion.html", "hostname": "epdf.tips", "description": "Conectividad de redes de computadoras C U A R TA E D I C I \u00d3 NRedes de computadoras El LIBRO de la conectividad de red...", "sitename": "EPDF.TIPS", "date": "2015-09-07", "id": null, "license": null, "body": null, "comments": "", "commentsbody": null, "raw_text": null, "text": "Conectividad de redes de computadoras C U A R TA E D I C I \u00d3 N\nRedes de computadoras El LIBRO de la conectividad de redes Totalmente actualizado para las tecnolog\u00edas clave\nRedes de computadoras, cuarta edici\u00f3n, es la introducci\u00f3n ideal a las redes de hoy... y del ma\u00f1ana. Este bestseller cl\u00e1sico ha sido cuidadosamente actualizado para reflejar las tecnolog\u00edas de conectividad de redes m\u00e1s nuevas e importantes, con un \u00e9nfasis especial en la conectividad inal\u00e1mbrica, entre ellas el est\u00e1ndar 802.11, BluetoothTM, los sistemas inal\u00e1mbricos de banda ancha y las redes ad hoc, i-mode y WAP. Tambi\u00e9n se abarcan las redes fijas, como ADSL, Internet por cable, Gigabit Ethernet, redes de igual a igual, NAT y MPLS. Incluye una gran cantidad de material nuevo sobre aplicaciones, m\u00e1s de 60 p\u00e1ginas Web, adem\u00e1s de la radio por Internet, voz sobre IP y v\u00eddeo bajo demanda. Por \u00faltimo, se revis\u00f3 y ampli\u00f3 el tema de seguridad en la red, el cual abarca ahora un cap\u00edtulo completo. Andrew S. Tanenbaum, autor, profesor, investigador y galardonado con el premio Karl V. Karlstrom del ACM, para profesores sobresalientes, explica con lujo de detalles c\u00f3mo funciona la red internamente, desde el hardware subyacente de la capa f\u00edsica hasta la capa de aplicaci\u00f3n de nivel superior. Tanenbaum abarca todo esto y m\u00e1s: \u25a0 \u25a0 \u25a0 \u25a0 \u25a0 \u25a0 \u25a0\nLa capa f\u00edsica (por ejemplo, cobre, fibra, tecnolog\u00eda inal\u00e1mbrica, sat\u00e9lites e Internet por cable). La capa de enlace de datos (por ejemplo, principios y verificaci\u00f3n de protocolos, HDLC y PPP). La subcapa MAC (por ejemplo, Gigabit Ethernet, 802.11, sistemas inal\u00e1mbricos de banda ancha y conmutaci\u00f3n). La capa de red (por ejemplo, algoritmos de enrutamiento, control de congesti\u00f3n, QoS, IPv4 e IPv6). La capa de transporte (por ejemplo, programaci\u00f3n de sockets, UDP, TCP, RTP y desempe\u00f1o de la red). La capa de aplicaci\u00f3n (por ejemplo, correo electr\u00f3nico, Web, PHP, Web inal\u00e1mbrica, MP3 y audio de flujo continuo). La seguridad en la red (por ejemplo, AES, RSA, criptograf\u00eda cu\u00e1ntica, IPsec y seguridad en Web).\nEste libro proporciona descripciones detalladas de los principios asociados a cada capa y presenta muchos ejemplos extra\u00eddos de Internet y de redes inal\u00e1mbricas. Redes de computadoras, cuarta edici\u00f3n, cuenta con diversos apoyos preparados por el autor, en su idioma original, los cuales puede descargar en la siguiente direcci\u00f3n: www.pearsonedlatino.com/tanenbaum\nRedes de computadoras\nANDREW S. TANENBAUM\nTANENBAUM\nC U A R TA E D I C I \u00d3 N\nRedes de computadoras ANDREW S. TANENBAUM\nC U A R TA EDICI\u00d3N\n\u00ae\nVis\u00edtenos en: www.pearsonedlatino.com\n\u00ae\n\u00ae\nRedes de computadoras Cuarta edici\u00f3n\nRedes de computadoras Cuarta edici\u00f3n\nAndrew S. Tanenbaum Vrije Universiteit Amsterdam, The Netherlands\nTRADUCCI\u00d3N Elisa N\u00fa\u00f1ez Ramos Traductora Profesional REVISI\u00d3N T\u00c9CNICA Felipe Antonio Trujillo Fern\u00e1ndez Maestro en Sistemas, Planeaci\u00f3n e Inform\u00e1tica Universidad Iberoamericana Adalberto Francisco Garc\u00eda Espinosa Ingeniero en Sistemas Electr\u00f3nicos ITESM\u2013CCM\nTANENBAUM, ANDREW S. Redes de computadoras PEARSON EDUCACI\u00d3N, M\u00e9xico, 2003 ISBN: 970-26-0162-2 \u00c1rea: Universitarios Formato 19 23.5 cm\nP\u00e1ginas: 912\nAuthorized translation from the English language edition, entitled Computer Networks, Fourth Edition, by Andrew S. Tanenbaum, published by Pearson Education, Inc., publishing as PRENTICE HALL, INC., Copyright \u00a9 2003. All rights reserved. ISBN 0-13-066102-3 Traducci\u00f3n autorizada de la edici\u00f3n en idioma ingl\u00e9s, titulada Computer Networks, Fourth Edition, por Andrew S. Tanenbaum, publicada por Pearson Education, Inc., publicada como PRENTICE-HALL INC., Copyright \u00a9 2003. Todos los derechos reservados. Esta edici\u00f3n en espa\u00f1ol es la \u00fanica autorizada. Edici\u00f3n en espa\u00f1ol Editor: Guillemo Trujano Mendoza e-mail:\n[[email protected]](/cdn-cgi/l/email-protection)\nEditor de desarrollo: Miguel Guti\u00e9rrez Hern\u00e1ndez Supervisor de producci\u00f3n: Jos\u00e9 D. Hern\u00e1ndez Gardu\u00f1o Edici\u00f3n en ingl\u00e9s Editorial/production supervision: Patti Guerrieri Cover design director: Jerry Votta Cover designer: Anthony Gemmellaro Cover design: Andrew S. Tanenbaum Art director: Gail Cocker-Bogusz Interior Design: Andrew S. Tanenbaum\nInterior graphics: Hadel Studio Typesetting: Andrew S. Tanenbaum Manufacturing buyer: Maura Zaldivar Executive editor: Mary Franz Editorial assistant: Noreen Regina Marketing manager: Dan DePasquale\nCUARTA EDICI\u00d3N, 2003 D.R. \u00a9 2003 por Pearson Educaci\u00f3n de M\u00e9xico, S.A. de C.V. Atlacomulco 500-5to. piso Industrial Atoto 53519 Naucalpan de Ju\u00e1rez, Edo. de M\u00e9xico E-mail:\n[[email protected]](/cdn-cgi/l/email-protection)\nC\u00e1mara Nacional de la Industria Editorial Mexicana. Reg. N\u00fam. 1031 Prentice Hall es una marca registrada de Pearson Educaci\u00f3n de M\u00e9xico, S.A. de C.V. Reservados todos los derechos. Ni la totalidad ni parte de esta publicaci\u00f3n pueden reproducirse, registrarse o transmitirse, por un sistema de recuperaci\u00f3n de informaci\u00f3n, en ninguna forma ni por ning\u00fan medio, sea electr\u00f3nico, mec\u00e1nico, fotoqu\u00edmico, magn\u00e9tico o electro\u00f3ptico, por fotocopia, grabaci\u00f3n o cualquier otro, sin permiso previo por escrito del editor. El pr\u00e9stamo, alquiler o cualquier otra forma de cesi\u00f3n de uso de este ejemplar requerir\u00e1 tambi\u00e9n la autorizaci\u00f3n del editor o de sus representantes. ISBN 970-26-0162-2 Impreso en M\u00e9xico. Printed in Mexico. 1 2 3 4 5 6 7 8 9 0 - 06 05 04 03\nPara Suzanne, Barbara, Marvin y en recuerdo de Bram y Sweetie \u03c0\nCONTENIDO PREFACIO\n1\nINTRODUCCI\u00d3N\n1\n1.1 USOS DE LAS REDES DE COMPUTADORAS 3 1.1.1 Aplicaciones de negocios 3 1.1.2 Aplicaciones dom\u00e9sticas 6 1.1.3 Usuarios m\u00f3viles 9 1.1.4 Temas sociales 12 1.2 HARDWARE DE REDES 14 1.2.1 Redes de \u00e1rea local 16 1.2.2 Redes de \u00e1rea metropolitana 18 1.2.3 Redes de \u00e1rea amplia 19 1.2.4 Redes inal\u00e1mbricas 21 1.2.5 Redes dom\u00e9sticas 23 1.2.6 Interredes 25 1.3 SOFTWARE DE REDES 26 1.3.1 Jerarqu\u00edas de protocolos 26 1.3.2 Aspectos de dise\u00f1o de las capas 30 1.3.3 Servicios orientados a la conexi\u00f3n y no orientados a la conexi\u00f3n 32 1.3.4 Primitivas de servicio 34 1.3.5 Relaci\u00f3n de servicios a protocolos 36 vii\nviii\nCONTENIDO\n1.4 MODELOS DE REFERENCIA 37 1.4.1 El modelo de referencia OSI 37 1.4.2 El modelo de referencia TCP/IP 41 1.4.3 Comparaci\u00f3n entre los modelos de referencia OSI y TCP/IP 44 1.4.4 Cr\u00edtica al modelo OSI y los protocolos 46 1.4.5 Cr\u00edtica del modelo de referencia TCP/IP 48 1.5 REDES DE EJEMPLO 49 1.5.1 Internet 50 1.5.2 Redes orientadas a la conexi\u00f3n: X.25, Frame Relay y ATM 59 1.5.3 Ethernet 65 1.5.4 LANs inal\u00e1mbricas: 802.11 68 1.6 ESTANDARIZACI\u00d3N DE REDES 71 1.6.1 Qui\u00e9n es qui\u00e9n en el mundo de las telecomunicaciones 71 1.6.2 Qui\u00e9n es qui\u00e9n en los est\u00e1ndares internacionales 74 1.6.3 Qui\u00e9n es qui\u00e9n en el mundo de los est\u00e1ndares de Internet 75 1.7 UNIDADES M\u00c9TRICAS 77 1.8 PANORAMA DEL RESTO DEL LIBRO 78 1.9 RESUMEN 80\n2\nLA CAPA F\u00cdSICA 2.1 LA BASE TE\u00d3RICA DE LA COMUNICACI\u00d3N DE DATOS 85 2.1.1 El an\u00e1lisis de Fourier 86 2.1.2 Se\u00f1ales de ancho de banda limitado 86 2.1.3 La tasa de datos m\u00e1xima de un canal 89 2.2 MEDIOS DE TRANSMISI\u00d3N GUIADOS 90 2.2.1 Medios magn\u00e9ticos 90 2.2.2 Par trenzado 91 2.2.3 Cable coaxial 92 2.2.4 Fibra \u00f3ptica 93 2.3 TRANSMISI\u00d3N INAL\u00c1MBRICA 100 2.3.1 El espectro electromagn\u00e9tico 100 2.3.2 Radiotransmisi\u00f3n 103\n85\nCONTENIDO\nix\n2.3.3 Transmisi\u00f3n por microondas 104 2.3.4 Ondas infrarrojas y milim\u00e9tricas 106 2.3.5 Transmisi\u00f3n por ondas de luz 107 2.4 SAT\u00c9LITES DE COMUNICACIONES 109 2.4.1 Sat\u00e9lites geoestacionarios 109 2.4.2 Sat\u00e9lites de \u00d3rbita Terrestre Media 113 2.4.3 Sat\u00e9lites de \u00d3rbita Terrestre Baja 114 2.4.4 Sat\u00e9lites en comparaci\u00f3n con fibra \u00f3ptica 117 2.5 LA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA 118 2.5.1 Estructura del sistema telef\u00f3nico 119 2.5.2 La pol\u00edtica de los tel\u00e9fonos 122 2.5.3 El circuito local: m\u00f3dems, ADSL e inal\u00e1mbrico 124 2.5.4 Troncales y multiplexi\u00f3n 137 2.5.5 Conmutaci\u00f3n 146 2.6 EL SISTEMA TELEF\u00d3NICO M\u00d3VIL 152 2.6.1 Tel\u00e9fonos m\u00f3viles de primera generaci\u00f3n 153 2.6.2 Tel\u00e9fonos m\u00f3viles de segunda generaci\u00f3n: voz digital 157 2.6.3 Tel\u00e9fonos m\u00f3viles de tercera generaci\u00f3n: voz y datos digitales 166 2.7 TELEVISI\u00d3N POR CABLE 169 2.7.1 Televisi\u00f3n por antena comunal 169 2.7.2 Internet a trav\u00e9s de cable 170 2.7.3 Asignaci\u00f3n de espectro 172 2.7.4 M\u00f3dems de cable 173 2.7.5 ADSL en comparaci\u00f3n con el cable 175 2.8 RESUMEN 177\n3\nLA CAPA DE ENLACE DE DATOS 3.1 CUESTIONES DE DISE\u00d1O DE LA CAPA DE ENLACE DE DATOS 184 3.1.1 Servicios proporcionados a la capa de red 184 3.1.2 Entramado 187 3.1.3 Control de errores 191 3.1.4 Control de flujo 192\n183\nx\nCONTENIDO\n3.2 DETECCI\u00d3N Y CORRECCI\u00d3N DE ERRORES 192 3.2.1 C\u00f3digos de correcci\u00f3n de errores 193 3.2.2 C\u00f3digos de detecci\u00f3n de errores 196 3.3 PROTOCOLOS ELEMENTALES DE ENLACE DE DATOS 200 3.3.1 Un protocolo s\u00edmplex sin restricciones 204 3.3.2 Protocolo s\u00edmplex de parada y espera 206 3.3.3 Protocolo s\u00edmplex para un canal con ruido 208 3.4 PROTOCOLOS DE VENTANA CORREDIZA 211 3.4.1 Un protocolo de ventana corrediza de un bit 214 3.4.2 Protocolo que usa retroceso N 216 3.4.3 Protocolo que utiliza repetici\u00f3n selectiva 223 3.5 VERIFICACI\u00d3N DE LOS PROTOCOLOS 229 3.5.1 Modelos de m\u00e1quinas de estado finito 229 3.5.2 Modelos de red de Petri 232 3.6 EJEMPLOS DE PROTOCOLOS DE ENLACE DE DATOS 234 3.6.1 HDLC\u2014Control de Enlace de Datos de Alto Nivel 234 3.6.2 La capa de enlace de datos en Internet 237 3.7 RESUMEN 242\n4\nLA SUBCAPA DE CONTROL DE ACCESO AL MEDIO 4.1 EL PROBLEMA DE ASIGNACI\u00d3N DEL CANAL 248 4.1.1 Asignaci\u00f3n est\u00e1tica de canal en LANs y MANs 248 4.1.2 Asignaci\u00f3n din\u00e1mica de canales en LANs y MANs 249 4.2 PROTOCOLOS DE ACCESO M\u00daLTIPLE 251 4.2.1 ALOHA 251 4.2.2 Protocolos de acceso m\u00faltiple con detecci\u00f3n de portadora 255 4.2.3 Protocolos libres de colisiones 259 4.2.4 Protocolos de contenci\u00f3n limitada 261 4.2.5 Protocolos de acceso m\u00faltiple por divisi\u00f3n de longitud de onda 265 4.2.6 Protocolos de LANs inal\u00e1mbricas 267\n247\nCONTENIDO\nxi\n4.3 ETHERNET 271 4.3.1 Cableado Ethernet 271 4.3.2 Codificaci\u00f3n Manchester 274 4.3.3 El protocolo de subcapa MAC de Ethernet 275 4.3.4 Algoritmo de retroceso exponencial binario 278 4.3.5 Desempe\u00f1o de Ethernet 279 4.3.6 Ethernet conmutada 281 4.3.7 Fast Ethernet 283 4.3.8 Gigabit Ethernet 286 4.3.9 Est\u00e1ndar IEEE 802.2: control l\u00f3gico del enlace 290 4.3.10 Retrospectiva de Ethernet 291 4.4 LANS INAL\u00c1MBRICAS 292 4.4.1 La pila de protocolos del 802.11 292 4.4.2 La capa f\u00edsica del 802.11 293 4.4.3 El protocolo de la subcapa MAC del 802.11 295 4.4.4 La estructura de trama 802.11 299 4.4.5 Servicios 301 4.5 BANDA ANCHA INAL\u00c1MBRICA 302 4.5.1 Comparaci\u00f3n entre los est\u00e1ndares 802.11 y 802.16 303 4.5.2 La pila de protocolos del est\u00e1ndar 802.16 305 4.5.3 La capa f\u00edsica del est\u00e1ndar 802.16 306 4.5.4 El protocolo de la subcapa MAC del 802.16 307 4.5.5 La estructura de trama 802.16 309 4.6 BLUETOOTH 310 4.6.1 Arquitectura de Bluetooth 311 4.6.2 Aplicaciones de Bluetooth 312 4.6.3 La pila de protocolos de Bluetooth 313 4.6.4 La capa de radio de Bluetooth 314 4.6.5 La capa de banda base de Bluetooth 315 4.6.6 La capa L2CAP de Bluetooth 316 4.6.7 Estructura de la trama de Bluetooth 316 4.7 CONMUTACI\u00d3N EN LA CAPA DE ENLACE DE DATOS 317 4.7.1 Puentes de 802.x a 802.y 319 4.7.2 Interconectividad local 322 4.7.3 Puentes con \u00e1rbol de expansi\u00f3n 323 4.7.4 Puentes remotos 325 4.7.5 Repetidores, concentradores, puentes, conmutadores, enrutadores y puertas de enlace 326 4.7.6 LANs virtuales 328 4.8 RESUMEN 336\nxii\n5\nCONTENIDO\nLA CAPA DE RED\n343\n5.1 ASPECTOS DE DISE\u00d1O DE LA CAPA DE RED 343 5.1.1 Conmutaci\u00f3n de paquetes de almacenamiento y reenv\u00edo 344 5.1.2 Servicios proporcionados a la capa de transporte 344 5.1.3 Implementaci\u00f3n del servicio no orientado a la conexi\u00f3n 345 5.1.4 Implementaci\u00f3n del servicio orientado a la conexi\u00f3n 347 5.1.5 Comparaci\u00f3n entre las subredes de circuitos virtuales y las de datagramas 348 5.2 ALGORITMOS DE ENRUTAMIENTO 350 5.2.1 Principio de optimizaci\u00f3n 352 5.2.2 Enrutamiento por la ruta m\u00e1s corta 353 5.2.3 Inundaci\u00f3n 355 5.2.4 Enrutamiento por vector de distancia 357 5.2.5 Enrutamiento por estado del enlace 360 5.2.6 Enrutamiento jer\u00e1rquico 366 5.2.7 Enrutamiento por difusi\u00f3n 368 5.2.8 Enrutamiento por multidifusi\u00f3n 370 5.2.9 Enrutamiento para hosts m\u00f3viles 372 5.2.10 Enrutamiento en redes ad hoc 375 5.2.11 B\u00fasqueda de nodos en redes de igual a igual 380 5.3 ALGORITMOS DE CONTROL DE CONGESTI\u00d3N 384 5.3.1 Principios generales del control de congesti\u00f3n 386 5.3.2 Pol\u00edticas de prevenci\u00f3n de congesti\u00f3n 388 5.3.3 Control de congesti\u00f3n en subredes de circuitos virtuales 389 5.3.4 Control de congesti\u00f3n en subredes de datagramas 391 5.3.5 Desprendimiento de carga 394 5.3.6 Control de fluctuaci\u00f3n 395 5.4 CALIDAD DEL SERVICIO 397 5.4.1 Requerimientos 397 5.4.2 T\u00e9cnicas para alcanzar buena calidad de servicio 5.4.3 Servicios integrados 409 5.4.4 Servicios diferenciados 412 5.4.5 Conmutaci\u00f3n de etiquetas y MPLS 415 5.5 INTERCONECTIVIDAD 418 5.5.1 C\u00f3mo difieren las redes 419 5.5.2 Conexi\u00f3n de redes 420 5.5.3 Circuitos virtuales concatenados 422 5.5.4 Interconectividad no orientada a la conexi\u00f3n 423\n398\nCONTENIDO\nxiii\n5.5.5 Entunelamiento 425 5.5.6 Enrutamiento entre redes 426 5.5.7 Fragmentaci\u00f3n 427 5.6 LA CAPA DE RED DE INTERNET 431 5.6.1 El protocolo IP 433 5.6.2 Direcciones IP 436 5.6.3 Protocolos de Control en Internet 449 5.6.4 OSPF\u2014Protocolos de Enrutamiento de Puerta de Enlace Interior 454 5.6.5 BGP\u2014Protocolo de Puerta de Enlace de Frontera 459 5.6.6 Multidifusi\u00f3n de Internet 461 5.6.7 IP m\u00f3vil 462 5.6.8 IPv6 464 5.7 RESUMEN 473\n6\nLA CAPA DE TRANSPORTE 6.1 EL SERVICIO DE TRANSPORTE 481 6.1.1 Servicios proporcionados a las capas superiores 481 6.1.2 Primitivas del servicio de transporte 483 6.1.3 Sockets de Berkeley 487 6.1.4 Un ejemplo de programaci\u00f3n de sockets: un servidor de archivos de Internet 488 6.2 ELEMENTOS DE LOS PROTOCOLOS DE TRANSPORTE 492 6.2.1 Direccionamiento 493 6.2.2 Establecimiento de una conexi\u00f3n 496 6.2.3 Liberaci\u00f3n de una conexi\u00f3n 502 6.2.4 Control de flujo y almacenamiento en b\u00fafer 506 6.2.5 Multiplexi\u00f3n 510 6.2.6 Recuperaci\u00f3n de ca\u00eddas 511 6.3 UN PROTOCOLO DE TRANSPORTE SENCILLO 513 6.3.1 Las primitivas de servicio de ejemplo 513 6.3.2 La entidad de transporte de ejemplo 515 6.3.3 El ejemplo como m\u00e1quina de estados finitos 522 6.4 LOS PROTOCOLOS DE TRANSPORTE DE INTERNET: UDP 524 6.4.1 Introducci\u00f3n a UDP 525 6.4.2 Llamada a procedimiento remoto 526 6.4.3 El protocolo de transporte en tiempo real 529\n481\nxiv\nCONTENIDO\n6.5 LOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP 532 6.5.1 Introducci\u00f3n a TCP 532 6.5.2 El modelo del servicio TCP 533 6.5.3 El protocolo TCP 535 6.5.4 El encabezado del segmento TCP 536 6.5.5 Establecimiento de una conexi\u00f3n TCP 539 6.5.6 Liberaci\u00f3n de una conexi\u00f3n TCP 541 6.5.7 Modelado de administraci\u00f3n de conexiones TCP 541 6.5.8 Pol\u00edtica de transmisi\u00f3n del TCP 543 6.5.9 Control de congesti\u00f3n en TCP 547 6.5.10 Administraci\u00f3n de temporizadores del TCP 550 6.5.11 TCP y UDP inal\u00e1mbricos 553 6.5.12 TCP para Transacciones 555 6.6 ASPECTOS DEL DESEMPE\u00d1O 557 6.6.1 Problemas de desempe\u00f1o en las redes de c\u00f3mputo 557 6.6.2 Medici\u00f3n del desempe\u00f1o de las redes 560 6.6.3 Dise\u00f1o de sistemas para un mejor desempe\u00f1o 562 6.6.4 Procesamiento r\u00e1pido de las TPDUs 566 6.6.5 Protocolos para redes de gigabits 569 6.7 RESUMEN 573\n7\nLA CAPA DE APLICACI\u00d3N 7.1 DNS\u2014EL SISTEMA DE NOMBRES DE DOMINIO 579 7.1.1 El espacio de nombres del DNS 580 7.1.2 Registros de recursos 582 7.1.3 Servidores de nombres 586 7.2 CORREO ELECTR\u00d3NICO 588 7.2.1 Arquitectura y servicios 590 7.2.2 El agente de usuario 591 7.2.3 Formatos de mensaje 594 7.2.4 Transferencia de mensajes 602 7.2.5 Entrega final 605 7.3 WORLD WIDE WEB 611 7.3.1 Panorama de la arquitectura 612 7.3.2 Documentos Web est\u00e1ticos 629\n579\nCONTENIDO\n7.3.3 7.3.4 7.3.5 7.3.6\nxv\nDocumentos Web din\u00e1micos 643 HTTP\u2014Protocolo de Transferencia de Hipertexto 651 Mejoras de desempe\u00f1o 656 La Web inal\u00e1mbrica 662\n7.4 MULTIMEDIA 674 7.4.1 Introducci\u00f3n al audio digital 674 7.4.2 Compresi\u00f3n de audio 676 7.4.3 Audio de flujo continuo 679 7.4.4 Radio en Internet 683 7.4.5 Voz sobre IP 685 7.4.6 Introducci\u00f3n al v\u00eddeo 692 7.4.7 Compresi\u00f3n de v\u00eddeo 696 7.4.8 V\u00eddeo bajo demanda 704 7.4.9 Mbone\u2014Red dorsal de multidifusi\u00f3n 711 7.5 RESUMEN 714\n8\nSEGURIDAD EN REDES 8.1 CRIPTOGRAF\u00cdA 724 8.1.1 Introducci\u00f3n a la criptograf\u00eda 725 8.1.2 Cifrados por sustituci\u00f3n 727 8.1.3 Cifrados por transposici\u00f3n 729 8.1.4 Rellenos de una sola vez 730 8.1.5 Dos principios criptogr\u00e1ficos fundamentales 735 8.2 ALGORITMOS DE CLAVE SIM\u00c9TRICA 737 8.2.1 DES\u2014El Est\u00e1ndar de Encriptaci\u00f3n de Datos 738 8.2.2 AES\u2014El Est\u00e1ndar de Encriptaci\u00f3n Avanzada 741 8.2.3 Modos de cifrado 745 8.2.4 Otros cifrados 750 8.2.5 Criptoan\u00e1lisis 750 8.3 ALGORITMOS DE CLAVE P\u00daBLICA 752 8.3.1 El algoritmo RSA 753 8.3.2 Otros algoritmos de clave p\u00fablica 755\n721\nxvi\nCONTENIDO\n8.4 FIRMAS DIGITALES 755 8.4.1 Firmas de clave sim\u00e9trica 756 8.4.2 Firmas de clave p\u00fablica 757 8.4.3 Compendios de mensaje 759 8.4.4 El ataque de cumplea\u00f1os 763 8.5 ADMINISTRACI\u00d3N DE CLAVES P\u00daBLICAS 765 8.5.1 Certificados 765 8.5.2 X.509 767 8.5.3 Infraestructuras de clave p\u00fablica 768 8.6 SEGURIDAD EN LA COMUNICACI\u00d3N 772 8.6.1 Ipsec 772 8.6.2 Firewalls 776 8.6.3 Redes privadas virtuales 779 8.6.4 Seguridad inal\u00e1mbrica 780 8.7 PROTOCOLOS DE AUTENTICACI\u00d3N 785 8.7.1 Autenticaci\u00f3n basada en una clave secreta compartida 786 8.7.2 Establecimiento de una clave compartida: el intercambio de claves de Diffie-Hellman 791 8.7.3 Autenticaci\u00f3n que utiliza un centro de distribuci\u00f3n de claves 793 8.7.4 Autenticaci\u00f3n utilizando Kerberos 796 8.7.5 Autenticaci\u00f3n utilizando criptograf\u00eda de clave p\u00fablica 798 8.8 SEGURIDAD DE CORREO ELECTR\u00d3NICO 799 8.8.1 PGP\u2014Privacidad Bastante Buena 799 8.8.2 PEM\u2014Correo con Privacidad Mejorada 803 8.8.3 S/MIME 804 8.9 SEGURIDAD EN WEB 805 8.9.1 Amenazas 805 8.9.2 Asignaci\u00f3n segura de nombres 806 8.9.3 SSL\u2014La Capa de Sockets Seguros 813 8.9.4 Seguridad de c\u00f3digo m\u00f3vil 816 8.10 ASPECTOS SOCIALES 819 8.10.1 Privacidad 819 8.10.2 Libertad de expresi\u00f3n 822 8.10.3 Derechos de autor 826 8.11 RESUMEN 828\nCONTENIDO\n9\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nxvii 835\n9.1. SUGERENCIAS DE LECTURAS ADICIONALES 835 9.1.1 Introducci\u00f3n y obras generales 836 9.1.2 La capa f\u00edsica 838 9.1.3 La capa de enlace de datos 840 9.1.4 La subcapa de control de acceso al medio 840 9.1.5 La capa de red 842 9.1.6 La capa de transporte 844 9.1.7 La capa de aplicaci\u00f3n 844 9.1.8 Seguridad en redes 846 9.2 BIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO 848\n\u00cdNDICE\n869\nPREFACIO La presente es la cuarta edici\u00f3n de este libro. Cada edici\u00f3n ha correspondido a una fase diferente de la manera en que se usaron las redes de computadoras. Cuando apareci\u00f3 la primera edici\u00f3n, en 1980, las redes eran una curiosidad acad\u00e9mica. Para la segunda edici\u00f3n, en 1988, las redes ya se usaban en universidades y en grandes empresas. Y en 1996, cuando se edit\u00f3 por tercera vez este libro, las redes de computadoras, en particular Internet, se hab\u00edan convertido en una realidad cotidiana para millones de personas. El elemento nuevo de la cuarta edici\u00f3n es el r\u00e1pido crecimiento de las redes inal\u00e1mbricas en muchas formas. El panorama de las redes ha cambiado radicalmente desde la tercera edici\u00f3n. A mediados de la d\u00e9cada de 1990 exist\u00edan varios tipos de LANs y WANs, junto con pilas de m\u00faltiples protocolos. Para el 2003, la \u00fanica LAN al\u00e1mbrica de amplio uso tal vez sea Ethernet y pr\u00e1cticamente todas las WANs estar\u00edan en Internet. En consecuencia, se habr\u00e1 eliminado una gran cantidad de material referente a estas antiguas redes. Sin embargo, tambi\u00e9n abundan los nuevos desarrollos. Lo m\u00e1s importante es el gran aumento de redes inal\u00e1mbricas, como la 802.11, los ciclos locales inal\u00e1mbricos, las redes celulares 2G y 3G, Bluetooth, WAP (protocolo de aplicaciones inal\u00e1mbricas), el i-mode y otros. De acuerdo con esto, se ha agregado una gran cantidad de material a las redes inal\u00e1mbricas. Otro tema importante y novedoso es la seguridad, por lo que se ha agregado todo un cap\u00edtulo al respecto. Aun cuando el cap\u00edtulo 1 tiene la misma funci\u00f3n introductoria que en la tercera edici\u00f3n, su contenido se ha revisado y actualizado. Por ejemplo, en dicho cap\u00edtulo se presentan introducciones a Internet, Ethernet y LANs inal\u00e1mbricas, adem\u00e1s de algunas referencias y datos hist\u00f3ricos. Tambi\u00e9n se explican brevemente las redes dom\u00e9sticas. El cap\u00edtulo 2 se ha reorganizado. Luego de una breve introducci\u00f3n a los principios de comunicaci\u00f3n de datos, hay tres secciones importantes sobre la transmisi\u00f3n (medios guiados, inal\u00e1mbricos y por sat\u00e9lite), seguidas de otras tres con ejemplos importantes (el sistema p\u00fablico de telefon\u00eda conmutada, el sistema de tel\u00e9fonos celulares y la TV por cable). Entre los nuevos temas tratados en este cap\u00edtulo est\u00e1n ADSL, banda ancha inal\u00e1mbrica, MANs inal\u00e1mbricas y acceso a Internet por cable y DOCSIS. El cap\u00edtulo 3 siempre ha presentado los principios fundamentales de los protocolos de punto a punto. Estas ideas son permanentes y no han cambiado durante d\u00e9cadas. xviii\nPREFACIO\nxix\nEn consecuencia, las series de protocolos de ejemplo detallados que se presentan en este cap\u00edtulo no han cambiado en lo m\u00e1s m\u00ednimo desde la tercera edici\u00f3n. En contraste, la subcapa MAC ha sido un \u00e1rea de gran actividad en los \u00faltimos a\u00f1os, por lo que se presentan muchos cambios en el cap\u00edtulo 4. La secci\u00f3n sobre Ethernet se ha ampliado para incluir la Ethernet de gigabits. Las secciones nuevas importantes son las que tratan sobre las LANs inal\u00e1mbricas, banda ancha inal\u00e1mbrica, Bluetooth y la conmutaci\u00f3n de la capa de enlace de datos, incluyendo MPLS. Tambi\u00e9n se actualiz\u00f3 el cap\u00edtulo 5, en donde se elimin\u00f3 todo lo referente a ATM y se incluy\u00f3 material adicional sobre Internet. Ahora la calidad del servicio tambi\u00e9n es un tema importante, incluyendo las exposiciones de los servicios integrados y los servicios diferenciados. Las redes inal\u00e1mbricas tambi\u00e9n est\u00e1n presentes aqu\u00ed, con una explicaci\u00f3n del enrutamiento en redes ad hoc. Entre otros temas nuevos se encuentran las redes NAT y de igual a igual. El cap\u00edtulo 6 trata a\u00fan de la capa de transporte, pero aqu\u00ed tambi\u00e9n se han hecho algunos cambios, que incluyen un ejemplo de la programaci\u00f3n de sockets. Tambi\u00e9n se explican un cliente y un servidor de una p\u00e1gina en C. Estos programas, disponibles en el sitio Web del libro, se pueden compilar y ejecutar. En conjunto proporcionan un servidor Web de archivos remoto para experimentaci\u00f3n. Entre otros temas est\u00e1n la llamada a procedimiento remoto, RTP y el TCP para transacciones. El cap\u00edtulo 7 se ha enfocado sobre todo en la capa de aplicaci\u00f3n. Despu\u00e9s de una breve introducci\u00f3n sobre DNS, el resto del cap\u00edtulo aborda s\u00f3lo tres temas: el correo electr\u00f3nico, Web y multimedia. Pero cada tema se trata con todo detalle. La exposici\u00f3n de c\u00f3mo funciona Web abarca ahora m\u00e1s de 60 p\u00e1ginas, y cubre una amplia serie de temas, entre ellos las p\u00e1ginas Web est\u00e1ticas y din\u00e1micas, HTTP, los scripts (secuencias de comandos) de CGI, redes de distribuci\u00f3n de informaci\u00f3n, cookies y el uso de cach\u00e9 en Web. Tambi\u00e9n se incluye material sobre c\u00f3mo se escriben las p\u00e1ginas Web modernas, incluyendo breves introducciones a XML, XSL, XHTML, PHP y m\u00e1s; todo con ejemplos que se pueden probar. Asimismo, hay una exposici\u00f3n sobre Web inal\u00e1mbrica, enfoc\u00e1ndose en i-mode y WAP. El material de multimedia incluye ahora MP3, audio de flujo continuo, radio en Internet y voz sobre IP. La seguridad ha llegado a ser tan importante que ahora se ha ampliado a un cap\u00edtulo entero de m\u00e1s de 100 p\u00e1ginas (el cap\u00edtulo 8). Cubre tanto los principios de la seguridad (algoritmos sim\u00e9tricos y de clave p\u00fablica, firmas digitales y certificados X.509) como las aplicaciones de estos principios (autenticaci\u00f3n, seguridad del correo electr\u00f3nico y seguridad en Web). El cap\u00edtulo es amplio (va desde la criptograf\u00eda cu\u00e1ntica hasta la censura gubernamental) y profundo (por ejemplo, trata en detalle el funcionamiento de SHA-1). El cap\u00edtulo 9 contiene una lista totalmente nueva de lecturas sugeridas y una amplia bibliograf\u00eda de m\u00e1s de 350 citas a la literatura actual. M\u00e1s de 200 de \u00e9stas son a art\u00edculos y libros escritos en el 2000 o m\u00e1s recientes. Los libros de computaci\u00f3n est\u00e1n llenos de acr\u00f3nimos, y \u00e9ste no es la excepci\u00f3n. Para cuando acabe de leer el presente libro, los siguientes t\u00e9rminos le ser\u00e1n familiares: ADSL, AES, AMPS, AODV, ARP, ATM, BGP, CDMA, CDN, CGI, CIDR, DCF, DES, DHCP, DMCA, FDM, FHSS, GPRS, GSM, HDLC, HFC, HTML, HTTP, ICMP, IMAP, ISP, ITU, LAN, LMDS, MAC, MACA, MIME, MPEG, MPLS, MTU, NAP, NAT, NSA, NTSC, OFDM, OSPF, PCF, PCM, PGP, PHP, PKI,\nxx\nPREFACIO\nPOTS, PPP, PSTN, QAM, QPSK, RED, RFC, RPC, RSA, RSVP, RTP, SSL, TCP, TDM, UDP, URL, UTP, VLAN, VPN, VSAT, WAN, WAP, WDMA, WEP, WWW y XML. Pero no se preocupe. Cada uno se definir\u00e1 cuidadosamente antes de usarlo. Para ayudar a los profesores a utilizar este libro como texto en un curso, el autor ha preparado varios apoyos, en ingl\u00e9s, para la ense\u00f1anza, como: \u2022 \u2022 \u2022 \u2022 \u2022\nUn manual de soluci\u00f3n de problemas. Archivos que contienen las figuras del libro en varios formatos. P\u00e1ginas de PowerPoint para un curso que utilice el libro. Un simulador (escrito en C) para los protocolos de ejemplo del cap\u00edtulo 3. Una p\u00e1gina Web con v\u00ednculos a muchos manuales en l\u00ednea, empresas, listas de preguntas frecuentes, etc\u00e9tera.\nEl manual de soluciones s\u00f3lo podr\u00e1 adquirirlo directamente con los representantes de Pearson Educaci\u00f3n (pero s\u00f3lo est\u00e1 disponible para los profesores; los estudiantes no podr\u00e1n adquirirlo). El resto del material est\u00e1 en el sitio Web del libro: http://www.pearsonedlatino.com/tanenbaum Localice la portada del libro y haga clic en ella. Muchas personas me ayudaron durante la preparaci\u00f3n de la cuarta edici\u00f3n. Me gustar\u00eda agradecer especialmente a: Ross Anderson, Elizabeth Belding Royer, Steve Bellovin, Chatschick Bisdikian, Kees Bot, Scott Bradner, Jennifer Bray, Pat Cain, Ed Felten, Warwick Ford, Kevin Fu, Ron Fulle, Jim Geier, Mario Gerla, Natalie Giroux, Steve Hanna, Jeff Hayes, Amir Herzberg, Philip Homburg, Philipp Hoschka, David Green, Bart Jacobs, Frans Kaashoek, Steve Kent, Roger Kermode, Robert Kinicki, Shay Kutten, Rob Lanphier, Marcus Leech, Tom Maufer, Brent Miller, Shivakant Mishra, Thomas Nadeau, Shlomo Ovadia, Kaveh Pahlavan, Radia Perlman, Guillaume Pierre, Wayne Pleasant, Patrick Powell, Tomas Robertazzi, Medy Sanadidi, Christian Schmutzer, Henning Schulzrinne, Paul Sevinc, Mihail Sichitiu, Bernard Sklar, Ed Skoudis, Bob Strader, George Swallow, George Thiruvathukal, Peter Tomsu, Patrick Verkaik, Dave Vittali, Spyros Voulgaris, Jan-Mark Wams, Ruediger Weis, Bert Wijnen, Joseph Wilkes, Leendert van Doorn y Maarten van Steen. Un especial agradecimiento a Trudy Levine por demostrar que las abuelas pueden hacer un trabajo fino de revisi\u00f3n de material t\u00e9cnico. Shivakant Mishra ide\u00f3 muchos de los desafiantes problemas de fin de cap\u00edtulo. Andy Dornan sugiri\u00f3 lecturas adicionales para el cap\u00edtulo 9. Jan Looyen proporcion\u00f3 hardware esencial en un momento cr\u00edtico. El doctor F. de Nies hizo un excelente trabajo de cortado y pegado justo cuando fue necesario. Mary Franz, mi editora en Prentice Hall, me proporcion\u00f3 m\u00e1s material de lectura del que hab\u00eda consumido en los 7 a\u00f1os anteriores y fue de gran ayuda en muchos otros aspectos. Finalmente, llegamos a las personas m\u00e1s importantes: Suzanne, Barbara y Marvin. A Suzanne por su amor, paciencia y los almuerzos. A Barbara y Marvin por ser agradables y joviales (excepto al quejarse de los horribles libros de texto universitarios, manteni\u00e9ndome, de este modo, alerta). Gracias. ANDREW S. TANENBAUM\n1 INTRODUCCI\u00d3N\nCada uno de los tres \u00faltimos siglos fue dominado por una tecnolog\u00eda. El siglo XVIII fue la era de los grandes sistemas mec\u00e1nicos que acompa\u00f1aron la Revoluci\u00f3n Industrial. El siglo XIX fue la edad de la m\u00e1quina de vapor. Durante el siglo XX la tecnolog\u00eda clave fue la obtenci\u00f3n, el procesamiento y la distribuci\u00f3n de la informaci\u00f3n. Entre otros acontecimientos, vimos la instalaci\u00f3n de redes mundiales de telefon\u00eda, la invenci\u00f3n de la radio y la televisi\u00f3n, el nacimiento y crecimiento sin precedentes de la industria de la computaci\u00f3n, as\u00ed como el lanzamiento de sat\u00e9lites de comunicaciones. Como resultado del r\u00e1pido progreso tecnol\u00f3gico, estas \u00e1reas est\u00e1n convergiendo de una manera acelerada y las diferencias entre la recolecci\u00f3n, transportaci\u00f3n, almacenamiento y procesamiento de la informaci\u00f3n est\u00e1n desapareciendo r\u00e1pidamente. Organizaciones con cientos de oficinas dispersas en una amplia \u00e1rea geogr\u00e1fica esperan de manera rutinaria poder examinar el estado actual incluso de su sucursal m\u00e1s distante con s\u00f3lo oprimir un bot\u00f3n. Al aumentar nuestra capacidad de obtener, procesar y distribuir informaci\u00f3n, la demanda de procesamiento de informaci\u00f3n cada vez m\u00e1s complejo crece incluso con m\u00e1s celeridad. Aunque la industria de la computaci\u00f3n a\u00fan es joven en comparaci\u00f3n con otras industrias (como la automotriz y la aeron\u00e1utica), ha progresado espectacularmente en poco tiempo. Durante las dos primeras d\u00e9cadas de su existencia, los sistemas de computaci\u00f3n estaban altamente centralizados, por lo general, en una sala grande e independiente. Con frecuencia, estas salas ten\u00edan paredes de cristal a trav\u00e9s de las cuales los visitantes pod\u00edan atisbar la maravilla electr\u00f3nica que encerraban. Las compa\u00f1\u00edas o universidades medianas apenas llegaban a tener una o dos computadoras, en tanto que las 1\n2\nINTRODUCCI\u00d3N\nCAP. 1\ninstituciones grandes ten\u00edan, cuando mucho, una docena. La idea de que en veinte a\u00f1os se pudieran producir en masa millones de computadoras igualmente poderosas pero m\u00e1s peque\u00f1as que un timbre postal era ciencia-ficci\u00f3n. La fusi\u00f3n de las computadoras y las comunicaciones ha tenido una influencia profunda en la manera en que est\u00e1n organizados los sistemas computacionales. Actualmente, el concepto de \u201ccentro de c\u00f3mputo\u201d como un espacio amplio con una computadora grande a la que los usuarios llevaban su trabajo a procesar es totalmente obsoleto. El modelo antiguo de una sola computadora que realiza todas las tareas computacionales de una empresa ha sido reemplazado por otro en el que un gran n\u00famero de computadoras separadas pero interconectadas hacen el trabajo. Estos sistemas se denominan redes de computadoras. El dise\u00f1o y la organizaci\u00f3n de estas redes es el objetivo de este libro. A lo largo del libro utilizaremos el t\u00e9rmino \u201credes de computadoras\u201d para designar un conjunto de computadoras aut\u00f3nomas interconectadas. Se dice que dos computadoras est\u00e1n interconectadas si pueden intercambiar informaci\u00f3n. No es necesario que la conexi\u00f3n se realice mediante un cable de cobre; tambi\u00e9n se pueden utilizar las fibras \u00f3pticas, las microondas, los rayos infrarrojos y los sat\u00e9lites de comunicaciones. Las redes tienen varios tama\u00f1os, formas y figuras, como veremos m\u00e1s adelante. Aunque a algunas personas les parezca extra\u00f1o, ni Internet ni Web son una red de computadoras. Este concepto quedar\u00e1 claro al finalizar el libro. La respuesta r\u00e1pida es: Internet no es una red \u00fanica, sino una red de redes, y Web es un sistema distribuido que se ejecuta sobre Internet. Existe una gran confusi\u00f3n entre una red de computadoras y un sistema distribuido. La diferencia principal radica en que, en un sistema distribuido, un conjunto de computadoras independientes aparece ante sus usuarios como un sistema consistente y \u00fanico. Por lo general, tiene un modelo o paradigma \u00fanico que se presenta a los usuarios. Con frecuencia, una capa de software que se ejecuta sobre el sistema operativo, denominada middleware, es la responsable de implementar este modelo. Un ejemplo bien conocido de un sistema distribuido es World Wide Web, en la cual todo se ve como un documento (una p\u00e1gina Web). En una red de computadoras no existe esta consistencia, modelo ni software. Los usuarios est\u00e1n expuestos a las m\u00e1quinas reales, y el sistema no hace ning\u00fan intento porque las m\u00e1quinas se vean y act\u00faen de manera similar. Si las m\u00e1quinas tienen hardware diferente y distintos sistemas operativos, eso es completamente transparente para los usuarios. Si un usuario desea ejecutar un programa de una m\u00e1quina remota, debe registrarse en ella y ejecutarlo desde ah\u00ed. De hecho, un sistema distribuido es un sistema de software construido sobre una red. El software le da un alto grado de consistencia y transparencia. De este modo, la diferencia entre una red y un sistema distribuido est\u00e1 en el software (sobre todo en el sistema operativo), m\u00e1s que en el hardware. No obstante, tienen muchas cosas en com\u00fan. Por ejemplo, tanto los sistemas distribuidos como las redes de computadoras necesitan mover archivos. La diferencia est\u00e1 en qui\u00e9n invoca el movimiento, el sistema o el usuario. Aunque el objetivo principal de este libro son las redes, muchos de los temas se relacionan con los sistemas distribuidos. Para m\u00e1s informaci\u00f3n acerca de los sistemas distribuidos, vea (Tanenbaum y Van Steen, 2002).\nSEC. 1.1\nUSOS DE LAS REDES DE COMPUTADORAS\n3\n1.1 USOS DE LAS REDES DE COMPUTADORAS Antes de empezar a examinar con detalle los elementos t\u00e9cnicos, vale la pena dedicar algo de tiempo a precisar por qu\u00e9 la gente se interesa en las redes de computadoras y para qu\u00e9 se pueden utilizar. Despu\u00e9s de todo, si nadie se hubiera interesado en ellas, no se habr\u00edan construido tantas. Empezaremos con el uso tradicional que les dan las empresas y los individuos, y luego avanzaremos a los \u00faltimos desarrollos con respecto a los usuarios m\u00f3viles y la conexi\u00f3n de redes dom\u00e9sticas.\n1.1.1 Aplicaciones de negocios Muchas compa\u00f1\u00edas tienen una cantidad considerable de computadoras. Por ejemplo, una compa\u00f1\u00eda podr\u00eda tener computadoras separadas para supervisar la producci\u00f3n, controlar inventarios y hacer la n\u00f3mina. Al principio estas computadoras tal vez hayan trabajado por separado pero, en alg\u00fan momento, la administraci\u00f3n decidi\u00f3 conectarlas para extraer y correlacionar informaci\u00f3n acerca de toda la compa\u00f1\u00eda. Dicho de una manera m\u00e1s general, el asunto aqu\u00ed es la compartici\u00f3n de recursos y el objetivo es hacer que todos los programas, el equipo y, en particular, los datos est\u00e9n disponibles para todos los que se conecten a la red, independientemente de la ubicaci\u00f3n f\u00edsica del recurso y del usuario. Un ejemplo claro y muy difundido es el de un grupo de oficinistas que comparten una impresora. Ninguno de los individuos necesita una impresora privada, y una impresora de alto volumen en red suele ser m\u00e1s barata, r\u00e1pida y f\u00e1cil de mantener que varias impresoras individuales. Sin embargo, compartir informaci\u00f3n es tal vez m\u00e1s importante que compartir recursos f\u00edsicos, como impresoras, esc\u00e1neres y quemadores de CDs. Para las compa\u00f1\u00edas grandes y medianas, as\u00ed como para muchas peque\u00f1as, la informaci\u00f3n computarizada es vital. La mayor\u00eda de las compa\u00f1\u00edas tiene en l\u00ednea registros de clientes, inventarios, cuentas por cobrar, estados financieros, informaci\u00f3n de impuestos, etc\u00e9tera. Si todas las computadoras de un banco se cayeran, \u00e9ste no durar\u00eda m\u00e1s de cinco minutos. Una moderna planta manufacturera, con una l\u00ednea de ensamblado controlada por computadora, ni siquiera durar\u00eda ese tiempo. Incluso una peque\u00f1a agencia de viajes o un despacho jur\u00eddico de tres personas, ahora dependen en gran medida de las redes de computadoras para que sus empleados puedan tener acceso de manera instant\u00e1nea a la informaci\u00f3n y a los documentos importantes. En las compa\u00f1\u00edas m\u00e1s peque\u00f1as, es posible que todas las computadoras est\u00e9n en una sola oficina o en un solo edificio, pero en las m\u00e1s grandes, las computadoras y los empleados pueden estar dispersos en docenas de oficinas y plantas en varios pa\u00edses. No obstante, un vendedor en Nueva York podr\u00eda requerir algunas veces tener acceso a una base de datos de inventario de productos que se encuentra en Singapur. En otras palabras, el hecho de que un usuario est\u00e9 a 15,000 km de sus datos no debe ser impedimento para que utilice esos datos como si fueran locales. Esta meta se podr\u00eda resumir diciendo que es un intento por acabar con la \u201ctiran\u00eda de la geograf\u00eda\u201d. En t\u00e9rminos a\u00fan m\u00e1s sencillos, es posible imaginar el sistema de informaci\u00f3n de una compa\u00f1\u00eda como si consistiera en una o m\u00e1s bases de datos y algunos empleados que necesitan acceder a\n4\nINTRODUCCI\u00d3N\nCAP. 1\nellas de manera remota. En este modelo, los datos est\u00e1n almacenados en computadoras poderosas que se llaman servidores. Con frecuencia, \u00e9stos se encuentran alojados en una central y un administrador de sistemas les da mantenimiento. En contraste, los empleados tienen en sus escritorios m\u00e1quinas m\u00e1s sencillas, llamadas clientes, con las que pueden acceder a datos remotos \u2014por ejemplo, para incluirlos en las hojas de c\u00e1lculo que est\u00e1n elaborando. (Algunas veces nos referiremos a los usuarios de las m\u00e1quinas como \u201cel cliente\u201d, pero debe quedar claro, por el contexto, si el t\u00e9rmino se refiere a la computadora o a su usuario.) Las m\u00e1quinas cliente y servidor est\u00e1n conectadas por una red, como se ilustra en la figura 1-1. Observe que hemos representado a la red como un \u00f3valo sencillo, sin detalle alguno. Utilizaremos esta forma cuando nos refiramos a una red en sentido general. Cuando se requieran m\u00e1s detalles, los proporcionaremos.\nCliente Servidor\nRed\nFigura 1-1. Una red con dos clientes y un servidor.\nEste conjunto se conoce como modelo cliente-servidor. Se utiliza ampliamente y forma la base en gran medida del uso de redes. Es aplicable cuando el cliente y el servidor est\u00e1n en el mismo edificio (por ejemplo, cuando pertenecen a la misma compa\u00f1\u00eda), pero tambi\u00e9n cuando est\u00e1n bastante retirados. Por ejemplo, cuando una persona en casa accede a una p\u00e1gina Web, se emplea el mismo modelo, en el que el servidor remoto de Web es el servidor y la computadora personal del usuario es el cliente. En la mayor\u00eda de los casos, un servidor puede manejar una gran cantidad de clientes. Si vemos el modelo cliente-servidor en detalle, nos daremos cuenta de que hay dos procesos involucrados, uno en la m\u00e1quina cliente y otro en la m\u00e1quina servidor. La comunicaci\u00f3n toma la siguiente forma: el proceso cliente env\u00eda una solicitud a trav\u00e9s de la red al proceso servidor y espera una respuesta. Cuando el proceso servidor recibe la solicitud, realiza el trabajo que se le pide o busca los datos solicitados y devuelve una respuesta. Estos mensajes se muestran en la figura 1-2. Un segundo objetivo de la configuraci\u00f3n de una red de computadoras tiene que ver m\u00e1s con la gente que con la informaci\u00f3n e, incluso, con las computadoras mismas. Una red de computadoras\nSEC. 1.1\n5\nUSOS DE LAS REDES DE COMPUTADORAS M\u00e1quina cliente\nM\u00e1quina servidor\nSolicitud Red Respuesta\nProceso cliente\nProceso cliente\nFigura 1-2. El modelo cliente-servidor implica solicitudes y respuestas.\nes un poderoso medio de comunicaci\u00f3n entre los empleados. Casi todas las compa\u00f1\u00edas que tienen dos o m\u00e1s computadoras cuentan con correo electr\u00f3nico, mediante el cual los empleados mantienen generalmente una comunicaci\u00f3n diaria. De hecho, una queja com\u00fan es la gran cantidad de correo electr\u00f3nico que tenemos que atender, mucho de \u00e9l sin sentido porque los jefes han descubierto que pueden enviar el mismo mensaje (a menudo sin contenido) a todos sus subordinados con s\u00f3lo oprimir un bot\u00f3n. Pero el correo electr\u00f3nico no es la \u00fanica forma de comunicaci\u00f3n mejorada que las redes de computadoras hacen posible. Con una red es f\u00e1cil que dos o m\u00e1s personas que trabajan a distancia escriban en conjunto un informe. Si un empleado hace un cambio a un documento en l\u00ednea, los dem\u00e1s pueden ver el cambio de inmediato, en vez de esperar una carta durante varios d\u00edas. Esta agilizaci\u00f3n facilita la cooperaci\u00f3n entre grupos de personas que no se encuentran en el mismo lugar, lo cual antes hab\u00eda sido imposible. Otra forma de comunicaci\u00f3n asistida por computadora es la videoconferencia. Con esta tecnolog\u00eda, los empleados en ubicaciones distantes pueden tener una reuni\u00f3n, vi\u00e9ndose y escuch\u00e1ndose unos a otros e incluso escribiendo en una pizarra virtual compartida. La videoconferencia es una herramienta poderosa para eliminar el costo y el tiempo que anteriormente se empleaba en viajar. A veces se dice que la comunicaci\u00f3n y el transporte est\u00e1n en competencia, y que el que gane har\u00e1 obsoleto al otro. Una tercera meta para cada vez m\u00e1s compa\u00f1\u00edas es hacer negocios de manera electr\u00f3nica con otras compa\u00f1\u00edas, sobre todo proveedores y clientes. Por ejemplo, los fabricantes de autom\u00f3viles, de aviones, de computadoras, etc\u00e9tera, compran subsistemas de diversos proveedores y luego ensamblan las partes. Mediante las redes de computadoras los fabricantes pueden hacer pedidos electr\u00f3nicamente conforme se requieran. Tener la capacidad de hacer pedidos en tiempo real (es decir, conforme se requieren) reduce la necesidad de tener grandes inventarios y mejora la eficiencia. Una cuarta meta que se est\u00e1 volviendo m\u00e1s importante es la de hacer negocios con consumidores a trav\u00e9s de Internet. Las l\u00edneas a\u00e9reas, las librer\u00edas y los vendedores de m\u00fasica han descubierto que muchos consumidores prefieren realizar sus compras desde casa. Por consiguiente, muchas compa\u00f1\u00edas proporcionan en l\u00ednea cat\u00e1logos de sus productos y servicios y levantan pedidos de la misma manera. Se espera que este sector crezca r\u00e1pidamente en el futuro. Es lo que se conoce como comercio electr\u00f3nico.\n6\nINTRODUCCI\u00d3N\nCAP. 1\n1.1.2 Aplicaciones dom\u00e9sticas En 1977 Ken Olsen era presidente de Digital Equipment Corporation, que en esa \u00e9poca era el segundo proveedor de computadoras en el mundo (despu\u00e9s de IBM). Cuando se le pregunt\u00f3 por qu\u00e9 Digital no persegu\u00eda el mercado de las computadoras personales en gran volumen, contest\u00f3: \u201cNo hay raz\u00f3n alguna para que un individuo tenga una computadora en su casa\u201d. La historia demostr\u00f3 lo contrario y Digital ya no existe. \u00bfPor qu\u00e9 la gente compra computadoras para uso dom\u00e9stico? En principio, para procesamiento de texto y juegos, pero en los \u00faltimos a\u00f1os esto ha cambiado radicalmente. Tal vez la raz\u00f3n m\u00e1s importante ahora sea por el acceso a Internet. Algunos de los usos m\u00e1s comunes de Internet por parte de usuarios dom\u00e9sticos son los siguientes: 1. 2. 3. 4.\nAcceso a informaci\u00f3n remota. Comunicaci\u00f3n de persona a persona. Entretenimiento interactivo. Comercio electr\u00f3nico.\nEl acceso a la informaci\u00f3n remota se puede realizar por diversas razones. Puede ser que navegue por World Wide Web para obtener informaci\u00f3n o s\u00f3lo por diversi\u00f3n. La informaci\u00f3n disponible incluye artes, negocios, cocina, gobiernos, salud, historia, pasatiempos, recreaci\u00f3n, ciencia, deportes, viajes y muchas otras cosas m\u00e1s. La diversi\u00f3n viene en demasiadas formas como para mencionarlas, m\u00e1s algunas otras que es mejor no mencionar. Muchos peri\u00f3dicos ahora est\u00e1n disponibles en l\u00ednea y pueden personalizarse. Por ejemplo, en algunos casos le puede indicar a un peri\u00f3dico que desea toda la informaci\u00f3n acerca de pol\u00edticos corruptos, incendios, esc\u00e1ndalos que involucran a las celebridades y epidemias, pero nada sobre f\u00fatbol. Incluso puede hacer que los art\u00edculos que usted desea se descarguen en su disco duro o se impriman mientras usted duerme, para que cuando se levante a desayunar los tenga disponibles. Mientras contin\u00fae esta tendencia, se provocar\u00e1 el desempleo masivo de los ni\u00f1os de 12 a\u00f1os que entregan los diarios, pero los peri\u00f3dicos lo quieren as\u00ed porque la distribuci\u00f3n siempre ha sido el punto d\u00e9bil en la gran cadena de producci\u00f3n. El tema m\u00e1s importante despu\u00e9s de los peri\u00f3dicos (adem\u00e1s de las revistas y peri\u00f3dicos cient\u00edficos) son las bibliotecas digitales en l\u00ednea. Muchas organizaciones profesionales, como la ACM (www.acm.org) y la Sociedad de Computaci\u00f3n del IEEE (www.computer.org), ya cuentan con muchos peri\u00f3dicos y presentaciones de conferencias en l\u00ednea. Otros grupos est\u00e1n creciendo de manera r\u00e1pida. Dependiendo del costo, tama\u00f1o y peso de las computadoras port\u00e1tiles, los libros impresos podr\u00edan llegar a ser obsoletos. Los esc\u00e9pticos deben tomar en cuenta el efecto que la imprenta tuvo sobre los manuscritos ilustrados del medioevo. Todas las aplicaciones anteriores implican las interacciones entre una persona y una base de datos remota llena de informaci\u00f3n. La segunda gran categor\u00eda del uso de redes es la comunicaci\u00f3n de persona a persona, b\u00e1sicamente la respuesta del siglo XXI al tel\u00e9fono del siglo XIX. Millones de personas en todo el mundo utilizan a diario el correo electr\u00f3nico y su uso est\u00e1 creciendo r\u00e1pidamente. Ya es muy com\u00fan que contenga audio y v\u00eddeo, as\u00ed como texto y figuras. Los aromas podr\u00edan tardar un poco m\u00e1s.\nSEC. 1.1\nUSOS DE LAS REDES DE COMPUTADORAS\n7\nMuchas personas utilizan los mensajes instant\u00e1neos. Esta caracter\u00edstica, derivada del programa talk de UNIX, que se utiliza aproximadamente desde 1970, permite que las personas se escriban mensajes en tiempo real. Una versi\u00f3n, para varias personas, de esta idea es el sal\u00f3n de conversaci\u00f3n (chat room), en el que un grupo de personas puede escribir mensajes para que todos los vean. Los grupos de noticias mundiales, con debates sobre todo tema imaginable, ya son un lugar com\u00fan entre un grupo selecto de personas y este fen\u00f3meno crecer\u00e1 para abarcar a la poblaci\u00f3n en general. Estos debates, en los que una persona env\u00eda un mensaje y todos los dem\u00e1s suscriptores del grupo de noticias lo pueden leer, van desde los humor\u00edsticos hasta los apasionados. A diferencia de los salones de conversaci\u00f3n, los grupos de noticias no son en tiempo real y los mensajes se guardan para que cuando alguien vuelva de vacaciones, encuentre todos los mensajes que hayan sido enviados en el \u00ednterin, esperando pacientemente a ser le\u00eddos. Otro tipo de comunicaci\u00f3n de persona a persona a menudo se conoce como comunicaci\u00f3n de igual a igual ( peer to peer), para distinguirla del modelo cliente-servidor (Parameswaran y cols., 2001). De esta forma, los individuos que forman un grupo esparcido se pueden comunicar con otros del grupo, como se muestra en la figura 1-3. Cada persona puede, en principio, comunicarse con una o m\u00e1s personas; no hay una divisi\u00f3n fija de clientes y servidores.\nFigura 1-3. En el sistema de igual a igual no hay clientes ni servidores fijos.\nLa comunicaci\u00f3n de igual a igual domin\u00f3 la mayor parte del 2000 con un servicio llamado Napster, que en su mayor apogeo ten\u00eda m\u00e1s de 50 millones de personas canjeando m\u00fasica, lo que fue probablemente la mayor infracci\u00f3n a derechos de autor en toda la historia de la m\u00fasica grabada (Lam y Tan, 2001, y Macedonia, 2000). La idea era muy sencilla. Los miembros registraban en una base de datos central mantenida en el servidor de Napster la m\u00fasica que ten\u00edan en sus discos duros. Si un miembro deseaba una canci\u00f3n, verificaba la base de datos para ver qui\u00e9n la ten\u00eda e iba directamente ah\u00ed para obtenerla. Al no conservar realmente ninguna obra musical en las m\u00e1quinas, Napster argumentaba que no estaba infringiendo los derechos de autor de nadie. Las cortes no estuvieron de acuerdo y lo clausuraron.\n8\nINTRODUCCI\u00d3N\nCAP. 1\nSin embargo, la siguiente generaci\u00f3n de sistemas de igual a igual elimina la base de datos central al hacer que cada usuario mantenga su propia base de datos de manera local, y al proporcionarle una lista de otras personas cercanas que tambi\u00e9n son miembros del sistema. De esta manera, un nuevo usuario puede ir a cualquiera de ellas para ver qu\u00e9 tiene y obtener una lista de otras m\u00e1s para indagar acerca de m\u00e1s m\u00fasica y m\u00e1s nombres. Este proceso de consulta se puede repetir de manera indefinida hasta construir una enorme base de datos local de lo que hay a disposici\u00f3n. Es una actividad que podr\u00eda ser tediosa para las personas pero que para las computadoras es muy sencilla. Tambi\u00e9n existen las aplicaciones legales para la comunicaci\u00f3n de igual a igual. Por ejemplo, un club de admiradores que comparte un dominio p\u00fablico de m\u00fasica o cintas de muestra que las nuevas bandas han cedido para efectos de publicidad, familias que comparten fotograf\u00edas, pel\u00edculas e informaci\u00f3n geneal\u00f3gica y adolescentes que juegan en l\u00ednea juegos para varias personas. De hecho, una de las aplicaciones de Internet m\u00e1s populares, el correo electr\u00f3nico, es esencialmente de igual a igual. Se espera que esta forma de comunicaci\u00f3n crezca con rapidez en el futuro. Los delitos electr\u00f3nicos no se limitan a la ley de derechos de autor. Otra \u00e1rea activa es la de los juegos electr\u00f3nicos. Las computadoras han simulado cosas durante d\u00e9cadas. \u00bfPor qu\u00e9 no simular m\u00e1quinas tragamonedas, ruedas de la fortuna, repartidores de blackjack y m\u00e1s equipo de juegos electr\u00f3nicos? El problema es que los juegos electr\u00f3nicos son legales en muchos lugares (Inglaterra, por ejemplo) y los propietarios de casinos han aprovechado el potencial de los juegos electr\u00f3nicos por Internet. \u00bfQu\u00e9 pasar\u00eda si el jugador y el casino estuvieran en pa\u00edses diferentes entre los cuales hay conflicto de leyes? \u00c9sa es una buena pregunta. Otras aplicaciones orientadas a la comunicaci\u00f3n y de r\u00e1pido crecimiento incluyen el uso de Internet para transportar llamadas telef\u00f3nicas, el tel\u00e9fono con v\u00eddeo y la radio por Internet. Otra aplicaci\u00f3n es el teleaprendizaje, es decir, asistir a clases a las 8:00 A.M. sin el inconveniente de tener que levantarse antes de la cama. A largo plazo, el uso de las redes para mejorar la comunicaci\u00f3n de persona a persona puede demostrar que \u00e9sta es el \u00e1rea m\u00e1s importante. Nuestra tercera categor\u00eda es el entretenimiento, que es una industria grande y en crecimiento. La aplicaci\u00f3n dominante (la que podr\u00eda impulsar al resto) es el v\u00eddeo bajo demanda. De aqu\u00ed a 10 a\u00f1os, podr\u00eda seleccionar cualquier pel\u00edcula o programa de televisi\u00f3n producido en cualquier pa\u00eds y proyectarlo en su pantalla al instante. Las pel\u00edculas nuevas podr\u00edan llegar a ser interactivas, en las que se pedir\u00eda ocasionalmente al usuario que eligiera el rumbo de la narraci\u00f3n, con escenarios alternativos preparados para todos los casos. La televisi\u00f3n en vivo tambi\u00e9n podr\u00eda llegar a ser interactiva, permitiendo que la audiencia participe en programas de preguntas, elija entre los competidores, etc\u00e9tera. Por otra parte, tal vez el v\u00eddeo bajo demanda no sea la aplicaci\u00f3n dominante. Podr\u00eda ser la de los juegos. En la actualidad ya contamos con juegos de simulaci\u00f3n de varias personas en tiempo real, como el de las escondidas en un calabozo virtual y simuladores de vuelo en los que los jugadores de un equipo tratan de derribar a los del equipo contrario. Si los juegos se juegan con anteojos y tiempo real tridimensional, con im\u00e1genes en movimiento de calidad fotogr\u00e1fica, tenemos un tipo de realidad virtual compartida a nivel mundial. Nuestra cuarta categor\u00eda es el comercio electr\u00f3nico en el m\u00e1s amplio sentido de la palabra. Comprar desde el hogar ya es una actividad com\u00fan y permite que los usuarios inspeccionen los\nSEC. 1.1\nUSOS DE LAS REDES DE COMPUTADORAS\n9\ncat\u00e1logos en l\u00ednea de miles de compa\u00f1\u00edas. Algunos de estos cat\u00e1logos proporcionar\u00e1n pronto la capacidad de obtener un v\u00eddeo instant\u00e1neo de cualquier producto con s\u00f3lo hacer clic en el nombre de \u00e9ste. Si un cliente compra un producto por v\u00eda electr\u00f3nica y no sabe c\u00f3mo usarlo, podr\u00e1 consultar el soporte t\u00e9cnico en l\u00ednea. Otra \u00e1rea en la que el comercio electr\u00f3nico ya se est\u00e1 dando es en las instituciones financieras. Mucha gente ya efect\u00faa sus pagos, administra sus cuentas bancarias y maneja sus inversiones de manera electr\u00f3nica. Seguramente esto crecer\u00e1 en cuanto las redes sean m\u00e1s seguras. Un \u00e1rea que pr\u00e1cticamente nadie previ\u00f3 son los mercados de pulgas electr\u00f3nicos. Las subastas en l\u00ednea de art\u00edculos de segunda mano se han convertido en una industria masiva. A diferencia del comercio electr\u00f3nico tradicional, que sigue el modelo cliente-servidor, las subastas en l\u00ednea son m\u00e1s que un sistema de igual a igual, un tipo de sistema de consumidor a consumidor. Algunas de estas formas de comercio electr\u00f3nico han adoptado una serie de etiquetas con base en que \u201cto\u201d y \u201c2\u201d (en ingl\u00e9s) suenan igual. La figura 1-4 presenta una lista de las abreviaturas m\u00e1s comunes. Etiqueta\nNombre completo\nEjemplo\nB2C\nNegocio a consumidor\nPedido de libros en l\u00ednea\nB2B\nNegocio a negocio\nLa f\u00e1brica de autom\u00f3viles hace un pedido de llantas al proveedor\nG2C\nGobierno a consumidor\nEl gobierno distribuye formas fiscales electr\u00f3nicamente\nC2C\nConsumidor a consumidor\nSubasta en l\u00ednea de productos de segunda mano\nP2P\nIgual a igual\nCompartici\u00f3n de archivos\nFigura 1-4. Algunas formas de comercio electr\u00f3nico.\nSin duda, el rango de usos de las redes de computadoras crecer\u00e1 con rapidez y probablemente en formas que nadie puede prever ahora. Despu\u00e9s de todo, \u00bfcu\u00e1nta gente pudo predecir en 1990 que en diez a\u00f1os las personas podr\u00edan escribir mensajes breves en tel\u00e9fonos celulares durante sus viajes en autob\u00fas, lo cual podr\u00eda ser una forma muy ventajosa para que las compa\u00f1\u00edas telef\u00f3nicas ganaran dinero? Sin embargo, en la actualidad el servicio de mensajes breves es muy rentable. Las redes de computadoras podr\u00edan llegar a ser sumamente importantes para la gente que no vive en las grandes ciudades, pues les da el mismo acceso a servicios que a las personas que s\u00ed viven en ellas. El teleaprendizaje podr\u00eda afectar radicalmente la educaci\u00f3n; las universidades podr\u00edan dar servicio a estudiantes nacionales o internacionales. La telemedicina est\u00e1 en inicio (por ejemplo, se utiliza para la supervisi\u00f3n remota de un paciente), pero puede llegar a ser muy importante. Sin embargo, la aplicaci\u00f3n clave podr\u00eda ser algo mundano, como utilizar una webcam (c\u00e1mara conectada a Internet) en su refrigerador, para saber si tiene que comprar leche al regresar del trabajo.\n1.1.3 Usuarios m\u00f3viles Las computadoras port\u00e1tiles, como las notebook y los asistentes personales digitales (PDAs), son uno de los segmentos de crecimiento m\u00e1s r\u00e1pido de la industria de la computaci\u00f3n. Muchos propietarios de estas computadoras poseen m\u00e1quinas de escritorio en la oficina y desean estar conectados a su base dom\u00e9stica cuando est\u00e1n de viaje o fuera de casa. Puesto que no\n10\nINTRODUCCI\u00d3N\nCAP. 1\nes posible tener una conexi\u00f3n al\u00e1mbrica en autos y aviones, hay un gran inter\u00e9s en las redes inal\u00e1mbricas. En esta secci\u00f3n veremos brevemente algunos usos de ellas. \u00bfPor qu\u00e9 querr\u00eda alguien una? Un argumento com\u00fan es la oficina port\u00e1til. Con frecuencia, las personas que est\u00e1n de viaje desean utilizar sus equipos port\u00e1tiles para enviar y recibir llamadas telef\u00f3nicas, faxes y correo electr\u00f3nico, navegar en Web, acceder a archivos remotos e iniciar sesi\u00f3n en m\u00e1quinas remotas. Y desean hacer esto desde cualquier punto, ya sea por tierra, mar o aire. Por ejemplo, actualmente en las conferencias por computadora, los organizadores suelen configurar una red inal\u00e1mbrica en el \u00e1rea de la conferencia. Cualquiera que tenga una computadora port\u00e1til y un m\u00f3dem inal\u00e1mbrico puede conectarse a Internet, como si la computadora estuviera conectada a una red al\u00e1mbrica (cableada). Del mismo modo, algunas universidades han instalado redes inal\u00e1mbricas en sus campus para que los estudiantes se puedan sentar entre los \u00e1rboles y consultar los archivos de la biblioteca o leer su correo electr\u00f3nico. Las redes inal\u00e1mbricas son de gran utilidad para las flotas de camiones, taxis, veh\u00edculos de entrega y reparadores, para mantenerse en contacto con la casa. Por ejemplo, en muchas ciudades los taxistas trabajan por su cuenta, m\u00e1s que para una empresa de taxis. En algunas de estas ciudades, los taxis tienen una pantalla que el conductor puede ver. Cuando el cliente solicita un servicio, un despachador central escribe los puntos en los que el chofer deber\u00e1 recoger y dejar al cliente. Esta informaci\u00f3n se despliega en las pantallas de los conductores y suena un timbre. El conductor que oprima primero un bot\u00f3n en la pantalla recibe la llamada. Las redes inal\u00e1mbricas tambi\u00e9n son importantes para la milicia. Si tiene que estar disponible en breve para pelear una guerra en cualquier parte de la Tierra, probablemente no sea bueno pensar en utilizar la infraestructura de conectividad de redes local. Lo mejor ser\u00eda tener la propia. Aunque la conectividad inal\u00e1mbrica y la computaci\u00f3n port\u00e1til se relacionan frecuentemente, no son id\u00e9nticas, como se muestra en la figura 1-5, en la que vemos una diferencia entre inal\u00e1mbrica fija e inal\u00e1mbrica m\u00f3vil. Incluso en ocasiones las computadoras port\u00e1tiles son al\u00e1mbricas. Por ejemplo, si un viajero conecta una port\u00e1til a una toma telef\u00f3nica en su habitaci\u00f3n del hotel, tiene movilidad sin una red inal\u00e1mbrica. Inal\u00e1mbrica\nM\u00f3vil\nAplicaciones\nNo\nNo\nComputadoras de escritorio en oficinas\nNo\nS\u00ed\nUna computadora port\u00e1til usada en un cuarto de hotel\nS\u00ed\nNo\nRedes en construcciones antiguas sin cableado\nS\u00ed\nS\u00ed\nOficina port\u00e1til; PDA para inventario de almac\u00e9n\nFigura 1-5. Combinaciones de redes inal\u00e1mbricas y computaci\u00f3n m\u00f3vil.\nPor otra parte, algunas computadoras inal\u00e1mbricas no son m\u00f3viles. Un ejemplo representativo ser\u00eda una compa\u00f1\u00eda que posee un edificio antiguo que no tiene cableado de redes y que desea conectar sus computadoras. La instalaci\u00f3n de una red inal\u00e1mbrica podr\u00eda requerir un poco m\u00e1s que comprar una caja peque\u00f1a con algunos aparatos electr\u00f3nicos, desempacarlos y conectarlos. Sin embargo, esta soluci\u00f3n podr\u00eda ser mucho m\u00e1s barata que contratar trabajadores que coloquen ductos de cable para acondicionar el edificio.\nSEC. 1.1\nUSOS DE LAS REDES DE COMPUTADORAS\n11\nDesde luego, tambi\u00e9n existen las aplicaciones inal\u00e1mbricas m\u00f3viles, que van desde la oficina port\u00e1til hasta las personas que pasean por una tienda con un PDA realizando un inventario. En muchos aeropuertos, los empleados de alquiler de coches trabajan en los estacionamientos con computadoras port\u00e1tiles inal\u00e1mbricas. Escriben el n\u00famero de la placa de circulaci\u00f3n de los autos alquilados, y su computadora port\u00e1til, que tiene una impresora integrada, llama a la computadora principal, obtiene la informaci\u00f3n del arrendamiento e imprime la factura en el acto. Conforme se extienda la tecnolog\u00eda inal\u00e1mbrica, es probable que surjan otras aplicaciones. Echemos un vistazo a algunas de las posibilidades. Los parqu\u00edmetros inal\u00e1mbricos tienen ventajas para los usuarios y las autoridades administrativas gubernamentales. Los medidores pueden aceptar tarjetas de cr\u00e9dito o de d\u00e9bito y verificarlas de manera instant\u00e1nea a trav\u00e9s del v\u00ednculo inal\u00e1mbrico. Cuando un medidor expire, se podr\u00eda verificar la presencia de un auto (emitiendo una se\u00f1al) y reportar la expiraci\u00f3n a la polic\u00eda. Se ha estimado que con esta medida, los gobiernos de las ciudades de Estados Unidos podr\u00edan colectar $10 mil millones adicionales (Harte y cols., 2000). Adem\u00e1s, la entrada en vigor del aparcamiento ayudar\u00eda al ambiente, debido a que los conductores que al saber que podr\u00edan ser detenidos al estacionarse de manera ilegal, utilizar\u00edan el transporte p\u00fablico. Los expendedores autom\u00e1ticos de alimentos, bebidas, etc\u00e9tera, se encuentran por todas partes. Sin embargo, los alimentos no entran en las m\u00e1quinas por arte de magia. Peri\u00f3dicamente, alguien va con un cami\u00f3n y las llena. Si los expendedores autom\u00e1ticos emitieran informes peri\u00f3dicos una vez al d\u00eda en los que indicaran sus inventarios actuales, el conductor del cami\u00f3n sabr\u00eda qu\u00e9 m\u00e1quinas necesitan servicio y qu\u00e9 cantidad de qu\u00e9 productos llevar. Esta informaci\u00f3n podr\u00eda conducir a una mayor eficiencia en la planeaci\u00f3n de las rutas. Desde luego que esta informaci\u00f3n tambi\u00e9n se podr\u00eda enviar a trav\u00e9s de un tel\u00e9fono de l\u00ednea com\u00fan, pero proporcionar a cada expendedor autom\u00e1tico una conexi\u00f3n fija telef\u00f3nica para que realice una llamada al d\u00eda es costoso debido a los cargos fijos mensuales. Otra \u00e1rea en la que la tecnolog\u00eda inal\u00e1mbrica podr\u00eda ahorrar dinero es en la lectura de medidores de servicios p\u00fablicos. Si los medidores de electricidad, gas, agua y otros servicios dom\u00e9sticos reportaran su uso a trav\u00e9s de una red inal\u00e1mbrica, no habr\u00eda necesidad de enviar lectores de medidores. Del mismo modo, los detectores inal\u00e1mbricos de humo podr\u00edan comunicarse con el departamento de bomberos en lugar de hacer tanto ruido (lo cual no sirve de nada si no hay nadie en casa). Conforme baje el costo de los dispositivos de radio y el tiempo aire, m\u00e1s y m\u00e1s medidas e informes se har\u00e1n a trav\u00e9s de redes inal\u00e1mbricas. Un \u00e1rea de aplicaci\u00f3n totalmente diferente para las redes inal\u00e1mbricas es la fusi\u00f3n esperada de tel\u00e9fonos celulares y PDAs en computadoras inal\u00e1mbricas diminutas. Un primer intento fue el de los diminutos PDAs que pod\u00edan desplegar p\u00e1ginas Web reducidas al m\u00ednimo en sus peque\u00f1as pantallas. Este sistema, llamado WAP 1.0 (Protocolo de Aplicaciones Inal\u00e1mbricas), fall\u00f3 en gran parte debido a sus pantallas microsc\u00f3picas, bajo ancho de banda y servicio deficiente. Pero con WAP 2.0 ser\u00e1n mejores los dispositivos y servicios nuevos. La fuerza que impulsa estos dispositivos es la llamada comercio m\u00f3vil (m-commerce) (Senn, 2000). La fuerza que impulsa este fen\u00f3meno consiste en diversos fabricantes de PDAs inal\u00e1mbricos y operadores de redes que luchan por descubrir c\u00f3mo ganar una parte del pastel del comercio m\u00f3vil. Una de sus esperanzas es utilizar los PDAs inal\u00e1mbricos para servicios bancarios y de compras. Una idea es utilizar los PDAs inal\u00e1mbricos como un tipo de cartera electr\u00f3nica, que\n12\nINTRODUCCI\u00d3N\nCAP. 1\nautorice pagos en tiendas como un reemplazo del efectivo y las tarjetas de cr\u00e9dito. De este modo, el cargo aparecer\u00e1 en la factura del tel\u00e9fono celular. Desde el punto de vista de la tienda, este esquema le podr\u00eda ahorrar la mayor parte de la cuota de la empresa de tarjetas de cr\u00e9dito, que puede ser un porcentaje importante. Desde luego, este plan puede resultar contraproducente, puesto que los clientes que est\u00e1n en una tienda podr\u00edan utilizar los PDAs para verificar los precios de la competencia antes de comprar. Peor a\u00fan, las compa\u00f1\u00edas telef\u00f3nicas podr\u00edan ofrecer PDAs con lectores de c\u00f3digos de barras que permitan a un cliente rastrear un producto en una tienda y obtener en forma instant\u00e1nea un informe detallado de d\u00f3nde m\u00e1s se puede comprar y a qu\u00e9 precio. Puesto que el operador de redes sabe d\u00f3nde est\u00e1 el usuario, algunos servicios se hacen intencionalmente dependientes de la ubicaci\u00f3n. Por ejemplo, se podr\u00eda preguntar por una librer\u00eda cercana o un restaurante chino. Los mapas m\u00f3viles y los pron\u00f3sticos meteorol\u00f3gicos muy locales (\u201c\u00bfCu\u00e1ndo va a dejar de llover en mi traspatio?\u201d) son otros candidatos. Sin duda, aparecer\u00e1n otras muchas aplicaciones en cuanto estos dispositivos se difundan m\u00e1s ampliamente. Un punto muy importante para el comercio m\u00f3vil es que los usuarios de tel\u00e9fonos celulares est\u00e1n acostumbrados a pagar por todo (en contraste con los usuarios de Internet, que esperan recibir pr\u00e1cticamente todo sin costo). Si un sitio Web cobrara una cuota por permitir a sus clientes pagar con tarjeta de cr\u00e9dito, provocar\u00eda una reclamaci\u00f3n muy ruidosa de los usuarios. Si un operador de telefon\u00eda celular permitiera que las personas pagaran art\u00edculos en una tienda utilizando el tel\u00e9fono celular y luego cargara una cuota por este servicio, probablemente sus clientes lo aceptar\u00edan como algo normal. S\u00f3lo el tiempo lo dir\u00e1. Un poco m\u00e1s lejanas est\u00e1n las redes de \u00e1rea personal y las microcomputadoras personales de bolsillo. IBM ha desarrollado un reloj que ejecuta Linux (el cual incluye el sistema de ventanas X11) y tiene conectividad inal\u00e1mbrica a Internet para enviar y recibir correo electr\u00f3nico (Narayanaswami y cols., 2002). En el futuro, las personas podr\u00edan intercambiar tarjetas de presentaci\u00f3n con s\u00f3lo exponer sus relojes entre s\u00ed. Las computadoras de bolsillo inal\u00e1mbricas pueden dar acceso a las personas a sitios seguros de la misma manera en que lo hacen las tarjetas de banda magn\u00e9tica (posiblemente en combinaci\u00f3n con un c\u00f3digo de PIN o medici\u00f3n biom\u00e9trica). Estos relojes tambi\u00e9n podr\u00edan recuperar informaci\u00f3n relativa a la ubicaci\u00f3n actual del usuario (por ejemplo, restaurantes locales). Las posibilidades son infinitas. Los relojes inteligentes con radio han sido parte de nuestro espacio mental desde que aparecieron en las tiras c\u00f3micas de Dick Tracy, en 1946. Pero, \u00bfpolvo inteligente? Los investigadores en Berkeley han empaquetado una computadora inal\u00e1mbrica en un cubo de 1 mm por lado (Warneke y cols., 2001). Entre las aplicaciones potenciales se incluyen el seguimiento de inventarios, paquetes e incluso peque\u00f1os p\u00e1jaros, roedores e insectos.\n1.1.4 Temas sociales La amplia introducci\u00f3n de las redes ha presentado problemas sociales, \u00e9ticos y pol\u00edticos. Mencionemos brevemente algunos de ellos; un estudio completo requerir\u00eda todo un libro, por lo menos. Un rasgo popular de muchas redes son los grupos de noticias o boletines electr\u00f3nicos mediante los cuales las personas pueden intercambiar mensajes con individuos de los mismos intereses. Siempre y cuando los asuntos se restrinjan a temas t\u00e9cnicos o pasatiempos como la jardiner\u00eda, no surgir\u00e1n demasiados problemas.\nSEC. 1.1\nUSOS DE LAS REDES DE COMPUTADORAS\n13\nEl problema viene cuando los grupos de noticias se enfocan en temas que las personas en realidad tocan con cuidado, como pol\u00edtica, religi\u00f3n o sexo. Los puntos de vista enviados a tales grupos podr\u00edan ser ofensivos para algunas personas. Peor a\u00fan, podr\u00edan no ser pol\u00edticamente correctos. Adem\u00e1s, los mensajes no tienen que limitarse a texto. En la actualidad se pueden enviar fotograf\u00edas en alta resoluci\u00f3n e incluso peque\u00f1os videoclips a trav\u00e9s de redes de computadoras. Algunas personas practican la filosof\u00eda de vive y deja vivir, pero otras sienten que enviar cierto material (por ejemplo, ataques a pa\u00edses o religiones en particular, pornograf\u00eda, etc\u00e9tera) es sencillamente inaceptable y debe ser censurado. Los diversos pa\u00edses tienen diferentes y conflictivas leyes al respecto. De esta manera, el debate se aviva. Las personas han demandado a los operadores de redes, afirmando que son responsables, como sucede en el caso de los peri\u00f3dicos y las revistas, del contenido que transmiten. La respuesta inevitable es que una red es como una compa\u00f1\u00eda de tel\u00e9fonos o la oficina de correos, por lo que no se puede esperar que vigilen lo que dicen los usuarios. M\u00e1s a\u00fan, si los operadores de redes censuraran los mensajes, borrar\u00edan cualquier contenido que contuviera incluso la m\u00ednima posibilidad de que se les demandara, pero con esto violar\u00edan los derechos de sus usuarios a la libre expresi\u00f3n. Probablemente lo m\u00e1s seguro ser\u00eda decir que este debate seguir\u00e1 durante alg\u00fan tiempo. Otra \u00e1rea divertida es la de los derechos de los empleados en comparaci\u00f3n con los de los empleadores. Muchas personas leen y escriben correo electr\u00f3nico en el trabajo. Muchos empleadores han exigido el derecho a leer y, posiblemente, censurar los mensajes de los empleados, incluso los enviados desde un equipo dom\u00e9stico despu\u00e9s de las horas de trabajo. No todos los empleados est\u00e1n de acuerdo con esto. Incluso si los empleadores tienen poder sobre los empleados, \u00bfesta relaci\u00f3n tambi\u00e9n rige a las universidades y los estudiantes? \u00bfQu\u00e9 hay acerca de las escuelas secundarias y los estudiantes? En 1994, la Carnegie-Mellon University decidi\u00f3 suspender el flujo de mensajes entrantes de varios grupos de noticias que trataban sexo porque la universidad sinti\u00f3 que el material era inapropiado para menores (es decir, menores de 18 a\u00f1os). Tom\u00f3 a\u00f1os recuperarse de este suceso. Otro tema de importancia es el de los derechos del gobierno y los de los ciudadanos. El FBI ha instalado un sistema en muchos proveedores de servicios de Internet para curiosear entre todos los correos electr\u00f3nicos en busca de fragmentos que le interesen (Blaze y Bellovin, 2000; Sobel, 2001; Zacks, 2001). El sistema se llamaba originalmente Carnivore pero la mala publicidad provoc\u00f3 que se cambiara el nombre por uno menos agresivo que sonara como DCS1000. Pero su objetivo sigue siendo el de espiar a millones de personas con la esperanza de encontrar informaci\u00f3n acerca de actividades ilegales. Por desgracia, la Cuarta Enmienda de la Constituci\u00f3n de Estados Unidos proh\u00edbe que el gobierno realice investigaciones sin una orden de cateo. Decidir si estas palabras, escritas en el siglo XVIII, a\u00fan son v\u00e1lidas en el siglo XXI es un asunto que podr\u00eda mantener ocupadas a las cortes hasta el siglo XXII. El gobierno no tiene el monopolio de las amenazas contra la privacidad de una persona. El sector privado tambi\u00e9n hace su parte. Por ejemplo, los archivos peque\u00f1os llamados cookies que los navegadores Web almacenan en las computadoras de los usuarios permiten que las empresas rastreen las actividades de \u00e9stos en el ciberespacio, y podr\u00edan permitir que los n\u00fameros de tarjeta de cr\u00e9dito, del seguro social y otra informaci\u00f3n confidencial se divulguen por toda la Internet (Berghel, 2001).\n14\nINTRODUCCI\u00d3N\nCAP. 1\nLas redes de computadoras ofrecen la posibilidad de enviar mensajes an\u00f3nimos. En algunas situaciones esta capacidad podr\u00eda ser deseable. Por ejemplo, los estudiantes, soldados, empleados y ciudadanos pueden denunciar el comportamiento ilegal de algunos profesores, oficiales, superiores y pol\u00edticos sin temor a represalias. Por otra parte, en Estados Unidos, y en la mayor\u00eda de las democracias, la ley otorga espec\u00edficamente a una persona acusada el derecho de poder confrontar y desafiar a su acusador en la corte. Las acusaciones an\u00f3nimas no se pueden usar como evidencia. En resumen, las redes de computadoras, como la imprenta hace 500 a\u00f1os, permiten que el ciudadano com\u00fan distribuya sus puntos de vista en diversos modos y a audiencias diferentes, lo cual antes no era posible. Este nuevo fondo de libertad ofrece consigo muchos temas sociales, pol\u00edticos y morales sin resolver. Junto con lo bueno viene lo malo. As\u00ed parece ser la vida. Internet hace posible encontrar con rapidez informaci\u00f3n, pero una gran cantidad de ella est\u00e1 mal documentada, es falsa o completamente err\u00f3nea. El consejo m\u00e9dico que obtuvo en Internet podr\u00eda haber venido de un ganador del Premio Nobel o de un desertor de la preparatoria. Las redes de computadoras tambi\u00e9n han introducido nuevos tipos de comportamientos antisociales y criminales. La publicidad no deseada (spam) se ha convertido en algo com\u00fan debido a que algunas personas se dedican a reunir millones de direcciones de correo electr\u00f3nico y las venden en CD-ROMs a comerciantes. Los mensajes por correo electr\u00f3nico que contienen elementos activos (b\u00e1sicamente programas o macros que se ejecutan en la m\u00e1quina del receptor) pueden contener virus potencialmente destructores. El robo de identidad se ha convertido en un problema grave, ya que los ladrones ahora re\u00fanen informaci\u00f3n sobre una persona para obtener tarjetas de cr\u00e9dito y otros documentos a nombre de ella. Por \u00faltimo, la capacidad de transmitir m\u00fasica y v\u00eddeo de manera digital ha abierto la puerta a violaciones masivas de derechos de autor, que son dif\u00edciles de detectar y castigar. Muchos de estos problemas se podr\u00edan resolver si la industria de las computadoras tomara la seguridad de las computadoras con seriedad. Si todos los mensajes se codificaran y autenticaran, ser\u00eda m\u00e1s dif\u00edcil que se cometieran delitos. Esta tecnolog\u00eda est\u00e1 bien establecida y la estudiaremos en detalle en el cap\u00edtulo 8. El problema es que los proveedores de hardware y software saben que poner funciones de seguridad cuesta dinero y que sus clientes no las solicitan. Adem\u00e1s, una gran cantidad de los problemas proviene de un software con fallas, debido a que los proveedores saturan de funciones sus programas, lo que implica m\u00e1s c\u00f3digo e, inevitablemente, m\u00e1s fallas. Un impuesto a las funciones nuevas podr\u00eda ayudar, pero eso ser\u00eda como vender un problema por centavos. Reponer el software defectuoso podr\u00eda ser bueno, pero eso llevar\u00eda a la quiebra a toda la industria del software en el primer a\u00f1o.\n1.2 HARDWARE DE REDES Ya es tiempo de centrar nuevamente la atenci\u00f3n en los temas t\u00e9cnicos correspondientes al dise\u00f1o de redes (la parte de trabajo) y dejar a un lado las aplicaciones y los aspectos sociales de la conectividad (la parte divertida). Por lo general, no hay una sola clasificaci\u00f3n aceptada en la que se ajusten todas las redes de computadoras, pero hay dos que destacan de manera importante: la tecnolog\u00eda de transmisi\u00f3n y la escala. Examinaremos cada una a la vez.\nSEC. 1.2\nHARDWARE DE REDES\n15\nEn un sentido amplio, hay dos tipos de tecnolog\u00eda de transmisi\u00f3n que se utilizan de manera extensa. Son las siguientes: 1. Enlaces de difusi\u00f3n. 2. Enlaces de punto a punto. Las redes de difusi\u00f3n (broadcast) tienen un solo canal de comunicaci\u00f3n, por lo que todas las m\u00e1quinas de la red lo comparten. Si una m\u00e1quina env\u00eda un mensaje corto \u2014en ciertos contextos conocido como paquete\u2014, todas las dem\u00e1s lo reciben. Un campo de direcci\u00f3n dentro del paquete especifica el destinatario. Cuando una m\u00e1quina recibe un paquete, verifica el campo de direcci\u00f3n. Si el paquete va destinado a esa m\u00e1quina, \u00e9sta lo procesa; si va destinado a alguna otra, lo ignora. En una analog\u00eda, imagine a alguien que est\u00e1 parado al final de un corredor con varios cuartos a los lados y que grita: \u201cJorge, ven. Te necesito\u201d. Aunque en realidad el grito (paquete) podr\u00eda haber sido escuchado (recibido), por muchas personas, s\u00f3lo Jorge responde (lo procesa). Los dem\u00e1s simplemente lo ignoran. Otra analog\u00eda es la de los anuncios en un aeropuerto que piden a todos los pasajeros del vuelo 644 se reporten en la puerta 12 para abordar de inmediato. Por lo general, los sistemas de difusi\u00f3n tambi\u00e9n permiten el direccionamiento de un paquete a todos los destinos utilizando un c\u00f3digo especial en el campo de direcci\u00f3n. Cuando se transmite un paquete con este c\u00f3digo, todas las m\u00e1quinas de la red lo reciben y procesan. Este modo de operaci\u00f3n se conoce como difusi\u00f3n (broadcasting). Algunos sistemas de difusi\u00f3n tambi\u00e9n soportan la transmisi\u00f3n a un subconjunto de m\u00e1quinas, algo conocido como multidifusi\u00f3n (multicasting). Un esquema posible es la reserva de un bit para indicar la multidifusi\u00f3n. Los bits de direcci\u00f3n n \u2013 1 restantes pueden contener un n\u00famero de grupo. Cada m\u00e1quina puede \u201csuscribirse\u201d a alguno o a todos los grupos. Cuando se env\u00eda un paquete a cierto grupo, se distribuye a todas las m\u00e1quinas que se suscriben a ese grupo. En contraste, las redes punto a punto constan de muchas conexiones entre pares individuales de m\u00e1quinas. Para ir del origen al destino, un paquete en este tipo de red podr\u00eda tener que visitar primero una o m\u00e1s m\u00e1quinas intermedias. A menudo es posible que haya varias rutas o longitudes diferentes, de manera que encontrar las correctas es importante en redes de punto a punto. Por regla general (aunque hay muchas excepciones), las redes m\u00e1s peque\u00f1as localizadas en una misma \u00e1rea geogr\u00e1fica tienden a utilizar la difusi\u00f3n, mientras que las m\u00e1s grandes suelen ser de punto a punto. La transmisi\u00f3n de punto a punto con un emisor y un receptor se conoce como unidifusi\u00f3n (unicasting). Un criterio alternativo para la clasificaci\u00f3n de las redes es su escala. En la figura 1-6 clasificamos los sistemas de procesadores m\u00faltiples por tama\u00f1o f\u00edsico. En la parte superior se muestran las redes de \u00e1rea personal, que est\u00e1n destinadas para una sola persona. Por ejemplo, una red inal\u00e1mbrica que conecta una computadora con su rat\u00f3n, teclado e impresora, es una red de \u00e1rea personal. Incluso un PDA que controla el aud\u00edfono o el marcapaso de un usuario encaja en esta categor\u00eda. A continuaci\u00f3n de las redes de \u00e1rea personal se encuentran redes m\u00e1s grandes. Se pueden dividir en redes de \u00e1rea local, de \u00e1rea metropolitana y de \u00e1rea amplia. Por \u00faltimo, la conexi\u00f3n de dos o m\u00e1s redes se conoce como interred.\n16\nINTRODUCCI\u00d3N\nMetro cuadrado\n10 m\nCuarto\n100 m\nEdificio\n1 km 10 km 100 km 1,000 km 10,000 km\nEjemplo\nCampus\nRed de \u00e1rea personal 1442443\n1m\nProcesadores ubicados en el mismo\nCiudad Pa\u00eds Continente Planeta\nRed de \u00e1rea local\nRed de \u00e1rea metropolitana 14243\nDistancia entre procesadores\nCAP. 1\nRed de \u00e1rea amplia Internet\nFigura 1-6. Clasificaci\u00f3n de procesadores interconectados por escala.\nInternet es un ejemplo bien conocido de una interred. La distancia es importante como una clasificaci\u00f3n en metros porque se utilizan diferentes t\u00e9cnicas en diferentes escalas. En este libro nos ocuparemos de las redes en todas estas escalas. A continuaci\u00f3n se proporciona una breve introducci\u00f3n al hardware de redes.\n1.2.1 Redes de \u00e1rea local Las redes de \u00e1rea local (generalmente conocidas como LANs) son redes de propiedad privada que se encuentran en un solo edificio o en un campus de pocos kil\u00f3metros de longitud. Se utilizan ampliamente para conectar computadoras personales y estaciones de trabajo en oficinas de una empresa y de f\u00e1bricas para compartir recursos (por ejemplo, impresoras) e intercambiar informaci\u00f3n. Las LANs son diferentes de otros tipos de redes en tres aspectos: 1) tama\u00f1o; 2) tecnolog\u00eda de transmisi\u00f3n, y 3) topolog\u00eda. Las LANs est\u00e1n restringidas por tama\u00f1o, es decir, el tiempo de transmisi\u00f3n en el peor de los casos es limitado y conocido de antemano. El hecho de conocer este l\u00edmite permite utilizar ciertos tipos de dise\u00f1o, lo cual no ser\u00eda posible de otra manera. Esto tambi\u00e9n simplifica la administraci\u00f3n de la red. Las LANs podr\u00edan utilizar una tecnolog\u00eda de transmisi\u00f3n que consiste en un cable al cual est\u00e1n unidas todas las m\u00e1quinas, como alguna vez lo estuvo parte de las l\u00edneas de las compa\u00f1\u00edas telef\u00f3nicas en \u00e1reas rurales. Las LANs tradicionales se ejecutan a una velocidad de 10 a 100 Mbps, tienen un retardo bajo (microsegundos o nanosegundos) y cometen muy pocos errores. Las LANs m\u00e1s nuevas funcionan hasta a 10 Gbps. En este libro continuaremos con lo tradicional y mediremos las velocidades de las l\u00edneas en megabits por segundo (1 Mbps es igual a 1,000,000 de bits por segundo) y gigabits por segundo (1 Gbps es igual a 1,000,000,000 de bits por segundo). Para las LANs de difusi\u00f3n son posibles varias topolog\u00edas. La figura 1-7 muestra dos de ellas. En una red de bus (es decir, un cable lineal), en cualquier instante al menos una m\u00e1quina es la maestra y puede transmitir. Todas las dem\u00e1s m\u00e1quinas se abstienen de enviar. Cuando se presenta el conflicto de que dos o m\u00e1s m\u00e1quinas desean transmitir al mismo tiempo, se requiere un meca-\nSEC. 1.2\n17\nHARDWARE DE REDES\nnismo de arbitraje. Tal mecanismo podr\u00eda ser centralizado o distribuido. Por ejemplo, el IEEE 802.3, popularmente conocido como Ethernet, es una red de difusi\u00f3n basada en bus con control descentralizado, que por lo general funciona de 10 Mbps a 10 Gbps. Las computadoras que est\u00e1n en una Ethernet pueden transmitir siempre que lo deseen; si dos o m\u00e1s paquetes entran en colisi\u00f3n, cada computadora espera un tiempo aleatorio y lo intenta de nuevo m\u00e1s tarde.\nComputadora\nComputadora\nCable\n(a)\n(b)\nFigura 1-7. Dos redes de difusi\u00f3n. (a) De bus. (b) De anillo.\nUn segundo tipo de sistema de difusi\u00f3n es el de anillo. En un anillo, cada bit se propaga por s\u00ed mismo, sin esperar al resto del paquete al que pertenece. Por lo com\u00fan, cada bit navega por todo el anillo en el tiempo que le toma transmitir algunos bits, a veces incluso antes de que se haya transmitido el paquete completo. Al igual que con todos los dem\u00e1s sistemas de difusi\u00f3n, se requieren algunas reglas para controlar los accesos simult\u00e1neos al anillo. Se utilizan varios m\u00e9todos, por ejemplo, el de que las m\u00e1quinas deben tomar su turno. El IEEE 802.5 (el token ring de IBM) es una LAN basada en anillo que funciona a 4 y 16 Mbps. El FDDI es otro ejemplo de una red de anillo. Las redes de difusi\u00f3n se pueden dividir a\u00fan m\u00e1s en est\u00e1ticas y din\u00e1micas, dependiendo de c\u00f3mo se asigne el canal. Una asignaci\u00f3n est\u00e1tica t\u00edpica ser\u00eda dividir el tiempo en intervalos discretos y utilizar un algoritmo round-robin, permitiendo que cada m\u00e1quina transmita s\u00f3lo cuando llegue su turno. La asignaci\u00f3n est\u00e1tica desperdicia capacidad de canal cuando una m\u00e1quina no tiene nada que transmitir al llegar su turno, por lo que la mayor\u00eda de los sistemas trata de asignar el canal de forma din\u00e1mica (es decir, bajo demanda). Los m\u00e9todos de asignaci\u00f3n din\u00e1mica para un canal com\u00fan pueden ser centralizados o descentralizados. En el m\u00e9todo centralizado hay una sola entidad, por ejemplo, una unidad de arbitraje de bus, la cual determina qui\u00e9n sigue. Esto se podr\u00eda hacer aceptando solicitudes y tomando decisiones de acuerdo con algunos algoritmos internos. En el m\u00e9todo descentralizado de asignaci\u00f3n de canal no hay una entidad central; cada m\u00e1quina debe decidir por s\u00ed misma cu\u00e1ndo transmitir. Usted podr\u00eda pensar que esto siempre conduce al caos, pero no es as\u00ed. M\u00e1s adelante estudiaremos muchos algoritmos designados para poner orden y evitar el caos potencial.\n18\nINTRODUCCI\u00d3N\nCAP. 1\n1.2.2 Redes de \u00e1rea metropolitana Una red de \u00e1rea metropolitana (MAN) abarca una ciudad. El ejemplo m\u00e1s conocido de una MAN es la red de televisi\u00f3n por cable disponible en muchas ciudades. Este sistema creci\u00f3 a partir de los primeros sistemas de antena comunitaria en \u00e1reas donde la recepci\u00f3n de la televisi\u00f3n al aire era pobre. En dichos sistemas se colocaba una antena grande en la cima de una colina cercana y la se\u00f1al se canalizaba a las casas de los suscriptores. Al principio eran sistemas dise\u00f1ados de manera local con fines espec\u00edficos. Despu\u00e9s las compa\u00f1\u00edas empezaron a pasar a los negocios, y obtuvieron contratos de los gobiernos de las ciudades para cablear toda una ciudad. El siguiente paso fue la programaci\u00f3n de televisi\u00f3n e incluso canales designados \u00fanicamente para cable. Con frecuencia, \u00e9stos emit\u00edan programas de un solo tema, como s\u00f3lo noticias, deportes, cocina, jardiner\u00eda, etc\u00e9tera. Sin embargo, desde su inicio y hasta finales de la d\u00e9cada de 1990, estaban dise\u00f1ados \u00fanicamente para la recepci\u00f3n de televisi\u00f3n. A partir de que Internet atrajo una audiencia masiva, los operadores de la red de TV por cable se dieron cuenta de que con algunos cambios al sistema, podr\u00edan proporcionar servicio de Internet de dos v\u00edas en las partes sin uso del espectro. En ese punto, el sistema de TV por cable empezaba a transformarse de una forma de distribuci\u00f3n de televisi\u00f3n a una red de \u00e1rea metropolitana. Para que se d\u00e9 una idea, una MAN podr\u00eda verse como el sistema que se muestra en la figura 1-8, donde se aprecia que las se\u00f1ales de TV e Internet se alimentan hacia un amplificador head end para enseguida transmitirse a las casas de las personas. En el cap\u00edtulo 2 trataremos con detalle este tema.\nCaja de derivaci\u00f3n Antena\nAmplificador\nInternet\nFigura 1-8. Una red de \u00e1rea metropolitana, basada en TV por cable.\nLa televisi\u00f3n por cable no es solamente una MAN. Desarrollos recientes en el acceso inal\u00e1mbrico a alta velocidad a Internet dieron como resultado otra MAN, que se estandariz\u00f3 como IEEE 802.16. En el cap\u00edtulo 2 veremos esta \u00e1rea.\nSEC. 1.2\n19\nHARDWARE DE REDES\n1.2.3 Redes de \u00e1rea amplia Una red de \u00e1rea amplia (WAN), abarca una gran \u00e1rea geogr\u00e1fica, con frecuencia un pa\u00eds o un continente. Contiene un conjunto de m\u00e1quinas dise\u00f1ado para programas (es decir, aplicaciones) de usuario. Seguiremos el uso tradicional y llamaremos hosts a estas m\u00e1quinas. Los hosts est\u00e1n conectados por una subred de comunicaci\u00f3n, o simplemente subred, para abreviar. Los clientes son quienes poseen a los hosts (es decir, las computadoras personales de los usuarios), mientras que, por lo general, las compa\u00f1\u00edas telef\u00f3nicas o los proveedores de servicios de Internet poseen y operan la subred de comunicaci\u00f3n. La funci\u00f3n de una subred es llevar mensajes de un host a otro, como lo hace el sistema telef\u00f3nico con las palabras del que habla al que escucha. La separaci\u00f3n de los aspectos de la comunicaci\u00f3n pura de la red (la subred) de los aspectos de la aplicaci\u00f3n (los hosts), simplifica en gran medida todo el dise\u00f1o de la red. En la mayor\u00eda de las redes de \u00e1rea amplia la subred consta de dos componente distintos: l\u00edneas de transmisi\u00f3n y elementos de conmutaci\u00f3n. Las l\u00edneas de transmisi\u00f3n mueven bits entre m\u00e1quinas. Pueden estar hechas de cable de cobre, fibra \u00f3ptica o, incluso, radioenlaces. Los elementos de conmutaci\u00f3n son computadoras especializadas que conectan tres o m\u00e1s l\u00edneas de transmisi\u00f3n. Cuando los datos llegan a una l\u00ednea de entrada, el elemento de conmutaci\u00f3n debe elegir una l\u00ednea de salida en la cual reenviarlos. Estas computadoras de conmutaci\u00f3n reciben varios nombres; conmutadores y enrutadores son los m\u00e1s comunes. En este modelo, que se muestra en la figura 1-9, cada host est\u00e1 conectado frecuentemente a una LAN en la que existe un enrutador, aunque en algunos casos un host puede estar conectado de manera directa a un enrutador. El conjunto de l\u00edneas de comunicaci\u00f3n y enrutadores (pero no de hosts) forma la subred.\nSubred\nEnrutador\nHost\nLAN\nFigura 1-9. Relaci\u00f3n entre hosts de LANs y la subred.\nA continuaci\u00f3n se presenta un breve comentario acerca del t\u00e9rmino \u201csubred\u201d. Originalmente, su \u00fanico significado era el conjunto de enrutadores y l\u00edneas de comunicaci\u00f3n que mov\u00eda paquetes del host de origen al de destino. Sin embargo, algunos a\u00f1os m\u00e1s tarde tambi\u00e9n adquiri\u00f3 un segundo\n20\nINTRODUCCI\u00d3N\nCAP. 1\nsignificado junto con el direccionamiento de redes (que expondremos en el cap\u00edtulo 5). Desgraciadamente, no existe una alternativa de amplio uso con respecto a su significado inicial por lo que, con algunas reservas, utilizaremos este t\u00e9rmino en ambos sentidos. El contexto dejar\u00e1 en claro su significado. En la mayor\u00eda de las WANs, la red contiene numerosas l\u00edneas de transmisi\u00f3n, cada una de las cuales conecta un par de enrutadores. Si dos enrutadores que no comparten una l\u00ednea de transmisi\u00f3n quieren conectarse, deber\u00e1n hacerlo de manera indirecta, a trav\u00e9s de otros enrutadores. Cuando un paquete es enviado desde un enrutador a otro a trav\u00e9s de uno o m\u00e1s enrutadores intermedios, el paquete se recibe en cada enrutador intermedio en su totalidad, se almacena ah\u00ed hasta que la l\u00ednea de salida requerida est\u00e9 libre y, por \u00faltimo, se reenv\u00eda. Una subred organizada a partir de este principio se conoce como subred de almacenamiento y reenv\u00edo (store and forward ) o de conmutaci\u00f3n de paquetes. Casi todas las redes de \u00e1rea amplia (excepto las que utilizan sat\u00e9lites) tienen subredes de almacenamiento y reenv\u00edo. Cuando los paquetes son peque\u00f1os y tienen el mismo tama\u00f1o, se les llama celdas. El principio de una WAN de conmutaci\u00f3n de paquetes es tan importante que vale la pena dedicarle algunas palabras m\u00e1s. En general, cuando un proceso de cualquier host tiene un mensaje que se va a enviar a un proceso de alg\u00fan otro host, el host emisor divide primero el mensaje en paquetes, los cuales tienen un n\u00famero de secuencia. Estos paquetes se env\u00edan entonces por la red de uno en uno en una r\u00e1pida sucesi\u00f3n. Los paquetes se transportan de forma individual a trav\u00e9s de la red y se depositan en el host receptor, donde se reensamblan en el mensaje original y se entregan al proceso receptor. En la figura 1-10 se ilustra un flujo de paquetes correspondiente a alg\u00fan mensaje inicial. Enrutador\nSubred Host receptor\nHost emisor\nProceso emisor\nPaquete\nEl enrutador C elige enviar paquetes a E y no a D\nProceso receptor\nFigura 1-10. Flujo de paquetes desde un emisor a un receptor.\nEn esta figura todos los paquetes siguen la ruta ACE en vez de la ABDE o ACDE. En algunas redes todos los paquetes de un mensaje determinado deben seguir la misma ruta; en otras, cada paquete se enruta por separado. Desde luego, si ACE es la mejor ruta, todos los paquetes se podr\u00edan enviar a trav\u00e9s de ella, incluso si cada paquete se enruta de manera individual. Las decisiones de enrutamiento se hacen de manera local. Cuando un paquete llega al enrutador A, \u00e9ste debe decidir si el paquete se enviar\u00e1 hacia B o hacia C. La manera en que el enrutador A toma esa decisi\u00f3n se conoce como algoritmo de enrutamiento. Existen muchos de ellos. En el cap\u00edtulo 5 estudiaremos con detalle algunos.\nSEC. 1.2\nHARDWARE DE REDES\n21\nNo todas las WANs son de conmutaci\u00f3n de paquetes. Una segunda posibilidad para una WAN es un sistema satelital. Cada enrutador tiene una antena a trav\u00e9s de la cual puede enviar y recibir. Todos los enrutadores pueden escuchar la salida desde el sat\u00e9lite y, en algunos casos, tambi\u00e9n pueden escuchar las transmisiones de los dem\u00e1s enrutadores hacia el sat\u00e9lite. Algunas veces los enrutadores est\u00e1n conectados a una subred de punto a punto elemental, y s\u00f3lo algunos de ellos tienen una antena de sat\u00e9lite. Por naturaleza, las redes satelital son de difusi\u00f3n y son m\u00e1s \u00fatiles cuando la propiedad de difusi\u00f3n es importante.\n1.2.4 Redes inal\u00e1mbricas La comunicaci\u00f3n inal\u00e1mbrica digital no es una idea nueva. A principios de 1901, el f\u00edsico italiano Guillermo Marconi demostr\u00f3 un tel\u00e9grafo inal\u00e1mbrico desde un barco a tierra utilizando el c\u00f3digo Morse (despu\u00e9s de todo, los puntos y rayas son binarios). Los sistemas inal\u00e1mbricos digitales de la actualidad tienen un mejor desempe\u00f1o, pero la idea b\u00e1sica es la misma. Como primera aproximaci\u00f3n, las redes inal\u00e1mbricas se pueden dividir en tres categor\u00edas principales: 1. Interconexi\u00f3n de sistemas. 2. LANs inal\u00e1mbricas. 3. WANs inal\u00e1mbricas. La interconexi\u00f3n de sistemas se refiere a la interconexi\u00f3n de componentes de una computadora que utiliza radio de corto alcance. La mayor\u00eda de las computadoras tiene un monitor, teclado, rat\u00f3n e impresora, conectados por cables a la unidad central. Son tantos los usuarios nuevos que tienen dificultades para conectar todos los cables en los enchufes correctos (aun cuando suelen estar codificados por colores) que la mayor\u00eda de los proveedores de computadoras ofrece la opci\u00f3n de enviar a un t\u00e9cnico a la casa del usuario para que realice esta tarea. En consecuencia, algunas compa\u00f1\u00edas se reunieron para dise\u00f1ar una red inal\u00e1mbrica de corto alcance llamada Bluetooth para conectar sin cables estos componentes. Bluetooth tambi\u00e9n permite conectar c\u00e1maras digitales, auriculares, esc\u00e1neres y otros dispositivos a una computadora con el \u00fanico requisito de que se encuentren dentro del alcance de la red. Sin cables, sin instalaci\u00f3n de controladores, simplemente se colocan, se encienden y funcionan. Para muchas personas, esta facilidad de operaci\u00f3n es algo grandioso. En la forma m\u00e1s sencilla, las redes de interconexi\u00f3n de sistemas utilizan el paradigma del maestro y el esclavo de la figura 1-11(a). La unidad del sistema es, por lo general, el maestro que trata al rat\u00f3n, al teclado, etc\u00e9tera, como a esclavos. El maestro le dice a los esclavos qu\u00e9 direcciones utilizar, cu\u00e1ndo pueden difundir, durante cu\u00e1nto tiempo pueden transmitir, qu\u00e9 frecuencias pueden utilizar, etc\u00e9tera. En el cap\u00edtulo 4 explicaremos con m\u00e1s detalle el Bluetooth. El siguiente paso en la conectividad inal\u00e1mbrica son las LANs inal\u00e1mbricas. Son sistemas en los que cada computadora tiene un m\u00f3dem de radio y una antena mediante los que se puede comunicar con otros sistemas. En ocasiones, en el techo se coloca una antena con la que las m\u00e1quinas se comunican, como se ilustra en la figura 1-11(b). Sin embargo, si los sistemas est\u00e1n lo suficientemente cerca, se pueden comunicar de manera directa entre s\u00ed en una configuraci\u00f3n de\n22\nINTRODUCCI\u00d3N\nCAP. 1\nEstaci\u00f3n A la red al\u00e1mbrica base\n(a)\n(b)\nFigura 1-11. (a) Configuraci\u00f3n Bluetooth. (b) LAN inal\u00e1mbrica.\nigual a igual. Las LANs inal\u00e1mbricas se est\u00e1n haciendo cada vez m\u00e1s comunes en casas y oficinas peque\u00f1as, donde instalar Ethernet se considera muy problem\u00e1tico, as\u00ed como en oficinas ubicadas en edificios antiguos, cafeter\u00edas de empresas, salas de conferencias y otros lugares. Existe un est\u00e1ndar para las LANs inal\u00e1mbricas, llamado IEEE 802.11, que la mayor\u00eda de los sistemas implementa y que se ha extendido ampliamente. Esto lo explicaremos en el cap\u00edtulo 4. El tercer tipo de red inal\u00e1mbrica se utiliza en sistemas de \u00e1rea amplia. La red de radio utilizada para tel\u00e9fonos celulares es un ejemplo de un sistema inal\u00e1mbrico de banda ancha baja. Este sistema ha pasado por tres generaciones. La primera era anal\u00f3gica y s\u00f3lo para voz. La segunda era digital y s\u00f3lo para voz. La tercera generaci\u00f3n es digital y es tanto para voz como para datos. En cierto sentido, las redes inal\u00e1mbricas celulares son como las LANs inal\u00e1mbricas, excepto porque las distancias implicadas son mucho m\u00e1s grandes y las tasas de bits son mucho m\u00e1s bajas. Las LANs inal\u00e1mbricas pueden funcionar a tasas de hasta 50 Mbps en distancias de decenas de metros. Los sistemas celulares funcionan debajo de 1 Mbps, pero la distancia entre la estaci\u00f3n base y la computadora o tel\u00e9fono se mide en kil\u00f3metros m\u00e1s que en metros. En el cap\u00edtulo 2 hablaremos con mucho detalle sobre estas redes. Adem\u00e1s de estas redes de baja velocidad, tambi\u00e9n se han desarrollado las redes inal\u00e1mbricas de \u00e1rea amplia con alto ancho de banda. El enfoque inicial es el acceso inal\u00e1mbrico a Internet a alta velocidad, desde los hogares y las empresas, dejando a un lado el sistema telef\u00f3nico. Este servicio se suele llamar servicio de distribuci\u00f3n local multipuntos. Lo estudiaremos m\u00e1s adelante. Tambi\u00e9n se ha desarrollado un est\u00e1ndar para \u00e9ste, llamado IEEE 802.16. Examinaremos dicho est\u00e1ndar en el cap\u00edtulo 4. La mayor\u00eda de las redes inal\u00e1mbricas se enlaza a la red al\u00e1mbrica en alg\u00fan punto para proporcionar acceso a archivos, bases de datos e Internet. Hay muchas maneras de efectuar estas conexiones, dependiendo de las circunstancias. Por ejemplo, en la figura 1-12(a) mostramos un aeroplano con una serie de personas que utilizan m\u00f3dems y los tel\u00e9fonos de los respaldos para llamar a la oficina. Cada llamada es independiente de las dem\u00e1s. Sin embargo, una opci\u00f3n mucho\nSEC. 1.2\n23\nHARDWARE DE REDES\nm\u00e1s eficiente es la LAN dentro del avi\u00f3n de la figura 1-12(b), donde cada asiento est\u00e1 equipado con un conector Ethernet al cual los pasajeros pueden acoplar sus computadoras. El avi\u00f3n tiene un solo enrutador, el cual mantiene un enlace de radio con alg\u00fan enrutador que se encuentre en tierra, y cambia de enrutador conforme avanza el vuelo. Esta configuraci\u00f3n es una LAN tradicional, excepto porque su conexi\u00f3n al mundo exterior se da mediante un enlace por radio en lugar de una l\u00ednea cableada. Enrutador dentro del avi\u00f3n\nComputadora port\u00e1til\nUna llamada telef\u00f3nica por computadora (a)\nLAN al\u00e1mbrica (b)\nFigura 1-12. (a) Computadoras m\u00f3viles individuales. (b) LAN dentro del avi\u00f3n.\nMuchas personas creen que lo inal\u00e1mbrico es la onda del futuro (por ejemplo, Bi y cols., 2001; Leeper, 2001; Varshey y Vetter, 2000) pero se ha escuchado una voz disidente. Bob Metcalfe, el inventor de Ethernet, ha escrito: \u201cLas computadoras inal\u00e1mbricas m\u00f3viles son como los ba\u00f1os port\u00e1tiles sin ca\u00f1er\u00eda: bacinicas port\u00e1tiles. Ser\u00e1n muy comunes en los veh\u00edculos, en sitios en construcci\u00f3n y conciertos de rock. Mi consejo es que coloque cables en su casa y se quede ah\u00ed\u201d (Metcalfe, 1995). La historia podr\u00eda colocar esta cita en la misma categor\u00eda que la explicaci\u00f3n de T.J. Watson, presidente de IBM en 1945, de por qu\u00e9 esta empresa no entraba en el negocio de las computadoras: \u201cCuatro o cinco computadoras deber\u00e1n ser suficientes para todo el mundo hasta el a\u00f1o 2000\u201d.\n1.2.5 Redes dom\u00e9sticas La conectividad dom\u00e9stica est\u00e1 en el horizonte. La idea fundamental es que en el futuro la mayor\u00eda de los hogares estar\u00e1n preparados para conectividad de redes. Cualquier dispositivo del hogar ser\u00e1 capaz de comunicarse con todos los dem\u00e1s dispositivos y todos podr\u00e1n accederse por Internet. \u00c9ste es uno de esos conceptos visionarios que nadie solicit\u00f3 (como los controles remotos de TV o los tel\u00e9fonos celulares), pero una vez que han llegado nadie se puede imaginar c\u00f3mo hab\u00edan podido vivir sin ellos. Muchos dispositivos son capaces de estar conectados en red. Algunas de las categor\u00edas m\u00e1s evidentes (con ejemplos) son las siguientes: 1. 2. 3. 4.\nComputadoras (de escritorio, port\u00e1tiles, PDAs, perif\u00e9ricos compartidos). Entretenimiento (TV, DVD, VCR, videoc\u00e1mara, c\u00e1mara fotogr\u00e1fica, estereof\u00f3nicos, MP3). Telecomunicaciones (tel\u00e9fono, tel\u00e9fono m\u00f3vil, intercomunicadores, fax). Aparatos electrodom\u00e9sticos (horno de microondas, refrigerador, reloj, horno, aire acondicionado, luces). 5. Telemetr\u00eda (metro utilitario, alarma contra fuego y robo, termostato, c\u00e1maras inal\u00e1mbricas).\n24\nINTRODUCCI\u00d3N\nCAP. 1\nLa conectividad de computadoras dom\u00e9sticas ya est\u00e1 aqu\u00ed, aunque limitada. Muchas casas ya cuentan con un dispositivo para conectar varias computadoras para una conexi\u00f3n r\u00e1pida a Internet. El entretenimiento por red a\u00fan no existe, pero cuanto m\u00e1s y m\u00e1s m\u00fasica y pel\u00edculas se puedan descargar de Internet, habr\u00e1 m\u00e1s demanda para que los equipos de audio y las televisiones se conecten a Internet. Incluso las personas desear\u00e1n compartir sus propios v\u00eddeos con amigos y familiares, por lo que deber\u00e1 haber una conexi\u00f3n en ambos sentidos. Los dispositivos de telecomunicaciones ya est\u00e1n conectados al mundo exterior, pero pronto ser\u00e1n digitales y tendr\u00e1n capacidad de funcionar sobre Internet. Un hogar promedio tal vez tiene una docena de relojes (los de los aparatos electrodom\u00e9sticos), y todos se tienen que reajustar dos veces al a\u00f1o cuando inicia y termina el tiempo de ahorro de luz de d\u00eda (horario de verano). Si todos los relojes estuvieran conectados a Internet, ese reajuste se har\u00eda en forma autom\u00e1tica. Por \u00faltimo, el monitoreo remoto de la casa y su contenido es el probable ganador. Es muy factible que muchos padres deseen invertir en monitorear con sus PDAs a sus beb\u00e9s dormidos cuando van a cenar fuera de casa, aun cuando contraten a una ni\u00f1era. Si bien podemos imaginar una red separada para cada \u00e1rea de aplicaci\u00f3n, la integraci\u00f3n de todas en una sola red es probablemente una mejor idea. La conectividad dom\u00e9stica tiene algunas propiedades diferentes a las de otro tipo de redes. Primero, la red y los dispositivos deben ser f\u00e1ciles de instalar. El autor ha instalado numerosas piezas de hardware y software en varias computadoras durante varios a\u00f1os con resultados diferentes. Al realizar una serie de llamadas telef\u00f3nicas al personal de soporte t\u00e9cnico del proveedor por lo general recibi\u00f3 respuestas como: 1) Lea el manual; 2) Reinicie la computadora; 3) Elimine todo el hardware y software, excepto los nuestros, y pruebe de nuevo; 4) Descargue de nuestro sitio Web el controlador m\u00e1s reciente y, si todo eso falla, 5) Reformatee el disco duro y reinstale Windows desde el CD-ROM. Decirle al comprador de un refrigerador con capacidad de Internet que descargue e instale una nueva versi\u00f3n del sistema operativo del refrigerador, no conduce a tener clientes contentos. Los usuarios de computadoras est\u00e1n acostumbrados a soportar productos que no funcionan; los clientes que compran autom\u00f3viles, televisiones y refrigeradores son mucho menos tolerantes. Esperan productos que trabajen al 100% desde que se compran. Segundo, la red y los dispositivos deben estar plenamente probados en operaci\u00f3n. Los equipos de aire acondicionado sol\u00edan tener una perilla con cuatro par\u00e1metros: OFF, LOW, MEDIUM y HIGH (apagado, bajo, medio, alto). Ahora tienen manuales de 30 p\u00e1ginas. Una vez que puedan conectarse en red, no se le haga extra\u00f1o que tan s\u00f3lo el cap\u00edtulo de seguridad tenga 30 p\u00e1ginas. Esto estar\u00e1 m\u00e1s all\u00e1 de la comprensi\u00f3n de pr\u00e1cticamente todos los usuarios. Tercero, el precio bajo es esencial para el \u00e9xito. Muy pocas personas, si no es que ninguna, pagar\u00e1n un precio adicional de $50 por un termostato con capacidad de Internet, debido a que no considerar\u00e1n que monitorear la temperatura de sus casas desde sus trabajos sea algo importante. Tal vez por $5 s\u00ed lo comprar\u00edan. Cuarto, la principal aplicaci\u00f3n podr\u00eda implicar multimedia, por lo que la red necesita capacidad suficiente. No hay mercado para televisiones conectadas a Internet que proyecten pel\u00edculas inseguras a una resoluci\u00f3n de 320 \u00d7 240 p\u00edxeles y 10 cuadros por segundo. Fast Ethernet, el caballo de batalla en la mayor\u00eda de las oficinas, no es bastante buena para multimedia. En consecuencia, para que las redes dom\u00e9sticas lleguen a ser productos masivos en el mercado, requerir\u00e1n mejor desempe\u00f1o que el de las redes de oficina actuales, as\u00ed como precios m\u00e1s bajos.\nSEC. 1.2\nHARDWARE DE REDES\n25\nQuinto, se podr\u00eda empezar con uno o dos dispositivos y expandir de manera gradual el alcance de la red. Esto significa que no habr\u00e1 problemas con el formato. Decir a los consumidores que adquieran perif\u00e9ricos con interfaces IEEE 1394 (FireWire) y a\u00f1os despu\u00e9s retractarse y decir que USB 2.0 es la interfaz del mes, es hacer clientes caprichosos. La interfaz de red tendr\u00e1 que permanecer estable durante muchos a\u00f1os; el cableado (si lo hay) deber\u00e1 permanecer estable durante d\u00e9cadas. Sexto, la seguridad y la confianza ser\u00e1n muy importantes. Perder algunos archivos por un virus de correo electr\u00f3nico es una cosa; que un ladr\u00f3n desarme su sistema de seguridad desde su PDA y luego saquee su casa es algo muy diferente. Una pregunta interesante es si las redes dom\u00e9sticas ser\u00e1n al\u00e1mbricas o inal\u00e1mbricas. La mayor\u00eda de los hogares ya tiene seis redes instaladas: electricidad, tel\u00e9fono, televisi\u00f3n por cable, agua, gas y alcantarillado. Agregar una s\u00e9ptima durante la construcci\u00f3n de una casa no es dif\u00edcil, pero acondicionar las casas existentes para agregar dicha red es costoso. Los costos favorecen la conectividad inal\u00e1mbrica, pero la seguridad favorece la conectividad al\u00e1mbrica. El problema con la conectividad inal\u00e1mbrica es que las ondas de radio que utiliza traspasan las paredes con mucha facilidad. No a todos les gusta la idea de que cuando vaya a imprimir, se tope con la conexi\u00f3n de su vecino y pueda leer el correo electr\u00f3nico de \u00e9ste. En el cap\u00edtulo 8 estudiaremos c\u00f3mo se puede utilizar la encriptaci\u00f3n para proporcionar seguridad, pero en el contexto de una red dom\u00e9stica la seguridad debe estar bien probada, incluso para usuarios inexpertos. Es m\u00e1s f\u00e1cil decirlo que hacerlo, incluso en el caso de usuarios expertos. Para abreviar, la conectividad dom\u00e9stica ofrece muchas oportunidades y retos. La mayor\u00eda de ellos se relaciona con la necesidad de que sean f\u00e1ciles de manejar, confiables y seguros, en particular en manos de usuarios no t\u00e9cnicos, y que al mismo tiempo proporcionen alto desempe\u00f1o a bajo costo.\n1.2.6 Interredes Existen muchas redes en el mundo, a veces con hardware y software diferentes. Con frecuencia, las personas conectadas a una red desean comunicarse con personas conectadas a otra red diferente. La satisfacci\u00f3n de este deseo requiere que se conecten diferentes redes, con frecuencia incompatibles, a veces mediante m\u00e1quinas llamadas puertas de enlace (gateways) para hacer la conexi\u00f3n y proporcionar la traducci\u00f3n necesaria, tanto en t\u00e9rminos de hardware como de software. Un conjunto de redes interconectadas se llama interred. Una forma com\u00fan de interred es el conjunto de LANs conectadas por una WAN. De hecho, si tuvi\u00e9ramos que reemplazar la etiqueta \u201csubred\u201d en la figura 1-9 por \u201cWAN\u201d, no habr\u00eda nada m\u00e1s que cambiar en la figura. En este caso, la \u00fanica diferencia t\u00e9cnica real entre una subred y una WAN es si hay hosts presentes. Si el sistema que aparece en el \u00e1rea gris contiene solamente enrutadores, es una subred; si contiene enrutadores y hosts, es una WAN. Las diferencias reales se relacionan con la propiedad y el uso. Subredes, redes e interredes con frecuencia se confunden. La subred tiene m\u00e1s sentido en el contexto de una red de \u00e1rea amplia, donde se refiere a un conjunto de enrutadores y l\u00edneas de\n26\nINTRODUCCI\u00d3N\nCAP. 1\ncomunicaci\u00f3n pose\u00eddas por el operador de redes. Como una analog\u00eda, el sistema telef\u00f3nico consta de oficinas de conmutaci\u00f3n telef\u00f3nica que se conectan entre s\u00ed mediante l\u00edneas de alta velocidad, y a los hogares y negocios, mediante l\u00edneas de baja velocidad. Estas l\u00edneas y equipos, pose\u00eddas y administradas por la compa\u00f1\u00eda de tel\u00e9fonos, forman la subred del sistema telef\u00f3nico. Los tel\u00e9fonos mismos (los hosts en esta analog\u00eda) no son parte de la subred. La combinaci\u00f3n de una subred y sus hosts forma una red. En el caso de una LAN, el cable y los hosts forman la red. En realidad, ah\u00ed no hay una subred. Una interred se forma cuando se interconectan redes diferentes. Desde nuestro punto de vista, al conectar una LAN y una WAN o conectar dos LANs se forma una interred, pero existe poco acuerdo en la industria en cuanto a la terminolog\u00eda de esta \u00e1rea. Una regla de oro es que si varias empresas pagaron por la construcci\u00f3n de diversas partes de la red y cada una mantiene su parte, tenemos una interred m\u00e1s que una sola red. Asimismo, si la terminolog\u00eda subyacente es diferente en partes diferentes (por ejemplo, difusi\u00f3n y punto a punto), probablemente tengamos dos redes.\n1.3 SOFTWARE DE REDES Las primeras redes de computadoras se dise\u00f1aron teniendo al hardware como punto principal y al software como secundario. Esta estrategia ya no funciona. Actualmente el software de redes est\u00e1 altamente estructurado. En las siguientes secciones examinaremos en detalle la t\u00e9cnica de estructuraci\u00f3n de software. El m\u00e9todo descrito aqu\u00ed es la clave de todo el libro y se presentar\u00e1 con mucha frecuencia m\u00e1s adelante.\n1.3.1 Jerarqu\u00edas de protocolos Para reducir la complejidad de su dise\u00f1o, la mayor\u00eda de las redes est\u00e1 organizada como una pila de capas o niveles, cada una construida a partir de la que est\u00e1 debajo de ella. El n\u00famero de capas, as\u00ed como el nombre, contenido y funci\u00f3n de cada una de ellas difieren de red a red. El prop\u00f3sito de cada capa es ofrecer ciertos servicios a las capas superiores, a las cuales no se les muestran los detalles reales de implementaci\u00f3n de los servicios ofrecidos. Este concepto es muy conocido y utilizado en la ciencia computacional, donde se conoce de diversas maneras, como ocultamiento de informaci\u00f3n, tipos de datos abstractos, encapsulamiento de datos y programaci\u00f3n orientada a objetos. La idea b\u00e1sica es que una pieza particular de software (o hardware) proporciona un servicio a sus usuarios pero nunca les muestra los detalles de su estado interno ni sus algoritmos. La capa n de una m\u00e1quina mantiene una conversaci\u00f3n con la capa n de otra m\u00e1quina. Las reglas y convenciones utilizadas en esta conversaci\u00f3n se conocen de manera colectiva como protocolo de capa n. B\u00e1sicamente, un protocolo es un acuerdo entre las partes en comunicaci\u00f3n sobre c\u00f3mo se debe llevar a cabo la comunicaci\u00f3n. Como una analog\u00eda, cuando se presenta una mujer con un hombre, ella podr\u00eda elegir no darle la mano. \u00c9l, a su vez, podr\u00eda decidir saludarla de mano o de beso, dependiendo, por ejemplo, de si es una abogada americana o una princesa europea en\nSEC. 1.3\n27\nSOFTWARE DE REDES\nuna reuni\u00f3n social formal. Violar el protocolo har\u00e1 m\u00e1s dif\u00edcil la comunicaci\u00f3n, si no es que imposible. En la figura 1-13 se ilustra una red de cinco capas. Las entidades que abarcan las capas correspondientes en diferentes m\u00e1quinas se llaman iguales ( peers). Los iguales podr\u00edan ser procesos, dispositivos de hardware o incluso seres humanos. En otras palabras, los iguales son los que se comunican a trav\u00e9s del protocolo.\nHost 1\nHost 2 Protocolo de la capa 5\nCapa 5\nCapa 5\nInterfaz de las capas 4-5 Protocolo de la capa 4 Capa 4\nCapa 4\nInterfaz de las capas 3-4 Protocolo de la capa 3 Capa 3\nCapa 3\nInterfaz de las capas 2-3 Protocolo de la capa 2 Capa 2\nCapa 2\nInterfaz de las capas 1-2 Protocolo de la capa 1 Capa 1\nCapa 1\nMedio f\u00edsico\nFigura 1-13. Capas, protocolos e interfaces.\nEn realidad, los datos no se transfieren de manera directa desde la capa n de una m\u00e1quina a la capa n de la otra m\u00e1quina, sino que cada capa pasa los datos y la informaci\u00f3n de control a la capa inmediatamente inferior, hasta que se alcanza la capa m\u00e1s baja. Debajo de la capa 1 se encuentra el medio f\u00edsico a trav\u00e9s del cual ocurre la comunicaci\u00f3n real. En la figura 1-13, la comunicaci\u00f3n virtual se muestra con l\u00edneas punteadas, en tanto que la f\u00edsica, con l\u00edneas s\u00f3lidas. Entre cada par de capas adyacentes est\u00e1 una interfaz. \u00c9sta define qu\u00e9 operaciones y servicios primitivos pone la capa m\u00e1s baja a disposici\u00f3n de la capa superior inmediata. Cuando los dise\u00f1adores de redes deciden cu\u00e1ntas capas incluir en una red y qu\u00e9 debe hacer cada una, una de las consideraciones m\u00e1s importantes es definir interfaces limpias entre las capas. Hacerlo as\u00ed, a su vez, requiere que la capa desempe\u00f1e un conjunto espec\u00edfico de funciones bien entendidas. Adem\u00e1s de minimizar la cantidad de informaci\u00f3n que se debe pasar entre las capas, las interfaces bien definidas simplifican el reemplazo de la implementaci\u00f3n de una capa con una implementaci\u00f3n totalmente diferente (por ejemplo, todas las l\u00edneas telef\u00f3nicas se reemplazan con canales por sat\u00e9lite)\n28\nINTRODUCCI\u00d3N\nCAP. 1\nporque todo lo que se pide de la nueva implementaci\u00f3n es que ofrezca exactamente el mismo conjunto de servicios a su vecino de arriba, como lo hac\u00eda la implementaci\u00f3n anterior. De hecho, es muy com\u00fan que diferentes hosts utilicen diferentes implementaciones. Un conjunto de capas y protocolos se conoce como arquitectura de red. La especificaci\u00f3n de una arquitectura debe contener informaci\u00f3n suficiente para permitir que un implementador escriba el programa o construya el hardware para cada capa de modo que se cumpla correctamente con el protocolo apropiado. Ni los detalles de la implementaci\u00f3n ni las especificaciones de las interfaces son parte de la arquitectura porque est\u00e1n ocultas en el interior de las m\u00e1quinas y no son visibles desde el exterior. Incluso, tampoco es necesario que las interfaces de todas las m\u00e1quinas en una red sean las mismas, siempre y cuando cada m\u00e1quina pueda utilizar correctamente todos los protocolos. La lista de protocolos utilizados por un sistema, un protocolo por capa, se conoce como pila de protocolos. Los aspectos de las arquitecturas de red, las pilas de protocolos y los protocolos mismos son el tema principal de este libro. Una analog\u00eda podr\u00eda ayudar a explicar la idea de comunicaci\u00f3n entre m\u00faltiples capas. Imagine a dos fil\u00f3sofos (procesos de iguales en la capa 3), uno de los cuales habla urdu e ingl\u00e9s, y el otro chino y franc\u00e9s. Puesto que no tienen un idioma com\u00fan, cada uno contrata un traductor (proceso de iguales en la capa 2) y cada uno a su vez contacta a una secretaria (procesos de iguales en la capa 1). El fil\u00f3sofo 1 desea comunicar su afici\u00f3n por el oryctolagus cuniculus a su igual. Para eso, le pasa un mensaje (en ingl\u00e9s) a trav\u00e9s de la interfaz de las capas 2-3 a su traductor, diciendo: \u201cMe gustan los conejos\u201d, como se ilustra en la figura 1-14. Los traductores han acordado un idioma neutral conocido por ambos, el holand\u00e9s, para que el mensaje se convierta en \u201cIk vind konijnen leuk\u201d. La elecci\u00f3n del idioma es el protocolo de la capa 2 y los procesos de iguales de dicha capa son quienes deben realizarla. Entonces el traductor le da el mensaje a una secretaria para que lo transmita por, digamos, fax (el protocolo de la capa 1). Cuando el mensaje llega, se traduce al franc\u00e9s y se pasa al fil\u00f3sofo 2 a trav\u00e9s de la interfaz de las capas 2-3. Observe que cada protocolo es totalmente independiente de los dem\u00e1s en tanto no cambien las interfaces. Los traductores pueden cambiar de holand\u00e9s a, digamos, finland\u00e9s, a voluntad, siempre y cuando los dos est\u00e9n de acuerdo y no cambien su interfaz con las capas 1 o 3. Del mismo modo, las secretarias pueden cambiar de fax a correo electr\u00f3nico o tel\u00e9fono sin molestar (o incluso avisar) a las dem\u00e1s capas. Cada proceso podr\u00eda agregar alguna informaci\u00f3n destinada s\u00f3lo a su igual. Esta informaci\u00f3n no se pasa a la capa superior. Ahora veamos un ejemplo m\u00e1s t\u00e9cnico: c\u00f3mo proporcionar comunicaci\u00f3n a la capa superior de la red de cinco capas de la figura 1-15. Un proceso de aplicaci\u00f3n que se ejecuta en la capa 5 produce un mensaje, M, y lo pasa a la capa 4 para su transmisi\u00f3n. La capa 4 pone un encabezado al frente del mensaje para identificarlo y pasa el resultado a la capa 3. El encabezado incluye informaci\u00f3n de control, como n\u00fameros de secuencia, para que la capa 4 de la m\u00e1quina de destino entregue los mensajes en el orden correcto si las capas inferiores no mantienen la secuencia. En algunas capas los encabezados tambi\u00e9n pueden contener tama\u00f1os, medidas y otros campos de control. En muchas redes no hay l\u00edmites para el tama\u00f1o de mensajes transmitidos en el protocolo de la capa 4, pero casi siempre hay un l\u00edmite impuesto por el protocolo de la capa 3. En consecuencia,\nSEC. 1.3\nUbicaci\u00f3n B\nUbicaci\u00f3n A I like rabbits\nMensaje\nFil\u00f3sofo\n3\nL: Dutch\n2\nIk vind konijnen leuk\nFax #--L: Dutch 1\n29\nSOFTWARE DE REDES\nInformaci\u00f3n para el traductor remoto\nTraductor\nJ\u2019aime bien les lapins\nL: Dutch Ik vind konijnen leuk\nInformaci\u00f3n para la secretaria remota\n3\n2\nFax #--Secretaria\nIk vind konijnen leuk\nL: Dutch Ik vind konijnen leuk\n1\nFigura 1-14. Arquitectura fil\u00f3sofo-traductor-secretaria.\nla capa 3 debe desintegrar en unidades m\u00e1s peque\u00f1as, paquetes, los mensajes que llegan, y a cada paquete le coloca un encabezado. En este ejemplo, M se divide en dos partes, M1 y M2. La capa 3 decide cu\u00e1l de las l\u00edneas que salen utilizar y pasa los paquetes a la capa 2. \u00c9sta no s\u00f3lo agrega un encabezado a cada pieza, sino tambi\u00e9n un terminador, y pasa la unidad resultante a la capa 1 para su transmisi\u00f3n f\u00edsica. En la m\u00e1quina receptora el mensaje pasa hacia arriba de capa en capa, perdiendo los encabezados conforme avanza. Ninguno de los encabezados de las capas inferiores a n llega a la capa n. Lo que debe entender en la figura 1-15 es la relaci\u00f3n entre las comunicaciones virtual y real, y la diferencia entre protocolos e interfaces. Por ejemplo, los procesos de iguales en la capa 4 piensan\n30\nINTRODUCCI\u00d3N\nCAP. 1\nCapa Protocolo de la capa 5\nProtocolo de la capa 4\nProtocolo de la capa 3 Protocolo de la capa 2\nM\u00e1quina de origen\nM\u00e1quina de destino\nFigura 1-15. Ejemplo de flujo de informaci\u00f3n que soporta una comunicaci\u00f3n virtual en la capa 5.\nconceptualmente de su comunicaci\u00f3n como si fuera \u201chorizontal\u201d, y utilizan el protocolo de la capa 4. Pareciera que cada uno tuviera un procedimiento llamado algo as\u00ed como EnviadoalOtroLado y RecibidoDesdeElOtroLado, aun cuando estos procedimientos en realidad se comunican con las capas inferiores a trav\u00e9s de la interfaz de las capas 3-4, no con el otro lado. La abstracci\u00f3n del proceso de iguales es b\u00e1sica para todo dise\u00f1o de red. Al utilizarla, la inmanejable tarea de dise\u00f1ar toda la red se puede fragmentar en varios problemas de dise\u00f1o m\u00e1s peque\u00f1os y manejables, es decir, el dise\u00f1o de las capas individuales. Aunque la secci\u00f3n 1.3 se llama \u201cSoftware de redes\u201d, vale la pena precisar que las capas inferiores de una jerarqu\u00eda de protocolos se implementan con frecuencia en el hardware o en el firmware. No obstante, est\u00e1n implicados los algoritmos de protocolo complejos, aun cuando est\u00e9n integrados (en todo o en parte) en el hardware.\n1.3.2 Aspectos de dise\u00f1o de las capas Algunos de los aspectos clave de dise\u00f1o que ocurren en las redes de computadoras est\u00e1n presentes en las diversas capas. M\u00e1s adelante mencionaremos brevemente algunos de los m\u00e1s importantes. Cada capa necesita un mecanismo para identificar a los emisores y a los receptores. Puesto que una red por lo general tiene muchas computadoras \u2014algunas de las cuales tienen varios procesos\u2014, se necesita un m\u00e9todo para que un proceso en una m\u00e1quina especifique con cu\u00e1l de ellas\nSEC. 1.3\nSOFTWARE DE REDES\n31\nquiere hablar. Como consecuencia de tener m\u00faltiples destinos, se necesita alguna forma de direccionamiento a fin de precisar un destino espec\u00edfico. Otro conjunto de decisiones de dise\u00f1o concierne a las reglas de la transferencia de datos. En algunos sistemas, los datos viajan s\u00f3lo en una direcci\u00f3n; en otros, pueden viajar en ambas direcciones. El protocolo tambi\u00e9n debe determinar a cu\u00e1ntos canales l\u00f3gicos corresponde la conexi\u00f3n y cu\u00e1les son sus prioridades. Muchas redes proporcionan al menos dos canales l\u00f3gicos por conexi\u00f3n, uno para los datos normales y otro para los urgentes. El control de errores es un aspecto importante porque los circuitos de comunicaci\u00f3n f\u00edsica no son perfectos. Muchos c\u00f3digos de detecci\u00f3n y correcci\u00f3n de errores son conocidos, pero los dos extremos de la conexi\u00f3n deben estar de acuerdo en cu\u00e1l es el que se va a utilizar. Adem\u00e1s, el receptor debe tener alg\u00fan medio de decirle al emisor qu\u00e9 mensajes se han recibido correctamente y cu\u00e1les no. No todos los canales de comunicaci\u00f3n conservan el orden en que se les env\u00edan los mensajes. Para tratar con una posible p\u00e9rdida de secuencia, el protocolo debe incluir un mecanismo que permita al receptor volver a unir los pedazos en forma adecuada. Una soluci\u00f3n obvia es numerar las piezas, pero esta soluci\u00f3n deja abierta la cuesti\u00f3n de qu\u00e9 se debe hacer con las piezas que llegan sin orden. Un aspecto que ocurre en cada nivel es c\u00f3mo evitar que un emisor r\u00e1pido sature de datos a un receptor m\u00e1s lento. Se han propuesto varias soluciones que explicaremos m\u00e1s adelante. Algunas de ellas implican alg\u00fan tipo de retroalimentaci\u00f3n del receptor al emisor, directa o indirectamente, dependiendo de la situaci\u00f3n actual del receptor. Otros limitan al emisor a una velocidad de transmisi\u00f3n acordada. Este aspecto se conoce como control de flujo. Otro problema que se debe resolver en algunos niveles es la incapacidad de todos los procesos de aceptar de manera arbitraria mensajes largos. Esta propiedad conduce a mecanismos para desensamblar, transmitir y reensamblar mensajes. Un aspecto relacionado es el problema de qu\u00e9 hacer cuando los procesos insisten en transmitir datos en unidades tan peque\u00f1as que enviarlas por separado es ineficaz. La soluci\u00f3n a esto es reunir en un solo mensaje grande varios mensajes peque\u00f1os que vayan dirigidos a un destino com\u00fan y desmembrar dicho mensaje una vez que llegue a su destino. Cuando es inconveniente o costoso establecer una conexi\u00f3n separada para cada par de procesos de comunicaci\u00f3n, la capa subyacente podr\u00eda decidir utilizar la misma conexi\u00f3n para m\u00faltiples conversaciones sin relaci\u00f3n entre s\u00ed. Siempre y cuando esta multiplexi\u00f3n y desmultiplexi\u00f3n se realice de manera transparente, cualquier capa la podr\u00e1 utilizar. La multiplexi\u00f3n se necesita en la capa f\u00edsica, por ejemplo, donde m\u00faltiples conversaciones comparten un n\u00famero limitado de circuitos f\u00edsicos. Cuando hay m\u00faltiples rutas entre el origen y el destino, se debe elegir la mejor o las mejores entre todas ellas. A veces esta decisi\u00f3n se debe dividir en dos o m\u00e1s capas. Por ejemplo, para enviar datos de Londres a Roma, se debe tomar una decisi\u00f3n de alto nivel para pasar por Francia o Alemania, dependiendo de sus respectivas leyes de privacidad. Luego se debe tomar una decisi\u00f3n de bajo nivel para seleccionar uno de los circuitos disponibles dependiendo de la carga de tr\u00e1fico actual. Este tema se llama enrutamiento.\n32\nINTRODUCCI\u00d3N\nCAP. 1\n1.3.3 Servicios orientados a la conexi\u00f3n y no orientados a la conexi\u00f3n Las capas pueden ofrecer dos tipos de servicios a las capas que est\u00e1n sobre ellas: orientados a la conexi\u00f3n y no orientados a la conexi\u00f3n. En esta secci\u00f3n veremos estos dos tipos y examinaremos las diferencias que hay entre ellos. El servicio orientado a la conexi\u00f3n se concibi\u00f3 con base en el sistema telef\u00f3nico. Para hablar con alguien, usted levanta el tel\u00e9fono, marca el n\u00famero, habla y luego cuelga. Del mismo modo, para usar un servicio de red orientado a la conexi\u00f3n, el usuario del servicio primero establece una conexi\u00f3n, la utiliza y luego la abandona. El aspecto esencial de una conexi\u00f3n es que funciona como un tubo: el emisor empuja objetos (bits) en un extremo y el receptor los toma en el otro extremo. En la mayor\u00eda de los casos se conserva el orden para que los bits lleguen en el orden en que se enviaron. En algunos casos, al establecer la conexi\u00f3n, el emisor, el receptor y la subred realizan una negociaci\u00f3n sobre los par\u00e1metros que se van a utilizar, como el tama\u00f1o m\u00e1ximo del mensaje, la calidad del servicio solicitado y otros temas. Por lo general, un lado hace una propuesta y el otro la acepta, la rechaza o hace una contrapropuesta. En contraste, el servicio no orientado a la conexi\u00f3n se concibi\u00f3 con base en el sistema postal. Cada mensaje (carta) lleva completa la direcci\u00f3n de destino y cada una se enruta a trav\u00e9s del sistema, independientemente de las dem\u00e1s. En general, cuando se env\u00edan dos mensajes al mismo destino, el primero que se env\u00ede ser\u00e1 el primero en llegar. Sin embargo, es posible que el que se envi\u00f3 primero se dilate tanto que el segundo llegue primero. Cada servicio se puede clasificar por la calidad del servicio. Algunos servicios son confiables en el sentido de que nunca pierden datos. Por lo general, en un servicio confiable el receptor confirma la recepci\u00f3n de cada mensaje para que el emisor est\u00e9 seguro de que lleg\u00f3. Este proceso de confirmaci\u00f3n de recepci\u00f3n introduce sobrecargas y retardos, que con frecuencia son valiosos pero a veces son indeseables. Una situaci\u00f3n t\u00edpica en la que un servicio orientado a la conexi\u00f3n es apropiado es en la transferencia de archivos. El propietario del archivo desea estar seguro de que lleguen correctamente todos los bits y en el mismo orden en que se enviaron. Muy pocos clientes que transfieren archivos preferir\u00edan un servicio que revuelve o pierde ocasionalmente algunos bits, aunque fuera mucho m\u00e1s r\u00e1pido. Un servicio orientado a la conexi\u00f3n confiable tiene dos variantes menores: secuencias de mensaje y flujo de bytes. En la primera variante se conservan los l\u00edmites del mensaje. Cuando se env\u00edan dos mensajes de 1024 bytes, llegan en dos mensajes distintos de 1024 bytes, nunca en un solo mensaje de 2048 bytes. En la segunda, la conexi\u00f3n es simplemente un flujo de bytes, sin l\u00edmites en el mensaje. Cuando llegan los 2048 bytes al receptor, no hay manera de saber si se enviaron como un mensaje de 2048 bytes o dos mensajes de 1024 bytes o 2048 mensajes de un byte. Si se env\u00edan las p\u00e1ginas de un libro en mensajes separados sobre una red a una fotocomponedora, podr\u00eda ser importante que se conserven los l\u00edmites de los mensajes. Por otra parte, cuando un usuario inicia sesi\u00f3n en un servidor remoto, todo lo que se necesita es un flujo de bytes desde la computadora del usuario al servidor. Los l\u00edmites del mensaje no son importantes.\nSEC. 1.3\nSOFTWARE DE REDES\n33\nComo lo mencionamos antes, para algunas aplicaciones, los retardos de tr\u00e1nsito ocasionados por las confirmaciones de recepci\u00f3n son inaceptables. Una de estas aplicaciones es el tr\u00e1fico de voz digitalizada. Es preferible para los usuarios de tel\u00e9fono escuchar un poco de ruido en la l\u00ednea de vez en cuando que experimentar un retardo esperando las confirmaciones de recepci\u00f3n. Del mismo modo, tener algunos p\u00edxeles err\u00f3neos cuando se transmite una videoconferencia no es problema, pero experimentar sacudidas en la imagen cuando se interrumpe el flujo para corregir errores es muy molesto. No todas las aplicaciones requieren conexiones. Por ejemplo, conforme el correo electr\u00f3nico se vuelve m\u00e1s com\u00fan, la basura electr\u00f3nica tambi\u00e9n se torna m\u00e1s com\u00fan. Es probable que el emisor de correo electr\u00f3nico basura no desee enfrentarse al problema de configurar una conexi\u00f3n y luego desarmarla s\u00f3lo para enviar un elemento. Tampoco es 100 por ciento confiable enviar lo esencial, sobre todo si eso es m\u00e1s costoso. Todo lo que se necesita es una forma de enviar un mensaje \u00fanico que tenga una alta, aunque no garantizada, probabilidad de llegar. Al servicio no orientado a la conexi\u00f3n no confiable (es decir, sin confirmaci\u00f3n de recepci\u00f3n) se le conoce como servicio de datagramas, en analog\u00eda con el servicio de telegramas, que tampoco devuelve una confirmaci\u00f3n de recepci\u00f3n al emisor. En otras situaciones se desea la conveniencia de no tener que establecer una conexi\u00f3n para enviar un mensaje corto, pero la confiabilidad es esencial. Para estas aplicaciones se puede proporcionar el servicio de datagramas confirmados. Es como enviar una carta certificada y solicitar una confirmaci\u00f3n de recepci\u00f3n. Cuando \u00e9sta regresa, el emisor est\u00e1 absolutamente seguro de que la carta se ha entregado a la parte destinada y no se ha perdido durante el trayecto. Otro servicio m\u00e1s es el de solicitud-respuesta. En este servicio el emisor transmite un solo datagrama que contiene una solicitud; a continuaci\u00f3n el servidor env\u00eda la respuesta. Por ejemplo, una solicitud a la biblioteca local preguntando d\u00f3nde se habla uighur cae dentro de esta categor\u00eda. El esquema de solicitud-respuesta se usa com\u00fanmente para implementar la comunicaci\u00f3n en el modelo cliente-servidor: el cliente emite una solicitud y el servidor la responde. La figura 1-16 resume los tipos de servicios que se acaban de exponer. Servicio\nNo orientado a la conexi\u00f3n\n3442441 3442441\nOrientado a la conexi\u00f3n\nFlujo confiable de mensajes\nEjemplo Secuencia de p\u00e1ginas\nFlujo confiable de bytes\nInicio de sesi\u00f3n remoto\nConexi\u00f3n no confiable\nVoz digitalizada\nDatagrama no confiable\nCorreo electr\u00f3nico basura\nDatagrama confirmado\nCorreo certificado\nSolicitud-respuesta\nConsulta de base de datos\nFigura 1-16. Seis tipos de servicio diferentes.\nEl concepto del uso de la comunicaci\u00f3n no confiable podr\u00eda ser confuso al principio. Despu\u00e9s de todo, en realidad, \u00bfpor qu\u00e9 preferir\u00eda alguien la comunicaci\u00f3n no confiable a la comunicaci\u00f3n\n34\nINTRODUCCI\u00d3N\nCAP. 1\nconfiable? Antes que nada, la comunicaci\u00f3n confiable (en nuestro sentido, es decir, con confirmaci\u00f3n de la recepci\u00f3n) podr\u00eda no estar disponible. Por ejemplo, Ethernet no proporciona comunicaci\u00f3n confiable. Ocasionalmente, los paquetes se pueden da\u00f1ar en el tr\u00e1nsito. Toca al protocolo m\u00e1s alto enfrentar este problema. En segundo lugar, los retardos inherentes al servicio confiable podr\u00edan ser inaceptables, en particular para aplicaciones en tiempo real como multimedia. \u00c9stas son las razones de que coexistan la comunicaci\u00f3n no confiable y la confiable.\n1.3.4 Primitivas de servicio Un servicio se especifica formalmente como un conjunto de primitivas (operaciones) disponibles a un proceso de usuario para que acceda al servicio. Estas primitivas le indican al servicio que desempe\u00f1e alguna acci\u00f3n o reporte sobre una acci\u00f3n que ha tomado una entidad igual. Si la pila de protocolos se ubica en el sistema operativo, como suele suceder, por lo general las primitivas son llamadas al sistema. Estas llamadas provocan un salto al modo de kernel, que entonces cede el control de la m\u00e1quina al sistema operativo para enviar los paquetes necesarios. El conjunto de primitivas disponible depende de la naturaleza del servicio que se va a proporcionar. Las primitivas de servicio orientado a la conexi\u00f3n son diferentes de las del servicio no orientado a la conexi\u00f3n. Como un ejemplo m\u00ednimo de las primitivas para servicio que se podr\u00edan proporcionar para implementar un flujo de bytes confiable en un ambiente cliente-servidor, considere las primitivas listadas en la figura 1-17.\nPrimitiva LISTEN\nSignificado Bloquea en espera de una conexi\u00f3n entrante\nCONNECT\nEstablece una conexi\u00f3n con el igual en espera\nRECEIVE\nBloquea en espera de un mensaje entrante\nSEND\nEnv\u00eda un mensaje al igual\nDISCONNECT\nDa por terminada una conexi\u00f3n\nFigura 1-17. Cinco primitivas de servicio para la implementaci\u00f3n de un servicio simple orientado a la conexi\u00f3n.\nEstas primitivas se podr\u00edan usar como sigue. En primer lugar, el servidor ejecuta LISTEN para indicar que est\u00e1 preparado para aceptar las conexiones entrantes. Una manera com\u00fan de implementar LISTEN es hacer que bloquee la llamada al sistema. Despu\u00e9s de ejecutar la primitiva, el proceso del servidor se bloquea hasta que aparece una solicitud de conexi\u00f3n. A continuaci\u00f3n, el proceso del cliente ejecuta CONNECT para establecer una conexi\u00f3n con el servidor. La llamada CONNECT necesita especificar a qui\u00e9n conecta con qui\u00e9n, as\u00ed que podr\u00eda tener un par\u00e1metro que diera la direcci\u00f3n del servidor. El sistema operativo, en general, env\u00eda un paquete al igual solicit\u00e1ndole que se conecte, como se muestra en (1) en la figura 1-18. El proceso del cliente se suspende hasta que haya una respuesta. Cuando el paquete llega al servidor, es procesado ah\u00ed por el sistema operativo. Cuando el sistema ve que el paquete es una solicitud de\nSEC. 1.3\n35\nSOFTWARE DE REDES\nconexi\u00f3n, verifica si hay un escuchador. En ese caso hace dos cosas: desbloquea al escuchador y env\u00eda de vuelta una confirmaci\u00f3n de recepci\u00f3n (2). La llegada de esta confirmaci\u00f3n libera entonces al cliente. En este punto tanto el cliente como el servidor est\u00e1n en ejecuci\u00f3n y tienen establecida una conexi\u00f3n. Es importante observar que la confirmaci\u00f3n de recepci\u00f3n (2) es generada por el c\u00f3digo del protocolo mismo, no en respuesta a una primitiva al nivel de usuario. Si llega una solicitud de conexi\u00f3n y no hay un escuchador, el resultado es indefinido. En algunos sistemas el paquete podr\u00eda ser puesto en cola durante un breve tiempo en espera de un LISTEN. La analog\u00eda obvia entre este protocolo y la vida real es un consumidor (cliente) que llama al gerente de servicios a clientes de una empresa. El gerente de servicios empieza por estar cerca del tel\u00e9fono en caso de que \u00e9ste suene. Entonces el cliente hace la llamada. Cuando el gerente levanta el tel\u00e9fono se establece la conexi\u00f3n. M\u00e1quina cliente Proceso del cliente\n(1) Solicitud de conexi\u00f3n (2) ACK\nM\u00e1quina servidor\n(3) Solicitud de datos Llamadas de sistema\nSistema operativo\n(4) Respuesta (5) Desconecta (6) Desconecta\nKernel\nPila de Controproto- ladores colos\nProceso del servidor Kernel\nPila de Controproto- ladores colos\nFigura 1-18. Paquetes enviados en una interacci\u00f3n simple cliente-servidor sobre una red orientada a la conexi\u00f3n.\nEl paso siguiente es que el servidor ejecute RECEIVE para prepararse para aceptar la primera solicitud. Normalmente, el servidor hace esto de inmediato en cuanto est\u00e1 libre de LISTEN, antes de que la confirmaci\u00f3n de recepci\u00f3n pueda volver al cliente. La llamada RECEIVE bloquea al servidor. Entonces el cliente ejecuta SEND para transmitir sus solicitudes (3) seguidas de la ejecuci\u00f3n de RECEIVE para obtener la respuesta. La llegada del paquete de solicitud a la m\u00e1quina servidor desbloquea el proceso del servidor para que pueda procesar la solicitud. Una vez hecho su trabajo, utiliza SEND para devolver la respuesta al cliente (4). La llegada de este paquete desbloquea al cliente, que ahora puede revisar la respuesta. Si el cliente tiene solicitudes adicionales las puede hacer ahora. Si ha terminado, puede utilizar DISCONNECT para finalizar la conexi\u00f3n. Por lo com\u00fan, un DISCONNECT inicial es una llamada de bloqueo, que suspende al cliente y env\u00eda un paquete al servidor en el cual le indica que ya no es necesaria la conexi\u00f3n (5). Cuando el servidor recibe el paquete tambi\u00e9n emite un DISCONNECT, enviando la confirmaci\u00f3n de recepci\u00f3n al cliente y terminando la conexi\u00f3n. Cuando el paquete del servidor (6) llega a la m\u00e1quina cliente, el proceso del cliente se libera y finaliza la conexi\u00f3n. En pocas palabras, \u00e9sta es la manera en que funciona la comunicaci\u00f3n orientada a la conexi\u00f3n.\n36\nINTRODUCCI\u00d3N\nCAP. 1\nDesde luego, no todo es tan sencillo. Hay muchas cosas que pueden fallar. La temporizaci\u00f3n puede estar mal (por ejemplo, CONNECT se hace antes de LISTEN), se pueden perder paquetes, etc\u00e9tera. M\u00e1s adelante veremos en detalle estos temas, pero por el momento la figura 1-18 resume c\u00f3mo podr\u00eda funcionar la comunicaci\u00f3n cliente-servidor en una red orientada a la conexi\u00f3n. Dado que se requieren seis paquetes para completar este protocolo, cabr\u00eda preguntarse por qu\u00e9 no se usa en su lugar un protocolo no orientado a la conexi\u00f3n. La respuesta es que en un mundo perfecto podr\u00eda utilizarse, en cuyo caso bastar\u00edan dos paquetes: uno para la solicitud y otro para la respuesta. Sin embargo, en el caso de mensajes grandes en cualquier direcci\u00f3n (por ejemplo, en un archivo de megabytes), errores de transmisi\u00f3n y paquetes perdidos, la situaci\u00f3n cambia. Si la respuesta constara de cientos de paquetes, algunos de los cuales se podr\u00edan perder durante la transmisi\u00f3n, \u00bfc\u00f3mo sabr\u00eda el cliente si se han perdido algunas piezas? \u00bfC\u00f3mo podr\u00eda saber que el \u00faltimo paquete que recibi\u00f3 fue realmente el \u00faltimo que se envi\u00f3? Suponga que el cliente esperaba un segundo archivo. \u00bfC\u00f3mo podr\u00eda saber que el paquete 1 del segundo archivo de un paquete 1 perdido del primer archivo que de pronto apareci\u00f3 va en camino al cliente? Para abreviar, en el mundo real un simple protocolo de solicitud-respuesta en una red no confiable suele ser inadecuado. En el cap\u00edtulo 3 estudiaremos en detalle una variedad de protocolos que soluciona \u00e9stos y otros problemas. Por el momento, baste decir que a veces es muy conveniente tener un flujo de bytes ordenado y confiable entre procesos.\n1.3.5 Relaci\u00f3n de servicios a protocolos Servicios y protocolos son conceptos distintos, aunque con frecuencia se confunden. Sin embargo, esta distinci\u00f3n es tan importante que por esa raz\u00f3n ponemos \u00e9nfasis de nuevo en ese punto. Un servicio es un conjunto de primitivas (operaciones) que una capa proporciona a la capa que est\u00e1 sobre ella. El servicio define qu\u00e9 operaciones puede realizar la capa en beneficio de sus usuarios, pero no dice nada de c\u00f3mo se implementan tales operaciones. Un servicio est\u00e1 relacionado con la interfaz entre dos capas, donde la capa inferior es la que provee el servicio y la superior, quien lo recibe. Un protocolo, en contraste, es un conjunto de reglas que rigen el formato y el significado de los paquetes, o mensajes, que se intercambiaron las entidades iguales en una capa. Las entidades utilizan protocolos para implementar sus definiciones del servicio. Son libres de cambiar sus protocolos cuando lo deseen, siempre y cuando no cambie el servicio visible a sus usuarios. De esta manera, el servicio y el protocolo no dependen uno del otro. En otras palabras, los servicios se relacionan con las interacciones entre capas, como se ilustra en la figura 1-19. En contraste, los protocolos se relacionan con los paquetes enviados entre entidades iguales de m\u00e1quinas diferentes. Es importante no confundir estos dos conceptos. Vale la pena hacer una analog\u00eda con los lenguajes de programaci\u00f3n. Un servicio es como un tipo de datos abstractos o un objeto en un lenguaje orientado a objetos. Define operaciones que se deben realizar en un objeto pero no especifica c\u00f3mo se implementan estas operaciones. Un protocolo se relaciona con la implementaci\u00f3n del servicio y, como tal, el usuario del servicio no puede verlo.\nSEC. 1.4\n37\nMODELOS DE REFERENCIA Capa k + 1\nCapa k + 1 Servicio proporcionado por la capa k Capa k\nProtocolo\nCapa k - 1\nCapa k\nCapa k - 1\nFigura 1-19. La relaci\u00f3n entre un servicio y un protocolo.\nMuchos protocolos antiguos no distingu\u00edan el servicio del protocolo. En efecto, una capa t\u00edpica podr\u00eda haber tenido una primitiva de servicio SEND PACKET y el usuario prove\u00eda un apuntador a un paquete ensamblado totalmente. Este arreglo significa que el usuario pod\u00eda ver de inmediato todos los cambios del protocolo. En la actualidad, la mayor\u00eda de los dise\u00f1adores de redes se\u00f1alan a este tipo de dise\u00f1o como un error grave.\n1.4 MODELOS DE REFERENCIA Ahora que hemos visto en teor\u00eda las redes con capas, es hora de ver algunos ejemplos. En las dos secciones siguientes veremos dos arquitecturas de redes importantes: los modelos de referencia OSI y TCP/IP. Aunque los protocolos asociados con el modelo OSI ya casi no se usan, el modelo en s\u00ed es muy general y a\u00fan es v\u00e1lido, y las caracter\u00edsticas tratadas en cada capa a\u00fan son muy importantes. El modelo TCP/IP tiene las propiedades opuestas: el modelo en s\u00ed no se utiliza mucho pero los protocolos s\u00ed. Por estas razones analizaremos con detalle ambos modelos. Adem\u00e1s, a veces podemos aprender m\u00e1s de las fallas que de los aciertos.\n1.4.1 El modelo de referencia OSI El modelo OSI se muestra en la figura 1-20 (sin el medio f\u00edsico). Este modelo est\u00e1 basado en una propuesta desarrollada por la ISO (Organizaci\u00f3n Internacional de Est\u00e1ndares) como un primer paso hacia la estandarizaci\u00f3n internacional de los protocolos utilizados en varias capas (Day y Zimmermann, 1983). Fue revisado en 1995 (Day, 1995). El modelo se llama OSI (Interconexi\u00f3n de Sistemas Abiertos) de ISO porque tiene que ver con la conexi\u00f3n de sistemas abiertos, es decir, sistemas que est\u00e1n abiertos a la comunicaci\u00f3n con otros sistemas. Para abreviar, lo llamaremos modelo OSI. El modelo OSI tiene siete capas. Podemos resumir brevemente los principios que se aplicaron para llegar a dichas capas:\n38\nINTRODUCCI\u00d3N\nCAP. 1\n1. Una capa se debe crear donde se necesite una abstracci\u00f3n diferente. 2. Cada capa debe realizar una funci\u00f3n bien definida. 3. La funci\u00f3n de cada capa se debe elegir con la intenci\u00f3n de definir protocolos estandarizados internacionalmente. 4. Los l\u00edmites de las capas se deben elegir a fin de minimizar el flujo de informaci\u00f3n a trav\u00e9s de las interfaces. 5. La cantidad de capas debe ser suficientemente grande para no tener que agrupar funciones distintas en la misma capa y lo bastante peque\u00f1a para que la arquitectura no se vuelva inmanejable. A continuaci\u00f3n analizaremos una por una cada capa del modelo, comenzando con la capa inferior. Observe que el modelo OSI no es en s\u00ed una arquitectura de red, debido a que no especifica los servicios y protocolos exactos que se utilizar\u00e1n en cada capa. S\u00f3lo indica lo que debe hacer cada capa. Sin embargo, ISO tambi\u00e9n ha producido est\u00e1ndares para todas las capas, aunque \u00e9stos no son parte del modelo de referencia mismo. Cada uno se ha publicado como un est\u00e1ndar internacional separado. La capa f\u00edsica En esta capa se lleva a cabo la transmisi\u00f3n de bits puros a trav\u00e9s de un canal de comunicaci\u00f3n. Los aspectos del dise\u00f1o implican asegurarse de que cuando un lado env\u00eda un bit 1, \u00e9ste se reciba en el otro lado como tal, no como bit 0. Las preguntas t\u00edpicas aqu\u00ed son: \u00bfcu\u00e1ntos voltios se deben emplear para representar un 1 y cu\u00e1ntos para representar un 0?, \u00bfcu\u00e1ntos nanosegundos dura un bit?, \u00bfla transmisi\u00f3n se debe llevar a cabo en ambas direcciones al mismo tiempo?, \u00bfc\u00f3mo se establece la conexi\u00f3n inicial y c\u00f3mo se finaliza cuando ambos lados terminan?, \u00bfcu\u00e1ntos pines tiene un conector de red y para qu\u00e9 se utiliza cada uno? Los aspectos de dise\u00f1o tienen que ver mucho con interfaces mec\u00e1nicas, el\u00e9ctricas y de temporizaci\u00f3n, adem\u00e1s del medio f\u00edsico de transmisi\u00f3n, que est\u00e1 bajo la capa f\u00edsica. La capa de enlace de datos La tarea principal de esta capa es transformar un medio de transmisi\u00f3n puro en una l\u00ednea de comunicaci\u00f3n que, al llegar a la capa de red, aparezca libre de errores de transmisi\u00f3n. Logra esta tarea haciendo que el emisor fragmente los datos de entrada en tramas de datos (t\u00edpicamente, de algunos cientos o miles de bytes) y transmitiendo las tramas de manera secuencial. Si el servicio es confiable, el receptor confirma la recepci\u00f3n correcta de cada trama devolviendo una trama de confirmaci\u00f3n de recepci\u00f3n. Otra cuesti\u00f3n que surge en la capa de enlace de datos (y en la mayor\u00eda de las capas superiores) es c\u00f3mo hacer que un transmisor r\u00e1pido no sature de datos a un receptor lento. Por lo general se necesita un mecanismo de regulaci\u00f3n de tr\u00e1fico que indique al transmisor cu\u00e1nto espacio de b\u00fafer tiene el receptor en ese momento. Con frecuencia, esta regulaci\u00f3n de flujo y el manejo de errores est\u00e1n integrados.\nSEC. 1.4\n39\nMODELOS DE REFERENCIA\nCapa\nNombre de la unidad intercambiada Aplicaci\u00f3n\nProtocolo de aplicaci\u00f3n\nAplicaci\u00f3n\nAPDU\nPresentaci\u00f3n\nPPDU\nSesi\u00f3n\nSPDU\nTransporte\nTPDU\nInterfaz Presentaci\u00f3n\nProtocolo de presentaci\u00f3n\nProtocolo de sesi\u00f3n Sesi\u00f3n\nProtocolo de transporte Transporte L\u00edmite de subred de comunicaci\u00f3n Protocolo de subred interna Red\nRed\nRed\nRed\nEnlace de datos\nEnlace de datos\nEnlace de datos\nEnlace de datos\nF\u00edsica\nF\u00edsica\nF\u00edsica\nF\u00edsica\nHost A\nEnrutador\nEnrutador\nHost B\nPaquete\nTrama\nBit\nProtocolo de enrutador-host de la capa de red Protocolo de enrutador-host de la capa de enlace de datos Protocolo de enrutador-host de la capa f\u00edsica\nFigura 1-20. El modelo de referencia OSI.\nLas redes de difusi\u00f3n tienen un aspecto adicional en la capa de enlace de datos: c\u00f3mo controlar el acceso al canal compartido. Una subcapa especial de la capa de enlace de datos, la subcapa de control de acceso al medio, se encarga de este problema.* La capa de red Esta capa controla las operaciones de la subred. Un aspecto clave del dise\u00f1o es determinar c\u00f3mo se enrutan los paquetes desde su origen a su destino. Las rutas pueden estar basadas en tablas est\u00e1ticas (enrutamiento est\u00e1tico) codificadas en la red y que rara vez cambian.** *En esta capa se define el direccionamiento f\u00edsico, que permite a los hosts identificar las tramas destinadas a ellos. Este direccionamiento es \u00fanico, identifica el hardware de red que se est\u00e1 usando y el fabricante, y no se puede cambiar. (N. del R.T.) **En el enrutamiento est\u00e1tico la ruta que seguir\u00e1n los paquetes hacia un destino particular es determinada por el administrador de la red. Las rutas tambi\u00e9n pueden determinarse cuando los enrutadores intercambian informaci\u00f3n de enrutamiento (enrutamiento din\u00e1mico). En este tipo de enrutamiento los enrutadores deciden la ruta que seguir\u00e1n los paquetes hacia un destino sin la intervenci\u00f3n del administrador de red. En el enrutamiento din\u00e1mico las rutas pueden cambiar para reflejar la topolog\u00eda o el estado de la red. (N. del R.T.)\n40\nINTRODUCCI\u00d3N\nCAP. 1\nSi hay demasiados paquetes en la subred al mismo tiempo, se interpondr\u00e1n en el camino unos y otros, lo que provocar\u00e1 que se formen cuellos de botella. La responsabilidad de controlar esta congesti\u00f3n tambi\u00e9n pertenece a la capa de red, aunque esta responsabilidad tambi\u00e9n puede ser compartida por la capa de transmisi\u00f3n. De manera m\u00e1s general, la calidad del servicio proporcionado (retardo, tiempo de tr\u00e1nsito, inestabilidad, etc\u00e9tera) tambi\u00e9n corresponde a la capa de red. Cuando un paquete tiene que viajar de una red a otra para llegar a su destino, pueden surgir muchos problemas. El direccionamiento utilizado por la segunda red podr\u00eda ser diferente del de la primera.* La segunda podr\u00eda no aceptar todo el paquete porque es demasiado largo. Los protocolos podr\u00edan ser diferentes, etc\u00e9tera. La capa de red tiene que resolver todos estos problemas para que las redes heterog\u00e9neas se interconecten. En las redes de difusi\u00f3n, el problema de enrutamiento es simple, por lo que la capa de red a veces es delgada o, en ocasiones, ni siquiera existe. La capa de transporte La funci\u00f3n b\u00e1sica de esta capa es aceptar los datos provenientes de las capas superiores, dividirlos en unidades m\u00e1s peque\u00f1as si es necesario, pasar \u00e9stas a la capa de red y asegurarse de que todas las piezas lleguen correctamente al otro extremo. Adem\u00e1s, todo esto se debe hacer con eficiencia y de manera que a\u00edsle a las capas superiores de los cambios inevitables en la tecnolog\u00eda del hardware. La capa de transporte tambi\u00e9n determina qu\u00e9 tipo de servicio proporcionar a la capa de sesi\u00f3n y, finalmente, a los usuarios de la red. El tipo de conexi\u00f3n de transporte m\u00e1s popular es un canal punto a punto libre de errores que entrega mensajes o bytes en el orden en que se enviaron. Sin embargo, otros tipos de servicio de transporte posibles son la transportaci\u00f3n de mensajes aislados, que no garantiza el orden de entrega, y la difusi\u00f3n de mensajes a m\u00faltiples destinos. El tipo de servicio se determina cuando se establece la conexi\u00f3n. (Como observaci\u00f3n, es imposible alcanzar un canal libre de errores; lo que se quiere dar a entender con este t\u00e9rmino es que la tasa de error es tan baja que se puede ignorar en la pr\u00e1ctica.) La capa de transporte es una verdadera conexi\u00f3n de extremo a extremo, en toda la ruta desde el origen hasta el destino. En otras palabras, un programa en la m\u00e1quina de origen lleva a cabo una conversaci\u00f3n con un programa similar en la m\u00e1quina de destino, usando los encabezados de mensaje y los mensajes de control. En las capas inferiores, los protocolos operan entre cada m\u00e1quina y sus vecinos inmediatos, y no entre las m\u00e1quinas de los extremos, la de origen y la de destino, las cuales podr\u00edan estar separadas por muchos enrutadores. En la figura 1-20 se muestra la diferencia entre las capas 1 a 3, que est\u00e1n encadenadas, y las capas 4 a 7, que operan de extremo a extremo. La capa de sesi\u00f3n Esta capa permite que los usuarios de m\u00e1quinas diferentes establezcan sesiones entre ellos. Las sesiones ofrecen varios servicios, como el control de di\u00e1logo (dar seguimiento de a qui\u00e9n le toca *El direccionamiento usado en esta capa es un direccionamiento l\u00f3gico, diferente al direccionamiento f\u00edsico empleado en la capa de enlace de datos. Este direccionamiento l\u00f3gico permite que una interfaz o puerto pueda tener m\u00e1s de una direcci\u00f3n de capa de red. (N. del R.T.)\nSEC. 1.4\nMODELOS DE REFERENCIA\n41\ntransmitir), administraci\u00f3n de token (que impide que las dos partes traten de realizar la misma operaci\u00f3n cr\u00edtica al mismo tiempo) y sincronizaci\u00f3n (la adici\u00f3n de puntos de referencia a transmisiones largas para permitirles continuar desde donde se encontraban despu\u00e9s de una ca\u00edda). La capa de presentaci\u00f3n A diferencia de las capas inferiores, a las que les corresponde principalmente mover bits, a la capa de presentaci\u00f3n le corresponde la sintaxis y la sem\u00e1ntica de la informaci\u00f3n transmitida. A fin de que las computadoras con diferentes representaciones de datos se puedan comunicar, las estructuras de datos que se intercambiar\u00e1n se pueden definir de una manera abstracta, junto con una codificaci\u00f3n est\u00e1ndar para su uso \u201cen el cable\u201d. La capa de presentaci\u00f3n maneja estas estructuras de datos abstractas y permite definir e intercambiar estructuras de datos de un nivel m\u00e1s alto (por ejemplo, registros bancarios). La capa de aplicaci\u00f3n Esta capa contiene varios protocolos que los usuarios requieren con frecuencia. Un protocolo de aplicaci\u00f3n de amplio uso es HTTP (Protocolo de Transferencia de Hipertexto), que es la base de World Wide Web. Cuando un navegador desea una p\u00e1gina Web, utiliza este protocolo para enviar al servidor el nombre de dicha p\u00e1gina. A continuaci\u00f3n, el servidor devuelve la p\u00e1gina. Otros protocolos de aplicaci\u00f3n se utilizan para la transferencia de archivos, correo electr\u00f3nico y noticias en la red.\n1.4.2 El modelo de referencia TCP/IP Tratemos ahora el modelo de referencia usado en la abuela de todas las redes de computadoras de \u00e1rea amplia, ARPANET, y en su sucesora, la Internet mundial. Aunque daremos m\u00e1s adelante una breve historia de ARPANET, es \u00fatil mencionar algunos de sus aspectos ahora. ARPANET fue una red de investigaci\u00f3n respaldada por el DoD (Departamento de Defensa de Estados Unidos). Con el tiempo, conect\u00f3 cientos de universidades e instalaciones gubernamentales mediante l\u00edneas telef\u00f3nicas alquiladas. Posteriormente, cuando se agregaron redes satelitales y de radio, los protocolos existentes tuvieron problemas para interactuar con ellas, por lo que se necesitaba una nueva arquitectura de referencia. De este modo, la capacidad para conectar m\u00faltiples redes en una manera s\u00f3lida fue una de las principales metas de dise\u00f1o desde sus inicios. M\u00e1s tarde, esta arquitectura se lleg\u00f3 a conocer como el modelo de referencia TCP/IP, de acuerdo con sus dos protocolos primarios. Su primera definici\u00f3n fue en (Cerf y Kahn, 1974). Posteriormente se defini\u00f3 en (Leiner y cols., 1985). La filosof\u00eda del dise\u00f1o que respalda al modelo se explica en (Clark, 1988). Ante el temor del DoD de que algunos de sus valiosos hosts, enrutadores y puertas de enlace de interredes explotaran en un instante, otro objetivo fue que la red pudiera sobrevivir a la p\u00e9rdida de hardware de la subred, sin que las conversaciones existentes se interrumpieran. En otras palabras, el DoD quer\u00eda que las conexiones se mantuvieran intactas en tanto las m\u00e1quinas de origen\n42\nINTRODUCCI\u00d3N\nCAP. 1\ny destino estuvieran funcionando, aunque algunas de las m\u00e1quinas o l\u00edneas de transmisi\u00f3n intermedias quedaran fuera de operaci\u00f3n repentinamente. Adem\u00e1s, se necesitaba una arquitectura flexible debido a que se preve\u00edan aplicaciones con requerimientos divergentes, desde transferencia de archivos a transmisi\u00f3n de palabras en tiempo real. La capa de interred Todos estos requerimientos condujeron a la elecci\u00f3n de una red de conmutaci\u00f3n de paquetes basada en una capa de interred no orientada a la conexi\u00f3n. Esta capa, llamada capa de interred, es la pieza clave que mantiene unida a la arquitectura. Su trabajo es permitir que los hosts inyecten paquetes dentro de cualquier red y que \u00e9stos viajen a su destino de manera independiente (podr\u00eda ser en una red diferente). Tal vez lleguen en un orden diferente al que fueron enviados, en cuyo caso las capas m\u00e1s altas deber\u00e1n ordenarlos, si se desea una entrega ordenada. Observe que aqu\u00ed el concepto \u201cinterred\u201d se utiliza en un sentido gen\u00e9rico, aun cuando esta capa se presente en Internet. Aqu\u00ed la analog\u00eda es con el sistema de correo tradicional. Una persona puede depositar una secuencia de cartas internacionales en un buz\u00f3n y, con un poco de suerte, la mayor\u00eda de ellas se entregar\u00e1 en la direcci\u00f3n correcta del pa\u00eds de destino. Es probable que durante el trayecto, las cartas viajen a trav\u00e9s de una o m\u00e1s puertas de enlace de correo internacional, pero esto es transparente para los usuarios. Adem\u00e1s, para los usuarios tambi\u00e9n es transparente el hecho de que cada pa\u00eds (es decir, cada red) tiene sus propios timbres postales, tama\u00f1os preferidos de sobre y reglas de entrega. La capa de interred define un paquete de formato y protocolo oficial llamado IP (Protocolo de Internet). El trabajo de la capa de interred es entregar paquetes IP al destinatario. Aqu\u00ed, el enrutamiento de paquetes es claramente el aspecto principal, con el prop\u00f3sito de evitar la congesti\u00f3n. Por estas razones es razonable decir que la capa de interred del modelo TCP/IP es similar en funcionalidad a la capa de red del modelo OSI. La figura 1-21 muestra esta correspondencia. La capa de transporte La capa que est\u00e1 arriba de la capa de interred en el modelo TCP/IP se llama capa de transporte. Est\u00e1 dise\u00f1ada para permitir que las entidades iguales en los hosts de origen y destino puedan llevar a cabo una conversaci\u00f3n, tal como lo hace la capa de transporte OSI. Aqu\u00ed se han definido dos protocolos de transporte de extremo a extremo. El primero, TCP (Protocolo de Control de Transmisi\u00f3n), es un protocolo confiable, orientado a la conexi\u00f3n, que permite que un flujo de bytes que se origina en una m\u00e1quina se entregue sin errores en cualquier otra m\u00e1quina en la interred. Divide el flujo de bytes entrantes en mensajes discretos y pasa cada uno de ellos a la capa de interred. En el destino, el proceso TCP receptor reensambla en el flujo de salida los mensajes recibidos. TCP tambi\u00e9n maneja el control de flujo para asegurarse de que un emisor r\u00e1pido no sature a un receptor lento con m\u00e1s mensajes de los que puede manejar.\nSEC. 1.4\n43\nMODELOS DE REFERENCIA OSI\nTCP/IP\n7\nAplicaci\u00f3n\n6\nPresentaci\u00f3n\n5\nSesi\u00f3n\n4\nTransporte\nTransporte\n3\nRed\nInterred\n2\nEnlace de datos\nHost a red\n1\nF\u00edsica\nAplicaci\u00f3n No las hay en el modelo\nFigura 1-21. El modelo de referencia TCP/IP.\nEl segundo protocolo de esta capa, UDP (Protocolo de Datagrama de Usuario), es un protocolo no confiable y no orientado a la conexi\u00f3n para aplicaciones que no desean la secuenciaci\u00f3n o el control de flujo de TCP y que desean proporcionar el suyo. Tambi\u00e9n tiene un amplio uso en consultas \u00fanicas de solicitud-respuesta de tipo cliente-servidor en un solo env\u00edo, as\u00ed como aplicaciones en las que la entrega puntual es m\u00e1s importante que la precisa, como en la transmisi\u00f3n de voz o v\u00eddeo. La relaci\u00f3n de IP, TCP y UDP se muestra en la figura 1-22. Puesto que el modelo se desarroll\u00f3, se ha implementado IP en muchas otras redes. Capa (nombres OSI)\nRedes\n34444244441321\nProtocolos\nTELNET\nFTP\nSMTP\nTCP\nDNS\nTransporte\nUDP\nIP\nARPANET\nSATNET\nAplicaci\u00f3n\nRed Radio de paquete\nLAN\nF\u00edsica + enlace de datos\nFigura 1-22. Protocolos y redes en el modelo TCP/IP inicialmente.\nLa capa de aplicaci\u00f3n El modelo TCP/IP no tiene capas de sesi\u00f3n ni de presentaci\u00f3n. No se han necesitado, por lo que no se incluyen. La experiencia con el modelo OSI ha probado que este punto de vista es correcto: son de poco uso para la mayor\u00eda de las aplicaciones.\n44\nINTRODUCCI\u00d3N\nCAP. 1\nArriba de la capa de transporte est\u00e1 la capa de aplicaci\u00f3n. Contiene todos los protocolos de nivel m\u00e1s alto. Los primeros incluyeron una terminal virtual (TELNET), transferencia de archivos (FTP) y correo electr\u00f3nico (SMTP), como se muestra en la figura 1-22. El protocolo de terminal virtual permite que un usuario en una m\u00e1quina se registre en una m\u00e1quina remota y trabaje ah\u00ed. El protocolo de transferencia de archivos proporciona una manera de mover con eficiencia datos de una m\u00e1quina a otra. El correo electr\u00f3nico era originalmente s\u00f3lo un tipo de transferencia de archivos, pero m\u00e1s tarde se desarroll\u00f3 un protocolo especializado (SMTP) para \u00e9l. Con el tiempo, se han agregado muchos otros protocolos: DNS (Sistema de Nombres de Dominio) para la resoluci\u00f3n de nombres de host en sus direcciones de red; NNTP, para transportar los art\u00edculos de noticias de USENET; HTTP, para las p\u00e1ginas de World Wide Web, y muchos otros. La capa host a red Debajo de la capa de interred hay un gran vac\u00edo. El modelo de referencia TCP/IP en realidad no dice mucho acerca de lo que pasa aqu\u00ed, excepto que puntualiza que el host se tiene que conectar a la red mediante el mismo protocolo para que le puedan enviar paquetes IP. Este protocolo no est\u00e1 definido y var\u00eda de un host a otro y de una red a otra. Este tema rara vez se trata en libros y art\u00edculos sobre TCP/IP.\n1.4.3 Comparaci\u00f3n entre los modelos de referencia OSI y TCP/IP Los modelos de referencia OSI y TCP/IP tienen mucho en com\u00fan. Los dos se basan en el concepto de una pila de protocolos independientes. Asimismo, la funcionalidad de las capas es muy parecida. Por ejemplo, en ambos modelos las capas que est\u00e1n arriba de, incluyendo a, la capa de transporte est\u00e1n ah\u00ed para proporcionar un servicio de transporte independiente de extremo a extremo a los procesos que desean comunicarse. Estas capas forman el proveedor de transporte. De nuevo, en ambos modelos, las capas que est\u00e1n arriba de la de transporte son usuarias orientadas a la aplicaci\u00f3n del servicio de transporte. A pesar de estas similitudes fundamentales, los dos modelos tambi\u00e9n tienen muchas diferencias. En esta secci\u00f3n nos enfocaremos en las diferencias clave entre estos dos modelos de referencia. Es importante tener en cuenta que estamos comparando los modelos de referencia, no las pilas de protocolos correspondientes. M\u00e1s adelante explicaremos los protocolos. Si desea un libro dedicado a comparar y contrastar TCP/IP y OSI, vea (Piscitello y Chapin, 1993). Tres conceptos son b\u00e1sicos para el modelo OSI: 1. Servicios. 2. Interfaces. 3. Protocolos. Probablemente la contribuci\u00f3n m\u00e1s grande del modelo OSI es que hace expl\u00edcita la distinci\u00f3n entre estos tres conceptos. Cada capa desempe\u00f1a algunos servicios para la capa que est\u00e1 arriba de ella. La definici\u00f3n de servicio indica qu\u00e9 hace la capa, no la forma en que la entidad superior tiene acceso a ella, o c\u00f3mo funciona dicha capa. Define el aspecto sem\u00e1ntico de la capa.\nSEC. 1.4\nMODELOS DE REFERENCIA\n45\nLa interfaz de una capa indica a los procesos que est\u00e1n sobre ella c\u00f3mo accederla. Especifica cu\u00e1les son los par\u00e1metros y qu\u00e9 resultados se esperan. Incluso, no dice nada sobre c\u00f3mo funciona internamente la capa. Por \u00faltimo, una capa es quien debe decidir qu\u00e9 protocolos de iguales utilizar. Puede usar cualesquier protocolos que desee, en tanto consiga que se haga el trabajo (es decir, proporcione los servicios ofrecidos). Tambi\u00e9n puede cambiarlos cuando desee sin afectar el software de las capas superiores. Estas ideas encajan muy bien con las ideas modernas sobre la programaci\u00f3n orientada a objetos. Un objeto, como una capa, cuenta con un conjunto de m\u00e9todos (operaciones) que pueden ser invocados por procesos que no est\u00e9n en dicho objeto. La sem\u00e1ntica de estos m\u00e9todos define el conjunto de servicios que ofrece el objeto. Los par\u00e1metros y resultados de los m\u00e9todos forman la interfaz del objeto. El c\u00f3digo interno del objeto es su protocolo y no es visible o no tiene importancia fuera del objeto. Originalmente, el modelo TCP/IP no distingu\u00eda entre servicio, interfaz y protocolo, aunque las personas han tratado de readaptarlo con el prop\u00f3sito de hacerlo m\u00e1s parecido al OSI. Por ejemplo, los \u00fanicos servicios ofrecidos realmente por la capa de interred son SEND IP PACKET y RECEIVE IP PACKET. Como consecuencia, los protocolos del modelo OSI est\u00e1n mejor ocultos que los del modelo TCPI/IP y se pueden reemplazar f\u00e1cilmente conforme cambia la tecnolog\u00eda. La facilidad para realizar tales cambios es uno de los objetivos principales de tener protocolos en capas. El modelo de referencia OSI se vislumbr\u00f3 antes de que se inventaran los protocolos correspondientes. Esta clasificaci\u00f3n significa que el modelo no estaba dise\u00f1ado para un conjunto particular de protocolos, un hecho que lo hizo general. Una deficiencia de esta clasificaci\u00f3n es que los dise\u00f1adores no ten\u00edan mucha experiencia con el asunto y no ten\u00edan una idea concreta de qu\u00e9 funcionalidad poner en qu\u00e9 capa. Por ejemplo, originalmente la capa de enlace de datos s\u00f3lo trataba con redes de punto a punto. Cuando llegaron las redes de difusi\u00f3n, se tuvo que extender una nueva subcapa en el modelo. Cuando las personas empezaron a construir redes reales utilizando el modelo OSI y los protocolos existentes, se descubri\u00f3 que estas redes no coincid\u00edan con las especificaciones de los servicios solicitados (maravilla de maravillas), por lo que se tuvieron que integrar subcapas convergentes en el modelo para proporcionar un espacio para documentar las diferencias. Por \u00faltimo, el comit\u00e9 esperaba en un principio que cada pa\u00eds tuviera una red, controlada por el gobierno y que utilizara los protocolos OSI, pero nunca pensaron en la interconectividad de redes. Para no hacer tan larga la historia, las cosas no sucedieron como se esperaba. Con TCP/IP sucedi\u00f3 lo contrario: los protocolos llegaron primero y el modelo fue en realidad una descripci\u00f3n de los protocolos existentes. No hab\u00eda problemas para ajustar los protocolos al modelo. Encajaban a la perfecci\u00f3n. El \u00fanico problema era que el modelo no aceptaba otras pilas de protocolos. Como consecuencia, no era \u00fatil para describir otras redes que no fueran TCP/IP. Volviendo de los asuntos filos\u00f3ficos a los m\u00e1s espec\u00edficos, una diferencia patente entre los dos modelos es el n\u00famero de capas: el modelo OSI tiene siete y el TCP/IP s\u00f3lo cuatro. Los dos tienen capas de (inter)red, transporte y aplicaci\u00f3n, pero las otras capas son diferentes.\n46\nINTRODUCCI\u00d3N\nCAP. 1\nOtra diferencia est\u00e1 en el \u00e1rea de la comunicaci\u00f3n orientada a la conexi\u00f3n comparada con la no orientada a la conexi\u00f3n. El modelo OSI soporta ambas comunicaciones en la capa de red, pero s\u00f3lo la de comunicaci\u00f3n orientada a la conexi\u00f3n en la capa de transporte, donde es importante (porque el servicio de transporte es transparente para los usuarios). El modelo TCP/IP s\u00f3lo tiene un modo en la capa de red (no orientado a la conexi\u00f3n) pero soporta ambos modos en la capa de transporte, lo que da a los usuarios la oportunidad de elegir. Esta elecci\u00f3n es importante especialmente para protocolos sencillos de solicitud-respuesta.\n1.4.4 Cr\u00edtica al modelo OSI y los protocolos Ni el modelo OSI y sus protocolos ni el modelo TCP/IP y sus protocolos son perfectos. Se les pueden hacer, y se les han hecho, cr\u00edticas. En \u00e9sta y en la siguiente secci\u00f3n veremos algunas de estas cr\u00edticas. Empezaremos con el modelo OSI y m\u00e1s adelante examinaremos el modelo TCP/IP. En la \u00e9poca en la que se public\u00f3 la segunda edici\u00f3n de este libro (1989), a muchos expertos en el campo les pareci\u00f3 que el modelo OSI y sus protocolos iban a dominar el mundo y a desplazar a todos los dem\u00e1s. Eso no sucedi\u00f3. \u00bfPor qu\u00e9? Ser\u00eda \u00fatil echar un vistazo a algunas lecciones. \u00c9stas se pueden resumir as\u00ed: 1. Aparici\u00f3n inoportuna. 2. Mala tecnolog\u00eda. 3. Malas implementaciones. 4. Malas pol\u00edticas. Aparici\u00f3n inoportuna Primero veamos la raz\u00f3n n\u00famero uno: aparici\u00f3n inoportuna. El tiempo en que se establece un est\u00e1ndar es absolutamente cr\u00edtico para el \u00e9xito. David Clark, del M.I.T., tiene una teor\u00eda de est\u00e1ndares que llama apocalipsis de los dos elefantes, la cual se ilustra en la figura 1-23. Esta figura muestra la cantidad de actividad que rodea a un sujeto nuevo. Cuando se descubre primero el sujeto, hay una explosi\u00f3n de actividad de investigaci\u00f3n en forma de exposiciones, documentos y reuniones. Despu\u00e9s de un tiempo esta actividad disminuye, las empresas descubren el sujeto y surge la ola de miles de millones de d\u00f3lares de inversi\u00f3n. Es esencial que los est\u00e1ndares se escriban en el punto intermedio entre los dos \u201celefantes\u201d. Si los est\u00e1ndares se escriben demasiado pronto, antes de que se termine la investigaci\u00f3n, el tema podr\u00eda no estar entendido por completo; el resultado son malos est\u00e1ndares. Si se escriben demasiado tarde, varias empresas podr\u00edan haber hecho ya inversiones importantes en diversas maneras de hacer las cosas que los est\u00e1ndares han ignorado. Si el intervalo entre los dos elefantes es muy corto (porque cada cual tiene prisa por empezar), las personas que est\u00e1n desarrollando los est\u00e1ndares podr\u00edan fracasar.\nSEC. 1.4\nMODELOS DE REFERENCIA Inversi\u00f3n de miles de millones de d\u00f3lares\nInvestigaci\u00f3n\nActividad\n47\nEst\u00e1ndares\nTiempo\nFigura 1-23. El apocalipsis de los dos elefantes.\nAl parecer, los protocolos OSI est\u00e1ndar han sido vencidos. Los protocolos TCP/IP competidores ya eran ampliamente utilizados por las universidades investigadoras al momento en que aparecieron los protocolos OSI. Mientras la ola de los miles de millones de inversi\u00f3n a\u00fan no golpeaba, el mercado acad\u00e9mico era bastante grande para que los proveedores empezaran a hacer ofertas cautas de los productos TCP/IP. Cuando OSI lleg\u00f3, no quisieron soportar una segunda pila de protocolos hasta que se vieran forzados, por lo que no hubo ofertas iniciales. Puesto que cada empresa esperaba que la otra diera el primer paso, ninguna lo hizo y OSI nunca prosper\u00f3. Mala tecnolog\u00eda La segunda raz\u00f3n por la que OSI no tuvo \u00e9xito es que tanto el modelo como los protocolos tienen defectos. La elecci\u00f3n de las siete capas fue m\u00e1s pol\u00edtica que t\u00e9cnica, y dos de las capas (la de sesi\u00f3n y la de presentaci\u00f3n) est\u00e1n casi vac\u00edas, mientras que las otras dos (la de enlace de datos y la de red) est\u00e1n saturadas. El modelo OSI, junto con el servicio asociado de definiciones y protocolos, es extraordinariamente complejo. Si se apilan, los est\u00e1ndares impresos ocupan una fracci\u00f3n importante de un metro de papel. Incluso son dif\u00edciles de implementar y de operaci\u00f3n deficiente. En este contexto, nos viene a la mente un enigma propuesto por Paul Mockapetris y citado en (Rose, 1993): P: \u00bfQu\u00e9 obtiene cuando cruza un g\u00e1ngster con un est\u00e1ndar internacional? R: Alguien que le hace una oferta que usted no entiende. Adem\u00e1s de ser incomprensible, otro problema con OSI es que algunas funciones, como direccionamiento, control de flujo y control de errores, reaparecen una y otra vez en cada capa. Por\n48\nINTRODUCCI\u00d3N\nCAP. 1\nejemplo, Saltzer y cols. (1984) han apuntado que para ser efectivo el control de errores, se debe hacer en la capa superior, puesto que repetirlo una y otra vez en cada una de las capas inferiores suele ser innecesario e ineficaz. Malas implementaciones Ante la enorme complejidad del modelo y los protocolos, no es de sorprender que las implementaciones iniciales fueran grandes, pesadas y lentas. Todos los que lo intentaron fracasaron. No le tom\u00f3 mucho tiempo a las personas asociar OSI con \u201cbaja calidad\u201d. Aunque los productos mejoraron con el paso del tiempo, la imagen persisti\u00f3. En contraste, una de las primeras implementaciones de TCP/IP era parte de UNIX de Berkeley y fue bastante buena (sin mencionar que era gratis). Las personas pronto empezaron a utilizarla, lo que la llev\u00f3 a un uso mayor por la comunidad, y esto a su vez condujo a mejoras que la llevaron a un mayor uso en la comunidad. Aqu\u00ed la espiral fue ascendente en vez de descendente. Malas pol\u00edticas A causa de la implementaci\u00f3n inicial, muchas personas, sobre todo en el nivel acad\u00e9mico, pensaban que TCP/IP era parte de UNIX, y en la d\u00e9cada de 1980, UNIX no parec\u00eda tener paternidad alguna en la universidad. Por otra parte, se ten\u00eda la idea de que OSI ser\u00eda la criatura de los ministerios de telecomunicaci\u00f3n de Europa, de la comunidad europea y m\u00e1s tarde del gobierno de los Estados Unidos. Esta creencia era cierta en parte, pero no ayudaba mucho la idea de un manojo de bur\u00f3cratas gubernamentales intentando poner en marcha un est\u00e1ndar t\u00e9cnicamente inferior al mando de los investigadores y programadores pobres que estaban en las trincheras desarrollando realmente redes de computadoras. Algunas personas compararon este desarrollo con la ocasi\u00f3n en que IBM anunci\u00f3, en la d\u00e9cada de 1960, que PL/I era el lenguaje del futuro, o cuando m\u00e1s tarde el DoD correg\u00eda esto anunciando que en realidad era Ada.\n1.4.5 Cr\u00edtica del modelo de referencia TCP/IP El modelo de referencia TCP/IP y los protocolos tambi\u00e9n tienen sus problemas. En primer lugar, el modelo no distingue claramente los conceptos de servicio, interfaz y protocolo. Una buena ingenier\u00eda de software requiere la diferenciaci\u00f3n entre la especificaci\u00f3n y la implementaci\u00f3n, algo que OSI hace con mucho cuidado y que TCP/IP no hace. En consecuencia, el modelo TCP/IP no es una gu\u00eda para dise\u00f1ar redes nuevas mediante tecnolog\u00edas nuevas. En segundo lugar, el modelo TCP/IP no es general del todo y no est\u00e1 bien ajustado para describir ninguna pila de protocolos m\u00e1s que de TCP/IP. Por ejemplo, es completamente imposible tratar de utilizar el modelo TCP/IP para describir Bluetooth. En tercer lugar, la capa host a red no es en realidad una capa del todo en el sentido normal del t\u00e9rmino, como se utiliza en el contexto de los protocolos de capas. Es una interfaz (entre la capa de red y la de enlace de datos). La distinci\u00f3n entre una interfaz y una capa es crucial y nadie debe ser descuidado al respecto.\nSEC. 1.5\nREDES DE EJEMPLO\n49\nEn cuarto lugar, el modelo TCP/IP no distingue (ni menciona) las capas f\u00edsica y de enlace de datos. Son completamente diferentes. La capa f\u00edsica tiene que ver con las caracter\u00edsticas de transmisi\u00f3n de comunicaci\u00f3n por cable de cobre, por fibra \u00f3ptica e inal\u00e1mbrica. El trabajo de la capa de enlace de datos es delimitar el inicio y fin de las tramas y captarlas de uno a otro lado con el grado deseado de confiabilidad. Un modelo adecuado deber\u00eda incluir ambas como capas separadas. El modelo TCP/IP no hace esto. Por \u00faltimo, aunque los protocolos IP y TCP se idearon e implementaron con sumo cuidado, muchos de los dem\u00e1s protocolos fueron hechos con fines espec\u00edficos, producidos por lo general por estudiantes de licenciatura que los mejoraban hasta que se aburr\u00edan. Posteriormente, las implementaciones de tales protocolos se distribuyeron de manera gratuita, lo que dio como resultado un uso amplio y profundo y, por lo tanto, que fueran dif\u00edciles de reemplazar. Algunos de ellos ahora est\u00e1n en apuros. Por ejemplo, el protocolo de terminal virtual, TELNET, se dise\u00f1\u00f3 para una terminal de teletipo mec\u00e1nica de 10 caracteres por segundo. No sabe nada de interfaces gr\u00e1ficas de usuario ni de ratones. No obstante, 25 a\u00f1os m\u00e1s tarde a\u00fan tiene un amplio uso. En resumen, a pesar de sus problemas, el modelo OSI (excepto las capas de sesi\u00f3n y presentaci\u00f3n) ha probado ser excepcionalmente \u00fatil en la exposici\u00f3n de redes de computadoras. En contraste, los protocolos OSI no han sido muy populares. Sucede lo contrario con TCP/IP: el modelo es pr\u00e1cticamente inexistente, pero los protocolos tienen un amplio uso. En este libro utilizaremos un modelo OSI modificado pero nos concentraremos principalmente en el modelo TCP/IP y los protocolos relacionados, as\u00ed como en los nov\u00edsimos 802, SONET y Bluetooth. En efecto, utilizaremos el modelo h\u00edbrido de la figura 1-24 como marco de trabajo para este libro.\n5\nCapa de aplicaci\u00f3n\n4\nCapa de transporte\n3\nCapa de red\n2\nCapa de enlace de datos\n1\nCapa f\u00edsica\nFigura 1-24. Modelo de referencia h\u00edbrido que se usar\u00e1 en este libro.\n1.5 REDES DE EJEMPLO El tema de las redes de computadoras cubre muchos y diversos tipos de redes, grandes y peque\u00f1as, bien conocidas y no tan bien conocidas. Tiene diferentes objetivos, escalamientos y tecnolog\u00edas. En las siguientes secciones veremos algunos ejemplos para tener una idea de la variedad que se puede encontrar en el \u00e1rea de la conectividad de redes.\n50\nINTRODUCCI\u00d3N\nCAP. 1\nEmpezaremos con Internet, que es probablemente la red m\u00e1s conocida y veremos su historia, evoluci\u00f3n y tecnolog\u00eda. Luego consideraremos ATM, cuyo uso es frecuente en el n\u00facleo de redes (telef\u00f3nicas) grandes. Desde el punto de vista t\u00e9cnico difiere muy poco de Internet, y contrasta gratamente. Despu\u00e9s presentaremos Ethernet, la red de \u00e1rea local dominante. Y, por \u00faltimo, veremos el IEEE 802.11, el est\u00e1ndar para las LANs inal\u00e1mbricas.\n1.5.1 Internet Internet no es del todo una red, sino un inmenso conjunto de redes diferentes que usan ciertos protocolos comunes y proporcionan ciertos servicios comunes. Es un sistema poco com\u00fan porque nadie lo plane\u00f3 y nadie lo controla. Para entenderlo mejor, empecemos desde el principio y veamos c\u00f3mo se desarroll\u00f3 y por qu\u00e9. Si desea leer una historia maravillosa sobre Internet, recomendamos ampliamente el libro de John Naughton (2000). Es uno de esos raros libros cuya lectura no s\u00f3lo es divertida, sino que tambi\u00e9n contiene 20 p\u00e1ginas de ib\u00eddems y op. cits. para el historiador serio. Parte del material que se muestra a continuaci\u00f3n se basa en dicho libro. Desde luego, se ha escrito una infinidad de libros t\u00e9cnicos sobre Internet y sus protocolos. Para m\u00e1s informaci\u00f3n, vea (Maufer, 1999). ARPANET Nuestro relato empieza a fines de la d\u00e9cada de 1950. Durante el auge de la Guerra Fr\u00eda, el DoD quer\u00eda una red de control y comando que pudiera sobrevivir a una guerra nuclear. En esa \u00e9poca todas las comunicaciones militares usaban la red telef\u00f3nica p\u00fablica, que se consideraba vulnerable. La raz\u00f3n de esta creencia se puede entresacar de la figura 1-25(a). Los puntos negros representan las oficinas de conmutaci\u00f3n telef\u00f3nica, a cada una de las cuales se conectaban miles de tel\u00e9fonos. Estas oficinas de conmutaci\u00f3n estaban, a su vez, conectadas a oficinas de conmutaci\u00f3n de m\u00e1s alto nivel (oficinas interurbanas), para conformar una jerarqu\u00eda nacional con s\u00f3lo una m\u00ednima redundancia. La vulnerabilidad del sistema estaba en que la destrucci\u00f3n de algunas de las oficinas interurbanas clave pod\u00eda fragmentar el sistema en muchas islas incomunicadas. Hacia 1960, el DoD firm\u00f3 un contrato con RAND Corporation para encontrar una soluci\u00f3n. Uno de sus empleados, Paul Baran, present\u00f3 el dise\u00f1o de amplia distribuci\u00f3n y tolerancia a fallas que se muestra en la figura 1-25(b). Puesto que las trayectorias entre cualquiera de las oficinas de conmutaci\u00f3n eran ahora m\u00e1s grandes de lo que las se\u00f1ales an\u00e1logas pod\u00edan viajar sin distorsi\u00f3n, Baran propuso que se utilizara la tecnolog\u00eda digital de conmutaci\u00f3n de paquetes a trav\u00e9s del sistema. Baran escribi\u00f3 varios informes al DoD describiendo en detalle sus ideas. A los oficiales del Pent\u00e1gono les agrad\u00f3 el concepto y pidieron a AT&T, en ese entonces el monopolio telef\u00f3nico estadounidense, que construyera un prototipo. AT&T desech\u00f3 las ideas de Baran. La corporaci\u00f3n m\u00e1s grande y rica del mundo no iba a permitir que un jovenzuelo le dijera c\u00f3mo construir un sistema telef\u00f3nico. Dijeron que la red de Baran no se pod\u00eda construir y la idea se desech\u00f3. Pasaron varios a\u00f1os y el DoD a\u00fan no ten\u00eda un mejor sistema de control y comando. Para entender qu\u00e9 sucedi\u00f3 a continuaci\u00f3n, tenemos que volver al 7 de octubre de 1957, cuando la Uni\u00f3n sovi\u00e9tica lanz\u00f3 el Sputnik, su primer sat\u00e9lite artificial, con lo cual se le adelant\u00f3 a Estados Unidos.\nSEC. 1.5\n51\nREDES DE EJEMPLO Oficina de conmutaci\u00f3n\nOficina interurbana\n(a)\n(b)\nFigura 1-25. (a) Estructura de un sistema telef\u00f3nico. (b) Sistema de conmutaci\u00f3n distribuida propuesto por Baran.\nCuando el presidente Eisenhower trat\u00f3 de encontrar qui\u00e9n estaba dormido en sus laureles, se espant\u00f3 al encontrarse con que la armada, el ej\u00e9rcito y la fuerza a\u00e9rea se peleaban por el presupuesto de investigaci\u00f3n del Pent\u00e1gono. Su respuesta inmediata fue crear una organizaci\u00f3n \u00fanica de investigaci\u00f3n para la defensa, ARPA (Agencia de Proyectos de Investigaci\u00f3n Avanzada). \u00c9sta no ten\u00eda cient\u00edficos ni laboratorios; de hecho, no ten\u00eda m\u00e1s que una oficina y un presupuesto peque\u00f1o (por normas del Pent\u00e1gono). Hac\u00eda su trabajo otorgando subvenciones y contratos a universidades y empresas cuyas ideas le parec\u00edan prometedoras. Durante los primeros a\u00f1os, ARPA trataba de imaginarse cu\u00e1l ser\u00eda su misi\u00f3n, pero en 1967 la atenci\u00f3n de su entonces director, Larry Roberts, se volvi\u00f3 hacia las redes. Se puso en contacto con varios expertos para decidir qu\u00e9 hacer. Uno de ellos, Wesley Clark, sugiri\u00f3 la construcci\u00f3n de una subred de conmutaci\u00f3n de paquetes, dando a cada host su propio enrutador, como se ilustra en la figura 1-10. Despu\u00e9s del escepticismo inicial, Roberts acept\u00f3 la idea y present\u00f3 un documento algo vago al respecto en el Simposio sobre Principios de Sistemas Operativos ACM SIGOPS que se llev\u00f3 a cabo en Gatlinburg, Tennessee, a fines de 1967 (Roberts, 1967). Para mayor sorpresa de Roberts, otro documento en la conferencia describ\u00eda un sistema similar que no s\u00f3lo hab\u00eda sido dise\u00f1ado, sino que ya estaba implementado bajo la direcci\u00f3n de Donald Davies en el National Physical Laboratory en Inglaterra. El sistema del NPL no era un sistema a nivel nacional (s\u00f3lo conectaba algunas computadoras en el campus del NPL), pero demostr\u00f3 que era posible hacer que la conmutaci\u00f3n de paquetes funcionara. Adem\u00e1s, citaba el trabajo anterior de Baran, el cual hab\u00eda sido descartado. Roberts sali\u00f3 de Gatlinburg determinado a construir lo que m\u00e1s tarde se conocer\u00eda como ARPANET.\n52\nINTRODUCCI\u00d3N\nCAP. 1\nLa subred constar\u00eda de minicomputadoras llamadas IMPs (Procesadores de Mensajes de Interfaz), conectadas por l\u00edneas de transmisi\u00f3n de 56 kbps. Para alta confiabilidad, cada IMP estar\u00eda conectado al menos a otros dos IMPs. La subred iba a ser de datagramas, de manera que si se destru\u00edan algunos IMPs, los mensajes se podr\u00edan volver a enrutar de manera autom\u00e1tica a otras rutas alternativas. Cada nodo de la red iba a constar de un IMP y un host, en el mismo cuarto, conectados por un cable corto. Un host tendr\u00eda la capacidad de enviar mensajes de m\u00e1s de 8063 bits a su IMP, el cual los fragmentar\u00eda en paquetes de, a lo sumo, 1008 bits y los reenviar\u00eda de manera independiente hacia el destino. Cada paquete se recibir\u00eda \u00edntegro antes de ser reenviado, por lo que la subred ser\u00eda la primera red electr\u00f3nica de conmutaci\u00f3n de paquetes de almacenamiento y reenv\u00edo. Entonces ARPA lanz\u00f3 una convocatoria para construir la subred. Doce empresas licitaron. Despu\u00e9s de evaluar las propuestas, ARPA seleccion\u00f3 a BBN, una empresa de consultor\u00eda de Cambridge, Massachusetts, y en diciembre de 1968 le otorg\u00f3 el contrato para construir la subred y escribir el software de \u00e9sta. BBN eligi\u00f3 utilizar como IMPs minicomputadoras Honeywell DDP-316 especialmente modificadas con palabras de 16 bits y 12 KB de memoria central. Los IMPs no ten\u00edan discos, ya que las partes m\u00f3viles se consideraban no confiables. Estaban interconectadas por l\u00edneas de 56 kbps alquiladas a las compa\u00f1\u00edas telef\u00f3nicas. Aunque 56 kbps ahora es la elecci\u00f3n de las personas que no pueden permitirse ADSL o cable, entonces era la mejor opci\u00f3n. El software estaba dividido en dos partes: subred y host. El software de la subred constaba del extremo IMP de la conexi\u00f3n host a IMP, del protocolo IMP a IMP y de un protocolo de IMP origen a IMP destino dise\u00f1ado para mejorar la confiabilidad. En la figura 1-26 se muestra el dise\u00f1o original de ARPANET. Protocolo host a host\nHost\nProtocolo host a IMP IMP destino IMP origen a Protocolo de lo oco Prot IMP Protocolo IMP a a IMP IMP\nSubred\nIMP\nFigura 1-26. Dise\u00f1o original de ARPANET.\nFuera de la subred tambi\u00e9n se necesitaba software, es decir, el extremo host de la conexi\u00f3n host a IMP, el protocolo host a host y el software de aplicaci\u00f3n. Pronto qued\u00f3 claro que BBN sinti\u00f3 que cuando se aceptaba un mensaje en un cable host a IMP y se pon\u00eda en un cable host a IMP en el destino, el trabajo estaba hecho.\nSEC. 1.5\n53\nREDES DE EJEMPLO\nRoberts ten\u00eda un problema: los hosts tambi\u00e9n necesitaban software. Para resolverlo convoc\u00f3 a una reuni\u00f3n de investigadores de red \u2014en su mayor\u00eda estudiantes de licenciatura de Snowbird, Utah\u2014 durante el verano de 1969. Los estudiantes esperaban que alg\u00fan experto en redes les explicara el gran dise\u00f1o de la red y su software y que luego les asignara el trabajo de escribir parte de \u00e9l. Se quedaron asombrados al descubrir que no hab\u00eda ning\u00fan experto ni un gran dise\u00f1o. Ten\u00edan que averiguar qu\u00e9 era lo que se ten\u00eda que hacer. No obstante, en diciembre de 1969 de alguna manera surgi\u00f3 una red experimental con cuatro nodos: en UCLA, UCSB, SRI y la Universidad de Utah. Se eligieron estas cuatro porque todas ten\u00edan un gran n\u00famero de contratos de ARPA y todas ten\u00edan computadoras host diferentes incompatibles en su totalidad (precisamente para hacerlo m\u00e1s divertido). La red creci\u00f3 con rapidez a medida que se entregaban e instalaban m\u00e1s IMPs; pronto abarc\u00f3 Estados Unidos. La figura 1-27 muestra qu\u00e9 tan r\u00e1pido creci\u00f3 ARPANET en los primeros tres a\u00f1os. SRI\nUTAH\nSRI\nUTAH\nSDC\nUCSB\nUCSB\nSRI\nMIT\nLINCOLN CASE\nUTAH ILLINOIS MIT\nCARN\nSDC\nUCSB STAN\nUCLA\nUCLA\nRAND\n(a)\nUCLA\nBBN\n(b)\n(c)\nLBL MCCLELLAN\nSRI\nNCAR\nGWC\nLINCOLN\nLINC\nRAND\nHARVARD\nX-PARC\nMITRE\nFNWC RAND TINKER\nETAC\nTINKER\nBBN\nHARVARD\nLINC\nABERDEEN NBS ETAC\nSTANFORD\nUCSB UCLA\nMIT\nBBN\nAMES IMP\nCARN MIT\nSDC\nCASE\nRADC\nUSC\nUCSB STAN\nILLINOIS\nAMES TIP\nUTAH\nILLINOIS AMES\nUTAH\nCCA\nMCCLELLAN SRI\nHARVARD BURROUGS\nBBN\nRAND\nARPA MITRE SAAC\nUCSD\nNBS\nRADC\nBELVOIR CMU UCLA\n(d)\nSDC\nNOAA\nUSC\nGWC\nCASE\n(e)\nFigura 1-27. Crecimiento de ARPANET: (a) Diciembre de 1969. (b) Julio de 1970. (c) Marzo de 1971. (d) Abril de 1972. (e) Septiembre de 1972.\nAdem\u00e1s de ayudar al crecimiento de la novel ARPANET, ARPA tambi\u00e9n proporcion\u00f3 fondos para la investigaci\u00f3n sobre el uso de redes satelitales y redes de radio de paquetes m\u00f3viles. En una demostraci\u00f3n, ahora famosa, un cami\u00f3n que viajaba por California utiliz\u00f3 la red de radio de\n54\nINTRODUCCI\u00d3N\nCAP. 1\npaquetes para enviar mensajes a SRI, que luego los reenvi\u00f3 por ARPANET a la Costa Este, donde se expidieron al University College en Londres a trav\u00e9s de una red satelital. Esto permiti\u00f3 que el investigador que iba en el cami\u00f3n usara una computadora que se encontraba en Londres mientras manejaba por California. Este experimento tambi\u00e9n demostr\u00f3 que los protocolos existentes de ARPANET no eran adecuados para ejecutarse a trav\u00e9s de varias redes. Esta observaci\u00f3n condujo a m\u00e1s investigaci\u00f3n sobre los protocolos, culminando con la invenci\u00f3n del modelo y los protocolos de TCP/IP (Cerf y Kahn, 1974). TCP/IP est\u00e1 dise\u00f1ado de manera espec\u00edfica para manejar comunicaci\u00f3n por interredes, aspecto cuya importancia se acrecent\u00f3 conforme cada vez m\u00e1s y m\u00e1s redes se adhirieron a ARPANET. Para alentar la adopci\u00f3n de estos nuevos protocolos, ARPA concedi\u00f3 varios contratos a BBN y a la Universidad de California en Berkeley para integrarlos en UNIX de Berkeley. Los investigadores en Berkeley desarrollaron una interfaz de programa adecuada para la red (sockets) y escribieron muchos programas de aplicaci\u00f3n, utiler\u00eda y administraci\u00f3n para hacer m\u00e1s f\u00e1cil la conectividad. El momento era perfecto. Muchas universidades hab\u00edan adquirido recientemente una segunda o tercera computadora VAX y una LAN para conectarlas, pero no ten\u00edan software de redes. Cuando lleg\u00f3 4.2BSD junto con TCP/IP, sockets y muchas utiler\u00edas de red, el paquete completo se adopt\u00f3 de inmediato. Adem\u00e1s, con TCP/IP, fue f\u00e1cil para las LANs conectarse a ARPANET y muchas lo hicieron. Durante la d\u00e9cada de 1980, se conectaron redes adicionales, en particular LANs, a ARPANET. Conforme crec\u00eda el escalamiento, encontrar hosts lleg\u00f3 a ser muy costoso, por lo que se cre\u00f3 el DNS (Sistema de Nombres de Dominio) para organizar m\u00e1quinas dentro de dominios y resolver nombres de host en direcciones IP. Desde entonces, el DNS ha llegado a ser un sistema de base de datos distribuido generalizado para almacenar una variedad de informaci\u00f3n relacionada con la elecci\u00f3n de un nombre. En el cap\u00edtulo 7 estudiaremos en detalle este tema. NSFNET A finales de la d\u00e9cada de 1970, la NFS (Fundaci\u00f3n Nacional para las Ciencias, de Estados Unidos) vio el enorme impacto que ARPANET estaba teniendo en la investigaci\u00f3n universitaria, permitiendo que cient\u00edficos de todo el pa\u00eds compartieran datos y colaboraran en proyectos de investigaci\u00f3n. Sin embargo, para estar en ARPANET, una universidad deb\u00eda tener un contrato de investigaci\u00f3n con el DoD, lo cual muchas no ten\u00edan. La respuesta de la NSF fue dise\u00f1ar un sucesor de ARPANET que pudiera estar abierto a todos los grupos de investigaci\u00f3n de las universidades. Para tener algo concreto con que empezar, la NSF decidi\u00f3 construir una red dorsal (o troncal) para conectar sus seis centros de supercomputadoras en San Diego, Boulder, Champaign, Pittsburgh, Ithaca y Princeton. A cada supercomputadora se le dio un hermano menor, que consist\u00eda en una microcomputadora LSI-11 llamada fuzzball. Estas computadoras estaban conectadas a l\u00edneas alquiladas de 56 kbps y formaban una subred, utilizando la misma tecnolog\u00eda de hardware que ARPANET. Sin embargo, la tecnolog\u00eda de software era diferente: las fuzzball utilizan TCP/IP desde el inicio, creando as\u00ed la primera WAN TCP/IP.\nSEC. 1.5\n55\nREDES DE EJEMPLO\nLa NSF tambi\u00e9n fund\u00f3 algunas redes regionales (alrededor de 20) que se conectaban a la red dorsal para que los usuarios en miles de universidades, laboratorios de investigaci\u00f3n, bibliotecas y museos, tuvieran acceso a cualquiera de las supercomputadoras y se comunicaran entre s\u00ed. Toda la red, incluyendo la red dorsal y las redes regionales, se llam\u00f3 NSFNET. \u00c9sta se conect\u00f3 a ARPANET a trav\u00e9s de un enlace entre un IMP y una fuzzball en el cuarto de m\u00e1quinas de CarnegieMellon. En la figura 1-28 se muestra la primera red dorsal NSFNET.\nCentro de superc\u00f3mputo de la NSF Red de nivel medio de la NSF Las dos\nFigura 1-28. La red dorsal NSFNET en 1988.\nNSFNET fue un \u00e9xito instant\u00e1neo y pronto se satur\u00f3. Inmediatamente, la NSF empez\u00f3 a planear su sucesor y otorg\u00f3 un contrato al consorcio MERIT de Michigan para que lo creara. Se alquilaron a MCI (puesto que se fusion\u00f3 con WorldCom) canales de fibra \u00f3ptica a 448 kbps para establecer la versi\u00f3n 2 de la red dorsal. Se utilizaron PC-RTs de IBM como enrutadores. Esta segunda red dorsal tambi\u00e9n se sobrecarg\u00f3 pronto, y en 1990 se escal\u00f3 a 1.5 Mbps. Al continuar el crecimiento, la NSF se percat\u00f3 de que el gobierno no podr\u00eda financiar por siempre el uso de redes. Adem\u00e1s, las empresas comerciales se quer\u00edan unir, pero los estatutos de la NSF les prohib\u00edan utilizar las redes por las que la NSF hab\u00eda pagado. En consecuencia, la NSF alent\u00f3 a MERIT, MCI e IBM a que formaran una corporaci\u00f3n no lucrativa, ANS (Redes y Servicios Avanzados), como el primer paso hacia la comercializaci\u00f3n. En 1990, ANS adquiri\u00f3 NSFNET y escal\u00f3 los enlaces de 1.5 Mbps a 45 Mbps para formar ANSNET. Esta red oper\u00f3 durante cinco a\u00f1os y luego fue vendida a America Online. Pero para entonces varias empresas estaban ofreciendo servicios IP comerciales y fue evidente que el gobierno se deb\u00eda retirar del negocio de las redes. Para facilitar la transici\u00f3n y hacer que todas las redes regionales se pudieran comunicar con las dem\u00e1s redes regionales, la NSF concedi\u00f3 contratos a cuatro diferentes operadores de redes para establecer un NAP (Punto de Acceso a la Red). Estos operadores eran PacBell (San Francisco),\n56\nINTRODUCCI\u00d3N\nCAP. 1\nAmeritech (Chicago), MFS (Washington, D.C.) y Sprint (Nueva York, donde para efectos de NAP, Pennsauken, Nueva Jersey se toma en cuenta como si fuera la ciudad de Nueva York). Todo operador de red que quisiera proporcionar el servicio de red dorsal a las redes regionales de la NSF se ten\u00eda que conectar a todos los NAPs. Este arreglo significaba que un paquete que se originara en cualquier red regional ten\u00eda la opci\u00f3n de contar con operadores de red dorsal desde su NAP al NAP de destino. En consecuencia, los operadores de red dorsal se vieron forzados a competir por el negocio de las redes regionales con base en el servicio y el precio, que, desde luego, era la idea. Como resultado, el concepto de una \u00fanica red dorsal predeterminada fue reemplazado por una infraestructura competitiva orientada a la comercializaci\u00f3n. A muchas personas les gusta criticar al gobierno federal por no ser innovador, pero en el \u00e1rea de redes, el DoD y la NSF fueron los creadores de la infraestructura que ciment\u00f3 la base para Internet y luego dejaron que la industria la operara. Durante la d\u00e9cada de 1990, muchos otros pa\u00edses y regiones tambi\u00e9n construyeron redes nacionales de investigaci\u00f3n, con frecuencia siguiendo el patr\u00f3n de ARPANET y NSFNET. \u00c9stas inclu\u00edan EuropaNET y EBONE en Europa, que empezaron con l\u00edneas de 2 Mbps y luego las escalaron a 34 Mbps. Finalmente, en Europa la infraestructura de redes qued\u00f3 en manos de la industria. Uso de Internet El n\u00famero de redes, m\u00e1quinas y usuarios conectados a ARPANET creci\u00f3 r\u00e1pidamente luego de que TCP/IP se convirti\u00f3 en el protocolo oficial el 1o. de enero de 1983. Cuando NSFNET y ARPANET estaban interconectadas, el crecimiento se hizo exponencial. Muchas redes regionales se unieron y se hicieron conexiones a redes en Canad\u00e1, Europa y el Pac\u00edfico. En alg\u00fan momento a mediados de la d\u00e9cada de 1980, las personas empezaron a ver el conjunto de redes como una interred y m\u00e1s tarde como Internet, aunque no hubo una inauguraci\u00f3n oficial con alg\u00fan pol\u00edtico rompiendo una botella de champa\u00f1a sobre una fuzzball. El aglutinante que mantiene unida la Internet es el modelo de referencia TCP/IP y la pila de protocolos de TCP/IP. TCP/IP hace posible el servicio universal y se puede comparar con la adopci\u00f3n de la medida est\u00e1ndar para el ancho de v\u00eda del ferrocarril en el siglo XIX o la adopci\u00f3n de los protocolos de se\u00f1alizaci\u00f3n comunes para las compa\u00f1\u00edas telef\u00f3nicas. \u00bfQu\u00e9 significa en realidad estar en Internet? Nuestra definici\u00f3n es que una m\u00e1quina est\u00e1 en Internet si ejecuta la pila de protocolos de TCP/IP, tiene una direcci\u00f3n IP y puede enviar paquetes IP a todas las dem\u00e1s m\u00e1quinas en Internet. La sola capacidad para enviar y recibir correo electr\u00f3nico no basta, puesto que el correo electr\u00f3nico es la puerta de entrada a muchas redes fuera de Internet. Sin embargo, el aspecto se nubla de alguna manera por el hecho de que millones de computadoras personales pueden llamar a un proveedor de servicios de Internet mediante un m\u00f3dem, recibir direcciones IP temporales y enviar paquetes IP a otros hosts de Internet. Tiene sentido decir que tales m\u00e1quinas est\u00e1n en Internet en tanto est\u00e9n conectadas al enrutador del proveedor de servicios. Tradicionalmente (es decir, de 1970 a 1990) Internet y sus predecesores ten\u00edan cuatro aplicaciones principales:\nSEC. 1.5\nREDES DE EJEMPLO\n57\n1. Correo electr\u00f3nico. La capacidad para redactar, enviar y recibir correo electr\u00f3nico ha sido posible desde los inicios de ARPANET y su gran popularidad. Muchas personas obtienen docenas de mensajes al d\u00eda y consideran esto como su primer medio de interactuar con el mundo exterior, m\u00e1s all\u00e1 del tel\u00e9fono y el correo caracol que se han quedado atr\u00e1s. Hoy en d\u00eda los programas de correo electr\u00f3nico est\u00e1n disponibles en pr\u00e1cticamente todo tipo de computadora. 2. Noticias. Los grupos de noticias son foros especializados en los que los usuarios con un inter\u00e9s com\u00fan pueden intercambiar mensajes. Existen miles de grupos de noticias, dedicados a temas t\u00e9cnicos y no t\u00e9cnicos, entre ellos computadoras, ciencia, recreaci\u00f3n y pol\u00edtica. Cada grupo de noticias tiene su propia etiqueta, estilo, h\u00e1bitos y penas en que se incurre al violarlas. 3. Inicio remoto de sesi\u00f3n. Mediante los programas telnet, rlogin o ssh, los usuarios de cualquier parte en Internet pueden iniciar sesi\u00f3n en cualquier otra m\u00e1quina en la que tengan una cuenta. 4. Transferencia de archivos. Con el programa FTP, los usuarios pueden copiar archivos de una m\u00e1quina en Internet a otra. Por este medio se encuentra disponible una vasta cantidad de art\u00edculos, bases de datos y otra informaci\u00f3n. Hasta principios de la d\u00e9cada de 1990, Internet era muy visitada por investigadores acad\u00e9micos, del gobierno e industriales. Una nueva aplicaci\u00f3n, WWW (World Wide Web) cambi\u00f3 todo eso y trajo millones de usuarios nuevos no acad\u00e9micos a la red. Esta aplicaci\u00f3n \u2014inventada por Tim Berners-Lee, f\u00edsico del CERN\u2014 no cambi\u00f3 ninguna de las caracter\u00edsticas subyacentes pero las hizo m\u00e1s f\u00e1ciles de usar. Junto con el navegador Mosaic, escrito por Marc Andreessen en el Centro Nacional para Aplicaciones de Superc\u00f3mputo en Urbana, Illinois, WWW hizo posible que un sitio estableciera p\u00e1ginas de informaci\u00f3n que contienen texto, im\u00e1genes, sonido e incluso v\u00eddeo, y v\u00ednculos integrados a otras p\u00e1ginas. Al hacer clic en un v\u00ednculo, el usuario es transportado de inmediato a la p\u00e1gina a la que apunta dicho v\u00ednculo. Por ejemplo, muchas compa\u00f1\u00edas tienen una p\u00e1gina de inicio con entradas que apuntan a otras p\u00e1ginas que contienen informaci\u00f3n de productos, listas de precios, ventas, soporte t\u00e9cnico, comunicaci\u00f3n con empleados, informaci\u00f3n para los accionistas y m\u00e1s. En muy poco tiempo han aparecido p\u00e1ginas de otro tipo, incluyendo mapas, tablas del mercado accionario, cat\u00e1logos de fichas bibliogr\u00e1ficas, programas de radio grabados e incluso una p\u00e1gina que apunta al texto completo de muchos libros cuyos derechos de autor han expirado (Mark Twain, Charles Dickens, etc\u00e9tera). Muchas personas tambi\u00e9n tienen p\u00e1ginas personales (p\u00e1ginas de inicio). Gran parte de su crecimiento durante la d\u00e9cada de 1990 estuvo alimentado por empresas llamadas ISPs (proveedores de servicios de Internet). Hay compa\u00f1\u00edas que ofrecen a los usuarios individuales dom\u00e9sticos la capacidad de llamar a una de sus m\u00e1quinas y conectarse a Internet, obteniendo as\u00ed acceso al correo electr\u00f3nico, WWW y otros servicios de Internet. Estas compa\u00f1\u00edas suscribieron contratos con decenas de millones de usuarios nuevos por un a\u00f1o durante el final de\n58\nINTRODUCCI\u00d3N\nCAP. 1\nla d\u00e9cada de 1990, cambiando por completo el car\u00e1cter de la red de ser un campo de recreo para acad\u00e9micos y militares a uno de utilidad p\u00fablica, muy semejante al sistema telef\u00f3nico. Ahora el n\u00famero de usuarios de Internet se desconoce, pero lo cierto es que son cientos de millones en todo el mundo y tal vez pronto lleguen a rebasar los mil millones. Arquitectura de Internet En esta secci\u00f3n trataremos de dar un breve panorama de lo que es Internet hoy. Debido a las muchas fusiones entre compa\u00f1\u00edas telef\u00f3nicas (telcos) e ISPs, las aguas se han enturbiado y a veces es dif\u00edcil decir qui\u00e9n hace qu\u00e9. En consecuencia, la siguiente descripci\u00f3n ser\u00e1, por necesidad, algo m\u00e1s sencilla que la realidad. En la figura 1-29 se muestra el panorama general. Ahora examinemos esta figura parte por parte. ISP regional Red dorsal\nPOP\nNAP Sistema telef\u00f3nico\nCliente\nGranja de servidores\nLAN corporativa Enrutador\nFigura 1-29. Panorama de Internet.\nUn buen lugar para empezar es con un cliente en casa. Supongamos que nuestro cliente llama a su ISP desde una conexi\u00f3n de l\u00ednea telef\u00f3nica conmutada, como se muestra en la figura 1-29. El m\u00f3dem es una tarjeta dentro de su PC que convierte las se\u00f1ales digitales que la computadora produce en se\u00f1ales an\u00e1logas que pueden pasar sin obst\u00e1culos a trav\u00e9s del sistema telef\u00f3nico. Estas se\u00f1ales se transfieren al POP (Punto de Presencia) del ISP, donde se retiran del sistema telef\u00f3nico y se inyectan en la red regional del ISP. A partir de este punto, el sistema es totalmente digital y de conmutaci\u00f3n de paquetes. Si el ISP es la telco local, es probable que el POP est\u00e9 ubicado en la\nSEC. 1.5\nREDES DE EJEMPLO\n59\noficina de conmutaci\u00f3n telef\u00f3nica, donde termina el cableado de tel\u00e9fono de los clientes. Si el ISP no es la telco local, el POP podr\u00eda ser alguna de las oficinas de conmutaci\u00f3n en el camino. La red regional de ISPs consta de enrutadores interconectados en las diversas ciudades en las que el ISP opera o da servicio. Si el paquete est\u00e1 destinado a un host servido directamente por el ISP, el paquete se entrega al host. En caso contrario, se entrega al operador de la red dorsal del ISP. En la cima de la cadena alimenticia est\u00e1n los operadores de las principales redes dorsales, empresas como AT&T y Sprint. \u00c9stas operan grandes redes de redes dorsales internacionales, con miles de enrutadores conectados por fibra \u00f3ptica de banda ancha. Grandes corporaciones y servicios de hosting que ejecutan granjas de servidores (m\u00e1quinas que pueden servir miles de p\u00e1ginas Web por segundo) con frecuencia se conectan de manera directa a la red dorsal. Los operadores de redes dorsales alientan esta conexi\u00f3n directa rentando espacio en lo que se llama hoteles de portadores, que son b\u00e1sicamente gabinetes de equipos en el mismo cuarto que el enrutador para conexiones cortas y r\u00e1pidas entre las granjas de servidores y la red dorsal. Si un paquete dado a la red dorsal se destina a un ISP o a una compa\u00f1\u00eda servida por la red dorsal, se env\u00eda al enrutador m\u00e1s cercano y se pierde cualquier responsabilidad por este paquete. Sin embargo, en el mundo hay muchas redes dorsales, de varios tama\u00f1os, de manera que un paquete podr\u00eda tener que ir a una red dorsal competidora. Para que los paquetes viajen entre redes dorsales, todas las redes principales se conectan a los NAPs explicados antes. B\u00e1sicamente, un NAP es un cuarto lleno de enrutadores, al menos uno por red dorsal. Una LAN en el cuarto conecta todos los enrutadores, de modo que los paquetes se pueden reenviar desde una red dorsal hacia cualquier otra. Adem\u00e1s de estar conectadas en los NAPs, las redes dorsales m\u00e1s grandes tienen numerosas conexiones directas entre sus enrutadores, una t\u00e9cnica conocida como igualdad privada ( private peering). Una de las muchas paradojas de Internet es que los ISPs que compiten en p\u00fablico entre s\u00ed por clientes, con frecuencia cooperan estableciendo igualdades privadas entre ellos (Metz, 2001). Aqu\u00ed termina nuestro r\u00e1pido viaje por Internet. En los siguientes cap\u00edtulos tendremos mucho que decir sobre los componentes individuales y su dise\u00f1o, algoritmos y protocolos. Tambi\u00e9n vale la pena mencionar de paso que algunas empresas tienen interconectadas todas sus redes internas existentes, utilizando con frecuencia la misma tecnolog\u00eda que Internet. Por lo general, estas intranets son accesibles s\u00f3lo dentro de la empresa pero, por otra parte, funcionan del mismo modo que Internet.\n1.5.2 Redes orientadas a la conexi\u00f3n: X.25, Frame Relay y ATM Desde el inicio de la conectividad surgi\u00f3 una guerra entre aquellos que apoyan a las subredes no orientadas a la conexi\u00f3n (es decir, de datagramas) y quienes apoyan a las subredes orientadas a la conexi\u00f3n. Los principales defensores de las subredes no orientadas a la conexi\u00f3n vienen de la comunidad ARPANET/Internet. Recuerde que el deseo original del DoD al fundar y construir ARPANET era tener una red que pudiera funcionar incluso despu\u00e9s de que varios impactos de armas nucleares destruyeran numerosos enrutadores y l\u00edneas de transmisi\u00f3n. Por lo tanto, la tolerancia a\n60\nINTRODUCCI\u00d3N\nCAP. 1\nerrores era importante en su lista de prioridades, no tanto lo que pudieran cobrar a los clientes. Este enfoque condujo a un dise\u00f1o no orientado a la conexi\u00f3n en el que cada paquete se enruta independientemente de cualquier otro paquete. Por lo tanto, si algunos enrutadores se caen durante una sesi\u00f3n, no hay da\u00f1o puesto que el sistema puede reconfigurarse a s\u00ed mismo de manera din\u00e1mica para que los paquetes subsiguientes puedan encontrar alguna ruta a su destino, aun cuando sea diferente de la que utilizaron los paquetes anteriores. El campo orientado a la conexi\u00f3n viene del mundo de las compa\u00f1\u00edas telef\u00f3nicas. En el sistema telef\u00f3nico, quien llama debe marcar el n\u00famero de la parte a la que desea llamar y esperar la conexi\u00f3n antes de poder hablar o enviar los datos. Esta configuraci\u00f3n de conexi\u00f3n establece una ruta a trav\u00e9s del sistema telef\u00f3nico que se mantiene hasta que se termina la llamada. Todas las palabras o paquetes siguen la misma ruta. Si una l\u00ednea o conmutador se cae en el trayecto, la llamada se cancela. Esta propiedad es precisamente lo que al DoD no le gustaba. Entonces, \u00bfpor qu\u00e9 le gustaba a las compa\u00f1\u00edas telef\u00f3nicas? Por dos razones: 1. Calidad en el servicio. 2. Facturaci\u00f3n. Al establecer de antemano una conexi\u00f3n, la subred puede reservar recursos como espacio de b\u00fafer y capacidad de procesamiento (CPU) en los enrutadores. Si se intenta establecer una llamada y los recursos disponibles son insuficientes, la llamada se rechaza y el invocador recibe una se\u00f1al de ocupado. De esta manera, una vez que se establece una conexi\u00f3n, \u00e9sta da un buen servicio. Con una red no orientada a la conexi\u00f3n, si llegan demasiados paquetes al mismo enrutador al mismo tiempo, el enrutador se saturar\u00e1 y tal vez pierda algunos paquetes. Tal vez el emisor advierta esto y los env\u00ede de nuevo, pero la calidad del servicio ser\u00e1 accidentada e inadecuada para audio o v\u00eddeo a menos que la red tenga poca carga. No es necesario decir que proveer una calidad de audio adecuada es algo en lo que las compa\u00f1\u00edas telef\u00f3nicas ponen mucho cuidado, de ah\u00ed su preferencia por las conexiones. La segunda raz\u00f3n por la que las compa\u00f1\u00edas telef\u00f3nicas prefieren el servicio orientado a la conexi\u00f3n es que est\u00e1n acostumbradas a cobrar por el tiempo de conexi\u00f3n. Cuando hace una llamada de larga distancia (sea nacional o internacional) se le cobra por minuto. Cuando llegaron las redes, se vieron atra\u00eddas precisamente hacia un modelo en el que el cobro por minuto fuera f\u00e1cil de hacer. Si se tiene que establecer una conexi\u00f3n antes de enviar los datos, en ese momento es cuando el reloj de la facturaci\u00f3n empieza a correr. Si no hay conexi\u00f3n, no hay cobro. Ir\u00f3nicamente, mantener registros de facturaci\u00f3n es muy costoso. Si una compa\u00f1\u00eda telef\u00f3nica adoptara una tarifa mensual plana sin l\u00edmite de llamadas y sin facturaci\u00f3n o mantenimiento de un registro, probablemente ahorrar\u00eda una gran cantidad de dinero, a pesar del incremento en llamadas que generar\u00eda esta pol\u00edtica. Sin embargo, hay pol\u00edticas, regulaciones y otros factores que pesan en contra de hacer esto. Curiosamente, el servicio de tarifa plana existe en otros sectores. Por ejemplo, la TV por cable se factura en una tasa mensual plana, independientemente de cu\u00e1ntos programas vea. Podr\u00eda haberse dise\u00f1ado con pago por evento como concepto b\u00e1sico, pero no fue as\u00ed, en parte por lo costoso de la facturaci\u00f3n (y dada la calidad de la mayor\u00eda de los programas televisivos, la verg\u00fcenza no se puede descontar del todo). Asimismo, muchos parques de diversiones\nSEC. 1.5\nREDES DE EJEMPLO\n61\ncobran una cuota de admisi\u00f3n por d\u00eda con acceso ilimitado a los juegos, en contraste con las ferias ambulantes que cobran por juego. Dicho esto, no nos deber\u00eda sorprender que todas las redes dise\u00f1adas por la industria de la telefon\u00eda hayan sido subredes orientadas a la conexi\u00f3n. Lo que s\u00ed es de sorprender es que Internet tambi\u00e9n se est\u00e1 inclinado en esa direcci\u00f3n, a fin de proporcionar un mejor servicio de audio y v\u00eddeo, un tema al que volveremos en el cap\u00edtulo 5. Por ahora examinaremos algunas redes orientadas a la conexi\u00f3n. X.25 y Frame Relay Nuestro primer ejemplo de red orientada a la conexi\u00f3n es la X.25, que fue la primera red de datos p\u00fablica. Se despleg\u00f3 en la d\u00e9cada de 1970, cuando el servicio telef\u00f3nico era un monopolio en todas partes y la compa\u00f1\u00eda telef\u00f3nica de cada pa\u00eds esperaba que hubiera una red de datos por pa\u00eds \u2014la propia. Para utilizar X.25, una computadora establec\u00eda primero una conexi\u00f3n con la computadora remota, es decir, hac\u00eda una llamada telef\u00f3nica. Esta conexi\u00f3n daba un n\u00famero de conexi\u00f3n para utilizarlo en los paquetes de transferencia de datos (ya que se pod\u00edan abrir muchas conexiones al mismo tiempo). Los paquetes de datos eran muy sencillos, consist\u00edan en un encabezado de 3 bytes y hasta 128 bytes de datos. El encabezado constaba de un n\u00famero de conexi\u00f3n de 12 bits, un n\u00famero de secuencia de paquete, un n\u00famero de confirmaci\u00f3n de recepci\u00f3n y algunos bits diversos. Las redes X.25 funcionaron por casi diez a\u00f1os con resultados mixtos. En la d\u00e9cada de 1980, las redes X.25 fueron reemplazadas ampliamente por un nuevo tipo de red llamada Frame Relay. \u00c9sta es una red orientada a la conexi\u00f3n sin controles de error ni de flujo. Como era orientada a la conexi\u00f3n, los paquetes se entregaban en orden (en caso de que se entregaran todos). Las propiedades de entrega en orden, sin control de errores ni de flujo hicieron el Frame Relay parecido a la LAN de \u00e1rea amplia. Su aplicaci\u00f3n m\u00e1s importante es la interconexi\u00f3n de LANs en m\u00faltiples oficinas de una empresa. Frame Relay disfrut\u00f3 de un \u00e9xito modesto y a\u00fan se sigue utilizando en algunas partes. Modo de Transferencia As\u00edncrona Otro tipo de red orientada a la conexi\u00f3n, tal vez el m\u00e1s importante, es ATM (Modo de Transferencia As\u00edncrona). La raz\u00f3n de tan extra\u00f1o nombre se debe a que en el sistema telef\u00f3nico la mayor parte de la transmisi\u00f3n es s\u00edncrona (lo m\u00e1s parecido a un reloj), y en ATM no sucede as\u00ed. ATM se dise\u00f1\u00f3 a principios de la d\u00e9cada de 1990 y se lanz\u00f3 en medio de una incre\u00edble exageraci\u00f3n (Ginsburg, 1996; Goralski, 1995; Ibe, 1997; Kimn y cols., 1994, y Stallings, 2000). ATM iba a resolver todos los problemas de conectividad y telecomunicaciones fusionando voz, datos, televisi\u00f3n por cable, t\u00e9lex, tel\u00e9grafo, palomas mensajeras, botes conectados por cord\u00f3n, tambores, se\u00f1ales de humo y todo lo dem\u00e1s, en un solo sistema integrado que pudiera proporcionar todos los servicios para todas las necesidades. Eso no sucedi\u00f3. En gran parte, los problemas fueron semejantes a los ya descritos en el tema de OSI, es decir, una aparici\u00f3n inoportuna, junto con tecnolog\u00eda, implementaci\u00f3n y pol\u00edticas equivocadas. Habiendo noqueado a las compa\u00f1\u00edas telef\u00f3nicas en el primer asalto, gran parte de la comunidad de Internet vio a ATM como cuando Internet era el contrincante de las telcos: la segunda parte. Pero no fue as\u00ed en realidad y esta vez incluso los in-\n62\nINTRODUCCI\u00d3N\nCAP. 1\ntransigentes fan\u00e1ticos de los datagramas se dieron cuenta de que la calidad de servicio de Internet dejaba mucho que desear. Para no alargar la historia, ATM tuvo mucho m\u00e1s \u00e9xito que OSI y actualmente tiene un uso profundo dentro del sistema telef\u00f3nico, con frecuencia en el transporte de los paquetes IP. Como en la actualidad las empresas portadoras la utilizan principalmente para su transporte interno, los usuarios no se percatan de su existencia pero, definitivamente, vive y goza de salud. Circuitos virtuales de ATM Puesto que las redes ATM est\u00e1n orientadas a la conexi\u00f3n, el env\u00edo de datos requiere que primero se env\u00ede un paquete para establecer la conexi\u00f3n. Conforme el mensaje de establecimiento sigue su camino a trav\u00e9s de la subred, todos los conmutadores que se encuentran en la ruta crean una entrada en sus tablas internas tomando nota de la existencia de la conexi\u00f3n y reservando cualesquier recursos que necesite la conexi\u00f3n. Con frecuencia a las conexiones se les conoce como circuitos virtuales, en analog\u00eda con los circuitos f\u00edsicos utilizados en el sistema telef\u00f3nico. La mayor\u00eda de las redes ATM soportan tambi\u00e9n circuitos virtuales permanentes, que son conexiones permanentes entre dos hosts (distantes). Son similares a las l\u00edneas alquiladas del mundo telef\u00f3nico. Cada conexi\u00f3n, temporal o permanente, tiene un solo identificador de conexi\u00f3n. En la figura 1-30 se ilustra un circuito virtual.\nHost emisor\nProceso emisor\nConmutador\nSubred\nCircuito virtual\nHost receptor\nProceso receptor\nFigura 1-30. Un circuito virtual.\nUna vez establecida la conexi\u00f3n, cada lado puede empezar a transmitir datos. La idea b\u00e1sica en que se fundamenta ATM es transmitir toda la informaci\u00f3n en paquetes peque\u00f1os, de tama\u00f1o fijo, llamados celdas. Las celdas tienen un tama\u00f1o de 53 bytes, de los cuales cinco son del encabezado y 48 de carga \u00fatil, como se muestra en la figura 1-31. Parte del encabezado es el identificador de la conexi\u00f3n, por lo que los hosts emisor y receptor y todos los conmutadores intermedios pueden saber qu\u00e9 celdas pertenecen a qu\u00e9 conexiones. Esta informaci\u00f3n permite que cada conmutador sepa c\u00f3mo enviar cada celda entrante. La conmutaci\u00f3n de celdas se hace en el hardware, a alta velocidad. De hecho, el principal argumento para tener celdas de tama\u00f1o fijo es que as\u00ed es f\u00e1cil construir conmutadores de hardware para manejar celdas peque\u00f1as, de longitud fija. Los paquetes de longitud variable de IP se tienen que enrutar mediante software, que es un proceso m\u00e1s lento.\nSEC. 1.5\nREDES DE EJEMPLO\n63\nOtro punto a favor de ATM es que el hardware se puede configurar para enviar una celda entrante a m\u00faltiples l\u00edneas de salida, una propiedad necesaria para el manejo de un programa de televisi\u00f3n que se va a difundir a varios receptores. Por \u00faltimo, las celdas peque\u00f1as no bloquean ninguna l\u00ednea por mucho tiempo, lo que facilita la garant\u00eda en la calidad del servicio. Todas las celdas siguen la misma ruta al destino. La entrega de celdas no est\u00e1 garantizada, pero el orden s\u00ed. Si las celdas 1 y 2 se env\u00edan en ese orden, entonces deben arribar en el mismo orden, nunca primero la 2 y luego la 1. No obstante, una de las dos o ambas se pueden perder en el trayecto. A los niveles m\u00e1s altos de protocolos les corresponde la recuperaci\u00f3n de celdas perdidas. Observe que aunque esta garant\u00eda no es perfecta, es mejor que la de Internet. Ah\u00ed los paquetes no s\u00f3lo se pierden, sino que adem\u00e1s se entregan en desorden. ATM, en contraste, garantiza que las celdas nunca se entregar\u00e1n en desorden.\nBytes\n5\n48\nEncabezado\nDatos de usuario\nFigura 1-31. Una celda ATM.\nLas redes ATM se organizan como las WANs tradicionales, con l\u00edneas y conmutadores (enrutadores). Las velocidades m\u00e1s comunes para las redes ATM son de 155 y 622 Mbps, aunque tambi\u00e9n se soportan velocidades m\u00e1s altas. Se eligi\u00f3 la velocidad de 155 Mbps porque \u00e9sta es la que se requiere para transmitir televisi\u00f3n de alta definici\u00f3n. La elecci\u00f3n exacta de 155.52 Mbps se hizo por compatibilidad con el sistema de transmisi\u00f3n SONET de AT&T, punto que estudiaremos en el cap\u00edtulo 2. La velocidad de 622 Mbps se eligi\u00f3 para que se pudieran enviar cuatro canales de 155 Mbps. El modelo de referencia ATM ATM tiene su propio modelo de referencia, el cual es diferente del OSI y tambi\u00e9n del TCP/IP. En la figura 1.32 se muestra el modelo de referencia ATM. Consta de tres capas: la f\u00edsica, la ATM y la de adaptaci\u00f3n ATM, adem\u00e1s de lo que el usuario desee poner arriba de ellas. La capa f\u00edsica tiene que ver con el medio f\u00edsico: voltajes, temporizaci\u00f3n de bits y otros aspectos m\u00e1s. ATM no prescribe un conjunto particular de reglas, tan s\u00f3lo especifica que las celdas ATM se pueden enviar tal cual por cable o fibra, pero tambi\u00e9n se pueden empacar dentro de la carga \u00fatil de otros sistemas de transporte. En otras palabras, ATM se ha dise\u00f1ado para ser independiente del medio de transmisi\u00f3n. La capa ATM se encarga de las celdas y su transporte. Define la disposici\u00f3n de una celda e indica qu\u00e9 significan los campos del encabezado. Tambi\u00e9n tiene que ver con el establecimiento y la liberaci\u00f3n de los circuitos virtuales. El control de congesti\u00f3n tambi\u00e9n se ubica aqu\u00ed. Puesto que la mayor\u00eda de las aplicaciones no necesita trabajar de manera directa con las celdas (aunque algunas podr\u00edan hacerlo), se ha definido una capa superior a la capa ATM para que\n64\nINTRODUCCI\u00d3N\nCAP. 1\nAdministraci\u00f3n del plano Administraci\u00f3n de la capa Plano de control Capas superiores CS SAR\nPlano de usuario Capas superiores\nCapa de adaptaci\u00f3n ATM Capa ATM\nTC PMD\nCapa f\u00edsica\na ap bc Su apa c b Su\na ap bc Su apa bc Su\nCS: Subcapa de convergencia SAR: Subcapa de segmentaci\u00f3n y reensamble TC: Subcapa de convergencia de transmisi\u00f3n PMD: Subcapa dependiente del medio f\u00edsico\nFigura 1-32. El modelo de referencia ATM.\nlos usuarios env\u00eden paquetes m\u00e1s grandes que una celda. La interfaz de ATM segmenta estos paquetes, transmite de forma individual las celdas y las reensambla en el otro extremo. Esta capa es la AAL (Capa de Adaptaci\u00f3n ATM). A diferencia de los primeros modelos de referencia bidimensionales, el modelo ATM se define como si fuera tridimensional, lo que se puede apreciar en la figura 1-32. El plano de usuario trata con el transporte de datos, control de flujo, correcci\u00f3n de errores y otras funciones de usuario. En contraste, el plano de control se ocupa de la administraci\u00f3n de la conexi\u00f3n. Las funciones de administraci\u00f3n del plano y de la capa se relacionan con la administraci\u00f3n de recursos y coordinaci\u00f3n entre capas. Cada una de las capas f\u00edsica y AAL se dividen en dos subredes, una en la parte inferior que hace el trabajo y en la subcapa de convergencia en la parte superior que proporciona la interfaz propia de la capa superior inmediata. En la figura 1-33 se muestran las funciones de las capas y subcapas. La subcapa PMD (Dependiente del Medio F\u00edsico) interact\u00faa con el cable real. Mueve los bits dentro y fuera y maneja la temporizaci\u00f3n de bits, es decir, el tiempo que existe entre cada bit al transmitirlos. Esta capa ser\u00e1 diferente para diferentes transportadoras y cables. La otra subcapa de la capa f\u00edsica es la subcapa TC (Convergencia de Transmisi\u00f3n). Cuando se transmiten las celdas, la capa TC las env\u00eda como una cadena de bits a la capa PMD. Esto es sencillo. En el otro extremo, la subcapa TC recibe una serie de bits de entrada de la subcapa PMD. Su trabajo es convertir este flujo de bits en un flujo de celdas para la capa ATM. Maneja todos los aspectos relacionados con las indicaciones de d\u00f3nde empiezan y terminan las celdas en el flujo de bits. En el modelo ATM, esta funcionalidad se da en la capa f\u00edsica. En el modelo OSI y en gran parte de las dem\u00e1s redes, el trabajo de entramado, es decir, convertir una serie de bits en bruto en una secuencia de tramas o celdas, es la tarea de la capa de enlace de datos. Como mencionamos antes, la capa ATM maneja celdas, incluyendo su generaci\u00f3n y transporte. La mayor\u00eda de los aspectos interesantes de ATM se encuentra ubicada aqu\u00ed. Es una combinaci\u00f3n de las capas de enlace de datos y de red del modelo OSI; no hay una divisi\u00f3n en subcapas.\nSEC. 1.5\nREDES DE EJEMPLO\nCapa OSI\nCapa ATM\n3/4\nAAL\nSubcapa ATM CS SAR\n2/3\nFuncionalidad Provisi\u00f3n de la interfaz est\u00e1ndar (convergencia) Segmentaci\u00f3n y reensamblado Control de flujo Generaci\u00f3n/extracci\u00f3n de encabezado de celda Circuito virtual/administraci\u00f3n de ruta Multiplexi\u00f3n/desmultiplexi\u00f3n de celdas\nATM\n2\n65\nTC\nDesacoplamiento de proporci\u00f3n de celdas Generaci\u00f3n y comprobaci\u00f3n de la suma de verificaci\u00f3n de encabezados Generaci\u00f3n de celdas Empaque/desempaque de celdas a partir del sobre contenedor Generaci\u00f3n de tramas\nF\u00edsica 1\nPMD\nTemporizaci\u00f3n de bits Acceso a la red f\u00edsica\nFigura 1-33. Las capas y subcapas de ATM y sus funciones.\nLa capa AAL se divide en una subcapa SAR (Segmentaci\u00f3n y Reensamble) y una CS (Subcapa de Convergencia). La subcapa inferior fragmenta paquetes en celdas en el lado de transmisi\u00f3n y los une de nuevo en el destino. La subcapa superior permite que los sistemas ATM ofrezcan diversos tipos de servicios a diferentes aplicaciones (por ejemplo, la transferencia de archivos y el v\u00eddeo bajo demanda tienen diferentes requerimientos respecto a manejo de errores, temporizaci\u00f3n, etc\u00e9tera). Puesto que quiz\u00e1 ATM est\u00e9 en declive, no lo explicaremos m\u00e1s en este libro. No obstante, puesto que existe una base instalada considerable, es probable que a\u00fan siga en uso durante algunos a\u00f1os. Para m\u00e1s informaci\u00f3n sobre ATM, vea (Dobrowsky y Grise, 2001, y Gadecki y Heckart, 1997). 1.5.3 Ethernet Internet y ATM se dise\u00f1aron para conectividad de \u00e1rea amplia. Sin embargo, muchas empresas, universidades y otras organizaciones tienen un gran n\u00famero de computadoras que requieren interconexi\u00f3n. Esta necesidad dio origen a la red de \u00e1rea local. En esta secci\u00f3n diremos algo sobre la LAN m\u00e1s popular: Ethernet. La historia empieza en la pr\u00edstina Hawaii a principios de la d\u00e9cada de 1970. En este caso, \u201cpr\u00edstina\u201d se puede interpretar como \u201cque no tiene un sistema telef\u00f3nico funcional\u201d. En tanto los d\u00edas son m\u00e1s agradables para los vacacionistas cuando no son interrumpidos por el tel\u00e9fono, no fue as\u00ed para el investigador Norman Abramson y sus colegas de la Universidad de Hawaii, quienes estuvieron tratando de conectar usuarios de las islas remotas a la computadora principal de Hono-\n66\nINTRODUCCI\u00d3N\nCAP. 1\nlulu. Conectar sus propios cables bajo el Oc\u00e9ano Pac\u00edfico parec\u00eda imposible, de modo que buscaron una soluci\u00f3n diferente. La primera que encontraron fueron los radios de onda corta. Cada terminal estaba equipada con un radio peque\u00f1o de dos frecuencias: un canal ascendente (a la computadora central) y otro descendente (desde la computadora central). Cuando el usuario deseaba conectarse con la computadora, s\u00f3lo transmit\u00eda por el canal ascendente un paquete que conten\u00eda los datos. Si en ese instante nadie m\u00e1s estaba transmitiendo, probablemente el paquete saldr\u00eda y su recepci\u00f3n ser\u00eda confirmada en el canal descendente. Si hab\u00eda contenci\u00f3n por el canal ascendente, la terminal detectar\u00eda la falta de confirmaci\u00f3n de recepci\u00f3n y har\u00eda otro intento. Puesto que s\u00f3lo habr\u00eda un emisor en el canal descendente (la computadora central), nunca habr\u00eda colisiones ah\u00ed. Este sistema, llamado ALOHANET, trabajaba muy bien en condiciones de bajo tr\u00e1fico pero se ca\u00eda cuando el flujo de tr\u00e1fico ascendente era pesado. En esa misma \u00e9poca, un estudiante llamado Bob Metcalfe hizo su licenciatura en el M.I.T. y luego se mud\u00f3 para obtener su doctorado en Harvard. Durante sus estudios, conoci\u00f3 el trabajo de Abramson. Se interes\u00f3 tanto en \u00e9l que despu\u00e9s de graduarse en Harvard decidi\u00f3 pasar el verano en Hawaii trabajando con Abramson antes de empezar a trabajar en el Centro de Investigaci\u00f3n de Palo Alto de Xerox (PARC). Cuando lleg\u00f3 al PARC, vio que los investigadores de ah\u00ed hab\u00edan dise\u00f1ado y construido lo que m\u00e1s tarde se llamar\u00edan computadoras personales. Pero las m\u00e1quinas estaban aisladas. Aplicando su conocimiento del trabajo de Abramson, junto con su colega David Boggs, dise\u00f1\u00f3 e implement\u00f3 la primera red de \u00e1rea local (Metcalfe y Boggs, 1976). Llamaron Ethernet al sistema, por lo de luminiferous ether, a trav\u00e9s del cual se pens\u00f3 alguna vez que se propagaba la radiaci\u00f3n electromagn\u00e9tica. (Cuando, en el siglo XIX, el f\u00edsico ingl\u00e9s James Clerk Maxwell descubri\u00f3 que la radiaci\u00f3n electromagn\u00e9tica se pod\u00eda describir mediante una ecuaci\u00f3n de onda, los cient\u00edficos supusieron que el espacio deb\u00eda estar lleno de alg\u00fan medio et\u00e9reo en el cual se propagaba la radiaci\u00f3n. S\u00f3lo despu\u00e9s del famoso experimento de Michelson-Morley en 1887, los f\u00edsicos descubrieron que la radiaci\u00f3n electromagn\u00e9tica se pod\u00eda propagar por el vac\u00edo.) Aqu\u00ed el medio de transmisi\u00f3n no era el vac\u00edo, sino un cable coaxial grueso (el \u00e9ter) de m\u00e1s de 2.5 km de largo (con repetidoras cada 500 metros). El sistema pod\u00eda contener hasta 256 m\u00e1quinas por medio de transceptores acoplados al cable. Un cable con m\u00faltiples m\u00e1quinas en paralelo se llama cable de derivaci\u00f3n m\u00faltiple (multidrop). El sistema se ejecutaba a 2.94 Mbps. En la figura 1-34 se presenta un esbozo de su arquitectura. Ethernet ten\u00eda una mejora importante respecto de ALOHANET; antes de transmitir, una computadora ten\u00eda que escuchar el cable para ver si hab\u00eda alguien m\u00e1s transmitiendo. En caso de que ya lo hubiera, la computadora se manten\u00eda en espera de que la transmisi\u00f3n actual terminara. Al hacerlo as\u00ed se evitaba interferir con las transmisiones existentes, dando una mayor eficiencia. ALOHANET no trabajaba de este modo porque para una terminal en una isla era imposible detectar la transmisi\u00f3n de otra terminal en una isla distante. El problema se resolv\u00eda con un cable \u00fanico. A pesar de que la computadora escucha antes de transmitir, surge un problema: \u00bfqu\u00e9 sucede si dos o m\u00e1s computadoras esperan hasta que se complete la transmisi\u00f3n actual y luego empiezan\nSEC. 1.5\nREDES DE EJEMPLO\nTransceptor\n67\nCable de la interfaz\n\u00c9ter\nFigura 1-34. Arquitectura de la Ethernet original.\na transmitir al mismo tiempo? La soluci\u00f3n es que cada computadora escuche durante su propia transmisi\u00f3n y, si detecta interferencia, mande una se\u00f1al para poner en alerta a todos los transmisores. Despu\u00e9s espera un tiempo aleatorio antes de reintentarlo. Si sucede una colisi\u00f3n, el tiempo aleatorio de espera se duplica y as\u00ed sucesivamente, para separar las transmisiones que est\u00e1n en competencia y dar a alguna la oportunidad de transmitir primero. La Ethernet de Xerox fue tan exitosa que DEC, Intel y Xerox dise\u00f1aron un est\u00e1ndar en 1978 para una Ethernet de 10 Mbps, llamado est\u00e1ndar DIX. Con dos cambios menores, en 1983 el est\u00e1ndar DIX se convirti\u00f3 en el est\u00e1ndar IEEE 802.3. Por desgracia para Xerox, ya ten\u00eda fama de hacer inventos originales (como el de las computadoras personales) y luego fallar en la comercializaci\u00f3n de los mismos, como se menciona en un relato titulado Fumbling the Future (Smith y Alexander, 1988). Cuando Xerox mostr\u00f3 poco inter\u00e9s en hacer algo con Ethernet aparte de ayudar a estandarizarlo, Metcalfe form\u00f3 su propia empresa, 3Com, con el prop\u00f3sito de vender adaptadores Ethernet para PCs. Ha vendido m\u00e1s de 100 millones. Ethernet continu\u00f3 su desarrollo y a\u00fan est\u00e1 en desarrollo. Han salido nuevas versiones a 100 y 1000 Mbps, e incluso m\u00e1s altas. Tambi\u00e9n se ha mejorado el cableado y se han agregado conmutaci\u00f3n y otras caracter\u00edsticas. En el cap\u00edtulo 4 explicaremos Ethernet en detalle. De paso, vale la pena mencionar que Ethernet (IEEE 802.3) no es el \u00fanico est\u00e1ndar de LAN. El comit\u00e9 tambi\u00e9n estandariz\u00f3 Token Bus (802.4) y Token Ring (802.5). La necesidad de tres est\u00e1ndares m\u00e1s o menos incompatibles tiene poco que ver con la tecnolog\u00eda y mucho con la pol\u00edtica. En el momento de la estandarizaci\u00f3n, General Motors estaba impulsando una LAN en la que la topolog\u00eda era la misma que la usada en Ethernet (un cable linear), pero las computadoras transmit\u00edan por turnos pasando un peque\u00f1o paquete de computadora a computadora, llamado token. Una computadora pod\u00eda transmitir s\u00f3lo si pose\u00eda el token, lo que evitaba colisiones. General Motors anunci\u00f3 que este esquema era esencial para la manufactura de autom\u00f3viles y que no estaba preparado para cambiar su postura. No obstante este anuncio, el 802.4 pr\u00e1cticamente desapareci\u00f3. Del mismo modo, IBM ten\u00eda su favorito: su Token Ring patentado. En este esquema el token se pasaba a trav\u00e9s del anillo y la computadora que poseyera el token pod\u00eda transmitir antes de poner el token de nuevo en el anillo. A diferencia del 802.4, este esquema, estandarizado como 802.5,\n68\nINTRODUCCI\u00d3N\nCAP. 1\na\u00fan se usa en algunos sitios de IBM, pero pr\u00e1cticamente en ninguna parte m\u00e1s. Sin embargo, se est\u00e1 desarrollando una versi\u00f3n de 1 gigabit (802.5v), pero parece poco probable que alcance a Ethernet. Resumiendo, hab\u00eda una guerra entre Ethernet, Token Bus y Token Ring, pero Ethernet gan\u00f3, en gran medida porque fue la primera y los retadores no pudieron superarlo.\n1.5.4 LANs inal\u00e1mbricas: 802.11 Casi al mismo tiempo que aparecieron las computadoras port\u00e1tiles, muchas personas tuvieron el sue\u00f1o de andar por la oficina y poder conectar a Internet su computadora. En consecuencia, varios grupos empezaron a trabajar para cumplir con esta meta. El m\u00e9todo m\u00e1s pr\u00e1ctico es equipar las computadoras de la oficina y las port\u00e1tiles con transmisores y receptores de radio de onda corta que les permitan comunicarse. Este trabajo condujo r\u00e1pidamente a que varias empresas empezaran a comercializar las LANs inal\u00e1mbricas. El problema es que no hab\u00eda compatibilidad entre ninguna de ellas. Esta proliferaci\u00f3n de est\u00e1ndares implicaba que una computadora equipada con un radio de marca X no funcionara en un cuarto equipado con una estaci\u00f3n de base marca Y. Finalmente, la industria decidi\u00f3 que un est\u00e1ndar de LAN inal\u00e1mbrica ser\u00eda una buena idea, por lo que al comit\u00e9 del IEEE que estandariz\u00f3 las LANs al\u00e1mbricas se le encarg\u00f3 la tarea de dise\u00f1ar un est\u00e1ndar para LANs inal\u00e1mbricas. El est\u00e1ndar resultante se llam\u00f3 802.11. En la jerga com\u00fan se le conoce como WiFi. Es un est\u00e1ndar importante y merece respeto, as\u00ed que lo llamaremos por su nombre propio, 802.11. El est\u00e1ndar propuesto ten\u00eda que trabajar en dos modos: 1. En presencia de una estaci\u00f3n base. 2. En ausencia de una estaci\u00f3n base. En el primer caso, toda la comunicaci\u00f3n se hac\u00eda a trav\u00e9s de la estaci\u00f3n base, que en la terminolog\u00eda del 802.11 se conoce como punto de acceso. En el segundo caso, las computadoras podr\u00edan enviarse mensajes entre s\u00ed directamente. Este modo se llama a veces red ad hoc. Un ejemplo t\u00edpico es el de dos o m\u00e1s personas que se encuentran juntas en un cuarto no equipado con una LAN inal\u00e1mbrica y cuyas computadoras se comunican entre s\u00ed de manera directa. Los dos modos se ilustran en la figura 1-35. La primera decisi\u00f3n fue la m\u00e1s sencilla: c\u00f3mo llamarlo. Todos las otros est\u00e1ndares LAN ten\u00edan n\u00fameros como 802.1, 802.2, hasta 802.10, por lo que el est\u00e1ndar LAN se llam\u00f3 o public\u00f3 como 802.11. El resto fue m\u00e1s dif\u00edcil. En particular, varios de los diversos retos que hab\u00eda que enfrentar eran: encontrar una banda de frecuencia adecuada, de preferencia mundial; enfrentar el hecho de que las se\u00f1ales de radio tienen un rango finito; asegurarse de que se mantuviera la privacidad de los usuarios; tomar en cuenta la vida limitada de las bater\u00edas; preocuparse por la seguridad humana (\u00bflas ondas de radio causan c\u00e1ncer?); comprender las implicaciones de la movilidad de las computadoras y, por \u00faltimo, construir un sistema con suficiente ancho de banda para que sea econ\u00f3micamente viable.\nSEC. 1.5\n69\nREDES DE EJEMPLO Estaci\u00f3n A la red al\u00e1mbrica base\n(a)\n(b)\nFigura 1-35. (a) Red inal\u00e1mbrica con una estaci\u00f3n base. (b) Red ad hoc.\nCuando empez\u00f3 el proceso de estandarizaci\u00f3n (a mediados de la d\u00e9cada de 1990), Ethernet ya hab\u00eda llegado a dominar las redes de \u00e1rea local, por lo que el comit\u00e9 decidi\u00f3 hacer que el 802.11 fuera compatible con Ethernet sobre la capa de enlace de datos. En particular, se podr\u00eda enviar un paquete IP sobre la LAN inal\u00e1mbrica del mismo modo en que una computadora conectada mediante cable enviaba un paquete IP a trav\u00e9s de Ethernet. No obstante, existen algunas diferencias inherentes con Ethernet en las capas f\u00edsica y de enlace de datos y tuvieron que manejarse mediante el est\u00e1ndar. Primero, una computadora en Ethernet siempre escucha el medio antes de transmitir. S\u00f3lo si el medio est\u00e1 inactivo la computadora puede empezar a transmitir. Esta idea no funciona igual en las LANs inal\u00e1mbricas. Para ver por qu\u00e9, examine la figura 1-36. Suponga que la computadora A est\u00e1 transmitiendo a la computadora B, pero el alcance del radio del transmisor de A es muy corto para encontrar a la computadora C. Si C desea transmitir a B puede escuchar el medio antes de empezar, pero el hecho de que no escuche nada no quiere decir que su transmisi\u00f3n tendr\u00e1 \u00e9xito. El est\u00e1ndar 802.11 ten\u00eda que resolver este problema. El segundo problema que se ten\u00eda que resolver es que los objetos s\u00f3lidos pueden reflejar una se\u00f1al de radio, por lo que \u00e9sta se podr\u00eda recibir m\u00faltiples veces (a trav\u00e9s de varias rutas). Esta interferencia da como resultado lo que se llama desvanecimiento por m\u00faltiples trayectorias. El tercer problema es que una gran cantidad de software no toma en cuenta la movilidad. Por ejemplo, muchos procesadores de texto tienen una lista de impresoras de entre las cuales los usuarios pueden elegir para imprimir un archivo. Cuando la computadora en la que se ejecuta el procesador de texto se coloca en un nuevo entorno, la lista interna de impresoras ya no es \u00fatil. El cuarto problema es que si una computadora port\u00e1til se mueve lejos de la estaci\u00f3n base que est\u00e1 usando y dentro del rango de una estaci\u00f3n base diferente, se requiere alg\u00fan tipo de manejo. Aunque este problema ocurre con los tel\u00e9fonos celulares, eso no sucede con Ethernet y requiere soluci\u00f3n. En particular, la red prevista consta de m\u00faltiples celdas, cada una con su propia estaci\u00f3n base pero con las estaciones base conectadas por Ethernet, como se muestra en la figura 1-37. Desde fuera todo el sistema se ver\u00eda como una Ethernet sola. La conexi\u00f3n entre el sistema 802.11 y el mundo exterior se conoce como portal.\n70\nINTRODUCCI\u00d3N\nRango del radio de C\nRango del radio de A\nA\nCAP. 1\nB\nC\nFigura 1-36. El rango de un solo radio no podr\u00eda cubrir todo el sistema.\nDespu\u00e9s de alg\u00fan trabajo, el comit\u00e9 se present\u00f3 en 1997 con un est\u00e1ndar que se dirig\u00eda a \u00e9stos y otros respectos. La LAN inal\u00e1mbrica descrita se ejecutaba a 1 o 2 Mbps. Casi de inmediato la gente comenz\u00f3 a quejarse de que era demasiado lenta, de manera que empezaron a trabajar en est\u00e1ndares m\u00e1s r\u00e1pidos. Una divisi\u00f3n desarrollada con el comit\u00e9 tuvo como resultado dos nuevos est\u00e1ndares en 1999. El est\u00e1ndar 802.11a utiliza una banda de frecuencia m\u00e1s ancha y se ejecuta a velocidades de hasta 54 Mbps. El est\u00e1ndar 802.11b utiliza la misma banda de frecuencia que el 802.11, pero se vale de una t\u00e9cnica de modulaci\u00f3n diferente para alcanzar 11 Mbps. Algunas personas ven esto como un aspecto psicol\u00f3gico importante puesto que 11 Mbps es m\u00e1s r\u00e1pido que la Ethernet al\u00e1mbrica original. Es posible que el 802.11 original de 1 Mbps desaparezca con rapidez, pero a\u00fan no queda claro cu\u00e1l de los nuevos est\u00e1ndares ser\u00e1 el ganador.\nEthernet\nEstaci\u00f3n base Portal\nCelda\nFigura 1-37. Una red 802.11 de m\u00faltiples celdas.\nPara hacer las cosas todav\u00eda m\u00e1s complicadas, el comit\u00e9 802 ha creado otra variante, el 802.11g, que utiliza la t\u00e9cnica de modulaci\u00f3n del 802.11a pero la banda de frecuencia del 802.11b. En el cap\u00edtulo 4 trataremos en detalle al 802.11.\nSEC. 1.6\nESTANDARIZACI\u00d3N DE REDES\n71\nSin lugar a dudas, el 802.11 va a causar una revoluci\u00f3n en computaci\u00f3n y en el acceso a Internet. Aeropuertos, estaciones de trenes, hoteles, centros comerciales y universidades lo est\u00e1n instalando r\u00e1pidamente. Incluso cafeter\u00edas de lujo est\u00e1n instalando el 802.11 para que los yuppies que se re\u00fanen puedan navegar en Web mientras toman su caf\u00e9 con leche. Es posible que el 802.11 haga por Internet lo que las computadoras port\u00e1tiles hicieron por la computaci\u00f3n: volverla m\u00f3vil.\n1.6 ESTANDARIZACI\u00d3N DE REDES Existen muchos fabricantes y proveedores de redes, cada uno con sus propias ideas de c\u00f3mo se deben hacer las cosas. Sin coordinaci\u00f3n ser\u00eda un caos total y los usuarios nunca conseguir\u00edan nada. La \u00fanica manera de resolver esta situaci\u00f3n es ponerse de acuerdo en la adopci\u00f3n de algunos est\u00e1ndares para redes. Los est\u00e1ndares no s\u00f3lo permiten que computadoras diferentes se comuniquen, sino que tambi\u00e9n incrementan el mercado de productos que se ajustan al est\u00e1ndar. Un mercado grande conduce a la producci\u00f3n masiva, econom\u00edas de escala en la producci\u00f3n, implementaciones VLSI y otros beneficios que disminuyen el precio e incrementan a\u00fan m\u00e1s la aceptaci\u00f3n. En las siguientes secciones daremos un vistazo al importante, pero poco conocido, mundo de la estandarizaci\u00f3n internacional. Los est\u00e1ndares se dividen en dos categor\u00edas: de facto y de jure. Los est\u00e1ndares de facto (\u201cde hecho\u201d) son los que simplemente surgieron, sin ning\u00fan plan formal. La PC de IBM y sus sucesoras son est\u00e1ndares de facto para oficinas chicas y equipos dom\u00e9sticos porque docenas de fabricantes decidieron copiar exactamente las m\u00e1quinas de IBM. Del mismo modo, UNIX es el est\u00e1ndar de facto para sistemas operativos en los departamentos de ciencias de la computaci\u00f3n de las universidades. En contraste, los est\u00e1ndares de jure (\u201cpor derecho\u201d), son formales, legales, adoptados por alguna instituci\u00f3n de estandarizaci\u00f3n autorizada. Por lo general, las autoridades de estandarizaci\u00f3n internacional se dividen en dos clases: las establecidas por acuerdos entre los gobiernos de cada pa\u00eds, y las incluidas de manera voluntaria, sin acuerdos entre organizaciones. En el \u00e1rea de los est\u00e1ndares de redes de computadoras hay varias organizaciones de cada tipo, las cuales explicaremos a continuaci\u00f3n.\n1.6.1 Qui\u00e9n es qui\u00e9n en el mundo de las telecomunicaciones La situaci\u00f3n legal de las compa\u00f1\u00edas telef\u00f3nicas del mundo var\u00eda considerablemente de un pa\u00eds a otro. En un extremo est\u00e1n los Estados Unidos con sus 1500 empresas telef\u00f3nicas privadas individuales. Antes de que AT&T se dividiera, en 1984, era la empresa m\u00e1s grande del mundo y dominaba el escenario. Proporcionaba servicio telef\u00f3nico a casi 80% de los usuarios de Estados\n72\nINTRODUCCI\u00d3N\nCAP. 1\nUnidos, con sucursales diseminadas en la mitad del pa\u00eds; las compa\u00f1\u00edas oponentes atend\u00edan al resto de los clientes (en su mayor parte rurales). Desde que se dividi\u00f3, AT&T sigue proporcionando servicio de larga distancia, pero ahora en competencia con otras empresas. Las siete Compa\u00f1\u00edas Operadoras Regionales de Bell que surgieron de la divisi\u00f3n de AT&T y numerosas empresas independientes proporcionan servicios de telefon\u00eda local y celular. Debido a las frecuentes fusiones y otros cambios, la industria est\u00e1 en un estado de movimiento constante. Las empresas que dan servicios de comunicaci\u00f3n al p\u00fablico en Estados Unidos se llaman portadoras comunes (carriers). Las ofertas y precios se describen en un documento llamado tarifa, el cual debe ser aprobado por la Comisi\u00f3n Federal de Comunicaciones para el tr\u00e1fico interestatal e internacional, pero el tr\u00e1fico estatal interno lo aprueban las comisiones de servicios p\u00fablicos. En el otro extremo est\u00e1n los pa\u00edses en los cuales el gobierno respectivo tiene el monopolio de todas las comunicaciones, como correos, tel\u00e9grafos, tel\u00e9fonos y a veces la radio y la televisi\u00f3n. La mayor parte del mundo cae dentro de esta categor\u00eda. En algunos casos la autoridad de la telecomunicaci\u00f3n es una compa\u00f1\u00eda nacionalizada y en otros es simplemente una rama del gobierno, conocida generalmente como PTT (administraci\u00f3n de Correos, Tel\u00e9grafos y Tel\u00e9fonos). La tendencia a nivel mundial es hacia una liberaci\u00f3n y competencia, y alejarse del monopolio gubernamental. La mayor\u00eda de los pa\u00edses europeos tiene privatizadas (parcialmente) sus PTTs, pero en otras partes el proceso avanza con lentitud. Con tantos proveedores diferentes de servicios, es claro que se necesita una compatibilidad a escala mundial para asegurarse de que las personas (y las computadoras) de un pa\u00eds puedan llamar a sus contrapartes en otro. En realidad, esta necesidad ha existido desde hace mucho tiempo. En 1865, los representantes de muchos gobiernos de Europa se reunieron para formar el predecesor de la actual ITU (Uni\u00f3n Internacional de Telecomunicaciones). Su trabajo era estandarizar las telecomunicaciones internacionales, que en esos d\u00edas se hac\u00edan mediante el tel\u00e9grafo. Incluso entonces era patente que si la mitad de los pa\u00edses utilizaba el c\u00f3digo Morse y la otra utilizaba un c\u00f3digo diferente, surgir\u00eda un problema. Cuando el tel\u00e9fono entr\u00f3 al servicio internacional, la ITU empez\u00f3 a trabajar en la estandarizaci\u00f3n de la telefon\u00eda. En 1947 la ITU se convirti\u00f3 en una agencia de las Naciones Unidas. La ITU tiene tres sectores principales: 1. Radiocomunicaciones (ITU-R). 2. Estandarizaci\u00f3n de telecomunicaciones (ITU-T). 3. Desarrollo (ITU-D). La ITU-R se ocupa de asignar frecuencias de radio en todo el mundo a los grupos de inter\u00e9s en competencia. Nos enfocaremos en primer lugar en la ITU-T, que se ocupa de los sistemas telef\u00f3nicos y de comunicaci\u00f3n de datos. De 1956 a 1993, la ITU-T se conoc\u00eda como CCITT (del franc\u00e9s Comit\u00e9 Consultatif International T\u00e9l\u00e9graphique et T\u00e9l\u00e9phonique, Comit\u00e9 Consultivo Internacional para la Telegraf\u00eda y Telefon\u00eda). El 1o. de marzo de 1993 el CCITT se reorganiz\u00f3 para hacerlo menos burocr\u00e1tico y cambi\u00f3 de nombre para reflejar su nuevo papel. Tanto la ITU-T como el CCITT emitieron recomendaciones en el \u00e1rea de comunicaciones telef\u00f3nicas y de datos.\nSEC. 1.6\nESTANDARIZACI\u00d3N DE REDES\n73\nEs frecuente encontrar algunas de las recomendaciones del CCITT, como la X.25 del CCITT, aunque desde 1993 las recomendaciones llevan la etiqueta de la ITU-T. La ITU-T tiene cuatro clases de miembros: 1. Gobiernos nacionales. 2. De sector. 3. Asociados. 4. Agencias reguladoras. La ITU-T tiene alrededor de 200 miembros gubernamentales, entre ellos casi todos los miembros de las Naciones Unidas. Puesto que Estados Unidos no tiene una PTT, alguien m\u00e1s ten\u00eda que representarlos en la ITU-T. Esta tarea recay\u00f3 en el Departamento de Estado, probablemente porque la ITU-T ten\u00eda que ver con los pa\u00edses extranjeros, que era la especialidad del Departamento de Estado. Hay aproximadamente 500 miembros de sector, incluyendo compa\u00f1\u00edas telef\u00f3nicas (por ejemplo, AT&T, Vodafone, WorldCom), fabricantes de equipos de telecomunicaci\u00f3n (como Cisco, Nokia, Nortel), fabricantes de computadoras (como Compaq, Sun, Toshiba), fabricantes de chips (como Intel, Motorola, TI), compa\u00f1\u00eda de medios (como AOL Time Warner, CBS, Sony) y otras empresas interesadas (como Boeing, Samsung, Xerox). Varias organizaciones cient\u00edficas no lucrativas y consorcios industriales tambi\u00e9n son miembros de sector (por ejemplo, IFIP e IATA). Los miembros asociados son organizaciones m\u00e1s peque\u00f1as que se interesan en un grupo de estudio en particular. Las agencias reguladoras son quienes vigilan el negocio de la telecomunicaci\u00f3n, como la Comisi\u00f3n Federal de Comunicaciones de Estados Unidos. La tarea de la ITU-T es hacer recomendaciones t\u00e9cnicas sobre telefon\u00eda, telegraf\u00eda y las interfaces de comunicaci\u00f3n de datos. Estas recomendaciones suelen convertirse en est\u00e1ndares reconocidos internacionalmente, por ejemplo el V.24 (tambi\u00e9n conocido en Estados Unidos como EIA RS-232), el cual especifica la ubicaci\u00f3n y significado de los diversos pines en el conector utilizado para la mayor\u00eda de las terminales as\u00edncronas y m\u00f3dems externos. Es preciso observar que las recomendaciones de la ITU-T t\u00e9cnicamente son s\u00f3lo sugerencias que los gobiernos pueden adoptar o ignorar (ya que los gobiernos parecen adolescentes de 13 a\u00f1os a quienes no les gusta recibir \u00f3rdenes). En la pr\u00e1ctica, un pa\u00eds que desee adoptar un est\u00e1ndar telef\u00f3nico diferente del utilizado por el resto del mundo, es libre de hacerlo, pero el precio es el aislamiento. Esto podr\u00eda funcionar en Corea del Norte, pero fuera de ah\u00ed ser\u00eda un verdadero problema. El sofisma de llamar \u201crecomendaciones\u201d a los est\u00e1ndares de la ITU-T era y es necesario para mantener en calma el nacionalismo de varios pa\u00edses. El trabajo verdadero de la ITU-T se realiza en sus 14 grupos de estudio, a veces de hasta 400 personas, que abarcan aspectos que van desde la facturaci\u00f3n telef\u00f3nica hasta servicios de multimedia. Para conseguir la realizaci\u00f3n de los proyectos, los grupos de estudio se dividen en equipos de trabajo, que a su vez se dividen en equipos de expertos, que a su vez se dividen en grupos espec\u00edficos. Una vez bur\u00f3crata, jam\u00e1s se deja de serlo.\n74\nINTRODUCCI\u00d3N\nCAP. 1\nA pesar de todo esto, en realidad la ITU-T hace su trabajo. Desde que surgi\u00f3, ha producido cerca de 3000 recomendaciones que ocupan cerca de 60,000 p\u00e1ginas de papel. Muchas de ellas se han llevado a la pr\u00e1ctica en gran medida. Por ejemplo, una de sus recomendaciones es el popular est\u00e1ndar V.90 para m\u00f3dems de 56 kbps. En tanto las comunicaciones completen la transici\u00f3n, que empez\u00f3 en la d\u00e9cada de 1980, de ser nacionales totalmente a ser globales totalmente, los est\u00e1ndares llegar\u00e1n a ser m\u00e1s importantes cada vez, y m\u00e1s y m\u00e1s organizaciones querr\u00e1n estar implicadas en su establecimiento. Para m\u00e1s informaci\u00f3n sobre la ITU, vea (Irmer, 1994).\n1.6.2 Qui\u00e9n es qui\u00e9n en los est\u00e1ndares internacionales Los est\u00e1ndares internacionales son producidos y publicados por la ISO (Organizaci\u00f3n de Est\u00e1ndares Internacionales),\u2020 una organizaci\u00f3n voluntaria no surgida de un acuerdo, fundada en 1946. Sus miembros son las organizaciones de est\u00e1ndares nacionales de los 89 pa\u00edses miembro. Entre ellos se encuentran ANSI (Estados Unidos), BSI (Gran Breta\u00f1a), AFNOR (Francia), DIN (Alemania) y otros 85. La ISO emite est\u00e1ndares sobre una gran cantidad de temas, desde los m\u00e1s b\u00e1sicos (literalmente) como tuercas y pernos, hasta el revestimiento de los postes telef\u00f3nicos (sin mencionar las semillas de cacao [ISO 2451], las redes de pesca [ISO 1530], ropa interior femenina [ISO 4416] y algunos otros objetos que no se pensar\u00eda que fueran sujetos de estandarizaci\u00f3n). Se han emitido m\u00e1s de 13,000 est\u00e1ndares, entre ellos los est\u00e1ndares de OSI. La ISO tiene casi 200 comit\u00e9s t\u00e9cnicos, numerados por el orden de su creaci\u00f3n, refiri\u00e9ndose cada uno a un objeto espec\u00edfico. El TC1 se ocupa de las tuercas y pernos (estandariza la rosca de los tornillos). El TC97 trata con computadoras y procesamiento de informaci\u00f3n. Cada TC tiene subcomit\u00e9s (SCs) divididos en grupos de trabajo (WGs). El trabajo real lo hacen sobre todo los WGs, integrados por m\u00e1s de 100,000 voluntarios en todo el mundo. Muchos de estos \u201cvoluntarios\u201d son asignados a trabajar en asuntos de la ISO por sus empleadores, cuyos productos se est\u00e1n estandarizando. Otros son oficiales gubernamentales ansiosos de que lo que se hace en su pa\u00eds llegue a ser est\u00e1ndar internacional. Los expertos acad\u00e9micos tambi\u00e9n est\u00e1n activos en muchos de los WGs. En cuanto a est\u00e1ndares de telecomunicaci\u00f3n, la ISO y la ITU-T suelen cooperar (la ISO es miembro de la ITU-T), para evitar la iron\u00eda de dos est\u00e1ndares internacionales oficiales mutuamente incompatibles. El representante de Estados Unidos en la ISO es el ANSI (Instituto Estadounidense de Est\u00e1ndares Nacionales), que a pesar de su nombre es una organizaci\u00f3n privada no gubernamental y no lucrativa. Sus miembros son fabricantes, empresas portadoras comunes y otras partes interesadas. La ISO suele adoptar los est\u00e1ndares ANSI como est\u00e1ndares internacionales. El procedimiento seguido por la ISO para adoptar est\u00e1ndares se ha dise\u00f1ado para obtener el mayor consenso posible. El proceso inicia cuando alguna de las organizaciones de est\u00e1ndares\n\u2020Para los puristas, el verdadero nombre de la ISO es Organizaci\u00f3n Internacional para la Estandarizaci\u00f3n.\nSEC. 1.6\nESTANDARIZACI\u00d3N DE REDES\n75\nnacionales siente la necesidad de un est\u00e1ndar internacional en un \u00e1rea determinada. Entonces se forma un grupo de trabajo para presentar un CD (Borrador de Comit\u00e9). El CD se distribuye a todos los miembros, que tienen seis meses para criticarlo. Si la mayor\u00eda lo aprueba, se revisa y distribuye un documento revisado, llamado DIS (Borrador de Est\u00e1ndar Internacional) para comentarios y votaci\u00f3n. Con base en los resultados de esta vuelta, se prepara, aprueba y publica el texto final del IS (Est\u00e1ndar Internacional). En \u00e1reas de gran controversia, un CD o un DIS podr\u00eda llegar a tener varias versiones antes de lograr suficientes votos y todo el proceso puede llegar a tardar a\u00f1os. El NIST (Instituto Nacional de Est\u00e1ndares y Tecnolog\u00eda) es parte del Departamento de Comercio de Estados Unidos. Se llamaba Oficina Nacional de Est\u00e1ndares. Emite est\u00e1ndares que son obligatorios para compras hechas por el gobierno de Estados Unidos, excepto por los del Departamento de Defensa, que tiene sus propios est\u00e1ndares. Otro representante importante en el mundo de los est\u00e1ndares es el IEEE (Instituto de Ingenieros El\u00e9ctricos y Electr\u00f3nicos), la mayor organizaci\u00f3n de profesionales del mundo. Adem\u00e1s de publicar multitud de peri\u00f3dicos y organizar cientos de conferencias cada a\u00f1o, el IEEE tiene un grupo de estandarizaci\u00f3n que desarrolla est\u00e1ndares en el \u00e1rea de ingenier\u00eda el\u00e9ctrica y computaci\u00f3n. El comit\u00e9 802 del IEEE ha estandarizado muchos tipos de LANs. Estudiaremos algunos de sus resultados m\u00e1s adelante. El trabajo real lo hace un conjunto de grupos de trabajo, que se listan en la figura 1.38. La tasa de \u00e9xito de los diversos grupos de trabajo del 802 ha sido baja; el hecho de tener un n\u00famero 802.x no garantiza el \u00e9xito. Pero el impacto de las historias de \u00e9xito (en especial, del 802.3 y el 802.11) ha sido tremendo.\n1.6.3 Qui\u00e9n es qui\u00e9n en el mundo de los est\u00e1ndares de Internet El amplio mundo de Internet tiene sus propios mecanismos de estandarizaci\u00f3n, muy diferentes de los de la ITU-T y la ISO. La diferencia se puede resumir diciendo que quienes asisten a las reuniones de estandarizaci\u00f3n de la ITU o la ISO van de traje, pero las personas que asisten a las juntas de estandarizaci\u00f3n de Internet van de mezclilla (excepto cuando se re\u00fanen en San Diego, donde van de short y camiseta). En las reuniones de la ITU y la ISO abundan los oficiales corporativos y bur\u00f3cratas, para quienes la estandarizaci\u00f3n es su trabajo. Se refieren a la estandarizaci\u00f3n como una Cosa Buena y dedican sus vidas a ella. Por otro lado, la gente de Internet prefiere la anarqu\u00eda por cuesti\u00f3n de principios. Sin embargo, con cientos de millones de personas haciendo sus propias cosas, la comunicaci\u00f3n es escasa. Por lo tanto, los est\u00e1ndares, aunque deplorables, son necesarios. Cuando se configur\u00f3 ARPANET, el DoD cre\u00f3 un comit\u00e9 informal para supervisarla. En 1983 se dio otro nombre al comit\u00e9: IAB (Consejo de Actividades de Internet) y se le encomend\u00f3 una misi\u00f3n un poco m\u00e1s amplia, que era la de mantener a los investigadores de ARPANET y de Internet apuntando m\u00e1s o menos en la misma direcci\u00f3n; algo muy parecido a juntar una manada de gatos. El significado del acr\u00f3nimo \u201cIAB\u201d se cambi\u00f3 a Consejo para la Arquitectura de Internet.\n76\nINTRODUCCI\u00d3N N\u00famero 802.1 802.2\nTema Supervisi\u00f3n y arquitectura de LANs\n\u2193\n802.3 *\nControl l\u00f3gico de enlace Ethernet\n\u2193\nToken bus (se utiliz\u00f3 por un corto tiempo en plantas manufactureras)\n802.6\n\u2193\nCola dual, bus dual (primera red de \u00e1rea metropolitana)\n802.7\n\u2193\nGrupo de consultor\u00eda t\u00e9cnico de tecnolog\u00edas de banda ancha\n802.4 802.5\nToken ring (entrada de IBM al mundo de las LANs)\n802.8 \u2020 802.9\nCAP. 1\n\u2193\nGrupo de consultor\u00eda de tecnolog\u00edas de fibra \u00f3ptica LANs s\u00edncrona (para aplicaciones de tiempo real)\n802.10 \u2193\nLANs virtuales y seguridad\n802.11 *\nLANs inal\u00e1mbricas\n802.12 \u2193\nDemanda de prioridad (AnyLAN de Hewlett-Packard)\n802.13\nN\u00famero de mala suerte. Nadie lo quiso\n802.14 \u2193\nM\u00f3dems de cable (desaparecido: primero surgi\u00f3 un consorcio en la industria)\n802.15 *\nRedes de \u00e1rea personal (Bluetooth)\n802.16 *\nRedes inal\u00e1mbricas de \u00e1rea ancha\n802.17\nAnillo de paquete el\u00e1stico\nFigura 1-38. Los grupos de trabajo del 802. Los importantes se marcan con *. Los que se marcan con \u2193 est\u00e1n en hibernaci\u00f3n. El que tiene la \u2020 se desintegr\u00f3.\nCada uno de los aproximadamente 10 miembros del IAB encabezaba una fuerza de trabajo relacionada con alg\u00fan asunto importante. El IAB se reun\u00eda varias veces al a\u00f1o para discutir los resultados y para dar retroalimentaci\u00f3n al DoD y a la NSF, que proporcionaban la mayor parte de los fondos en aquel entonces. Cuando se necesitaba un est\u00e1ndar (por ejemplo, un nuevo algoritmo de enrutamiento), los miembros del IAB le daban soluci\u00f3n y despu\u00e9s anunciaban los cambios para que los estudiantes que estuvieran a cargo de la implementaci\u00f3n del software pudieran realizarlos. La comunicaci\u00f3n se llevaba a cabo mediante una serie de informes t\u00e9cnicos denominados RFCs (Solicitudes de Comentarios). Estos informes se almacenan en l\u00ednea y cualquiera que est\u00e9 interesado en ellos puede descargarlos de www.ietf.org/rfc. Los RFCs se encuentran organizados por el orden cronol\u00f3gico de su creaci\u00f3n. Actualmente existen alrededor de 3000. En este libro mencionaremos muchos RFCs. Para 1989 Internet hab\u00eda crecido tanto que este estilo sumamente informal dej\u00f3 de ser funcional. Muchos fabricantes ofrec\u00edan productos de TCP/IP en ese entonces y no deseaban cambiarlos tan s\u00f3lo porque 10 investigadores hab\u00edan concebido una mejor idea. El IAB fue reorganizado de nueva cuenta en el verano de 1989. Los investigadores fueron transferidos a la IRTF (Fuerza de Trabajo para la Investigaci\u00f3n sobre Internet), que fue puesta bajo el mando del IAB, junto con la IETF (Fuerza de Trabajo para la Ingenier\u00eda de Internet). El IAB se renov\u00f3 con nuevos\nSEC. 1.7\nUNIDADES M\u00c9TRICAS\n77\nmiembros, que representaban a un rango m\u00e1s amplio de organizaciones que tan s\u00f3lo a la comunidad de investigadores. Inicialmente fue un grupo que se autorrenovaba, cuyos miembros serv\u00edan durante dos a\u00f1os y ellos mismos designaban a sus sucesores. M\u00e1s tarde se cre\u00f3 la Sociedad de Internet, integrada por gente interesada en Internet. En cierto sentido, esta sociedad se asemeja al ACM o al IEEE. Es dirigida por administradores electos que designan a los miembros del IAB. El prop\u00f3sito de esta divisi\u00f3n era que la IRTF se concentrara en proyectos de investigaci\u00f3n a largo plazo, en tanto que la IETF se encargaba de proyectos de ingenier\u00eda a corto plazo. La IETF se dividi\u00f3 en grupos de trabajo, cada uno a cargo de un problema espec\u00edfico. Inicialmente, los l\u00edderes de cada grupo se reun\u00edan en un comit\u00e9 para dirigir los proyectos de ingenier\u00eda. Entre los temas de los grupos de trabajo est\u00e1n nuevas aplicaciones, informaci\u00f3n de usuario, integraci\u00f3n OSI, enrutamiento y direccionamiento, seguridad, administraci\u00f3n de redes y est\u00e1ndares. Con el tiempo se formaron tantos grupos de trabajo (m\u00e1s de 70), que se ordenaron por \u00e1reas y el l\u00edder de cada \u00e1rea formaba parte del comit\u00e9 directivo. Adem\u00e1s, se adopt\u00f3 un proceso de estandarizaci\u00f3n m\u00e1s formal, con base en el ISO. Para convertirse en Est\u00e1ndar Propuesto, la idea fundamental deb\u00eda explicarse completamente en un RFC y despertar suficiente inter\u00e9s en la comunidad. Para avanzar a la etapa de Est\u00e1ndar Borrador, una implementaci\u00f3n funcional deb\u00eda haber sido rigurosamente probada por al menos dos sitios independientes durante al menos cuatro meses. Si el IAB se convence de que la idea suena l\u00f3gica y el software funciona, declara que el RFC es un Est\u00e1ndar de Internet. Algunos de estos est\u00e1ndares se han convertido en est\u00e1ndares del DoD (MIL-STD), con lo cual son obligatorios para los proveedores del DoD. En cierta ocasi\u00f3n, David Clark hizo el siguiente comentario, ahora famoso, acerca del proceso de estandarizaci\u00f3n de Internet: \u201cconsenso apretado y c\u00f3digo que funcione\u201d.\n1.7 UNIDADES M\u00c9TRICAS Para evitar confusiones, vale la pena indicar de manera expl\u00edcita que en este libro, como en las ciencias de la computaci\u00f3n en general, se utilizan unidades m\u00e9tricas en lugar de las unidades inglesas tradicionales. En la figura 1.39 se muestran los principales prefijos del sistema m\u00e9trico. Por lo general, los prefijos se abrevian mediante sus primeras letras, con las unidades mayores que uno en may\u00fasculas (KB, MB, etc\u00e9tera). Una excepci\u00f3n (por razones hist\u00f3ricas) es kbps, de kilobits por segundo. Por lo tanto, una l\u00ednea de comunicaci\u00f3n de 1 Mbps transmite 106 bits por segundo y un reloj de 100 pseg (o 100 ps) marca cada 10\u221210 segundos. Dado que tanto mili como micro empiezan con la letra \u201cm\u201d, se tiene que hacer una distinci\u00f3n. Por lo general, \u201cm\u201d es para mili y \u201c\u03bc\u201d (la letra griega mu) es para micro. Tambi\u00e9n vale la pena se\u00f1alar que para medir el tama\u00f1o de la memoria, de disco, de archivo y de bases de datos, en la pr\u00e1ctica com\u00fan de la industria de la computaci\u00f3n las unidades tienen equivalencias ligeramente distintas. En \u00e9sta, kilo equivale a 210 (1024) en vez de 103 (1000) porque las memorias siempre son potencias de dos. De esta forma, 1 KB de memoria son 1024 bytes, no 1000 bytes. De manera similar, 1 MB de memoria son 220 (1,048,576) bytes, 1 GB de memoria son 230 (1,073,741,824) bytes, y 1 TB de base de datos son 240 (1,099,511,627,776) bytes. No obstante, una l\u00ednea de comunicaci\u00f3n de 1 kbps transmite 1000 bits por segundo y una LAN de\n78\nINTRODUCCI\u00d3N\nCAP. 1\nExp.\nExpl\u00edcito\nPrefijo\nExp.\n103\n0.001\nmili\n103\n106\n0.000001\nmicro\n106\n1,000,000\n0.000000001\nnano\n109\n1,000,000,000\nGiga\n12\n10 10\n9 12\n1015 10 10\n18 21\n1024\nExpl\u00edcito 1,000\nPrefijo Kilo Mega\n0.000000000001\npico\n10\n1,000,000,000,000\nTera\n0.000000000000001\nfemto\n1015\n1,000,000,000,000,000\nPeta\n18\n0.0000000000000000001\natto\n10\n1,000,000,000,000,000,000\nExa\n21\n1,000,000,000,000,000,000,000\nZeta\n1,000,000,000,000,000,000,000,000\nYotta\n0.0000000000000000000001\nzepto\n10\n0.0000000000000000000000001\nyocto\n1024\nFigura 1-39. Los principales prefijos m\u00e9tricos.\n10 Mbps corre a 10,000,000 de bits por segundo debido a que estas velocidades no son potencias de dos. Desgraciadamente, mucha gente mezcla estos dos sistemas, en particular en lo referente a los tama\u00f1os de disco. Para evitar la ambig\u00fcedad, en este libro utilizaremos los s\u00edmbolos KB, MB y GB para 210, 220 y 230 bytes, respectivamente, y los s\u00edmbolos kbps, Mbps y Gbps para 103, 106 y 109 bits por segundo, respectivamente.\n1.8 PANORAMA DEL RESTO DEL LIBRO Este libro estudia tanto los principios como la pr\u00e1ctica de las redes de computadoras. La mayor\u00eda de los cap\u00edtulos inician con un an\u00e1lisis de los principios relevantes, seguido por diversos ejemplos que ilustran estos principios. Por lo general, los ejemplos se toman de Internet y de las redes inal\u00e1mbricas puesto que ambos son importantes y muy distintos. Donde es necesario, se dan otros ejemplos. El libro se estructura de acuerdo con el modelo h\u00edbrido que se presenta en la figura 1-24. El an\u00e1lisis de la jerarqu\u00eda de protocolos empieza en el cap\u00edtulo 2, a partir de la capa m\u00e1s baja. El segundo cap\u00edtulo proporciona algunos antecedentes en el campo de la comunicaci\u00f3n de datos. Se presentan sistemas al\u00e1mbricos, inal\u00e1mbricos y satelitales. Este material se relaciona con la capa f\u00edsica, aunque veremos \u00fanicamente los aspectos de arquitectura y no los de hardware. Tambi\u00e9n se analizan numerosos ejemplos de la capa f\u00edsica, como la red telef\u00f3nica p\u00fablica conmutada, la telefon\u00eda celular y la red de televisi\u00f3n por cable. En el cap\u00edtulo 3 se presenta la capa de enlace de datos y sus protocolos a trav\u00e9s de ejemplos que crecen en complejidad. Tambi\u00e9n se cubre el an\u00e1lisis de estos protocolos. M\u00e1s tarde se examinan algunos protocolos importantes que se usan con mucha frecuencia, entre ellos HDLC (que se emplea en redes de baja y mediana velocidad) y PPP (que se utiliza en Internet). El cap\u00edtulo 4 tiene que ver con la subcapa de acceso al medio, que forma parte de la capa de enlace de datos. El aspecto principal al que se enfrenta esta subcapa es c\u00f3mo determinar qui\u00e9n uti-\nSEC. 1.8\nPANORAMA DEL RESTO DEL LIBRO\n79\nlizar\u00e1 la red cuando \u00e9sta consiste en un solo canal compartido, como ocurre en la mayor\u00eda de las LANs y en algunas redes satelitales. Se dan muchos ejemplos de LANs al\u00e1mbricas, LANs inal\u00e1mbricas (en especial Ethernet), MANs inal\u00e1mbricas, Bluetooth y redes satelitales. Tambi\u00e9n se analizan los puentes y los conmutadores de enlace de datos. El cap\u00edtulo 5 aborda la capa de red, en particular el enrutamiento, con muchos algoritmos de enrutamiento, tanto est\u00e1ticos como din\u00e1micos. Aun con el uso de buenos algoritmos de enrutamiento, si existe m\u00e1s tr\u00e1fico del que puede manejar la red, se genera congesti\u00f3n, por lo que analizaremos el tema de la congesti\u00f3n y c\u00f3mo evitarla. Es a\u00fan mejor garantizar una calidad espec\u00edfica en el servicio que tan s\u00f3lo evitar la congesti\u00f3n. Tambi\u00e9n analizaremos este punto. La conexi\u00f3n de redes heterog\u00e9neas para conformar interredes acarrea numerosos problemas que tambi\u00e9n examinaremos. Daremos una amplia cobertura a la capa de red en Internet. El cap\u00edtulo 6 se encarga de la capa de transporte. Gran parte del cap\u00edtulo se dedica a los protocolos orientados a la conexi\u00f3n, puesto que muchas aplicaciones los necesitan. Se analiza en detalle un ejemplo de servicio de transporte y su implementaci\u00f3n. Se proporciona el c\u00f3digo para este sencillo ejemplo con el prop\u00f3sito de mostrar c\u00f3mo se puede implementar. Tanto UDP como TCP, protocolos de transporte de Internet, se abordan en detalle, al igual que sus aspectos de desempe\u00f1o. Asimismo, veremos aspectos relacionados con las redes inal\u00e1mbricas. El cap\u00edtulo 7 presenta la capa de aplicaci\u00f3n, sus protocolos y aplicaciones. El primer tema es el DNS, que es el directorio telef\u00f3nico de Internet. A continuaci\u00f3n trataremos el correo electr\u00f3nico, junto con un an\u00e1lisis de sus protocolos. M\u00e1s adelante pasaremos a Web, con explicaciones minuciosas sobre contenido est\u00e1tico, contenido din\u00e1mico, lo que sucede tanto en el cliente como en el servidor, protocolos, rendimiento, la Web inal\u00e1mbrica, entre otros temas. Por \u00faltimo, examinaremos la multimedia en red, con temas como audio de flujo continuo, radio en Internet y v\u00eddeo bajo demanda. El cap\u00edtulo 8 se relaciona con la seguridad de red. Este tema tiene aspectos que se relacionan con todas las capas, por lo cual es m\u00e1s sencillo abordarlo despu\u00e9s de haber explicado minuciosamente todas las capas. El cap\u00edtulo inicia con una introducci\u00f3n a la criptograf\u00eda. M\u00e1s adelante muestra c\u00f3mo se puede utilizar \u00e9sta para garantizar la seguridad en las comunicaciones, el correo electr\u00f3nico y Web. El libro finaliza con un an\u00e1lisis de algunas \u00e1reas en las cuales la seguridad afecta la privacidad, la libertad de expresi\u00f3n, la censura y otros aspectos sociales con los cuales choca directamente. El cap\u00edtulo 9 contiene listas de lecturas sugeridas, con comentarios, organizadas por cap\u00edtulo. Su prop\u00f3sito es ayudar a los lectores que deseen llevar m\u00e1s all\u00e1 el estudio sobre las redes. El cap\u00edtulo tambi\u00e9n tiene una bibliograf\u00eda alfab\u00e9tica de todas las referencias que se dan en el libro. El sitio Web del autor puede consultarlo desde: http://www.pearsonedlatino.com/tanenbaum el cual contiene una p\u00e1gina con v\u00ednculos a muchos tutoriales, FAQs, compa\u00f1\u00edas, consorcios industriales, organizaciones profesionales, organizaciones de est\u00e1ndares, tecnolog\u00edas, documentos y muchas cosas m\u00e1s.\n80\nINTRODUCCI\u00d3N\nCAP. 1\n1.9 RESUMEN Las redes de computadoras se pueden utilizar para diversos servicios, tanto para compa\u00f1\u00edas como para individuos. Para las compa\u00f1\u00edas, las redes de computadoras personales que utilizan servidores compartidos con frecuencia dan acceso a informaci\u00f3n corporativa. Por lo general, estas redes siguen el modelo cliente-servidor, con estaciones de trabajo clientes en los escritorios de los empleados que acceden a servidores instalados en la sala de m\u00e1quinas. Para los individuos, las redes ofrecen acceso a una diversidad de recursos de informaci\u00f3n y entretenimiento. Los individuos acceden a Internet mediante una llamada al ISP a trav\u00e9s de un m\u00f3dem, aunque una cantidad creciente de usuarios cuenta con una conexi\u00f3n fija en casa. Un \u00e1rea con gran futuro es la de las redes inal\u00e1mbricas, con nuevas aplicaciones como acceso m\u00f3vil al correo electr\u00f3nico y el comercio m\u00f3vil. A grandes rasgos, las redes se pueden dividir en LANs, MANs, WANs e interredes, con sus propias caracter\u00edsticas, tecnolog\u00edas, velocidades y nichos. Las LANs ocupan edificios y operan a altas velocidades. Las MANs abarcan toda una ciudad, por ejemplo, el sistema de televisi\u00f3n por cable, el cual es utilizado por mucha gente para acceder a Internet. Las WANs se extienden por un pa\u00eds o un continente. Las LANs y las MANs pueden ser o no conmutadas (es decir, no tienen enrutadores); las WANs son conmutadas. Las redes inal\u00e1mbricas se est\u00e1n volviendo sumamente populares, en especial las LANs inal\u00e1mbricas. Las redes se interconectan para formar interredes. El software de red consta de protocolos, que son reglas mediante las cuales se comunican los procesos. Los protocolos son de dos tipos: orientados a la conexi\u00f3n y no orientados a la conexi\u00f3n. La mayor\u00eda de las redes soporta jerarqu\u00edas de protocolos, en la cual cada capa proporciona servicios a las capas superiores a ella y las libera de los detalles de los protocolos que se utilizan en las capas inferiores. Las pilas de protocolos se basan generalmente en el modelo OSI o en el modelo TCP/IP. Ambos modelos tienen capas de red, de transporte y de aplicaci\u00f3n, pero difieren en las dem\u00e1s capas. Entre los aspectos de dise\u00f1o est\u00e1n la multiplexi\u00f3n, el control de flujo y el control de errores. Gran parte del libro est\u00e1 dedicada a los protocolos y su dise\u00f1o. Las redes ofrecen servicios a sus usuarios. Los servicios pueden ser orientados a la conexi\u00f3n o no orientados a \u00e9sta. En algunas redes se proporciona servicio no orientado a la conexi\u00f3n en una capa y servicio orientado a la conexi\u00f3n en la capa superior. Las redes bien conocidas incluyen Internet, ATM, Ethernet y la LAN IEEE 802.11 inal\u00e1mbrica. Internet evolucion\u00f3 de ARPANET, a la cual se agregaron otras redes para conformar una interred. La Internet actual es en realidad un conjunto de miles de redes, m\u00e1s que de una sola red. El aspecto que la distingue es el uso generalizado de la pila de protocolos TCP/IP. ATM tiene un uso muy extendido en los sistemas telef\u00f3nicos para el tr\u00e1fico de datos de larga distancia. Ethernet es la LAN m\u00e1s popular y se utiliza en la mayor\u00eda de las compa\u00f1\u00edas y universidades. Por \u00faltimo, las LANs inal\u00e1mbricas a velocidades sorprendentemente altas (hasta 54 Mbps) comienzan a desplegarse en forma masiva. Para que varias computadoras se comuniquen entre s\u00ed es necesaria una gran cantidad de estandarizaci\u00f3n, tanto en el software como en el hardware. Organizaciones como la ITU-T, el ISO, el IEEE y el IAB manejan diferentes partes del proceso de estandarizaci\u00f3n.\nCAP. 1\nPROBLEMAS\n81\nPROBLEMAS 1. Imagine que ha entrenado a su San Bernardo, Byron, para que transporte una caja con tres cintas de 8 mm en lugar del barrilito de brandy. (Cuando se llene su disco, usted tendr\u00e1 una emergencia.) Cada una de estas cintas tiene capacidad de 7 gigabytes. El perro puede trasladarse adondequiera que usted vaya, a una velocidad de 18 km/hora. \u00bfPara cu\u00e1l rango de distancias tiene Byron una tasa de datos m\u00e1s alta que una l\u00ednea de transmisi\u00f3n cuya tasa de datos (sin tomar en cuenta la sobrecarga) es de 150 Mbps? 2. Una alternativa a una LAN es simplemente un enorme sistema de compartici\u00f3n de tiempo con terminales para todos los usuarios. Mencione dos ventajas de un sistema cliente-servidor que utilice una LAN. 3. Dos factores de red ejercen influencia en el rendimiento de un sistema cliente-servidor: el ancho de banda de la red (cu\u00e1ntos bits por segundo puede transportar) y la latencia (cu\u00e1nto tiempo toma al primer bit llegar del cliente al servidor). Mencione un ejemplo de una red que cuente con ancho de banda y latencia altos. A continuaci\u00f3n, mencione un ejemplo de una que cuente con ancho de banda y latencia bajos. 4. \u00bfAdem\u00e1s del ancho de banda y la latencia, qu\u00e9 otros par\u00e1metros son necesarios para dar un buen ejemplo de la calidad de servicio ofrecida por una red destinada a tr\u00e1fico de voz digitalizada? 5. Un factor en el retardo de un sistema de conmutaci\u00f3n de paquetes de almacenamiento y reenv\u00edo es el tiempo que le toma almacenar y reenviar un paquete a trav\u00e9s de un conmutador. Si el tiempo de conmutaci\u00f3n es de 10 \u03bcseg, \u00bfesto podr\u00eda ser un factor determinante en la respuesta de un sistema cliente-servidor en el cual el cliente se encuentre en Nueva York y el servidor en California? Suponga que la velocidad de propagaci\u00f3n en cobre y fibra es 2/3 de la velocidad de la luz en el vac\u00edo. 6. Un sistema cliente-servidor utiliza una red satelital, con el sat\u00e9lite a una altura de 40,000 km. \u00bfCu\u00e1l es el retardo en respuesta a una solicitud, en el mejor de los casos? 7. En el futuro, cuando cada persona tenga una terminal en casa conectada a una red de computadoras, ser\u00e1n posibles las consultas p\u00fablicas instant\u00e1neas sobre asuntos legislativos pendientes. Con el tiempo, las legislaturas existentes podr\u00edan eliminarse, para dejar que la voluntad popular se exprese directamente. Los aspectos positivos de una democracia directa como \u00e9sta son bastante obvios; analice algunos de los aspectos negativos. 8. Cinco enrutadores se van a conectar en una subred de punto a punto. Los dise\u00f1adores podr\u00edan poner una l\u00ednea de alta velocidad, de mediana velocidad, de baja velocidad o ninguna l\u00ednea, entre cada par de enrutadores. Si toma 100 ms de tiempo de la computadora generar e inspeccionar cada topolog\u00eda, \u00bfcu\u00e1nto tiempo tomar\u00e1 inspeccionarlas todas? 9. Un grupo de 2n 1 enrutadores est\u00e1n interconectados en un \u00e1rbol binario centralizado, con un enrutador en cada nodo del \u00e1rbol. El enrutador i se comunica con el enrutador j enviando un mensaje a la ra\u00edz del \u00e1rbol. A continuaci\u00f3n, la ra\u00edz manda el mensaje al enrutador j. Obtenga una expresi\u00f3n aproximada de la cantidad media de saltos por mensaje para un valor grande de n, suponiendo que todos los pares de enrutadores son igualmente probables. 10. Una desventaja de una subred de difusi\u00f3n es la capacidad que se desperdicia cuando m\u00faltiples hosts intentan acceder el canal al mismo tiempo. Suponga, por ejemplo, que el tiempo se divide en ranuras discretas, y que cada uno de los hosts n intenta utilizar el canal con probabilidad p durante cada parte. \u00bfQu\u00e9 fracci\u00f3n de las partes se desperdicia debido a colisiones?\n82\nINTRODUCCI\u00d3N\nCAP. 1\n11. Mencione dos razones para utilizar protocolos en capas. 12. Al presidente de Specialty Paint Corp. se le ocurre la idea de trabajar con una compa\u00f1\u00eda cervecera local para producir una lata de cerveza invisible (como medida para reducir los desechos). El presidente indica a su departamento legal que analice la situaci\u00f3n, y \u00e9ste a su vez pide ayuda al departamento de ingenier\u00eda. De esta forma, el ingeniero en jefe se re\u00fane con su contraparte de la otra compa\u00f1\u00eda para discutir los aspectos t\u00e9cnicos del proyecto. A continuaci\u00f3n, los ingenieros informan los resultados a sus respectivos departamentos legales, los cuales a su vez se comunican v\u00eda telef\u00f3nica para ponerse de acuerdo en los aspectos legales. Por \u00faltimo, los dos presidentes corporativos se ponen de acuerdo en la parte financiera del proyecto. \u00bf\u00c9ste es un ejemplo de protocolo con m\u00faltiples capas semejante al modelo OSI? 13. \u00bfCu\u00e1l es la diferencia principal entre comunicaci\u00f3n orientada a la conexi\u00f3n y no orientada a \u00e9sta? 14. Dos redes proporcionan servicio confiable orientado a la conexi\u00f3n. Una de ellas ofrece un flujo confiable de bytes y la otra un flujo confiable de mensajes. \u00bfSon id\u00e9nticas? Si es as\u00ed, \u00bfpor qu\u00e9 se hace la distinci\u00f3n? Si no son id\u00e9nticas, mencione un ejemplo de algo en que difieran. 15. \u00bfQu\u00e9 significa \u201cnegociaci\u00f3n\u201d en el contexto de protocolos de red? D\u00e9 un ejemplo. 16. En la figura 1-19 se muestra un servicio. \u00bfHay alg\u00fan otro servicio impl\u00edcito en la figura? Si es as\u00ed, \u00bfd\u00f3nde? Si no lo hay, \u00bfpor qu\u00e9 no? 17. En algunas redes, la capa de enlace de datos maneja los errores de transmisi\u00f3n solicitando que se retransmitan las tramas da\u00f1adas. Si la probabilidad de que una trama se da\u00f1e es p, \u00bfcu\u00e1l es la cantidad media de transmisiones requeridas para enviar una trama? Suponga que las confirmaciones de recepci\u00f3n nunca se pierden. 18. \u00bfCu\u00e1l de las capas OSI maneja cada uno de los siguientes aspectos?: (a) Dividir en tramas el flujo de bits transmitidos. (b) Determinar la ruta que se utilizar\u00e1 a trav\u00e9s de la subred. 19. Si la unidad que se transmite al nivel de enlace de datos se denomina trama y la que se transmite al nivel de red se llama paquete, \u00bflas tramas encapsulan paquetes o los paquetes encapsulan tramas? Explique su respuesta? 20. Un sistema tiene una jerarqu\u00eda de protocolos de n capas. Las aplicaciones generan mensajes con una longitud de M bytes. En cada una de las capas se agrega un encabezado de h bytes. \u00bfQu\u00e9 fracci\u00f3n del ancho de banda de la red se llena con encabezados? 21. Mencione dos similitudes entre los modelos de referencia OSI y TCP/IP. A continuaci\u00f3n mencione dos diferencias entre ellos. 22. \u00bfCu\u00e1l es la principal diferencia entre TCP y UDP? 23. La subred de la figura 1-25(b) se dise\u00f1\u00f3 para resistir una guerra nuclear. \u00bfCu\u00e1ntas bombas ser\u00edan necesarias para partir los nodos en dos conjuntos inconexos? Suponga que cualquier bomba destruye un nodo y todos los enlaces que se conectan a \u00e9l. 24. Internet est\u00e1 duplicando su tama\u00f1o aproximadamente cada 18 meses. Aunque no se sabe a ciencia cierta, una estimaci\u00f3n indica que en el 2001 hab\u00eda 100 millones de hosts en Internet. Utilice estos datos para calcular la cantidad esperada de hosts para el a\u00f1o 2010. \u00bfCree que esto es real? Explique por qu\u00e9.\nCAP. 1\nPROBLEMAS\n83\n25. Cuando un archivo se transfiere entre dos computadoras, pueden seguirse dos estrategias de confirmaci\u00f3n de recepci\u00f3n. En la primera, el archivo se divide en paquetes, y el receptor confirma la recepci\u00f3n de cada uno de manera individual, aunque no confirma la recepci\u00f3n del archivo como un todo. En contraste, en la segunda estrategia la recepci\u00f3n de los paquetes no se confirma de manera individual, sino la del archivo completo. Comente las dos estrategias. 26. \u00bfPor qu\u00e9 ATM utiliza celdas peque\u00f1as de longitud fija? 27. \u00bfQu\u00e9 tan grande era un bit, en metros, en el est\u00e1ndar 802.3 original? Utilice una velocidad de transmisi\u00f3n de 10 Mbps y suponga que la velocidad de propagaci\u00f3n en cable coaxial es 2/3 la velocidad de la luz en el vac\u00edo. 28. Una imagen tiene 1024 \u00d7 768 p\u00edxeles con 3 bytes/p\u00edxel. Suponga que la imagen no se encuentra comprimida. \u00bfCu\u00e1nto tiempo tomar\u00e1 transmitirla sobre un canal de m\u00f3dem de 56 kpbs? \u00bfSobre un m\u00f3dem de cable de 1 Mbps? \u00bfSobre una red Ethernet a 10 Mbps? \u00bfSobre una red Ethernet a 100 Mbps? 29. Ethernet y las redes inal\u00e1mbricas tienen algunas similitudes y diferencias. Una propiedad de Ethernet es que s\u00f3lo se puede transmitir una trama a la vez sobre una red de este tipo. \u00bfEl 802.11 comparte esta propiedad con Ethernet? Comente su respuesta. 30. Las redes inal\u00e1mbricas son f\u00e1ciles de instalar, y ello las hace muy econ\u00f3micas puesto que los costos de instalaci\u00f3n eclipsan por mucho los costos del equipo. No obstante, tambi\u00e9n tienen algunas desventajas. Mencione dos de ellas. 31. Cite dos ventajas y dos desventajas de contar con est\u00e1ndares internacionales para los protocolos de red. 32. Cuando un sistema tiene una parte fija y una parte removible (como ocurre con una unidad de CD-ROM y el CD-ROM), es importante que exista estandarizaci\u00f3n en el sistema, con el prop\u00f3sito de que las diferentes compa\u00f1\u00edas puedan fabricar tanto la parte removible como la fija y todo funcione en conjunto. Mencione tres ejemplos ajenos a la industria de la computaci\u00f3n en donde existan est\u00e1ndares internacionales. Ahora mencione tres \u00e1reas donde no existan. 33. Haga una lista de sus actividades cotidianas en las cuales intervengan las redes de computadoras. \u00bfDe qu\u00e9 manera se alterar\u00eda su vida si estas redes fueran s\u00fabitamente desconectadas? 34. Averig\u00fce cu\u00e1les redes se utilizan en su escuela o lugar de trabajo. Describa los tipos de red, las topolog\u00edas y los m\u00e9todos de conmutaci\u00f3n que utilizan. 35. El programa ping le permite enviar un paquete de prueba a un lugar determinado y medir cu\u00e1nto tarda en ir y regresar. Utilice ping para ver cu\u00e1nto tiempo toma llegar del lugar donde se encuentra hasta diversos lugares conocidos. Con los resultados, trace el tiempo de tr\u00e1nsito sobre Internet como una funci\u00f3n de la distancia. Lo m\u00e1s adecuado es utilizar universidades, puesto que la ubicaci\u00f3n de sus servidores se conoce con mucha precisi\u00f3n. Por ejemplo, berkeley.edu se encuentra en Berkeley, California; mit.edu se localiza en Cambridge, Massachusetts; vu.nl est\u00e1 en Amsterdam, Holanda; www.usyd.edu.au se encuentra en Sydney, Australia, y www.uct.ac.za se localiza en Cape Town, Sud\u00e1frica. 36. Vaya al sitio Web de la IETF, www.ietf.org, y ent\u00e9rese de lo que hacen ah\u00ed. Elija un proyecto y escriba un informe de media p\u00e1gina acerca del problema y la soluci\u00f3n que propone. 37. La estandarizaci\u00f3n es sumamente importante en el mundo de las redes. La ITU y la ISO son las principales organizaciones oficiales encargadas de la estandarizaci\u00f3n. Vaya a los sitios Web de estas organiza-\n84\nINTRODUCCI\u00d3N\nCAP. 1\nciones, en www.itu.org y www.iso.org, respectivamente, y analice el trabajo de estandarizaci\u00f3n que realizan. Escriba un breve informe sobre las cosas que han estandarizado. 38. Internet est\u00e1 conformada por una gran cantidad de redes. Su disposici\u00f3n determina la topolog\u00eda de Internet. En l\u00ednea se encuentra una cantidad considerable de informaci\u00f3n acerca de la topolog\u00eda de Internet. Utilice un motor de b\u00fasqueda para investigar m\u00e1s sobre la topolog\u00eda de Internet y escriba un breve informe sobre sus resultados.\n2 LA CAPA F\u00cdSICA\nEn este cap\u00edtulo analizaremos la capa que est\u00e1 en la parte m\u00e1s baja de la jerarqu\u00eda de la figura 1-24. Dicha capa define las interfaces mec\u00e1nica, el\u00e9ctrica y de temporizaci\u00f3n de la red. Comenzaremos con un an\u00e1lisis te\u00f3rico de la transmisi\u00f3n de datos, el cual nos llevar\u00e1 a descubrir que la Madre Naturaleza establece l\u00edmites en lo que se puede enviar a trav\u00e9s de un canal. Despu\u00e9s trataremos tres tipos de medios de transmisi\u00f3n: dirigidos (cable de cobre y fibra \u00f3ptica), inal\u00e1mbricos (radio terrestre) y por sat\u00e9lite. Este material proporcionar\u00e1 informaci\u00f3n a fondo de las principales tecnolog\u00edas de transmisi\u00f3n que se utilizan en las redes actuales. El resto del cap\u00edtulo se dedicar\u00e1 a dar tres ejemplos de sistemas de comunicaci\u00f3n que se utilizan en la pr\u00e1ctica en las redes de computadora de \u00e1rea amplia: el sistema telef\u00f3nico (fijo), el sistema de telefon\u00eda m\u00f3vil y el sistema de televisi\u00f3n por cable. Los tres utilizan una red dorsal de fibra \u00f3ptica, pero est\u00e1n organizados de diferente manera y utilizan tecnolog\u00edas distintas en la \u00faltima milla (la conexi\u00f3n hacia el cliente).\n2.1 LA BASE TE\u00d3RICA DE LA COMUNICACI\u00d3N DE DATOS Mediante la variaci\u00f3n de algunas propiedades f\u00edsicas, como el voltaje o la corriente, es posible transmitir informaci\u00f3n a trav\u00e9s de cables. Al representar el valor de este voltaje o corriente como una funci\u00f3n simple del tiempo, f (t), podemos modelar el comportamiento de la se\u00f1al y analizarlo matem\u00e1ticamente. Este an\u00e1lisis es el tema de las siguientes secciones. 85\n86\nLA CAPA F\u00cdSICA\nCAP. 2\n2.1.1 El an\u00e1lisis de Fourier A principios del siglo XIX, el matem\u00e1tico franc\u00e9s Jean-Baptiste Fourier prob\u00f3 que cualquier funci\u00f3n peri\u00f3dica de comportamiento razonable, g (t) con un periodo T, se puede construir sumando una cantidad (posiblemente infinita) de senos y cosenos: \u221e \u221e g (t) 1 c \u2211 an sen(2\u03c0nft) \u2211 bn cos(2\u03c0nft) 2 n=1 n=1\n(2-1)\ndonde f = 1/T es la frecuencia fundamental, an y bn son las amplitudes de seno y coseno de los n-\u00e9simos (t\u00e9rminos) arm\u00f3nicos y c es una constante. Tal descomposici\u00f3n se conoce como serie de Fourier. A partir de ella, es posible reconstruir la funci\u00f3n, es decir, si se conoce el periodo T y se dan las amplitudes, la funci\u00f3n original del tiempo puede encontrarse realizando las sumas que se muestran en la ecuaci\u00f3n (2-1). Una se\u00f1al de datos que tenga una duraci\u00f3n finita (la cual todas poseen) se puede manejar con s\u00f3lo imaginar que el patr\u00f3n se repite una y otra vez por siempre (es decir, el intervalo de T a 2T es el mismo que de 0 a T, etc\u00e9tera). Las amplitudes an se pueden calcular para cualquier g (t) dada multiplicando ambos lados de la ecuaci\u00f3n (2-1) por sen(2\u03c0kft) y despu\u00e9s integrando de 0 a T. Puesto que\n\u222b sen(2\u03c0kft) sen(2\u03c0nft)dt =\n0\n0 para k n T/2 para k n\n123\nT\ns\u00f3lo un t\u00e9rmino de la sumatoria perdura: an. La sumatoria de bn desaparece por completo. De manera similar, al multiplicar la ecuaci\u00f3n (2-1) por cos(2\u03c0kft) e integrando entre 0 y T, podemos derivar bn. Con s\u00f3lo integrar ambos lados de la ecuaci\u00f3n como est\u00e1, podemos encontrar c. Los resultados de realizar estas operaciones son los siguientes: T\nan = 2 \u222b g(t) sen(2\u03c0nft)dt T0\nT\nbn = 2 \u222b g (t) cos(2\u03c0nft) dt T0\nT\nc = 2 \u222b g (t) dt T0\n2.1.2 Se\u00f1ales de ancho de banda limitado Para ver c\u00f3mo se relaciona todo esto con la comunicaci\u00f3n de datos, consideremos un ejemplo espec\u00edfico: la transmisi\u00f3n del car\u00e1cter \u201cb\u201d ASCII codificado en un byte de 8 bits. El patr\u00f3n de bits que se va a transmitir es 01100010. La parte izquierda de la figura 2-1(a) muestra la salida de voltaje que produce la computadora transmisora. El an\u00e1lisis de Fourier de la se\u00f1al produce los coeficientes: an = 1 [cos(\u03c0n/4) \u2212 cos(3\u03c0n/4) + cos(6\u03c0n/4) \u2212 cos(7\u03c0n/4)] \u03c0n bn = 1 [sen(3\u03c0n/4) \u2212 sen(\u03c0n/4) + sen(7\u03c0n/4) \u2212 sen(6\u03c0n/4)] \u03c0n c = 3/4\nLA BASE TE\u00d3RICA DE LA COMUNICACI\u00d3N DE DATOS Amplitud rms\nSEC. 2.1\nTiempo (a)\nN\u00famero de arm\u00f3nicas\n1 arm\u00f3nica\n(b)\n2 arm\u00f3nicas\n(c)\n4 arm\u00f3nicas\n(d)\n8 arm\u00f3nicas\nTiempo\nN\u00famero de arm\u00f3nicas\nFigura 2-1. (a) Una se\u00f1al binaria y sus amplitudes de ra\u00edz cuadrada media de Fourier. (b)-(e) Aproximaciones sucesivas a la se\u00f1al original.\n87\n88\nLA CAPA F\u00cdSICA\nCAP. 2\nEn el lado derecho de la figura 2-1(a) se muestran las amplitudes de ra\u00edz cuadrada media, an2 + bn2 , para los primeros t\u00e9rminos. Estos valores son importantes porque sus cuadrados son\nproporcionales a la energ\u00eda transmitida en la frecuencia correspondiente. Ninguna instalaci\u00f3n transmisora puede transmitir se\u00f1ales sin perder cierta potencia en el proceso. Si todos los componentes de Fourier disminuyeran en la misma proporci\u00f3n, la se\u00f1al resultante se reducir\u00eda en amplitud, pero no se distorsionar\u00eda [es decir, tendr\u00eda la misma forma cuadrada que tiene en la figura 2-1(a)]. Desgraciadamente, todas las instalaciones de transmisi\u00f3n disminuyen los distintos componentes de Fourier en diferente grado, lo que provoca distorsi\u00f3n. Por lo general, las amplitudes se transmiten sin ninguna disminuci\u00f3n desde 0 hasta cierta frecuencia fc [medida en ciclos/seg o Hertz (Hz)], y todas las frecuencias que se encuentren por arriba de esta frecuencia de corte ser\u00e1n atenuadas. El rango de frecuencias que se transmiten sin atenuarse con fuerza se conoce como ancho de banda. En la pr\u00e1ctica, el corte en realidad no es abrupto, por lo que con frecuencia el ancho de banda ofrecido va desde 0 hasta la frecuencia en la que el valor de la amplitud es atenuado a la mitad de su valor original. El ancho de banda es una propiedad f\u00edsica del medio de transmisi\u00f3n y por lo general depende de la construcci\u00f3n, grosor y longitud de dicho medio. En algunos casos, se introduce un filtro en el circuito para limitar la cantidad de ancho de banda disponible para cada cliente. Por ejemplo, un cable de tel\u00e9fono podr\u00eda tener un ancho de banda de 1 MHz para distancias cortas, pero las compa\u00f1\u00edas telef\u00f3nicas agregan un filtro que restringe a cada cliente a aproximadamente 3100 Hz. Este ancho de banda es adecuado para el lenguaje inteligible y mejora la eficiencia del sistema al limitar a los usuarios en el uso de los recursos. Ahora consideremos c\u00f3mo lucir\u00eda la se\u00f1al de la figura 2-1(a) si el ancho de banda fuera tan lento que s\u00f3lo las frecuencias m\u00e1s bajas se transmitieran [es decir, si la funci\u00f3n fuera aproximada por los primeros t\u00e9rminos de la ecuaci\u00f3n 2-1(a)]. La figura 2-1(b) muestra la se\u00f1al que resulta de un canal que permite que s\u00f3lo pase la primera arm\u00f3nica (la fundamental, f ). De manera similar, la figura 2-1(c)-(e) muestra el espectro y las funciones reconstruidas de canales de ancho de banda m\u00e1s grande. Dada una tasa de bits de b bits/seg, el tiempo requerido para enviar 8 bits (por ejemplo) 1 bit a la vez es 8/b seg, por lo que la frecuencia de la primera arm\u00f3nica es b/8 Hz. Una l\u00ednea telef\u00f3nica normal, llamada con frecuencia l\u00ednea con calidad de voz, tiene una frecuencia de corte introducida de manera artificial arriba de 3000 Hz. Esta restricci\u00f3n significa que el n\u00famero de arm\u00f3nicas m\u00e1s altas que pasan es de aproximadamente 3000/(b/8) o 24,000/b (el corte no es abrupto). Para algunas tasas de datos, los n\u00fameros resultan como se muestra en la figura 2-2. A partir de estos n\u00fameros, queda claro que tratar de transmitir a 9600 bps por una l\u00ednea telef\u00f3nica transformar\u00e1 la figura 2-1(a) en algo similar a lo que se muestra en la figura 2-1(c), lo que dificulta la recepci\u00f3n precisa del flujo de bits binarios original. Deber\u00eda ser obvio que a tasas de datos mucho mayores que 38.4 kbps, no hay la menor esperanza para las se\u00f1ales binarias, aun si la transmisi\u00f3n se encuentra completamente libre de ruidos. En otras palabras, limitar el ancho de banda limita la tasa de datos, incluso en canales perfectos. Sin embargo, existen esquemas de codificaci\u00f3n refinados que utilizan diferentes niveles de voltaje y pueden alcanzar tasas de datos mayores. Este tema lo trataremos con mayor detalle m\u00e1s adelante en el cap\u00edtulo.\nSEC. 2.1\nLA BASE TE\u00d3RICA DE LA COMUNICACI\u00d3N DE DATOS Bps\nT (mseg)\n300\n26.67\nPrimera arm\u00f3nica (Hz)\n89\n# de arm\u00f3nicas enviadas\n37.5\n80\n600\n13.33\n75\n40\n1200\n6.67\n150\n20\n2400\n3.33\n300\n10\n4800\n1.67\n600\n5\n9600\n0.83\n1200\n2\n19200\n0.42\n2400\n1\n38400\n0.21\n4800\n0\nFigura 2-2. Relaci\u00f3n entre tasa de datos y arm\u00f3nicas.\n2.1.3 La tasa de datos m\u00e1xima de un canal En 1924, un ingeniero de AT&T, Henry Nyquist, se dio cuenta de que incluso un canal perfecto tiene una capacidad de transmisi\u00f3n finita. Deriv\u00f3 una ecuaci\u00f3n que expresa la tasa de datos m\u00e1xima para un canal sin ruido de ancho de banda finito. En 1948, Claude Shannon continu\u00f3 el trabajo de Nyquist y lo extendi\u00f3 al caso de un canal sujeto a ruido aleatorio (es decir, termodin\u00e1mico) (Shannon, 1948). S\u00f3lo resumiremos brevemente sus ahora cl\u00e1sicos resultados. Nyquist prob\u00f3 que si se pasa una se\u00f1al cualquiera a trav\u00e9s de un filtro pasa-bajas de ancho de banda H, la se\u00f1al filtrada se puede reconstruir por completo tomando s\u00f3lo 2H muestras (exactas) por segundo. No tiene sentido muestrear la l\u00ednea a una rapidez mayor que 2H veces por segundo porque los componentes de mayor frecuencia que tal muestreo puede recuperar ya se han filtrado. Si la se\u00f1al consiste en V niveles discretos, el teorema de Nyquist establece: tasa de datos m\u00e1xima = 2H log2 V bits/seg Por ejemplo, un canal sin ruido de 3 kHz no puede transmitir se\u00f1ales binarias (es decir, de dos niveles) a una tasa mayor que 6000 bps. Hasta aqu\u00ed s\u00f3lo hemos considerado canales sin ruido. Si el ruido aleatorio est\u00e1 presente, la situaci\u00f3n se deteriora r\u00e1pidamente. Y el ruido aleatorio (t\u00e9rmico) siempre est\u00e1 presente debido al movimiento de las mol\u00e9culas del sistema. La cantidad de ruido t\u00e9rmico presente se mide por la relaci\u00f3n entre la potencia de la se\u00f1al y la potencia del ruido, llamada relaci\u00f3n se\u00f1al a ruido. Si indicamos la potencia de la se\u00f1al con una S y la potencia del ruido con N, la relaci\u00f3n se\u00f1al a ruido es S/N. Por lo general, la relaci\u00f3n misma no se expresa; en su lugar, se da la cantidad 10 log10 S/N. Estas unidades se conocen como decibeles (dB). Una relaci\u00f3n S/N de 10 es 10 dB, una relaci\u00f3n de 100 es 20 dB, una de 1000 es 30 dB, y as\u00ed sucesivamente. Los fabricantes de amplificadores estereof\u00f3nicos a menudo caracterizan el ancho de banda (rango de frecuencia) en el cual su producto es lineal dando la frecuencia de 3 dB en cada extremo. \u00c9stos son los puntos a los que el factor de amplificaci\u00f3n ha sido dividido (puesto que log103 \u2248 0.5).\n90\nLA CAPA F\u00cdSICA\nCAP. 2\nEl resultado principal de Shannon es que la tasa de datos m\u00e1xima de un canal ruidoso cuyo ancho de banda es H Hz y cuya relaci\u00f3n se\u00f1al a ruido es S/N, est\u00e1 dada por n\u00famero m\u00e1ximo de bits/seg = H log2 (1 + S/N) Por ejemplo, un canal con un ancho de banda de 3000 Hz y con una relaci\u00f3n se\u00f1al a ruido t\u00e9rmico de 30 dB (los par\u00e1metros t\u00edpicos de la parte anal\u00f3gica del sistema telef\u00f3nico) no puede transmitir m\u00e1s all\u00e1 de 30,000 bps, sin importar cu\u00e1ntos niveles de se\u00f1al se utilicen, ni con qu\u00e9 frecuencia se tomen los muestreos. El resultado de Shannon se dedujo aplicando argumentos de la teor\u00eda de la informaci\u00f3n y es v\u00e1lido para cualquier canal sujeto a ruido t\u00e9rmico. Los ejemplos contrarios se deben clasificar en la misma categor\u00eda de las m\u00e1quinas de movimiento perpetuo. Sin embargo, cabe se\u00f1alar que \u00e9ste solamente es un l\u00edmite superior y que los sistemas reales rara vez lo alcanzan.\n2.2 MEDIOS DE TRANSMISI\u00d3N GUIADOS El prop\u00f3sito de la capa f\u00edsica es transportar un flujo de datos puro de una m\u00e1quina a otra. Es posible utilizar varios medios f\u00edsicos para la transmisi\u00f3n real. Cada uno tiene su propio nicho en t\u00e9rminos de ancho de banda, retardo, costo y facilidad de instalaci\u00f3n y mantenimiento. Los medios se clasifican de manera general en medios guiados, como cable de cobre y fibra \u00f3ptica, y medios no guiados, como radio y l\u00e1ser a trav\u00e9s del aire. Analizaremos estos temas en las siguientes secciones.\n2.2.1 Medios magn\u00e9ticos Una de las formas m\u00e1s comunes para transportar datos de una computadora a otra es almacenarlos en cintas magn\u00e9ticas o medios extra\u00edbles (por ejemplo, DVDs grabables), transportar f\u00edsicamente la cinta o los discos a la m\u00e1quina de destino y leer dichos datos ah\u00ed. Si bien este m\u00e9todo no es tan avanzado como utilizar un sat\u00e9lite de comunicaciones geos\u00edncrono, con frecuencia es m\u00e1s rentable, especialmente para aplicaciones en las que un ancho de banda alto o el costo por bit transportado es un factor clave. Un c\u00e1lculo simple aclarar\u00e1 este punto. Una cinta Ultrium est\u00e1ndar puede almacenar 200 gigabits. Una caja de 60 \u00d7 60 \u00d7 60 cm puede contener aproximadamente 1000 de estas cintas, con una capacidad total de 200 terabytes, o 1600 terabits (1.6 petabits). Una caja de cintas puede enviarse a cualquier parte de Estados Unidos en 24 horas por Federal Express y otras compa\u00f1\u00edas. El ancho de banda efectivo de esta transmisi\u00f3n es de 1600 terabits/86,400 seg o 19 Gbps. Si el destino est\u00e1 a s\u00f3lo una hora por carretera, el ancho de banda se incrementa a casi 400 Gbps. Ninguna red de computadoras puede aprovechar esto. En el caso de un banco que diariamente tiene que respaldar muchos gigabytes de datos en una segunda m\u00e1quina (para poder continuar en caso de que suceda alguna inundaci\u00f3n o un terremoto), es probable que ninguna otra tecnolog\u00eda de transmisi\u00f3n pueda siquiera acercarse en rendimiento a la cinta magn\u00e9tica. Es cierto que la rapidez de las redes se est\u00e1 incrementando, pero tambi\u00e9n las densidades de las cintas.\nSEC. 2.2\nMEDIOS DE TRANSMISI\u00d3N GUIADOS\n91\nSi vemos ahora el costo, obtendremos un panorama similar. El costo de una cinta Ultrium es de aproximadamente $40 cuando se compra al mayoreo. Una cinta puede reutilizarse al menos 10 veces, por lo que el costo de la cinta podr\u00eda ser de $4000 por caja, por uso. Agreguemos otros $1000 por el env\u00edo (probablemente menos), y tenemos un costo de m\u00e1s o menos $5000 por almacenar 200 TB. Esto equivale a 3 centavos por cada gigabyte. Ninguna red puede superar esto. La moraleja es: Nunca subestime el ancho de banda de una camioneta repleta de cintas que va a toda velocidad por la carretera\n2.2.2 Par trenzado Aunque las caracter\u00edsticas del ancho de banda de una cinta magn\u00e9tica son excelentes, las de retardo son pobres. El tiempo de transmisi\u00f3n se mide en minutos u horas, no en milisegundos. Para muchas aplicaciones se necesita una conexi\u00f3n en l\u00ednea. Uno de los medios de transmisi\u00f3n m\u00e1s viejos, y todav\u00eda el m\u00e1s com\u00fan, es el cable de par trenzado. \u00c9ste consiste en dos alambres de cobre aislados, por lo regular de 1 mm de grueso. Los alambres se trenzan en forma helicoidal, igual que una mol\u00e9cula de DNA. Esto se hace porque dos alambres paralelos constituyen una antena simple. Cuando se trenzan los alambres, las ondas de diferentes vueltas se cancelan, por lo que la radiaci\u00f3n del cable es menos efectiva. La aplicaci\u00f3n m\u00e1s com\u00fan del cable de par trenzado es en el sistema telef\u00f3nico. Casi todos los tel\u00e9fonos est\u00e1n conectados a la compa\u00f1\u00eda telef\u00f3nica mediante un cable de par trenzado. La distancia que se puede recorrer con estos cables es de varios kil\u00f3metros sin necesidad de amplificar las se\u00f1ales, pero para distancias mayores se requieren repetidores. Cuando muchos cables de par trenzado recorren de manera paralela distancias considerables, como podr\u00eda ser el caso de los cables de un edificio de departamentos que van hacia la compa\u00f1\u00eda telef\u00f3nica, se suelen atar en haces y se cubren con una envoltura protectora. Los cables dentro de estos haces podr\u00edan sufrir interferencias si no estuvieran trenzados. En algunos lugares del mundo en donde las l\u00edneas telef\u00f3nicas se instalan en la parte alta de los postes, se observan frecuentemente dichos haces, de varios cent\u00edmetros de di\u00e1metro. Los cables de par trenzado se pueden utilizar para transmisi\u00f3n tanto anal\u00f3gica como digital. El ancho de banda depende del grosor del cable y de la distancia que recorre; en muchos casos pueden obtenerse transmisiones de varios megabits/seg, en distancias de pocos kil\u00f3metros. Debido a su comportamiento adecuado y bajo costo, los cables de par trenzado se utilizan ampliamente y es probable que permanezcan por muchos a\u00f1os. Hay varios tipos de cableado de par trenzado, dos de los cuales son importantes para las redes de computadoras. Los cables de par trenzado categor\u00eda 3 consisten en 2 alambres aislados que se trenzan de manera delicada. Cuatro de estos pares se agrupan por lo regular en una envoltura de pl\u00e1stico para su protecci\u00f3n. Antes de 1988, la mayor\u00eda de los edificios de oficinas ten\u00eda un cable de categor\u00eda 3 que iba desde un gabinete de cableado central en cada piso hasta cada oficina. Este esquema permiti\u00f3 que hasta cuatro tel\u00e9fonos comunes o dos tel\u00e9fonos de m\u00faltiples l\u00edneas en cada oficina se conectaran con el equipo de la compa\u00f1\u00eda telef\u00f3nica en el gabinete de cableado.\n92\nLA CAPA F\u00cdSICA\nCAP. 2\nA comienzos de 1988 se introdujeron los cables de par trenzado categor\u00eda 5 m\u00e1s avanzados. Son similares a los de la categor\u00eda 3, pero con m\u00e1s vueltas por cent\u00edmetro, lo que produce una menor diafon\u00eda y una se\u00f1al de mejor calidad a distancias m\u00e1s largas. Esto los hace m\u00e1s adecuados para una comunicaci\u00f3n m\u00e1s r\u00e1pida entre computadoras. Las siguientes son las categor\u00edas 6 y 7, que tienen capacidad para manejar se\u00f1ales con anchos de banda de 250 y 600 MHz, respectivamente (en comparaci\u00f3n con los 16 y 100 MHz de las categor\u00edas 3 y 5, respectivamente). Todos estos tipos de cableado com\u00fanmente se conocen como UTP (Par Trenzado sin Blindaje), en comparaci\u00f3n con los cables de par trenzado costosos, blindados y voluminosos que IBM introdujo a principios de la d\u00e9cada de 1980, los cuales no ganaron popularidad fuera de las instalaciones de IBM. En la figura 2-3 se muestra un cableado de par trenzado.\n(a)\n(b)\nFigura 2-3. (a) UTP categor\u00eda 3. (b) UTP categor\u00eda 5.\n2.2.3 Cable coaxial Otro medio com\u00fan de transmisi\u00f3n es el cable coaxial (conocido frecuentemente tan s\u00f3lo como \u201ccoax\u201d). Este cable tiene mejor blindaje que el de par trenzado, as\u00ed que puede abarcar tramos m\u00e1s largos a velocidades mayores. Hay dos clases de cable coaxial que son las m\u00e1s utilizadas. Una clase: el cable de 50 ohms, se usa por lo general para transmisi\u00f3n digital. La otra clase, el cable de 75 ohms, se utiliza com\u00fanmente para la transmisi\u00f3n anal\u00f3gica y la televisi\u00f3n por cable, pero se est\u00e1 haciendo cada vez m\u00e1s importante con el advenimiento de Internet a trav\u00e9s de cable. Esta distinci\u00f3n se basa en hechos hist\u00f3ricos, m\u00e1s que en t\u00e9cnicos (por ejemplo, las antenas antiguas de dipolos ten\u00edan una impedancia de 300 ohms y era f\u00e1cil utilizar los transformadores adaptadores de impedancia 4:1). Un cable coaxial consiste en un alambre de cobre r\u00edgido como n\u00facleo, rodeado por un material aislante. El aislante est\u00e1 forrado con un conductor cil\u00edndrico, que con frecuencia es una malla de tejido fuertemente trenzado. El conductor externo se cubre con una envoltura protectora de pl\u00e1stico. En la figura 2-4 se muestra una vista en corte por capas de un cable coaxial. La construcci\u00f3n y el blindaje del cable coaxial le confieren una buena combinaci\u00f3n de ancho de banda alto y excelente inmunidad al ruido. El ancho de banda posible depende de la calidad y longitud del cable, y de la relaci\u00f3n se\u00f1al a ruido de la se\u00f1al de datos. Los cables modernos tienen un ancho de banda de cerca de 1 GHz. Los cables coaxiales sol\u00edan ser ampliamente usados en el sistema telef\u00f3nico para las l\u00edneas de larga distancia, pero en la actualidad han sido reemplazados por la fibra \u00f3ptica en rutas de distancias considerables. Sin embargo, el cable coaxial a\u00fan se utiliza ampliamente en la televisi\u00f3n por cable y en las redes de \u00e1rea metropolitana.\nSEC. 2.2\n93\nMEDIOS DE TRANSMISI\u00d3N GUIADOS N\u00facleo de cobre\nMaterial aislante\nConductor exterior entrelazado\nCubierta protectora de pl\u00e1stico\nFigura 2-4. Un cable coaxial.\n2.2.4 Fibra \u00f3ptica Muchas personas de la industria de la computaci\u00f3n se enorgullecen de lo r\u00e1pido que est\u00e1 mejorando la tecnolog\u00eda en esta \u00e1rea. La PC original de IBM (1981) se ejecutaba a una velocidad de reloj de 4.77 MHz. Veinte a\u00f1os m\u00e1s tarde, las PCs pueden correr a 2 GHz, con un factor de ganancia de 20 por d\u00e9cada. No est\u00e1 nada mal. En el mismo periodo, la comunicaci\u00f3n de datos de \u00e1rea amplia pas\u00f3 de 56 kbps (ARPANET) a 1 Gbps (comunicaci\u00f3n \u00f3ptica moderna), con un factor de ganancia de m\u00e1s de 125 por d\u00e9cada, y al mismo tiempo la tasa de error pas\u00f3 de 10\u22125 por bit hasta casi cero. Adem\u00e1s, las CPUs individuales est\u00e1n empezando a aproximarse a l\u00edmites f\u00edsicos, como la velocidad de la luz y los problemas de la disipaci\u00f3n de calor. En contraste, con la tecnolog\u00eda actual de fibras, el ancho de banda alcanzable ciertamente est\u00e1 por encima de los 50,000 Gbps (50 Tbps) y muchas personas se est\u00e1n esforzando arduamente para encontrar mejores tecnolog\u00edas y materiales. El l\u00edmite pr\u00e1ctico de se\u00f1alizaci\u00f3n actual de aproximadamente 10 Gbps se debe a nuestra incapacidad para convertir con mayor rapidez las se\u00f1ales el\u00e9ctricas a \u00f3pticas, aunque en el laboratorio se han alcanzado hasta 100 Gbps en una sola fibra. En la competencia entre la computaci\u00f3n y la comunicaci\u00f3n, esta \u00faltima gan\u00f3. La generaci\u00f3n de cient\u00edficos e ingenieros de computaci\u00f3n acostumbrados a pensar en t\u00e9rminos de los bajos l\u00edmites de Nyquist y Shannon impuestos por el alambre de cobre a\u00fan no ha comprendido todas las implicaciones del ancho de banda pr\u00e1cticamente infinito (aunque no sin un costo). El nuevo sentido com\u00fan deber\u00eda ser que todas las computadoras son desesperadamente lentas y que las redes deber\u00edan tratar de evitar las tareas de c\u00f3mputo a cualquier precio, sin importar cu\u00e1nto ancho de banda se desperdicie. En esta secci\u00f3n analizaremos la fibra \u00f3ptica para ver c\u00f3mo funciona esa tecnolog\u00eda de transmisi\u00f3n. Un sistema de transmisi\u00f3n \u00f3ptico tiene tres componentes: la fuente de luz, el medio de transmisi\u00f3n y el detector. Convencionalmente, un pulso de luz indica un bit 1 y la ausencia de luz indica un bit 0. El medio de transmisi\u00f3n es una fibra de vidrio ultradelgada. El detector genera un pulso el\u00e9ctrico cuando la luz incide en \u00e9l. Al agregar una fuente de luz en un extremo de una fibra \u00f3ptica y un detector en el otro, se tiene un sistema de transmisi\u00f3n de datos unidireccional que acepta una se\u00f1al el\u00e9ctrica, la convierte y transmite mediante pulsos de luz y, luego, reconvierte la salida a una se\u00f1al el\u00e9ctrica en el extremo receptor.\n94\nLA CAPA F\u00cdSICA\nCAP. 2\nEste sistema de transmisi\u00f3n tendr\u00eda fugas de luz y ser\u00eda in\u00fatil en la pr\u00e1ctica excepto por un principio interesante de la f\u00edsica. Cuando un rayo de luz pasa por un medio a otro \u2014por ejemplo, de s\u00edlice fundida al aire\u2014, el rayo se refracta (se dobla) en la frontera de la s\u00edlice y el aire, como se muestra en la figura 2-5(a). En ella vemos un rayo de luz que incide en la frontera con un \u00e1ngulo \u03b11 y que emerge con un \u00e1ngulo \u03b21. El grado de refracci\u00f3n depende de las propiedades de los dos medios (en particular sus \u00edndices de refracci\u00f3n). Para \u00e1ngulos con incidencias mayores de ciertos valores cr\u00edticos, la luz se refracta nuevamente a la s\u00edlice; ninguna parte de \u00e9l escapa al aire. Por lo tanto, un rayo de luz que incide en un \u00e1ngulo mayor o igual que el cr\u00edtico queda atrapado dentro de la fibra, como se muestra en la figura 2-5(b), y se puede propagar por varios kil\u00f3metros pr\u00e1cticamente sin p\u00e9rdida. Aire Frontera s\u00edlice/aire\nReflexi\u00f3n interna total\nS\u00edlice\nFuente de luz (a)\n(b)\nFigura 2-5. (a) Tres ejemplos de un rayo de luz procedente del interior de una fibra de s\u00edlice que incide sobre la frontera de la s\u00edlice y el aire con diferentes \u00e1ngulos. (b) Luz atrapada por reflexi\u00f3n interna total.\nEl diagrama de la segunda figura \u00fanicamente muestra un rayo atrapado, pero puesto que cualquier rayo de luz que incida en la frontera con un \u00e1ngulo mayor que el cr\u00edtico se reflejar\u00e1 internamente, muchos rayos estar\u00e1n rebotando con \u00e1ngulos diferentes. Se dice que cada rayo tiene un modo diferente, por lo que una fibra que tiene esta propiedad se denomina fibra multimodo. Por otro lado, si el di\u00e1metro de la fibra se reduce a unas cuantas longitudes de onda de luz, la fibra act\u00faa como una gu\u00eda de ondas y la luz se puede propagar s\u00f3lo en l\u00ednea recta, sin rebotar, lo cual da como resultado una fibra monomodo. Las fibras monomodo son m\u00e1s caras, pero se pueden utilizar en distancias m\u00e1s grandes. Las fibras monomodo disponibles en la actualidad pueden transmitir datos a 50 Gbps a una distancia de 100 km sin amplificaci\u00f3n. En el laboratorio se han logrado tasas de datos todav\u00eda mayores a distancias m\u00e1s cortas. Transmisi\u00f3n de la luz a trav\u00e9s de fibra \u00f3ptica Las fibras \u00f3pticas se hacen de vidrio, que a su vez se fabrica con arena, una materia debajo costo disponible en cantidades ilimitadas. La fabricaci\u00f3n de vidrio era conocida por los antiguos egipcios, pero su vidrio no ten\u00eda m\u00e1s de 1 mm de espesor, porque de lo contrario la luz no pod\u00eda atravesarlo. Durante el Renacimiento se forj\u00f3 un vidrio suficientemente transparente para utilizarlo en ventanas. El vidrio utilizado para fabricar fibras \u00f3pticas modernas es tan transparente que si\nSEC. 2.2\nMEDIOS DE TRANSMISI\u00d3N GUIADOS\n95\nel oc\u00e9ano estuviera lleno de \u00e9ste en lugar de agua, el fondo del mar ser\u00eda tan visible desde la superficie como lo es el suelo desde un avi\u00f3n en un d\u00eda claro. La atenuaci\u00f3n de la luz dentro del vidrio depende de la longitud de onda de la luz (as\u00ed como de algunas propiedades f\u00edsicas del vidrio). En la figura 2-6 se muestra la atenuaci\u00f3n para la clase de vidrio que se usa en las fibras, en decibeles por kil\u00f3metro lineal de fibra. La atenuaci\u00f3n en decibeles est\u00e1 dada por la f\u00f3rmula: potencia transmitida Atenuaci\u00f3n en decibeles = 10 log10 potencia recibida Por ejemplo, un factor de p\u00e9rdida de dos da como resultado una atenuaci\u00f3n de 10 log10 2 = 3 dB. La figura muestra la parte cercana al infrarrojo del espectro, que es la que se utiliza en la pr\u00e1ctica. La luz visible tiene longitudes de onda ligeramente m\u00e1s cortas, de 0.4 a 0.7 micras (1 micra es 10\u22126 metros). Los puristas de la m\u00e9trica se referir\u00edan a estas longitudes de onda como 400 nm a 700 nm, pero nosotros nos apegaremos al uso tradicional. Banda de 1.30\u03bc\nBanda de 1.55\u03bc\nAtenuaci\u00f3n (dB/km)\nBanda de 0.85\u03bc\nLongitud de onda (micras)\nFigura 2-6. Atenuaci\u00f3n de la luz dentro de una fibra en la regi\u00f3n de infrarrojo.\nPara las comunicaciones se utilizan tres bandas de longitud de onda, las cuales se centran en 0.85, 1.30 y 1.55 micras, respectivamente. Las \u00faltimas dos tienen buenas propiedades de atenuaci\u00f3n (una p\u00e9rdida de menos de 5% por kil\u00f3metro). La banda de 0.85 micras tiene una atenuaci\u00f3n m\u00e1s alta, pero a esa longitud de onda, los l\u00e1seres y los componentes electr\u00f3nicos se pueden fabricar con el mismo material (arseniuro de galio). Las tres bandas tienen una anchura de entre 25,000 y 30,000 GHz. La longitud de los pulsos de luz transmitidos por una fibra aumenta conforme se propagan. Este fen\u00f3meno se llama dispersi\u00f3n crom\u00e1tica. La magnitud de \u00e9sta depende de la longitud de\n96\nLA CAPA F\u00cdSICA\nCAP. 2\nonda. Una forma de evitar que se encimen estos pulsos dispersos es incrementar la distancia entre ellos, pero esto solamente se puede hacer reduciendo la tasa de transmisi\u00f3n. Por fortuna, se ha descubierto que al dar a los pulsos cierta forma especial relacionada con el rec\u00edproco del coseno hiperb\u00f3lico, casi todos los efectos de la dispersi\u00f3n se disipan y puede ser posible enviar pulsos a miles de kil\u00f3metros sin una distorsi\u00f3n apreciable de la forma. Estos pulsos se llaman solitones. Se est\u00e1 realizando un enorme esfuerzo de investigaci\u00f3n para llevar a la pr\u00e1ctica el uso de los solitones. Cables de fibra Los cables de fibra \u00f3ptica son similares a los coaxiales, excepto por el trenzado. La figura 2-7(a) muestra una fibra individual vista de lado. Al centro se encuentra el n\u00facleo de vidrio, a trav\u00e9s del cual se propaga la luz. En las fibras multimodo el di\u00e1metro es de 50 micras, aproximadamente el grosor de un cabello humano. En las fibras monomodo el n\u00facleo es de 8 a 10 micras. Funda\nCubierta\nN\u00facleo\nRevestimiento\nN\u00facleo (vidrio)\nRevestimiento (vidrio) (a)\nCubierta (pl\u00e1stico)\n(b)\nFigura 2-7. (a) Vista de lado de una fibra individual. (b) Vista de extremo de una funda con tres fibras.\nEl n\u00facleo est\u00e1 rodeado por un revestimiento de vidrio con un \u00edndice de refracci\u00f3n menor que el del n\u00facleo, con el fin de mantener toda la luz en este \u00faltimo. A continuaci\u00f3n est\u00e1 una cubierta pl\u00e1stica delgada para proteger al revestimiento. Las fibras por lo general se agrupan en haces, protegidas por una funda exterior. La figura 2-7(b) muestra una funda con tres fibras. Las cubiertas de fibras terrestres por lo general se colocan en el suelo a un metro de la superficie, donde a veces pueden sufrir da\u00f1os ocasionados por retroexcavadoras o tuzas. Cerca de la costa, las cubiertas de fibras transoce\u00e1nicas se entierran en zanjas mediante una especie de arado marino. En las aguas profundas, simplemente se colocan al fondo, donde los barcos de arrastre pueden tropezar con ellas o los calamares gigantes pueden atacarlas. Las fibras se pueden conectar de tres formas diferentes. Primera, pueden terminar en conectores e insertarse en enchufes de fibra. Los conectores pierden entre 10 y 20% de la luz, pero facilitan la reconfiguraci\u00f3n de los sistemas. Segunda, se pueden empalmar de manera mec\u00e1nica. Los empalmes mec\u00e1nicos acomodan dos extremos cortados con cuidado, uno junto a otro, en una manga especial y los sujetan en su lugar. La alineaci\u00f3n se puede mejorar pasando luz a trav\u00e9s de la uni\u00f3n y haciendo peque\u00f1os ajustes para maximizar la se\u00f1al. Personal especializado realiza los empalmes mec\u00e1nicos en alrededor de cinco minutos, y la p\u00e9rdida de luz de estos empalmes es de 10%.\nSEC. 2.2\nMEDIOS DE TRANSMISI\u00d3N GUIADOS\n97\nTercera, se pueden fusionar (fundir) dos tramos de fibra para formar una conexi\u00f3n s\u00f3lida. Un empalme por fusi\u00f3n es casi tan bueno como una sola fibra, pero aun aqu\u00ed hay un poco de atenuaci\u00f3n. Con los tres tipos de empalme pueden ocurrir reflejos en el punto del empalme, y la energ\u00eda reflejada puede interferir la se\u00f1al. Por lo general se utilizan dos clases de fuente de luz para producir las se\u00f1ales: LEDs (diodos emisores de luz) y l\u00e1seres semiconductores. Estas fuentes tienen propiedades diferentes, como se muestra en la figura 2-8, y su longitud de onda se puede ajustar mediante la inserci\u00f3n de interfer\u00f3metros Fabry-Perot o Mach-Zehnder entre la fuente y la fibra. Los interfer\u00f3metros Fabry-Perot son cavidades simples de resonancia que consisten en dos espejos paralelos. La luz incide de manera perpendicular en los espejos. La longitud de la cavidad separa las longitudes de onda que caben en ella un n\u00famero entero de veces. Los interfer\u00f3metros de Mach-Zehnder separan la luz en dos haces. \u00c9stos viajan distancias ligeramente diferentes. Se vuelven a combinar en el extremo y quedan en fase s\u00f3lo para ciertas longitudes de onda. Elemento\nLED\nL\u00e1ser semiconductor\nTasa de datos\nBaja\nAlta\nTipo de fibra\nMultimodo\nMultimodo o monomodo\nDistancia\nCorta\nLarga\nTiempo de vida\nLargo\nCorto\nSensibilidad a la temperatura\nMenor\nConsiderable\nCosto\nBajo\nElevado\nFigura 2-8. Comparaci\u00f3n de diodos semiconductores y LEDs como fuentes de luz.\nEl extremo receptor de una fibra \u00f3ptica consiste en un fotodiodo, el cual emite un pulso el\u00e9ctrico cuando lo golpea la luz. El tiempo de respuesta t\u00edpico de un fotodiodo es 1 nseg, lo que limita las tasas de datos a aproximadamente 1 Gbps. El ruido t\u00e9rmico tambi\u00e9n es un problema, por lo que un pulso de luz debe llevar suficiente potencia para que se pueda detectar. Al hacer que los pulsos tengan suficiente potencia, la tasa de errores puede disminuirse de manera considerable. Redes de fibra \u00f3ptica La fibra \u00f3ptica se puede utilizar en LANs, as\u00ed como en transmisiones de largo alcance, aunque conectarse a ellas es m\u00e1s complicado que a una Ethernet. Una forma de superar el problema es reconocer que una red de anillo es en realidad una colecci\u00f3n de enlaces punto a punto, como se muestra en la figura 2-9. La interfaz en cada computadora pasa el flujo de pulsos de luz hacia el siguiente enlace y tambi\u00e9n sirve como uni\u00f3n T para que la computadora pueda enviar y aceptar mensajes. Se usan dos tipos de interfaz. Una interfaz pasiva consiste en dos derivaciones fusionadas a la fibra principal. Una derivaci\u00f3n tiene un LED o un diodo l\u00e1ser en su extremo (para transmitir) y la otra tiene un fotodiodo (para recibir). La derivaci\u00f3n misma es pasiva por completo y, por lo\n98\nLA CAPA F\u00cdSICA\nCAP. 2\nA/de la computadora Computadora ed tall e D\nDirecci\u00f3n de la propagaci\u00f3n de la luz\nFibra Fibra \u00f3ptica\nInterfaz\nCable de cobre\ne la interfaz\nReceptor \u00f3ptico (fotodiodo)\nRegenerador de se\u00f1ales (el\u00e9ctrica)\nTransmisor \u00f3ptico (LED)\nFigura 2-9. Anillo de fibra \u00f3ptica con repetidores activos.\nmismo, es extremadamente confiable pues un LED o un fotodiodo descompuesto no romper\u00e1 el anillo, s\u00f3lo dejar\u00e1 fuera de l\u00ednea a una computadora. El otro tipo de interfaz, mostrado en la figura 2-9, es el repetidor activo. La luz entrante se convierte en una se\u00f1al el\u00e9ctrica que se regenera a toda su intensidad si se debilit\u00f3 y se retransmite como luz. La interfaz con la computadora es un alambre ordinario de cobre que entra en el regenerador de se\u00f1ales. En la actualidad tambi\u00e9n se usan los repetidores puramente \u00f3pticos. Estos dispositivos no requieren las conversiones \u00f3ptica a el\u00e9ctrica a \u00f3ptica, lo que significa que pueden operar con anchos de banda muy altos. Si falla un repetidor activo, el anillo se rompe y la red se cae. Por otro lado, puesto que la se\u00f1al se regenera en cada interfaz, los enlaces individuales de computadora a computadora pueden tener una longitud de kil\u00f3metros, virtualmente sin un l\u00edmite para el tama\u00f1o total del anillo. Las interfaces pasivas pierden luz en cada uni\u00f3n, de modo que la cantidad de computadoras y la longitud total del anillo se restringen en forma considerable. La topolog\u00eda de anillo no es la \u00fanica manera de construir una LAN con fibra \u00f3ptica. Tambi\u00e9n es posible tener difusi\u00f3n por hardware utilizando la construcci\u00f3n de estrella pasiva de la figura 2-10. En este dise\u00f1o, cada interfaz tiene una fibra que corre desde su transmisor hasta un cilindro de s\u00edlice, con las fibras entrantes fusionadas a un extremo del cilindro. En forma similar, las fibras fusionadas al otro extremo del cilindro corren hacia cada uno de los receptores. Siempre que una interfaz emite un pulso de luz, se difunde dentro de la estrella pasiva para iluminar a todos los receptores, con lo que se alcanza la difusi\u00f3n. En efecto, la estrella pasiva combina todas las se\u00f1ales entrantes y transmite el resultado combinado por todas las l\u00edneas. Puesto que la energ\u00eda entrante se divide entre todas las l\u00edneas que salen, la cantidad de nodos en la red est\u00e1 limitada por la sensibilidad de los fotodiodos. Comparaci\u00f3n de la fibra \u00f3ptica y el alambre de cobre Es instructivo comparar la fibra con el cobre. La fibra tiene muchas ventajas. Para empezar, puede manejar anchos de banda mucho mayores que el cobre. Tan s\u00f3lo por esto, su uso ser\u00eda indispensable en redes de alto rendimiento. Debido a la baja atenuaci\u00f3n, s\u00f3lo se necesitan repetidores cada 50 km aproximadamente en l\u00edneas largas, contra casi cada 5 km cuando se usa cobre, lo que\nSEC. 2.2\nMEDIOS DE TRANSMISI\u00d3N GUIADOS\n99\nReceptor Transmisor Interfaces de c\u00f3mputo\nCada fibra entrante ilumina toda la estrella\nCada fibra saliente recibe la luz de todas las fibras entrantes\nFigura 2-10. Conexi\u00f3n de estrella pasiva en una red de fibra \u00f3ptica.\nimplica un ahorro considerable. La fibra tambi\u00e9n tiene la ventaja de que las sobrecargas de energ\u00eda, la interferencia electromagn\u00e9tica o los cortes en el suministro de energ\u00eda no la afectan. Las sustancias corrosivas del ambiente tampoco la afectan, lo que la hace ideal para ambientes fabriles pesados. A las compa\u00f1\u00edas telef\u00f3nicas les gusta la fibra por una raz\u00f3n diferente: es delgada y ligera. Muchos conductos de cable existentes est\u00e1n completamente llenos, por lo que no hay espacio para agregar m\u00e1s capacidad. Al eliminar todo el cobre y reemplazarlo por fibra, se vac\u00edan los conductos y el cobre tiene un valor de reventa excelente para los refinadores de cobre quienes lo aprecian como materia prima de alta calidad. Adem\u00e1s, las fibras son m\u00e1s ligeras que el cobre. Mil cables de par trenzado de 1 km pesan 8000 kg. Dos fibras tienen m\u00e1s capacidad y pesan s\u00f3lo 100 kg, lo cual reduce de manera significativa la necesidad de sistemas mec\u00e1nicos de apoyo que tienen que mantenerse. Para las nuevas rutas, la fibra se impone debido a su bajo costo de instalaci\u00f3n. Por \u00faltimo, las fibras no tienen fugas de luz y es dif\u00edcil intervenirlas y conectarse a ellas. Estas propiedades dan a las fibras una seguridad excelente contra posibles esp\u00edas. Su parte negativa consiste en que es una tecnolog\u00eda poco familiar que requiere habilidades de las cuales carece la mayor\u00eda de los ingenieros, y en que las fibras pueden da\u00f1arse con facilidad si se doblan demasiado. Debido a que la transmisi\u00f3n \u00f3ptica es unidireccional, la comunicaci\u00f3n en ambos sentidos requiere ya sea dos fibras o dos bandas de frecuencia en una fibra. Por \u00faltimo, las interfaces de fibra cuestan m\u00e1s que las el\u00e9ctricas. No obstante, el futuro de todas las comunicaciones fijas de datos para distancias de m\u00e1s de unos cuantos metros claramente es la fibra. Para un an\u00e1lisis de todos los aspectos de la fibra \u00f3ptica y sus redes, vea (Hecht, 2001).\n100\nLA CAPA F\u00cdSICA\nCAP. 2\n2.3 TRANSMISI\u00d3N INAL\u00c1MBRICA En nuestra era han surgido los adictos a la informaci\u00f3n: gente que necesita estar todo el tiempo en l\u00ednea. Para estos usuarios m\u00f3viles, el cable de par trenzado, el cable coaxial y la fibra \u00f3ptica no son \u00fatiles. Ellos necesitan obtener datos para sus computadoras laptop, notebook, de bolsillo, de mano o de reloj pulsera sin estar limitados a la infraestructura de comunicaciones terrestre. Para estos usuarios, la comunicaci\u00f3n inal\u00e1mbrica es la respuesta. En las siguientes secciones veremos la comunicaci\u00f3n inal\u00e1mbrica en general, y veremos que tiene otras aplicaciones importantes adem\u00e1s de proporcionar conectividad a los usuarios que desean navegar por Web desde la playa. Algunas personas creen que en el futuro s\u00f3lo habr\u00e1 dos clases de comunicaci\u00f3n: de fibra \u00f3ptica e inal\u00e1mbrica. Todos los aparatos fijos (es decir, no m\u00f3viles): computadoras, tel\u00e9fonos, faxes, etc\u00e9tera, se conectar\u00e1n con fibra \u00f3ptica; todos los aparatos m\u00f3viles usar\u00e1n comunicaci\u00f3n inal\u00e1mbrica. Sin embargo, la comunicaci\u00f3n inal\u00e1mbrica tambi\u00e9n tiene ventajas para los dispositivos fijos en ciertas circunstancias. Por ejemplo, si es dif\u00edcil tender fibras hasta un edificio debido al terreno (monta\u00f1as, selvas, pantanos, etc\u00e9tera), podr\u00eda ser preferible un sistema inal\u00e1mbrico. Vale la pena mencionar que la comunicaci\u00f3n digital inal\u00e1mbrica moderna comenz\u00f3 en las islas de Hawai, en donde partes considerablemente grandes del oc\u00e9ano Pac\u00edfico separaban a los usuarios, y el sistema telef\u00f3nico era inadecuado.\n2.3.1 El espectro electromagn\u00e9tico Cuando los electrones se mueven crean ondas electromagn\u00e9ticas que se pueden propagar por el espacio libre (aun en el vac\u00edo). El f\u00edsico brit\u00e1nico James Clerk Maxwell predijo estas ondas en 1865 y el f\u00edsico alem\u00e1n Heinrich Hertz las observ\u00f3 en 1887. La cantidad de oscilaciones por segundo de una onda electromagn\u00e9tica es su frecuencia, f, y se mide en Hz (en honor a Heinrich Hertz). La distancia entre dos puntos m\u00e1ximos (o m\u00ednimos) consecutivos se llama longitud de onda y se designa de forma universal con la letra griega \u03bb (lambda). Al conectarse una antena del tama\u00f1o apropiado a un circuito el\u00e9ctrico, las ondas electromagn\u00e9ticas pueden ser difundidas de manera eficiente y ser captadas por un receptor a cierta distancia. Toda la comunicaci\u00f3n inal\u00e1mbrica se basa en este principio. En el vac\u00edo, todas las ondas electromagn\u00e9ticas viajan a la misma velocidad, no importa cu\u00e1l sea su frecuencia. Esta velocidad, por lo general llamada velocidad de la luz, c, es de aproximadamente 3 \u00d7 108 m/seg o de un pie (30 cm) por nanosegundo. En el cobre o en la fibra \u00f3ptica, la velocidad baja a casi 2/3 de este valor y se vuelve ligeramente dependiente de la frecuencia. La velocidad de la luz es el l\u00edmite m\u00e1ximo de velocidad. Ning\u00fan objeto o se\u00f1al puede moverse m\u00e1s r\u00e1pido que la luz. La relaci\u00f3n fundamental entre f, \u03bb y c (en el vac\u00edo) es: \u03bbf = c\n(2-2)\nPuesto que c es una constante, si conocemos el valor de f, podremos encontrar el de \u03bb, y viceversa. Como regla general, cuando \u03bb se expresa en metros y f en MHz, \u03bbf \u2248 300. Por ejemplo, las\nSEC. 2.3\n101\nTRANSMISI\u00d3N INAL\u00c1MBRICA\nondas de 100 MHz son de aproximadamente 3 metros de longitud, las de 1000 MHz son de 0.3 metros y las ondas de 0.1 metros de longitud tienen una frecuencia de 3000 MHz. En la figura 2-11 se muestra el espectro electromagn\u00e9tico. Las porciones de radio, microondas, infrarrojo y luz visible del espectro pueden servir para transmitir informaci\u00f3n modulando la amplitud, frecuencia o fase de las ondas. La luz ultravioleta, los rayos X y los rayos gamma ser\u00edan todav\u00eda mejores, debido a sus frecuencias m\u00e1s altas, pero son dif\u00edciles de producir y modular, no se propagan bien entre edificios y son peligrosos para los seres vivos. Las bandas que se listan en la parte inferior de la figura 2-11 son los nombres oficiales de la ITU y se basan en las longitudes de onda, de modo que la banda LF va de 1 a 10 km (aproximadamente 30 a 300 kHz). Los t\u00e9rminos LF, MF y HF se refieren a las frecuencias baja, media y alta, respectivamente. Como podr\u00e1 observar, cuando se asignaron los nombres, nadie esperaba que se sobrepasar\u00edan los 10 MHz, por lo que posteriormente a las bandas m\u00e1s altas se les nombr\u00f3 como bandas VHF (frecuencia muy alta), UHF (frecuencia ultraalta), EHF (frecuencia extremadamente alta) y THF (frecuencia tremendamente alta). No hay m\u00e1s nombres aparte de \u00e9stos, pero IHF, AHF y PHF (incre\u00edblemente alta frecuencia, asombrosamente alta frecuencia y prodigiosamente alta frecuencia) sonar\u00edan bien.\nRadio\nMicroondas\nInfrarrojo\nRayos X\nRayos gamma\nLuz visible\nSat\u00e9lite\nPar trenzado Coaxial Mar\u00edtima\nRadio\nMicroondas terrestres\nFibra \u00f3ptica\nRadio\nBanda\nFigura 2-11. El espectro electromagn\u00e9tico y sus usos para comunicaciones.\nLa cantidad de informaci\u00f3n que puede transportar una onda electromagn\u00e9tica se relaciona con su ancho de banda. Con la tecnolog\u00eda actual, es posible codificar unos cuantos bits por hertz a frecuencias bajas, pero a frecuencias altas el n\u00famero puede llegar hasta 8, de modo que un cable coaxial con un ancho de banda de 750 MHz puede transportar varios gigabits/seg. La figura 2-11 debe dejar en claro ahora por qu\u00e9 a la gente de redes le gusta tanto la fibra \u00f3ptica. Si resolvemos la ecuaci\u00f3n (2-2) para f y la diferenciamos con respecto a \u03bb, obtenemos c df 2 d\u03bb \u03bb\n102\nLA CAPA F\u00cdSICA\nCAP. 2\nSi ahora usamos diferencias finitas en lugar de diferenciales y s\u00f3lo consideramos los valores absolutos, obtenemos c\u0394\u03bb \u0394f \u03bb2\n(2-3)\nPor lo tanto, dado el ancho de una banda de longitud de onda, \u0394\u03bb, podemos calcular la banda de frecuencia correspondiente, \u0394f, y a partir de ella, la tasa de datos que puede producir la banda. Cuanto m\u00e1s ancha sea \u00e9sta, mayor ser\u00e1 la tasa de datos. Por ejemplo, considere la banda de 1.30 micras de la figura 2-6. Aqu\u00ed tenemos \u03bb = 1.3 \u00d7 10\u22126 y \u0394\u03bb = 0.17 \u00d7 10\u22126, de manera que \u0394f es de aproximadamente 30 THz. A 8 bits/Hz, obtenemos 240 Tbps. La mayor\u00eda de las transmisiones ocupa una banda de frecuencias estrecha (es decir, \u0394f/f 1) a fin de obtener la mejor recepci\u00f3n (muchos watts/Hz). Sin embargo, en algunos casos se utiliza una banda ancha, con dos variaciones. En el espectro disperso con salto de frecuencia, el transmisor salta de frecuencia en frecuencia cientos de veces por segundo. Es popular en la comunicaci\u00f3n militar debido a que de esta manera es dif\u00edcil detectar las transmisiones y casi imposible intervenirlas. Ofrece buena resistencia al desvanecimiento por m\u00faltiples trayectorias debido a que la se\u00f1al directa siempre llega primero al receptor. Las se\u00f1ales reflejadas siguen una trayectoria m\u00e1s larga y llegan m\u00e1s tarde. Para ese entonces, tal vez el receptor ya haya cambiado de frecuencia y no acepte se\u00f1ales de la frecuencia anterior, con lo que se elimina la interferencia entre las se\u00f1ales directas y reflejadas. En a\u00f1os recientes, esta t\u00e9cnica tambi\u00e9n se ha aplicado comercialmente \u2014por ejemplo, tanto 802.11 como Bluetooth la utilizan. Como nota curiosa, la atractiva austriaca Hedy Lamarr, la primera mujer que apareci\u00f3 desnuda en una pel\u00edcula cinematogr\u00e1fica (el filme checoslovaco Extase de 1933), colabor\u00f3 en la invenci\u00f3n de esta t\u00e9cnica. Su primer esposo, un fabricante de armamento, le coment\u00f3 lo f\u00e1cil que era bloquear las se\u00f1ales de radio, las cuales en ese entonces se utilizaban para controlar los torpedos. Cuando descubri\u00f3 que su esposo estaba vendiendo armas a Hitler, se horroriz\u00f3 y se disfraz\u00f3 de criada para escapar de \u00e9l rumbo a Hollywood para continuar su carrera como actriz de cine. En su tiempo libre, invent\u00f3 el salto de frecuencia para ayudar a los aliados en la guerra. Su dise\u00f1o utilizaba 88 frecuencias, el n\u00famero de teclas (y frecuencias) de un piano. Por su invento, ella y el compositor de m\u00fasica George Antheil, su amigo, recibieron la patente 2,292,387 de Estados Unidos. Sin embargo, no pudieron convencer a la Marina de Estados Unidos de que su invento era \u00fatil y, por lo tanto, nunca recibieron regal\u00edas. A\u00f1os despu\u00e9s de que la patente expirara, su invento cobr\u00f3 popularidad. El otro tipo de espectro disperso, el espectro disperso de secuencia directa \u2014el cual dispersa la se\u00f1al a trav\u00e9s una banda de frecuencia ancha\u2014, est\u00e1 ganando popularidad en el mundo comercial. En particular, algunos tel\u00e9fonos m\u00f3viles de segunda generaci\u00f3n lo utilizan, y dominar\u00e1 en los de tercera generaci\u00f3n, gracias a su buena eficiencia espectral, inmunidad al ruido y otras propiedades. Algunas LANs inal\u00e1mbricas tambi\u00e9n lo utilizan. Posteriormente volveremos al tema del espectro disperso. Si desea ver una historia fascinante y detallada de las comunicaciones por espectro disperso, vea (Scholtz, 1982). Por el momento, supondremos que todas las transmisiones utilizan una banda de frecuencia estrecha. Ahora veremos c\u00f3mo se emplean las distintas partes del espectro electromagn\u00e9tico de la figura 2-11, comenzando por la radio.\nSEC. 2.3\nTRANSMISI\u00d3N INAL\u00c1MBRICA\n103\n2.3.2 Radiotransmisi\u00f3n Las ondas de radio son f\u00e1ciles de generar, pueden viajar distancias largas y penetrar edificios sin problemas, y por ello su uso est\u00e1 muy generalizado en la comunicaci\u00f3n, tanto en interiores como en exteriores. Las ondas de radio tambi\u00e9n son omnidireccionales, lo que significa que viajan en todas direcciones a partir de la fuente, por lo que no es necesario que el transmisor y el receptor se encuentren alineados f\u00edsicamente. En ocasiones la radio omnidireccional es buena, y en otras no lo es tanto. En la d\u00e9cada de 1970, General Motors decidi\u00f3 equipar sus Cadillacs nuevos con frenos antibloqueo controlados por computadora. Cuando el conductor pisaba el pedal del freno, la computadora accionaba los frenos de manera intermitente en lugar de bloquearlos firmemente. Un buen d\u00eda, un oficial que patrullaba las carreteras de Ohio encendi\u00f3 su nuevo radio m\u00f3vil para llamar a su cuartel general y, de repente, el Cadillac que iba junto a \u00e9l empez\u00f3 a comportarse de manera muy extra\u00f1a. El oficial le indic\u00f3 al conductor que se detuviera a un lado del camino y, cuando lo hizo, el conductor aleg\u00f3 que \u00e9l nada hab\u00eda hecho y que el carro se hab\u00eda vuelto loco. Con el tiempo empez\u00f3 a surgir un patr\u00f3n: los Cadillacs ocasionalmente se comportaban de manera muy extra\u00f1a, pero s\u00f3lo en las principales carreteras de Ohio y s\u00f3lo cuando alguna patrulla de caminos estaba cerca. Durante mucho tiempo General Motors no pudo comprender por qu\u00e9 los Cadillacs funcionaban bien en todos los dem\u00e1s estados e incluso en los caminos secundarios de Ohio. Despu\u00e9s de una b\u00fasqueda intensa descubrieron que el cableado de los Cadillacs constitu\u00eda una excelente antena para la frecuencia que usaba el nuevo sistema de radio de las patrullas de caminos de Ohio. Las propiedades de las ondas de radio dependen de la frecuencia. A bajas frecuencias, esas ondas cruzan bien casi cualquier obst\u00e1culo, pero la potencia se reduce de manera dr\u00e1stica a medida que se aleja de la fuente, aproximadamente en proporci\u00f3n a 1/r 2 en el aire. A frecuencias altas, las ondas de radio tienden a viajar en l\u00ednea recta y a rebotar en los obst\u00e1culos. Tambi\u00e9n son absorbidas por la lluvia. En todas las frecuencias, las ondas de radio est\u00e1n sujetas a interferencia por los motores y otros equipos el\u00e9ctricos. Por la capacidad del radio de viajar largas distancias, la interferencia entre usuarios es un problema. Por esta raz\u00f3n, todos los gobiernos reglamentan estrictamente el uso de radiotransmisores, con una excepci\u00f3n, que veremos m\u00e1s adelante. En las bandas VLF, LF y MF las ondas de radio siguen la curvatura de la Tierra, como se ilustra en la figura 2-12(a). Estas ondas se pueden detectar quiz\u00e1 a 1000 km en las frecuencias m\u00e1s bajas, y a menos en frecuencias m\u00e1s altas. La difusi\u00f3n de radio AM usa la banda MF, y es por ello que las estaciones de radio AM de Boston no se pueden o\u00edr con facilidad en Nueva York. Las ondas de radio en estas bandas cruzan con facilidad los edificios, y es por ello que los radios port\u00e1tiles funcionan en interiores. El problema principal al usar bandas para comunicaci\u00f3n de datos es su ancho de banda bajo (vea la ecuaci\u00f3n 2-3). En las bandas HF y VHF, las ondas a nivel del suelo tienden a ser absorbidas por la tierra. Sin embargo, las ondas que alcanzan la ionosfera, una capa de part\u00edculas cargadas que rodea a la Tierra a una altura de 100 a 500 km, se refractan y se env\u00edan de regreso a nuestro planeta, como se muestra en la figura 2-12(b). En ciertas condiciones atmosf\u00e9ricas, las se\u00f1ales pueden rebotar varias veces. Los operadores de radio aficionados usan estas bandas para conversar a larga distancia. El ej\u00e9rcito se comunica tambi\u00e9n en las bandas HF y VHF.\n104\nLA CAPA F\u00cdSICA Onda terrestre\nIo\nnos\nCAP. 2 fera\nSuperficie de la Tierra\nSuperficie de la Tierra\n(a)\n(b)\nFigura 2-12. (a) En las bandas VLF, LF y MF, las ondas de radio siguen la curvatura de la Tierra. (b) En la banda HF las ondas rebotan en la ionosfera.\n2.3.3 Transmisi\u00f3n por microondas Por encima de los 100 MHz las ondas viajan en l\u00ednea recta y, por lo tanto, se pueden enfocar en un haz estrecho. Concentrar toda la energ\u00eda en un haz peque\u00f1o con una antena parab\u00f3lica (como el tan familiar plato de televisi\u00f3n por sat\u00e9lite) produce una relaci\u00f3n se\u00f1al a ruido mucho m\u00e1s alta, pero las antenas transmisora y receptora deben estar bien alineadas entre s\u00ed. Adem\u00e1s, esta direccionalidad permite que varios transmisores alineados en una fila se comuniquen sin interferencia con varios receptores en fila, siempre y cuando se sigan algunas reglas de espaciado. Antes de la fibra \u00f3ptica, estas microondas formaron durante d\u00e9cadas el coraz\u00f3n del sistema de transmisi\u00f3n telef\u00f3nica de larga distancia. De hecho, MCI, uno de los primeros competidores de AT&T despu\u00e9s de que esta compa\u00f1\u00eda fue desregularizada, construy\u00f3 todo su sistema utilizando las comunicaciones mediante microondas que iban de torre en torre ubicadas a decenas de kil\u00f3metros una de la otra. Incluso el nombre de la compa\u00f1\u00eda reflej\u00f3 esto (MCI son las siglas de Microwave Communications, Inc.). Tiempo despu\u00e9s, MCI adopt\u00f3 la fibra y se fusion\u00f3 con WorldCom. Ya que las microondas viajan en l\u00ednea recta, si las torres est\u00e1n muy separadas, partes de la Tierra estorbar\u00e1n (piense en un enlace de San Francisco a \u00c1msterdam). Como consecuencia, se necesitan repetidores peri\u00f3dicos. Cuanto m\u00e1s altas sean las torres, m\u00e1s separadas pueden estar. La distancia entre los repetidores se eleva en forma muy aproximada con la ra\u00edz cuadrada de la altura de las torres. Con torres de 100 m de altura, los repetidores pueden estar separados a 80 km de distancia. A diferencia de las ondas de radio a frecuencias m\u00e1s bajas, las microondas no atraviesan bien los edificios. Adem\u00e1s, aun cuando el haz puede estar bien enfocado en el transmisor, hay cierta divergencia en el espacio. Algunas ondas pueden refractarse en las capas atmosf\u00e9ricas m\u00e1s bajas y tardar un poco m\u00e1s en llegar que las ondas directas. Las ondas diferidas pueden llegar fuera de fase con la onda directa y cancelar as\u00ed la se\u00f1al. Este efecto se llama desvanecimiento por m\u00faltiples trayectorias y con frecuencia es un problema serio que depende del clima y de la frecuencia. Algunos operadores mantienen 10% de sus canales inactivos como repuesto para activarlos cuando el desvanecimiento por m\u00faltiples trayectorias cancela en forma temporal alguna banda de frecuencia.\nSEC. 2.3\nTRANSMISI\u00d3N INAL\u00c1MBRICA\n105\nLa creciente demanda de espectro obliga a los operadores a usar frecuencias m\u00e1s altas. Las bandas de hasta 10 GHz ahora son de uso rutinario, pero con las de aproximadamente 4 GHz surge un problema: son absorbidas por el agua. Estas ondas s\u00f3lo tienen unos cent\u00edmetros de longitud y la lluvia las absorbe. Este efecto ser\u00eda \u00fatil si se quisiera construir un enorme horno de microondas externo para rostizar a los p\u00e1jaros que pasen por ah\u00ed, pero para la comunicaci\u00f3n es un problema grave. Al igual que con el desvanecimiento por m\u00faltiples trayectorias, la \u00fanica soluci\u00f3n es interrumpir los enlaces afectados por la lluvia y enrutar la comunicaci\u00f3n por otra trayectoria. En resumen, la comunicaci\u00f3n por microondas se utiliza tanto para la comunicaci\u00f3n telef\u00f3nica de larga distancia, los tel\u00e9fonos celulares, la distribuci\u00f3n de la televisi\u00f3n, etc\u00e9tera, que el espectro se ha vuelto muy escaso. Esta tecnolog\u00eda tiene varias ventajas significativas respecto a la fibra. La principal es que no se necesita derecho de paso; basta con comprar un terreno peque\u00f1o cada 50 km y construir en \u00e9l una torre de microondas para saltarse el sistema telef\u00f3nico y comunicarse en forma directa. As\u00ed es como MCI logr\u00f3 establecerse tan r\u00e1pidamente como una compa\u00f1\u00eda nueva telef\u00f3nica de larga distancia. (Sprint sigui\u00f3 un camino totalmente diferente: la fund\u00f3 el ferrocarril Southern Pacific Railroad, que ya pose\u00eda una gran cantidad de derechos de paso, limit\u00e1ndose a enterrar la fibra junto a las v\u00edas.) Las microondas tambi\u00e9n son relativamente baratas. Erigir dos torres sencillas (podr\u00edan ser simplemente postes grandes con cables de ret\u00e9n) y poner antenas en cada una puede costar menos que enterrar 50 km de fibra a trav\u00e9s de un \u00e1rea urbana congestionada o sobre una monta\u00f1a, y tambi\u00e9n puede ser m\u00e1s econ\u00f3mico que rentar la fibra de la compa\u00f1\u00eda de tel\u00e9fonos, en especial si \u00e9sta a\u00fan no ha recuperado por completo la inversi\u00f3n hecha por el cobre que quit\u00f3 cuando instal\u00f3 la fibra. Las pol\u00edticas del espectro electromagn\u00e9tico Para evitar el caos total, hay acuerdos nacionales e internacionales acerca de qui\u00e9n utiliza cu\u00e1les frecuencias. Puesto que todos desean una tasa de transferencia de datos m\u00e1s alta, tambi\u00e9n desean m\u00e1s espectro. Los gobiernos nacionales asignan espectros para la radio AM y FM, la televisi\u00f3n y los tel\u00e9fonos m\u00f3viles, as\u00ed como para las compa\u00f1\u00edas telef\u00f3nicas, la polic\u00eda, la marina, la navegaci\u00f3n, la milicia, el gobierno y muchos otros usuarios en competencia. A nivel mundial, una agencia de la ITU-R (WARC) trata de coordinar esta asignaci\u00f3n de manera que se puedan fabricar los dispositivos que operan en diversos pa\u00edses. Sin embargo, los pa\u00edses no est\u00e1n atados a las recomendaciones de la ITU-R por lo que la FCC (Comisi\u00f3n Federal de Comunicaciones), que hace la asignaci\u00f3n para Estados Unidos, ha rechazado ocasionalmente las recomendaciones de la ITU-R (por lo general, porque estas recomendaciones ped\u00edan a alg\u00fan grupo pol\u00edticamente poderoso que cediera una parte del espectro). Incluso cuando una parte del espectro se ha asignado para un uso en particular, como para los tel\u00e9fonos m\u00f3viles, existe el aspecto adicional de cu\u00e1l empresa portadora tiene permitido utilizar cu\u00e1les frecuencias. En el pasado se utilizaban tres algoritmos. El m\u00e1s antiguo, llamado concurso de m\u00e9ritos (beauty contest), requiere que cada empresa portadora explique por qu\u00e9 su propuesta es la que sirve mejor para los intereses p\u00fablicos. Despu\u00e9s los funcionarios del gobierno deciden\n106\nLA CAPA F\u00cdSICA\nCAP. 2\ncu\u00e1l de todas esas historias los convence m\u00e1s. Debido a que alguno de estos funcionarios otorgaban propiedad valuada en miles de millones de d\u00f3lares a la compa\u00f1\u00eda de su preferencia, esto conduc\u00eda a soborno, corrupci\u00f3n, nepotismo, etc\u00e9tera. Adem\u00e1s, incluso un funcionario escrupulosamente honesto que piense que una compa\u00f1\u00eda extranjera podr\u00eda hacer mejor trabajo que cualquiera de las nacionales, tiene que dar muchas explicaciones. Esta observaci\u00f3n nos lleva al segundo algoritmo, en el que se realiza un sorteo entre las compa\u00f1\u00edas interesadas. El problema con esta idea es que las compa\u00f1\u00edas que no tienen ning\u00fan inter\u00e9s en utilizar el espectro, pueden entrar al sorteo. Por ejemplo, si un restaurante de comida r\u00e1pida o una cadena de zapater\u00edas gana, puede revender el espectro a una empresa portadora, sacando una ganancia inmensa y sin ning\u00fan riesgo. La concesi\u00f3n de ganancias inesperadas a compa\u00f1\u00edas atentas, aunque aleatorias, ha sido severamente criticada por muchos, lo que nos lleva al algoritmo 3: subastar el ancho de banda al mejor postor. Cuando en el a\u00f1o 2000 Inglaterra subast\u00f3 las frecuencias necesarias para los sistemas m\u00f3viles de la tercera generaci\u00f3n, esperaba obtener aproximadamente $4 mil millones. En realidad recibi\u00f3 $40 mil millones debido a que las empresas portadoras cayeron en la desesperaci\u00f3n ante la posibilidad de perder el mercado m\u00f3vil. Este evento despert\u00f3 la avaricia de los gobiernos vecinos y los motiv\u00f3 a llevar a cabo sus propias subastas. Funcion\u00f3, pero tambi\u00e9n dej\u00f3 a algunas empresas portadoras con deudas enormes que ahora las tienen al borde de la bancarrota. Incluso en los mejores casos, les tomar\u00e1 muchos a\u00f1os recuperar la inversi\u00f3n en la licencia. Un enfoque totalmente diferente para asignar frecuencias es no asignarlas por completo. Tan s\u00f3lo se deja que todos transmitan a voluntad, pero se regula la potencia utilizada de manera que las estaciones tengan un rango tan corto que no interfieran entre ellas. Por consiguiente, la mayor\u00eda de los gobiernos han apartado algunas bandas de frecuencias, llamadas bandas ISM (industriales, m\u00e9dicas y cient\u00edficas) de uso no autorizado. Los dispositivos para abrir puertas de garaje, tel\u00e9fonos inal\u00e1mbricos, juguetes controlados por radio, ratones inal\u00e1mbricos y muchos otros dispositivos inal\u00e1mbricos dom\u00e9sticos utilizan las bandas ISM. Para minimizar la interferencia entre estos dispositivos no coordinados, la FCC exige que todos los dispositivos que utilizan las bandas ISM utilicen t\u00e9cnicas de espectro disperso. En algunos otros pa\u00edses se aplican reglas similares. La ubicaci\u00f3n de las bandas ISM var\u00eda un poco de pa\u00eds a pa\u00eds. Por ejemplo, en Estados Unidos los dispositivos cuya potencia est\u00e9 debajo de 1 watt, pueden utilizar las bandas que se muestran en la figura 2-13 sin requerir una licencia de la FCC. La banda de 900 MHz funciona mejor, pero est\u00e1 atestada y no est\u00e1 disponible en todo el mundo. La banda de 2.4 GHz est\u00e1 disponible en la mayor\u00eda de los pa\u00edses, pero est\u00e1 sujeta a interferencia por parte de los hornos de microondas e instalaciones de radar. Bluetooth y algunas de las LANs inal\u00e1mbricas 802.11 operan en esta banda. La banda de 5.7 GHz es nueva y no se ha desarrollado del todo, por lo que el equipo que la utiliza es costoso, pero debido a que 802.11a la utiliza, se popularizar\u00e1 con rapidez.\n2.3.4 Ondas infrarrojas y milim\u00e9tricas Las ondas infrarrojas y milim\u00e9tricas no guiadas se usan mucho para la comunicaci\u00f3n de corto alcance. Todos los controles remotos de los televisores, grabadoras de v\u00eddeo y est\u00e9reos utilizan comunicaci\u00f3n infrarroja. Estos controles son relativamente direccionales, econ\u00f3micos y f\u00e1ciles de\nSEC. 2.3\n107\nTRANSMISI\u00d3N INAL\u00c1MBRICA Ancho de banda\nFrecuencia\n26 MHz\n902 928 MHz MHz\n83.5 MHz\n2.4 GHz\n125 MHz\n2.4835 GHz\n5.735 GHz\n5.860 GHz\nFigura 2-13. Las bandas ISM de Estados Unidos.\nconstruir, pero tienen un inconveniente importante: no atraviesan los objetos s\u00f3lidos (p\u00e1rese entre su televisor y su control remoto y vea si todav\u00eda funciona). En general, conforme pasamos de la radio de onda larga hacia la luz visible, las ondas se comportan cada vez m\u00e1s como la luz y cada vez menos como la radio. Por otro lado, el hecho de que las ondas infrarrojas no atraviesen bien las paredes s\u00f3lidas tambi\u00e9n es una ventaja. Esto significa que un sistema infrarrojo en un cuarto de un edificio no interferir\u00e1 con un sistema similar en cuartos adyacentes. Por esta raz\u00f3n, la seguridad de estos sistemas contra el espionaje es mejor que la de los sistemas de radio. Adem\u00e1s, no es necesario obtener licencia del gobierno para operar un sistema infrarrojo, en contraste con los sistemas de radio, que deben tener licencia afuera de las bandas ISM. La comunicaci\u00f3n infrarroja tiene un uso limitado en el escritorio; por ejemplo, para conectar computadoras port\u00e1tiles e impresoras, aunque no es un protagonista principal en el juego de la comunicaci\u00f3n.\n2.3.5 Transmisi\u00f3n por ondas de luz La se\u00f1alizaci\u00f3n \u00f3ptica sin gu\u00edas se ha utilizado durante siglos. Paul Revere utiliz\u00f3 se\u00f1alizaci\u00f3n \u00f3ptica binaria desde la Iglesia Old North justo antes de su famoso viaje. Una aplicaci\u00f3n m\u00e1s moderna es conectar las LANs de dos edificios por medio de l\u00e1seres montados en sus azoteas. La se\u00f1alizaci\u00f3n \u00f3ptica coherente con l\u00e1seres es inherentemente unidireccional, de modo que cada edificio necesita su propio l\u00e1ser y su propio fotodetector. Este esquema ofrece un ancho de banda muy alto y un costo muy bajo. Tambi\u00e9n es relativamente f\u00e1cil de instalar y, a diferencia de las microondas, no requiere una licencia de la FCC. Sin embargo, la ventaja del l\u00e1ser, un haz muy estrecho, aqu\u00ed tambi\u00e9n es una debilidad. Apuntar un rayo l\u00e1ser de 1 mm de anchura a un blanco del tama\u00f1o de la punta de un alfiler a 500 m de distancia requiere la punter\u00eda de una Annie Oakley moderna. Por lo general, se a\u00f1aden lentes al sistema para desenfocar ligeramente el rayo. Una desventaja es que los rayos l\u00e1ser no pueden penetrar la lluvia ni la niebla densa, pero normalmente funcionan bien en d\u00edas soleados. Sin embargo, en una ocasi\u00f3n el autor asisti\u00f3 a una conferencia en un moderno hotel de Europa en el que los organizadores tuvieron la atenci\u00f3n de proporcionar un sal\u00f3n lleno de terminales para que los asistentes leyeran su correo electr\u00f3nico durante las presentaciones aburridas. Puesto que la PTT local no estaba dispuesta a instalar un gran\n108\nLA CAPA F\u00cdSICA\nCAP. 2\nn\u00famero de l\u00edneas telef\u00f3nicas s\u00f3lo para tres d\u00edas, los organizadores colocaron un l\u00e1ser en el techo, lo apuntaron al edificio de ciencias de la computaci\u00f3n de su universidad, el cual est\u00e1 a unos cuantos kil\u00f3metros de all\u00ed; lo probaron la noche anterior a la conferencia y funcion\u00f3 a la perfecci\u00f3n. A las 9 a.m. del siguiente d\u00eda, que era brillante y soleado, el enlace fall\u00f3 por completo y permaneci\u00f3 ca\u00eddo todo el d\u00eda. Esa noche los organizadores volvieron a probar con mucho cuidado el enlace y de nuevo funcion\u00f3 a la perfecci\u00f3n. El patr\u00f3n se repiti\u00f3 durante dos d\u00edas m\u00e1s de forma id\u00e9ntica. Despu\u00e9s de la conferencia, los organizadores descubrieron el problema. Durante el d\u00eda, el calor del sol causaba corrientes de convecci\u00f3n que se elevaban desde el techo del edificio, como se muestra en la figura 2-14. Este aire turbulento desviaba el rayo y lo hac\u00eda danzar alrededor del detector. Una \u201cvista\u201d atmosf\u00e9rica como \u00e9sta hace titilar a las estrellas (y es la raz\u00f3n por la cual los astr\u00f3nomos ponen sus telescopios en las cimas de las monta\u00f1as, para quedar tan arriba en la atm\u00f3sfera como sea posible). Este fen\u00f3meno es tambi\u00e9n la causa del aspecto tr\u00e9mulo de las carreteras en un d\u00eda caluroso y de las im\u00e1genes ondulantes cuando se mira sobre un radiador caliente.\nEl rayo l\u00e1ser no coincide con el detector Fotodetector\nRegi\u00f3n de visi\u00f3n turbulenta\nAire caliente que sube del edificio\nFigura 2-14. Las corrientes de convecci\u00f3n pueden interferir los sistemas de comunicaci\u00f3n por l\u00e1ser. Aqu\u00ed se ilustra un sistema bidireccional con dos l\u00e1seres.\nL\u00e1ser\nSEC. 2.4\nSAT\u00c9LITES DE COMUNICACIONES\n109\n2.4 SAT\u00c9LITES DE COMUNICACIONES En la d\u00e9cada de 1950 y principios de la de 1960, hubo intentos por establecer sistemas de comunicaci\u00f3n mediante el rebote de se\u00f1ales sobre globos clim\u00e1ticos. Por desgracia, las se\u00f1ales que se recib\u00edan eran demasiado d\u00e9biles para darles un uso pr\u00e1ctico. Entonces, la Marina de Estados Unidos descubri\u00f3 una especie de globo clim\u00e1tico en el cielo \u2014la Luna\u2014 y desarroll\u00f3 un sistema de comunicaciones por repetici\u00f3n (o de barco a tierra) que rebotaba se\u00f1ales de \u00e9l. Progresos posteriores en el campo de las comunicaciones por el cielo tuvieron que esperar hasta que se lanz\u00f3 el primer sat\u00e9lite de comunicaciones. La principal diferencia entre un sat\u00e9lite artificial y uno real es que el primero puede amplificar las se\u00f1ales antes de mandarlas de regreso, convirtiendo lo que parec\u00eda una idea estrafalaria en un poderoso sistema de comunicaciones. Los sat\u00e9lites de comunicaciones tienen algunas propiedades interesantes que los hacen atractivos para muchas aplicaciones. En su forma m\u00e1s simple, un sat\u00e9lite de comunicaciones se puede considerar como un enorme repetidor de microondas en el cielo. Contiene numerosos transpondedores, cada uno de los cuales se encarga de una parte del espectro, amplifica la se\u00f1al entrante y a continuaci\u00f3n la retransmite en otra frecuencia para evitar interferencia con la se\u00f1al entrante. Los haces pueden ser amplios y cubrir una fracci\u00f3n sustancial de la superficie de la Tierra, o estrechos, y abarcar s\u00f3lo algunos cientos de kil\u00f3metros de di\u00e1metro. Este modo de operaci\u00f3n se conoce como de tubo doblado. De acuerdo con la ley de Kepler, el periodo orbital de un sat\u00e9lite var\u00eda seg\u00fan el radio de la \u00f3rbita a la 3/2 potencia. Entre m\u00e1s alto est\u00e9 el sat\u00e9lite, m\u00e1s largo es el periodo. Cerca de la superficie de la Tierra, el periodo es de aproximadamente 90 minutos. En consecuencia, los sat\u00e9lites con \u00f3rbitas bajas desaparecen de la vista con bastante rapidez, aunque algunos de ellos son necesarios para proporcionar una cobertura continua. A una altitud de cerca de 35,800 km, el periodo es de 24 horas. A una de 384,000 km, el periodo es cercano a un mes, como puede atestiguar cualquiera que haya observado la Luna con regularidad. El periodo de un sat\u00e9lite es importante, aunque no es el \u00fanico punto para determinar d\u00f3nde colocarlo. Otro aspecto es la presencia de los cinturones de Van Allen, capas de part\u00edculas altamente cargadas de energ\u00eda, atrapadas por el campo magn\u00e9tico de la Tierra. Cualquier sat\u00e9lite que vuele dentro de ellas ser\u00eda destruido r\u00e1pidamente por las part\u00edculas con una alta carga de energ\u00eda. Del an\u00e1lisis de estos factores resulta que hay tres regiones para colocar con seguridad los sat\u00e9lites. En la figura 2-15 se muestran estas regiones y algunas de sus propiedades. Enseguida describiremos brevemente los sat\u00e9lites que habitan cada una de estas regiones.\n2.4.1 Sat\u00e9lites geoestacionarios En 1945, el escritor de ciencia-ficci\u00f3n Arthur C. Clarke calcul\u00f3 que un sat\u00e9lite a una altitud de 35,800 km en una \u00f3rbita ecuatorial circular aparentar\u00eda permanecer inm\u00f3vil en el cielo, por lo que no ser\u00eda necesario rastrearlo (Clarke, 1945). Se dio a la tarea de describir un sistema de comunicaciones completo que utilizaba estos (tripulados) sat\u00e9lites geoestacionarios, incluyendo\n110\nLA CAPA F\u00cdSICA Altitud (km)\nTipo\nLatencia (ms)\nCAP. 2 Sat\u00e9lites necesarios\nGEO\nCintur\u00f3n superior de Van Allen MEO Cintur\u00f3n inferior de Van Allen LEO\nFigura 2-15. Sat\u00e9lites de comunicaciones y algunas de sus propiedades, entre ellas: altitud sobre la Tierra, tiempo de duraci\u00f3n de un viaje de ida y vuelta y la cantidad de sat\u00e9lites necesarios para abarcar toda la Tierra.\nlas \u00f3rbitas, paneles solares, radiofrecuencias y procedimientos de lanzamiento. Desafortunadamente, lleg\u00f3 a la conclusi\u00f3n de que los sat\u00e9lites no eran pr\u00e1cticos debido a la imposibilidad de poner en \u00f3rbita amplificadores de tubos cat\u00f3dicos fr\u00e1giles que consum\u00edan una gran cantidad de energ\u00eda, por lo cual nunca le dio seguimiento a esta idea, aunque escribi\u00f3 algunos relatos de ciencia ficci\u00f3n al respecto. La invenci\u00f3n del transistor cambi\u00f3 las cosas, y el primer sat\u00e9lite de comunicaciones artificial, Telstar, fue lanzado en julio de 1962. Desde entonces, los sat\u00e9lites de comunicaciones se han convertido en un negocio multimillonario y en el \u00fanico aspecto del espacio exterior altamente rentable. Con frecuencia, a estos sat\u00e9lites que vuelan a grandes alturas se les llama sat\u00e9lites GEO (\u00d3rbita Terrestre Geoestacionaria). Con la tecnolog\u00eda actual, es poco aconsejable utilizar sat\u00e9lites geoestacionarios espaciados a menos de dos grados en el plano ecuatorial de 360 grados para evitar interferencia. Con un espaciamiento de dos grados, s\u00f3lo puede haber 360/2 = 180 de estos sat\u00e9lites a la vez en el cielo. Sin embargo, cada transpondedor puede utilizar m\u00faltiples frecuencias y polarizaciones para incrementar el ancho de banda disponible. Para evitar el caos total en el cielo, la ITU asigna la posici\u00f3n orbital. Este proceso tiene fuertes connotaciones pol\u00edticas, y pa\u00edses que apenas est\u00e1n saliendo de la edad de piedra demandan \u201csus\u201d posiciones orbitales (con el prop\u00f3sito de alquilarlas al mejor postor). No obstante, algunos pa\u00edses sostienen que la propiedad no se extiende a la Luna y que ning\u00fan pa\u00eds tiene derechos legales sobre las posiciones orbitales que se encuentran arriba de su territorio. Por si esto no fuera suficiente, las telecomunicaciones comerciales no son la \u00fanica aplicaci\u00f3n. Las compa\u00f1\u00edas televisoras, los gobiernos y la milicia tambi\u00e9n quieren su tajada del pastel orbital. Los sat\u00e9lites modernos pueden ser bastante grandes, pesar hasta 4000 kg y consumir varios kilowatts de electricidad producida por paneles solares. La gravedad del Sol, la Luna y los planetas\nSEC. 2.4\n111\nSAT\u00c9LITES DE COMUNICACIONES\ntiende a desplazar a los sat\u00e9lites de sus \u00f3rbitas y orientaciones asignadas, efecto contrarrestado por los motores turbo integrados de los sat\u00e9lites. Esta actividad de ajuste se conoce como control de la posici\u00f3n orbital. Sin embargo, cuando se termina el combustible de los motores, por lo general a los 10 a\u00f1os, el sat\u00e9lite navega a la deriva y cae sin remedio, por lo cual es necesario desactivarlo. Con el tiempo, la \u00f3rbita se deteriora y el sat\u00e9lite reingresa a la atm\u00f3sfera y se incendia o en ocasiones se estrella contra la Tierra. Las posiciones orbitales no son la \u00fanica manzana de la discordia. Tambi\u00e9n lo son las frecuencias, debido a que las transmisiones de los enlaces descendentes interfieren con los usuarios de microondas existentes. En consecuencia, la ITU ha asignado bandas de frecuencia espec\u00edficas a los usuarios de sat\u00e9lites. Las principales se muestran en la figura 2-16. La banda C fue la primera que se destin\u00f3 al tr\u00e1fico comercial por sat\u00e9lite. Tiene dos rangos de frecuencia, el inferior para el tr\u00e1fico descendente o de bajada (proveniente del sat\u00e9lite) y el superior para el tr\u00e1fico ascendente o de subida (hacia el sat\u00e9lite). Para permitir que el tr\u00e1fico fluya en ambos sentidos al mismo tiempo, se requieren dos canales, uno para cada sentido. Estas bandas est\u00e1n sobresaturadas debido a que las empresas portadoras tambi\u00e9n las utilizan para los enlaces de microondas terrestres. Las bandas L y S fueron incorporadas en el a\u00f1o 2000 mediante un acuerdo internacional. No obstante, son estrechas y saturadas. Banda\nEnlace descendente\nEnlace ascendente\nAncho de banda\nProblemas\nL\n1.5 GHz\n1.6 GHz\n15 MHz\nBajo ancho de banda; saturada\nS\n1.9 GHz\n2.2 GHz\n70 MHz\nBajo ancho de banda; saturada\nC\n4.0 GHz\n6.0 GHz\n500 MHz\nInterferencia terrestre\nKu\n11 GHz\n14 GHz\n500 MHz\nLluvia\nKa\n20 GHz\n30 GHz\n3500 MHz\nLluvia, costo del equipo\nFigura 2-16. Principales bandas de sat\u00e9lite.\nLa siguiente banda m\u00e1s ancha disponible para los operadores de telecomunicaciones es la banda Ku (K abajo). Esta banda a\u00fan no est\u00e1 saturada, y a estas frecuencias es posible espaciar los sat\u00e9lites a cerca de un grado. No obstante, hay otro problema: la lluvia. El agua es un gran absorbente de estas microondas cortas. La buena noticia es que por lo general las tormentas se confinan a sitios espec\u00edficos, por lo que el problema se soluciona con la instalaci\u00f3n de varias estaciones terrestres con suficiente separaci\u00f3n en vez de una sola, al costo de m\u00e1s antenas, cables y aparatos electr\u00f3nicos que permitan pasar r\u00e1pidamente de una estaci\u00f3n a otra. Tambi\u00e9n se ha asignado ancho de banda para tr\u00e1fico comercial por sat\u00e9lite en la banda Ka (K arriba), pero el equipo necesario para utilizar esta banda a\u00fan es caro. Adem\u00e1s de estas bandas comerciales, tambi\u00e9n hay muchas bandas gubernamentales y militares. Un sat\u00e9lite moderno tiene alrededor de 40 transpondedores, cada uno con un ancho de banda de 80 MHz. Por lo general, cada transpondedor opera como un tubo doblado, pero algunos sat\u00e9lites recientes tienen capacidad de procesamiento a bordo, lo cual les permite una operaci\u00f3n m\u00e1s refinada. La divisi\u00f3n de los transpondedores en canales era est\u00e1tica en los primeros sat\u00e9lites: el\n112\nLA CAPA F\u00cdSICA\nCAP. 2\nancho de banda se divid\u00eda simplemente en bandas de frecuencia fija. En nuestros d\u00edas, cada haz del transpondedor se divide en ranuras temporales, y varios usuarios su turnan para utilizarlo. M\u00e1s tarde en este mismo cap\u00edtulo analizaremos en detalle estas dos t\u00e9cnicas (multiplexi\u00f3n por divisi\u00f3n de frecuencia y multiplexi\u00f3n por divisi\u00f3n de tiempo). Los primeros sat\u00e9lites geoestacionarios ten\u00edan un solo haz espacial que iluminaba cerca de un tercio de la superficie de la Tierra, al cual se le conoce como huella. Con la considerable reducci\u00f3n en precio, tama\u00f1o y requerimientos de energ\u00eda de los componentes microelectr\u00f3nicos, se ha vuelto posible una estrategia de difusi\u00f3n mucho m\u00e1s refinada. Cada sat\u00e9lite est\u00e1 equipado con m\u00faltiples antenas y transpondedores. Cada haz descendente se puede concentrar en un \u00e1rea geogr\u00e1fica peque\u00f1a, de tal forma que es posible llevar a cabo simult\u00e1neamente una gran cantidad de transmisiones hacia y desde el sat\u00e9lite. Normalmente, estos haces, conocidos como haces reducidos, tienen forma el\u00edptica y pueden ser tan peque\u00f1os como algunos cientos de kil\u00f3metros. Por lo general, un sat\u00e9lite de comunicaciones para los Estados Unidos de Am\u00e9rica tiene un haz ancho para los 48 estados contiguos y haces reducidos para Alaska y Hawaii. Un avance reciente en el mundo de los sat\u00e9lites de comunicaciones es el desarrollo de microestaciones de bajo costo, llamadas VSATs (Terminales de Apertura Muy Peque\u00f1a) (Abramson, 2000). Estas diminutas terminales tienen antenas de un metro o m\u00e1s peque\u00f1as (en comparaci\u00f3n con los 10 metros que mide una antena GEO est\u00e1ndar) y pueden producir alrededor de un watt de energ\u00eda. Por lo general, el enlace ascendente funciona a 19.2 kbps, pero el enlace descendente funciona con frecuencia a 512 kbps o m\u00e1s. La televisi\u00f3n de difusi\u00f3n directa por sat\u00e9lite utiliza esta tecnolog\u00eda para transmisi\u00f3n unidireccional. En muchos sistemas VSAT, las microestaciones no tienen suficiente potencia para comunicarse directamente una con la otra (a trav\u00e9s del sat\u00e9lite, por supuesto). En vez de ello, como se muestra en la figura 2-17, es necesaria una estaci\u00f3n especial en tierra, la estaci\u00f3n central, que cuenta con una antena grande, para retransmitir el tr\u00e1fico entre VSATs. En este modo de operaci\u00f3n, el emisor o el receptor tienen una antena grande y un amplificador potente. La desventaja es que existe un retardo m\u00e1s prolongado al contar con estaciones de usuario m\u00e1s econ\u00f3micas. Las VSATs tienen un futuro prometedor en las zonas rurales. A\u00fan no tienen una amplia aceptaci\u00f3n, pero m\u00e1s de la mitad de la poblaci\u00f3n del mundo vive a una hora de distancia del tel\u00e9fono m\u00e1s cercano. El tendido de redes telef\u00f3nicas a miles de peque\u00f1as poblaciones excede el presupuesto de la mayor\u00eda de los gobiernos del tercer mundo, pero lo que s\u00ed es factible es la instalaci\u00f3n de antenas VSAT de un metro alimentadas por celdas solares. Las VSATs proporcionar\u00e1n la tecnolog\u00eda que enlazar\u00e1 al mundo. Los sat\u00e9lites de comunicaciones tienen diversas propiedades radicalmente distintas a las de los enlaces terrestres de punto a punto. Para empezar, aun cuando las se\u00f1ales hacia y desde un sat\u00e9lite viajan a la velocidad de la luz (cerca de 300,000 km/seg), el largo viaje de ida y vuelta provoca un retardo sustancial para los sat\u00e9lites GEO. Dependiendo de la distancia entre el usuario y la estaci\u00f3n terrestre, as\u00ed como de la elevaci\u00f3n del sat\u00e9lite en el horizonte, el tiempo de tr\u00e1nsito de un extremo al otro es de entre 250 y 300 mseg. Un valor com\u00fan es de 270 mseg (540 mseg para un sistema VSAT con una estaci\u00f3n central). Con prop\u00f3sitos de comparaci\u00f3n, los enlaces terrestres de microondas tienen un retardo de propagaci\u00f3n de casi 3 \u03bcseg/km, en tanto que los enlaces de cable coaxial o la fibra \u00f3ptica tienen un\nSEC. 2.4\n113\nSAT\u00c9LITES DE COMUNICACIONES Sat\u00e9lite de comunicaciones\nVSAT\nEstaci\u00f3n central\nFigura 2-17. VSATs con una estaci\u00f3n central.\nretardo de aproximadamente 5 \u03bcseg/km. El \u00faltimo es m\u00e1s lento que el primero debido a que las se\u00f1ales electromagn\u00e9ticas viajan m\u00e1s r\u00e1pido en el aire que en materiales s\u00f3lidos. Otra propiedad importante de los sat\u00e9lites es que son esencialmente medios de difusi\u00f3n. No cuesta m\u00e1s enviar un mensaje a miles de estaciones dentro de la huella de un transpondedor de lo que cuesta enviarlo a una sola estaci\u00f3n. Esta propiedad es muy \u00fatil para algunas aplicaciones. Por ejemplo, es posible que un sat\u00e9lite difunda p\u00e1ginas Web populares a los cach\u00e9s de una gran cantidad de computadoras diseminadas en un \u00e1rea amplia. Aun cuando la difusi\u00f3n se puede simular con l\u00edneas punto a punto, la difusi\u00f3n por sat\u00e9lite es mucho m\u00e1s econ\u00f3mica. Por otro lado, los sat\u00e9lites son un verdadero desastre en el aspecto de seguridad y privacidad: cualquiera puede escuchar todo. La encriptaci\u00f3n es esencial cuando se requiere seguridad. Los sat\u00e9lites tambi\u00e9n tienen la propiedad de que el costo de transmitir un mensaje es independiente de la distancia que se recorra. Una llamada al otro lado del oc\u00e9ano tiene el mismo costo que una al otro lado de la calle. Los sat\u00e9lites tambi\u00e9n cuentan con excelentes tasas de error y se pueden desplegar de manera casi instant\u00e1nea, un aspecto importante para las comunicaciones militares.\n2.4.2 Sat\u00e9lites de \u00d3rbita Terrestre Media Los sat\u00e9lites MEO (\u00d3rbita Terrestre Media) se encuentran a altitudes mucho m\u00e1s bajas, entre los dos cinturones de Van Allen. Vistos desde la Tierra, estos sat\u00e9lites se desplazan lentamente y tardan alrededor de seis horas para dar la vuelta a la Tierra. Por consiguiente, es necesario rastrearlos conforme se desplazan. Puesto que son menores que los GEO, tienen una huella m\u00e1s peque\u00f1a y se requieren transmisores menos potentes para alcanzarlos. Hoy en d\u00eda no se utilizan para telecomunicaciones, por lo cual no los examinaremos aqu\u00ed. Los 24 sat\u00e9lites GPS (Sistema de Posicionamiento Global) que orbitan a cerca de 18,000 km son ejemplos de sat\u00e9lites MEO.\n114\nLA CAPA F\u00cdSICA\nCAP. 2\n2.4.3 Sat\u00e9lites de \u00d3rbita Terrestre Baja En una altitud m\u00e1s baja encontramos a los sat\u00e9lites LEO (\u00d3rbita Terrestre Baja). Debido a la rapidez de su movimiento, se requieren grandes cantidades de ellos para conformar un sistema completo. Por otro lado, como los sat\u00e9lites se encuentran tan cercanos a la Tierra, las estaciones terrestres no necesitan mucha potencia, y el retardo del viaje de ida y vuelta es de tan s\u00f3lo algunos milisegundos. En esta secci\u00f3n examinaremos tres ejemplos, dos sobre las comunicaciones de voz y uno sobre el servicio de Internet. Iridium Como ya mencionamos, durante los primeros 30 a\u00f1os de la era de los sat\u00e9lites casi no se utilizaban los sat\u00e9lites de \u00f3rbita baja porque aparec\u00edan y desaparec\u00edan con mucha rapidez. En 1990, Motorola abri\u00f3 un nuevo camino al solicitar permiso a la FCC (Comisi\u00f3n Federal de Comunicaciones de Estados Unidos) para lanzar 77 sat\u00e9lites de \u00f3rbita baja para el proyecto Iridium (el iridio es el elemento 77). El plan fue modificado m\u00e1s tarde para utilizar s\u00f3lo 66 sat\u00e9lites, por lo que el proyecto debi\u00f3 haberse renombrado como Dysprosium (elemento 66), pero quiz\u00e1 este nombre sonaba demasiado a enfermedad. El prop\u00f3sito era que tan pronto como un sat\u00e9lite se perdiera de vista, otro lo reemplazar\u00eda. Esta propuesta desat\u00f3 un frenes\u00ed entre otras compa\u00f1\u00edas. De pronto, todos quer\u00edan lanzar una cadena de sat\u00e9lites de \u00f3rbita baja. Despu\u00e9s de siete a\u00f1os de improvisaci\u00f3n de socios y financiamiento, los socios lanzaron los sat\u00e9lites Iridium en 1997. El servicio de comunicaciones empez\u00f3 en noviembre de 1998. Por desgracia, la demanda comercial de tel\u00e9fonos por sat\u00e9lite grandes y pesados fue insignificante porque la red telef\u00f3nica m\u00f3vil hab\u00eda crecido de manera espectacular desde 1990. En consecuencia, el proyecto Iridium no fue rentable y quebr\u00f3 en agosto de 1999 en lo que fue uno de los fracasos corporativos m\u00e1s espectaculares de la historia. Los sat\u00e9lites y otros activos (con valor de 5000 millones de d\u00f3lares) fueron adquiridos posteriormente por un inversionista en 25 millones de d\u00f3lares en una especie de venta de garaje extraterrestre. El servicio Iridium se reinici\u00f3 en marzo de 2001. El negocio de Iridium era (y es) ofrecer servicio de telecomunicaciones en todo el mundo a trav\u00e9s de dispositivos de bolsillo que se comunican directamente con los sat\u00e9lites Iridium. Proporciona servicio de voz, datos, b\u00fasqueda de personas, fax y navegaci\u00f3n en cualquier parte, sea en tierra, mar y aire. Entre sus clientes est\u00e1n las industrias mar\u00edtima, de la aviaci\u00f3n y exploraci\u00f3n petrolera, as\u00ed como personas que viajan a partes del mundo que carecen de infraestructura de telecomunicaciones (por ejemplo, desiertos, monta\u00f1as, selvas y algunos pa\u00edses del tercer mundo). Los sat\u00e9lites Iridium est\u00e1n a una altitud de 750 km, en \u00f3rbitas polares circulares. Est\u00e1n dispuestos en forma de collar de norte a sur, con un sat\u00e9lite a cada 32 grados de latitud. La Tierra completa se cubre con seis collares, como se aprecia en la figura 2-18(a). Quienes no tengan muchos conocimientos sobre qu\u00edmica pueden pensar que esta disposici\u00f3n es un gran \u00e1tomo de disprosio, con la Tierra como n\u00facleo y los sat\u00e9lites como electrones.\nSEC. 2.4\n115\nSAT\u00c9LITES DE COMUNICACIONES\n(a)\n(b)\nFigura 2-18. (a) Los sat\u00e9lites Iridium forman seis collares alrededor de la Tierra. (b) 1628 celdas en movimiento cubren la Tierra.\nCada sat\u00e9lite tiene un m\u00e1ximo de 48 celdas (haces reducidos), con un total de 1628 celdas sobre la superficie de la Tierra, como se muestra en la figura 2-18(b). Cada sat\u00e9lite tiene una capacidad de 3840 canales, o 253,440 en total. Algunos de estos canales se utilizan para localizaci\u00f3n de personas y navegaci\u00f3n, en tanto que otros, para datos y voz. Una propiedad interesante de Iridium es que la comunicaci\u00f3n entre clientes distantes tiene lugar en el espacio, con un sat\u00e9lite retransmitiendo datos al siguiente, como se muestra en la figura 2-19(a). Aqu\u00ed vemos que quien llama est\u00e1 en el Polo Norte y hace contacto con un sat\u00e9lite que se encuentra directamente arriba de \u00e9l. La llamada se retransmite a trav\u00e9s de otros sat\u00e9lites y por \u00faltimo es entregada al destinatario en el Polo Sur. Globalstar Globalstar es un dise\u00f1o alterno para Iridium. Se basa en 48 sat\u00e9lites LEO pero utiliza un esquema de conmutaci\u00f3n diferente al de Iridium. En tanto que Iridium retransmite las llamadas de sat\u00e9lite en sat\u00e9lite, lo cual requiere un equipo de conmutaci\u00f3n refinado en los sat\u00e9lites, Globalstar utiliza un dise\u00f1o de tubo doblado tradicional. La llamada que se origin\u00f3 en el Polo Norte en la figura 2-19(b) es devuelta a la Tierra y recogida por la enorme estaci\u00f3n terrestre. A continuaci\u00f3n la llamada se enruta, a trav\u00e9s de una red terrestre, a la estaci\u00f3n terrestre m\u00e1s cercana al destinatario y se entrega mediante una conexi\u00f3n de tubo doblado como se muestra. La ventaja de este esquema es que mucha de la complejidad queda en tierra, donde es m\u00e1s sencillo manejarla. Asimismo,\n116\nLA CAPA F\u00cdSICA\nCAP. 2\nLos sat\u00e9lites retransmiten en el espacio\nSat\u00e9lite en modo de tubo doblado\nRetransmisi\u00f3n en tierra\n(a)\n(b)\nFigura 2-19. (a) Retransmisi\u00f3n en el espacio. (b) Retransmisi\u00f3n en tierra.\nel uso de antenas grandes en las estaciones terrestres que pueden producir una se\u00f1al potente y recibir una se\u00f1al d\u00e9bil, permite la utilizaci\u00f3n de tel\u00e9fonos de baja potencia. Despu\u00e9s de todo, el tel\u00e9fono produce tan s\u00f3lo unos cuantos miliwatts de potencia, por lo cual la se\u00f1al que llega a las estaciones terrestres es sumamente d\u00e9bil, aun cuando el sat\u00e9lite la haya amplificado. Teledesic Iridium est\u00e1 destinada a usuarios de tel\u00e9fonos que se encuentran en lugares extremosos. Nuestro siguiente ejemplo, Teledesic, est\u00e1 destinada a usuarios de Internet de todo el mundo deseosos de ancho de banda. Fue concebida en 1990 por Craig McCaw, pionero de la telefon\u00eda m\u00f3vil, y por Bill Gates, fundador de Microsoft, quienes estaban inconformes con el lento ritmo al cual las compa\u00f1\u00edas telef\u00f3nicas de todo el mundo proporcionaban ancho de banda alto a los usuarios de computadoras. La meta del sistema Teledesic es ofrecer a los millones de usuarios concurrentes de Internet un enlace ascendente de hasta 100 Mbps y un enlace descendente de hasta 720 Mbps mediante antenas tipo VSAT peque\u00f1as y fijas, que ignoran por completo el sistema telef\u00f3nico. Para las compa\u00f1\u00edas telef\u00f3nicas esto es demasiado bello para ser realidad. El dise\u00f1o original consist\u00eda en un sistema de 288 sat\u00e9lites de huella peque\u00f1a, dispuestos en 12 planos justo debajo del cintur\u00f3n inferior de Van Allen a una altitud de 1350 km. Posteriormente se modific\u00f3 el dise\u00f1o a 30 sat\u00e9lites con huellas m\u00e1s grandes. La transmisi\u00f3n se realiza en la banda Ka, relativamente poco saturada y con un ancho de banda alto. El sistema es de conmutaci\u00f3n de paquetes en el espacio, en el cual cada sat\u00e9lite tiene la capacidad de enrutar paquetes a los sat\u00e9lites vecinos. Cuando un usuario necesita ancho de banda para enviar paquetes, tal ancho de banda se solicita y asigna de manera din\u00e1mica en alrededor de 50 mseg. Si todo marcha bien, el sistema est\u00e1 programado para empezar a funcionar en 2005.\nSEC. 2.4\nSAT\u00c9LITES DE COMUNICACIONES\n117\n2.4.4 Sat\u00e9lites en comparaci\u00f3n con fibra \u00f3ptica Una comparaci\u00f3n entre comunicaci\u00f3n por sat\u00e9lite y comunicaci\u00f3n terrestre es aleccionadora. Apenas hace 20 a\u00f1os se pod\u00eda afirmar que el futuro de las comunicaciones estaba en los sat\u00e9lites. Despu\u00e9s de todo, el sistema telef\u00f3nico ha cambiado poco en los pasados 100 a\u00f1os y no hay se\u00f1ales de que cambie en los pr\u00f3ximos 100 a\u00f1os. Este lento movimiento fue ocasionado en gran parte por las regulaciones que obligaban a las compa\u00f1\u00edas telef\u00f3nicas a ofrecer un buen servicio de voz a precios razonables (lo cual hicieron), y a cambio obtuvieron utilidades garantizadas sobre sus inversiones. Para quienes ten\u00edan que transmitir datos, hab\u00eda m\u00f3dems de 1200 bps. Por mucho, esto es todo lo que hab\u00eda. Esta situaci\u00f3n cambi\u00f3 radicalmente en 1984 con la entrada de la competencia en Estados Unidos y un poco m\u00e1s tarde en Europa. Las compa\u00f1\u00edas telef\u00f3nicas comenzaron a reemplazar sus viejas redes con fibra \u00f3ptica e introdujeron servicios de ancho de banda alto como ADSL (L\u00ednea Digital de Suscriptor Asim\u00e9trica). Tambi\u00e9n suspendieron su a\u00f1eja pr\u00e1ctica de cargar precios artificialmente altos a los usuarios de larga distancia para subsidiar el servicio local. De buenas a primeras, las conexiones terrestres de fibra \u00f3ptica dieron la impresi\u00f3n de que ser\u00edan las ganadoras a largo plazo. No obstante, los sat\u00e9lites de comunicaciones tienen algunos nichos de mercado importantes a los cuales la fibra \u00f3ptica no se dirige (en ocasiones porque no puede). A continuaci\u00f3n veremos algunos de ellos. En primer lugar, a pesar de que una fibra \u00f3ptica tiene m\u00e1s ancho de banda potencial que todos los sat\u00e9lites que se han lanzado, este ancho de banda no est\u00e1 disponible para la mayor\u00eda de los usuarios. La fibra que se instala actualmente se utiliza en el sistema telef\u00f3nico para manejar muchas llamadas de larga distancia al mismo tiempo, no para ofrecer un ancho de banda alto a los usuarios individuales. Con los sat\u00e9lites, es factible que un usuario instale una antena en el techo de la casa y evada por completo el sistema telef\u00f3nico para conseguir un ancho de banda alto. Teledesic se apoya en esta idea. Un segundo nicho es el de la comunicaci\u00f3n m\u00f3vil. En estos d\u00edas mucha gente desea comunicarse mientras trota, maneja, navega o vuela. Los enlaces terrestres de fibra \u00f3ptica no sirven para este uso, pero los enlaces por sat\u00e9lite s\u00ed. Sin embargo, es posible que una combinaci\u00f3n de radio celular y fibra \u00f3ptica funcionara para la mayor\u00eda de los casos (aunque quiz\u00e1 no para aquellos que viajen por aire o por mar). Un tercer nicho es para aquellas situaciones en las cuales se requiere difusi\u00f3n. Un mensaje enviado desde un sat\u00e9lite se puede recibir en miles de estaciones terrestres al mismo tiempo. Por ejemplo, para una organizaci\u00f3n que transmita un flujo de precios de acciones, bonos o commodities a miles de operadores de bolsa le resultar\u00eda m\u00e1s econ\u00f3mico un sistema por sat\u00e9lite que simular la difusi\u00f3n en tierra. Un cuarto nicho es el de las comunicaciones en lugares agrestes o con una infraestructura terrestre pobremente desarrollada. Por ejemplo, Indonesia tiene su propio sat\u00e9lite para el tr\u00e1fico telef\u00f3nico interno. El lanzamiento de un sat\u00e9lite result\u00f3 m\u00e1s econ\u00f3mico que el enlace de miles de cables bajo el mar entre las 13,667 islas que conforman el archipi\u00e9lago. Un quinto nicho de mercado para los sat\u00e9lites son las \u00e1reas donde es dif\u00edcil o extremadamente costoso conseguir un derecho para el tendido de fibra \u00f3ptica.\n118\nLA CAPA F\u00cdSICA\nCAP. 2\nSexto, cuando un despliegue r\u00e1pido es primordial, como en un sistema de comunicaciones militar en \u00e9poca de guerra, los sat\u00e9lites ganan con facilidad. En resumen, al parecer la tendencia general de las comunicaciones en el futuro ser\u00e1 la fibra \u00f3ptica terrestre en combinaci\u00f3n con radio celular, pero los sat\u00e9lites son mejores para algunos usos especializados. Sin embargo, hay un imponderable que se aplica en todos los casos: el aspecto econ\u00f3mico. Aunque la fibra \u00f3ptica ofrece m\u00e1s ancho de banda, es muy probable que las comunicaciones terrestres y por sat\u00e9lite competir\u00e1n agresivamente en precio. Si los avances tecnol\u00f3gicos reducen de manera dr\u00e1stica el costo de despliegue de un sat\u00e9lite (por ejemplo, alg\u00fan transbordador espacial futuro que pueda diseminar docenas de sat\u00e9lites en un solo lanzamiento) o los sat\u00e9lites de \u00f3rbita baja se popularizan, no hay certeza de que la fibra \u00f3ptica ganar\u00e1 en todos los mercados.\n2.5 LA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA Cuando dos computadoras propiedad de la misma empresa u organizaci\u00f3n, localizadas cerca una de la otra, necesitan comunicarse, es m\u00e1s f\u00e1cil conectarlas mediante un cable. Las LANs funcionan de esta manera. Sin embargo, cuando las distancias son considerables o hay muchas computadoras o los cables tienen que pasar por una v\u00eda p\u00fablica o alguna zona restringida, los costos de tender cables privados por lo general son prohibitivos. Adem\u00e1s, en casi todos los pa\u00edses del mundo tambi\u00e9n es ilegal el enlace de l\u00edneas de transmisi\u00f3n privadas a trav\u00e9s (o por debajo) de una propiedad p\u00fablica. En consecuencia, los dise\u00f1adores de redes deben depender de las instalaciones de telecomunicaciones existentes. Por lo general, estas instalaciones, en especial la PSTN (Red Telef\u00f3nica P\u00fablica Conmutada), fueron dise\u00f1adas hace muchos a\u00f1os, con un prop\u00f3sito completamente distinto: transmitir la voz humana en una forma m\u00e1s o menos reconocible. Su aplicabilidad en las comunicaciones de computadora a computadora es muy limitada, pero esta situaci\u00f3n est\u00e1 cambiando r\u00e1pidamente con la introducci\u00f3n de la fibra \u00f3ptica y la tecnolog\u00eda digital. De cualquier manera, el sistema telef\u00f3nico est\u00e1 tan estrechamente entrecruzado con las redes de computadoras (de \u00e1rea amplia) que bien vale la pena dedicarle un poco de tiempo a su estudio. Con el prop\u00f3sito de entender la importancia del problema, realicemos una comparaci\u00f3n burda pero ilustrativa de las propiedades de una conexi\u00f3n t\u00edpica de computadora a computadora a trav\u00e9s de un cable local y otra mediante una l\u00ednea de acceso telef\u00f3nico. Un cable entre dos computadoras puede transferir datos a 109 bps, o tal vez un poco m\u00e1s. En contraste, una l\u00ednea de acceso telef\u00f3nico tiene una tasa m\u00e1xima de datos de 56 kbps, una diferencia de un factor de casi 20,000. Es como la diferencia entre un pato contone\u00e1ndose campantemente entre la hierba y un cohete a la Luna. Si la l\u00ednea de acceso telef\u00f3nico se reemplaza por una conexi\u00f3n ADSL, sigue habiendo una diferencia de un factor de 1000-2000. Por supuesto, el problema es que los dise\u00f1adores de sistemas de c\u00f3mputo suelen trabajar con sistemas de c\u00f3mputo y cuando de repente se enfrentan con un sistema cuyo desempe\u00f1o (seg\u00fan lo que ellos piensan) es tres o cuatro \u00f3rdenes de magnitud peor, ellos, lo cual no es una sorpresa,\nSEC. 2.5\n119\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\ndedican mucho tiempo y esfuerzo para tratar de averiguar c\u00f3mo utilizarlo de manera eficiente. En las siguientes secciones describiremos el sistema telef\u00f3nico y mostraremos c\u00f3mo funciona. Para obtener mayor informaci\u00f3n sobre los aspectos t\u00e9cnicos del sistema telef\u00f3nico vea (Bellamy, 2000).\n2.5.1 Estructura del sistema telef\u00f3nico Tan pronto como Alexander Graham Bell patent\u00f3 el tel\u00e9fono en 1876 (tan s\u00f3lo unas cuantas horas antes que su rival, Elisha Gray), hubo una gran demanda por su nuevo invento. El mercado inicial fue para la venta de tel\u00e9fonos, los cuales se vend\u00edan en pares. Le tocaba al cliente conectarlos con un solo alambre. Los electrones regresaban por tierra. Si el propietario de un tel\u00e9fono deseaba comunicarse con otros n propietarios de tel\u00e9fono, ten\u00eda que enlazar alambres individuales a todas las n casas. Despu\u00e9s de un a\u00f1o, las ciudades se cubrieron de alambres que pasaban sobre las casas y los \u00e1rboles convirti\u00e9ndose en una mara\u00f1a. De inmediato qued\u00f3 en claro que el modelo de conexi\u00f3n de cada tel\u00e9fono con todos los dem\u00e1s, como se muestra en la figura 2-20(a), no iba a funcionar.\n(a)\n(b)\n(c)\nFigura 2-20. (a) Red totalmente interconectada. (b) Conmutador centralizado. (c) Jerarqu\u00eda de dos niveles.\nBell tuvo la suficiente visi\u00f3n para darse cuenta de esto y form\u00f3 la Bell Telephone Company, la cual abri\u00f3 su primera oficina de conmutaci\u00f3n en 1878 (en New Haven, Connecticut). La compa\u00f1\u00eda coloc\u00f3 un alambre en la casa u oficina de cada cliente. Para realizar una llamada, el cliente deb\u00eda dar vueltas a una manivela en el tel\u00e9fono para producir un sonido en la oficina de la compa\u00f1\u00eda de tel\u00e9fonos que atrajera la atenci\u00f3n del operador, que a continuaci\u00f3n conectaba manualmente a quien llamaba con el receptor de la llamada por medio de un cable puenteador. El modelo de la oficina de conmutaci\u00f3n se muestra en la figura 2-20(b). Muy pronto surgieron por todas partes oficinas de conmutaci\u00f3n del Bell System y la gente quiso hacer llamadas de larga distancia entre ciudades, de modo que el Bell System empez\u00f3 a conectar las oficinas de conmutaci\u00f3n. El problema original pronto reapareci\u00f3: conectar cada oficina de conmutaci\u00f3n con todas las dem\u00e1s por medio de un cable entre ellas pronto dej\u00f3 de ser pr\u00e1ctico, as\u00ed que se inventaron las oficinas de conmutaci\u00f3n de segundo nivel. Poco despu\u00e9s, fueron necesarias m\u00faltiples oficinas de segundo nivel, como se muestra en el diagrama de la figura 2-20(c). Por \u00faltimo, la jerarqu\u00eda creci\u00f3 a cinco niveles.\n120\nLA CAPA F\u00cdSICA\nCAP. 2\nPara 1890, las tres partes principales del sistema telef\u00f3nico ya estaban en su lugar: las oficinas de conmutaci\u00f3n, los cables entre los clientes y las oficinas de conmutaci\u00f3n (a estas alturas cables de par trenzado balanceados y aislados, en lugar de cables abiertos con retorno a tierra) y las conexiones de larga distancia entre las oficinas de conmutaci\u00f3n. Aunque desde entonces se han realizado mejoras en las tres \u00e1reas, el modelo b\u00e1sico del Bell System ha permanecido intacto en lo esencial por m\u00e1s de 100 a\u00f1os. Para una historia t\u00e9cnica corta del sistema telef\u00f3nico vea (Hawley, 1991). Previo a la divisi\u00f3n de AT&T en 1984, el sistema telef\u00f3nico fue organizado como una jerarqu\u00eda de m\u00faltiples niveles, con alta redundancia. A pesar de su simplicidad, la siguiente descripci\u00f3n da una idea de la situaci\u00f3n. Cada tel\u00e9fono tiene dos alambres de cobre que van directamente a la oficina central local de la compa\u00f1\u00eda telef\u00f3nica. Por lo general, la distancia va de 1 a 10 km, y en las ciudades es m\u00e1s corta que en las \u00e1reas rurales. Tan s\u00f3lo en Estados Unidos existen cerca de 22,000 oficinas centrales. En el \u00e1mbito de las comunicaciones, las conexiones de dos alambres entre el tel\u00e9fono de cada suscriptor y la oficina central se conocen como circuito local. Si los circuitos locales de todo el mundo se extendieran de extremo a extremo, llegar\u00edan a la Luna y regresar\u00edan a la Tierra 1000 veces. En cierto momento, el 80% del valor del capital de AT&T fue el cobre en los circuitos locales. En efecto, AT&T era entonces la m\u00e1s grande mina de cobre del mundo. Por fortuna, este hecho no era muy conocido en la comunidad inversionista. De haberse sabido, alg\u00fan pirata corporativo podr\u00eda haber comprado la AT&T, cancelado todo el servicio telef\u00f3nico en Estados Unidos, extra\u00eddo todos los cables y vendido el cableado a alg\u00fan refinador de cobre para obtener una ganancia r\u00e1pida. Si un suscriptor conectado a una oficina central determinada llama a otro suscriptor conectado a la misma oficina central, el mecanismo de conmutaci\u00f3n dentro de la oficina establece una conexi\u00f3n el\u00e9ctrica directa entre los dos circuitos locales. Esta conexi\u00f3n permanece intacta mientras dura la llamada. Si el tel\u00e9fono al que se llama est\u00e1 conectado a otra oficina central, se tiene que usar un procedimiento diferente. Cada oficina central tiene varias l\u00edneas salientes a uno o m\u00e1s centros de conmutaci\u00f3n cercanos, llamados oficinas interurbanas (o, si est\u00e1n dentro de la misma \u00e1rea local, oficinas en t\u00e1ndem). Estas l\u00edneas se llaman troncales de conexi\u00f3n interurbanas. Si sucede que tanto la oficina central de quien llama como la de quien es llamado tienen una troncal de conexi\u00f3n a la misma oficina interurbana (algo muy probable si no est\u00e1n muy alejadas), la conexi\u00f3n se puede establecer dentro de la oficina interurbana. En la figura 2-20(c) se muestra una red telef\u00f3nica que consiste \u00fanicamente en tel\u00e9fonos (los puntos peque\u00f1os), oficinas centrales (los puntos grandes) y oficinas interurbanas (los cuadrados). Si el que llama y el que es llamado no tienen una oficina interurbana en com\u00fan, la trayectoria se deber\u00e1 establecer en un nivel m\u00e1s alto de la jerarqu\u00eda. Hay oficinas primarias, seccionales y regionales que forman una red que conecta a las oficinas interurbanas. Las centrales interurbanas, primarias, seccionales y regionales se comunican entre s\u00ed mediante troncales interurbanas de gran ancho de banda. La cantidad de tipos diferentes de centros de conmutaci\u00f3n y su topolog\u00eda var\u00edan de pa\u00eds a pa\u00eds dependiendo de su densidad telef\u00f3nica (por ejemplo, \u00bfpueden dos oficinas\nSEC. 2.5\n121\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\nseccionales tener una conexi\u00f3n directa o deben pasar por una oficina regional?). La figura 2-21 muestra c\u00f3mo se podr\u00eda enrutar una conexi\u00f3n de media distancia.\nTel\u00e9fono\nCircuito local\nOficina central\nOficina interurbana\nTroncal de conexi\u00f3n interurbana\nOficina(s) de conmutaci\u00f3n intermedias\nOficina interurbana\nTroncales interurbanas de muy alto ancho de banda\nOficina central\nTroncal de conexi\u00f3n interurbana\nTel\u00e9fono\nCircuito local\nFigura 2-21. Ruta t\u00edpica de un circuito para una llamada de media distancia.\nPara telecomunicaciones se usan diversos medios de transmisi\u00f3n. En nuestros d\u00edas, los circuitos locales consisten en pares trenzados, aunque en los primeros d\u00edas de la telefon\u00eda eran comunes los cables no aislados espaciados a 25 cm en los postes telef\u00f3nicos. Entre las oficinas de conmutaci\u00f3n se usan ampliamente cables coaxiales, microondas y, en especial, fibra \u00f3ptica. En el pasado, la transmisi\u00f3n en todo el sistema telef\u00f3nico era anal\u00f3gica, con la se\u00f1al de voz real transmitida como un voltaje el\u00e9ctrico entre la fuente y el destino. Con el advenimiento de la fibra \u00f3ptica, la electr\u00f3nica digital y las computadoras, actualmente todas las troncales y los conmutadores son digitales, y el circuito local queda como el \u00fanico elemento de tecnolog\u00eda anal\u00f3gica del sistema. Existe preferencia por la transmisi\u00f3n digital porque en \u00e9sta no es necesario reproducir exactamente una forma de onda anal\u00f3gica despu\u00e9s de que ha pasado por muchos amplificadores en una llamada larga. Es suficiente con distinguir correctamente un 0 de un 1. Esta propiedad da m\u00e1s confiabilidad a la transmisi\u00f3n digital que a la anal\u00f3gica. Su mantenimiento tambi\u00e9n es m\u00e1s econ\u00f3mico y sencillo. En s\u00edntesis, el sistema telef\u00f3nico consiste en tres componentes principales: 1. Circuitos locales (cables de par trenzado que van hacia las casas y las empresas). 2. Troncales (fibra \u00f3ptica digital que conecta a las oficinas de conmutaci\u00f3n). 3. Oficinas de conmutaci\u00f3n (donde las llamadas pasan de una troncal a otra). Despu\u00e9s de una breve digresi\u00f3n sobre la pol\u00edtica de los tel\u00e9fonos, regresaremos a cada uno de estos tres componentes en detalle. Los circuitos locales dan acceso a todo mundo al sistema completo, debido a lo cual son cruciales. Por desgracia, tambi\u00e9n son la parte m\u00e1s d\u00e9bil del sistema. Para las troncales de largo alcance, la principal consideraci\u00f3n es c\u00f3mo reunir m\u00faltiples llamadas y enviarlas juntas por la misma fibra. Este tema se llama multiplexi\u00f3n, y estudiaremos tres formas diferentes de hacerlo. Por \u00faltimo, existen dos formas fundamentalmente distintas de efectuar la conmutaci\u00f3n, as\u00ed que veremos ambas.\n122\nLA CAPA F\u00cdSICA\nCAP. 2\n2.5.2 La pol\u00edtica de los tel\u00e9fonos Durante las d\u00e9cadas anteriores a 1984, el Bell System proporcion\u00f3 tanto el servicio local como el de larga distancia en casi todo Estado Unidos. En la d\u00e9cada de 1970, el gobierno estadounidense se convenci\u00f3 de que \u00e9ste era un monopolio ilegal y entabl\u00f3 un juicio para dividirlo. El gobierno gan\u00f3, y el 1o. de enero de 1984 la AT&T se dividi\u00f3 en AT&T Long Lines, 23 BOCs (Compa\u00f1\u00edas Operativas de Bell) y algunas otras partes peque\u00f1as. Las 23 BOCs se agruparon en siete BOCs regionales (RBOCs) para hacerlas econ\u00f3micamente viables. La naturaleza entera de la telecomunicaci\u00f3n en Estados Unidos se cambi\u00f3 de la noche a la ma\u00f1ana por orden judicial (no por una ley del Congreso). Los detalles exactos del desmantelamiento se describieron en el llamado MFJ (Juicio Final Modificado), un claro contrasentido (si el juicio se pudo modificar, obviamente no era final). Este suceso condujo a un aumento en la competencia, mejor servicio y menores precios en larga distancia para los consumidores y las empresas. No obstante, los precios del servicio local se elevaron cuando los subsidios a las llamadas de larga distancia se eliminaron y el servicio local tuvo que ser autosuficiente. Muchos otros pa\u00edses consideran ahora la introducci\u00f3n de la competencia por caminos similares. Para dejar en claro qui\u00e9nes podr\u00edan actuar y c\u00f3mo, Estados Unidos se dividi\u00f3 en m\u00e1s de 160 LATAs (\u00c1reas de Acceso y Transporte Local). En forma muy aproximada, una LATA es casi tan grande como el \u00e1rea cubierta por un c\u00f3digo de \u00e1rea. Dentro de una LATA normalmente hab\u00eda una LEC (Portadora de Intercambio Local) que ten\u00eda un monopolio sobre el servicio tradicional de telefon\u00eda dentro de la LATA. Las LECs m\u00e1s importantes eran las BOCs, aunque algunas LATAs conten\u00edan una o m\u00e1s de las 1500 compa\u00f1\u00edas telef\u00f3nicas independientes que operaban como LECs. Un tipo de compa\u00f1\u00eda diferente maneja todo el tr\u00e1fico interLATA: una IXC (Portadora Entre Centrales). Originalmente, AT&T Long Lines era la \u00fanica IXC seria, pero ahora WorldCom y Sprint son competidores bien establecidos en el negocio de las IXCs. Una de las consideraciones durante la divisi\u00f3n fue asegurar que todas las IXCs ser\u00edan tratadas con igualdad en t\u00e9rminos de calidad de l\u00edneas, tarifas y cantidad de d\u00edgitos que tendr\u00edan que marcar sus clientes para usarlos. La forma como esto se resolvi\u00f3 se ilustra en la figura 2-22. Aqu\u00ed vemos tres LATAs de ejemplo, cada una con varias oficinas centrales. Las LATAs 2 y 3 tienen tambi\u00e9n una peque\u00f1a jerarqu\u00eda con oficinas en t\u00e1ndem (oficinas interurbanas intraLATA). Cualquier IXC que desee manejar llamadas que se originen en una LATA puede construir all\u00ed una oficina de conmutaci\u00f3n llamada POP (Punto de Presencia). La LEC es necesaria para conectar cada IXC a cada oficina central, ya sea en forma directa, como en las LATAs 1 y 3, o indirecta, como en la LATA 2. Adem\u00e1s, los t\u00e9rminos de la conexi\u00f3n, tanto t\u00e9cnicos como financieros, deben ser id\u00e9nticos para todas las IXCs. De esta forma, un suscriptor en, digamos, la LATA 1 puede elegir cu\u00e1l IXC usar para llamar a los suscriptores en la LATA 3. Como parte del MFJ, se prohibi\u00f3 a las IXCs ofrecer servicio telef\u00f3nico local y a las LECs ofrecer servicio telef\u00f3nico interLATA, aunque ambas eran libres de participar en otros negocios, como la operaci\u00f3n de restaurantes de pollos fritos. En 1984, \u00e9ste era un dictamen bastante claro. Desgraciadamente, la tecnolog\u00eda tiene la mala costumbre de hacer obsoletas las leyes. Ni la televisi\u00f3n por cable ni los tel\u00e9fonos celulares estaban considerados en el acuerdo. Conforme la te-\nSEC. 2.5\n123\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA Oficina interurbana de la IXC n\u00famero 1\nOficina interurbana de la IXC n\u00famero 2\nPOP de la IXC Oficina en t\u00e1ndem\nOficina central local\nA circuitos locales\nLATA 1\nLATA 2\nLATA 3\nFigura 2-22. Relaci\u00f3n entre LATAs, LECs e IXCs. Todos los c\u00edrculos son oficinas de conmutaci\u00f3n LEC. Cada hex\u00e1gono pertenece a la IXC cuyo n\u00famero contiene.\nlevisi\u00f3n por cable pas\u00f3 de ser unidireccional a bidireccional, y la popularidad de los tel\u00e9fonos celulares subi\u00f3 como la espuma, tanto las LECs como las IXCs comenzaron a comprar o a fusionarse con los operadores de cable y celulares. Para 1995, el Congreso vio que tratar de mantener la distinci\u00f3n entre las diversas clases de compa\u00f1\u00edas ya no era sostenible y esboz\u00f3 una propuesta de ley para permitir a las compa\u00f1\u00edas de televisi\u00f3n por cable, a las compa\u00f1\u00edas telef\u00f3nicas locales, a los operadores de larga distancia y a los operadores de tel\u00e9fonos celulares participar en los negocios de unos y otros. La intenci\u00f3n era que as\u00ed cualquier compa\u00f1\u00eda podr\u00eda ofrecer a sus clientes un solo paquete integrado que contuviera televisi\u00f3n por cable, tel\u00e9fono y servicios de informaci\u00f3n, y que las diferentes compa\u00f1\u00edas compitieran en servicio y precio. La propuesta se convirti\u00f3 en ley en febrero de 1996. Como resultado, algunas BOCs se convirtieron en IXCs y algunas otras compa\u00f1\u00edas, como los operadores de televisi\u00f3n por cable, empezaron a competir con las LECs por el servicio telef\u00f3nico local. Un aspecto interesante de la ley de 1996 fue la obligaci\u00f3n para las LECs de implementar portabilidad para los n\u00fameros locales. Esto quiere decir que un cliente puede cambiar de compa\u00f1\u00eda telef\u00f3nica local sin necesidad de obtener un nuevo n\u00famero telef\u00f3nico. Esta cl\u00e1usula elimina un enorme obst\u00e1culo para los usuarios y los anima a cambiar de LEC, con lo cual se incrementa la competencia. En consecuencia, el panorama de las telecomunicaciones en Estados Unidos est\u00e1 atravesando una reestructuraci\u00f3n radical. De nueva cuenta, muchos otros pa\u00edses est\u00e1n siguiendo esta l\u00ednea. Con frencuencia, otros pa\u00edses esperan para ver c\u00f3mo funciona esta clase de experimentos en Estados Unidos. Si da resultado, adoptan el esquema; si falla, buscan otras alternativas.\n124\nLA CAPA F\u00cdSICA\nCAP. 2\n2.5.3 El circuito local: m\u00f3dems, ADSL e inal\u00e1mbrico Es hora de iniciar el estudio detallado del funcionamiento del sistema telef\u00f3nico. Las principales partes del sistema se ilustran en la figura 2-23. Aqu\u00ed vemos los circuitos locales, las troncales y las oficinas interurbanas y oficinas centrales, las cuales tienen equipo que conmuta las llamadas. Una oficina central tiene hasta 10,000 circuitos locales (en Estados Unidos y otros pa\u00edses grandes). De hecho, hasta hace poco tiempo el c\u00f3digo de \u00e1rea + caracteres de sustituci\u00f3n indicaban la oficina central, de tal manera que (212) 601-xxxx se refer\u00eda a una oficina central espec\u00edfica con 10,000 suscriptores, numerados de 0000 a 9999. Con el surgimiento de la competencia por el servicio local, este sistema dej\u00f3 de ser funcional porque diversas compa\u00f1\u00edas quer\u00edan apoderarse del c\u00f3digo de oficina central. Asimismo, el n\u00famero de c\u00f3digos pr\u00e1cticamente se hab\u00eda consumido, por lo que hubo necesidad de introducir esquemas de correspondencia complejos. Empecemos con el tema que la mayor\u00eda de la gente conoce: el circuito local de dos alambres que parte de la oficina central de una compa\u00f1\u00eda telef\u00f3nica hacia hogares y peque\u00f1as empresas. El circuito local se conoce tambi\u00e9n como de \u201c\u00faltima milla\u201d (la conexi\u00f3n hacia el cliente), aunque la longitud puede ser de varias millas. Durante m\u00e1s de 100 a\u00f1os ha utilizado se\u00f1alizaci\u00f3n anal\u00f3gica y es probable que contin\u00fae haci\u00e9ndolo durante alg\u00fan tiempo, debido al costo elevado de la conversi\u00f3n a digital. No obstante, el cambio se est\u00e1 dando incluso en este \u00faltimo basti\u00f3n de la transmisi\u00f3n anal\u00f3gica. En esta secci\u00f3n estudiaremos el circuito local tradicional y los avances que est\u00e1n teniendo lugar, con especial atenci\u00f3n en la comunicaci\u00f3n de datos desde computadoras caseras. Computadora\nISP 2\nCircuito local (anal\u00f3gico, par trenzado) M\u00f3dem\nTroncal de ancho de banda medio (digital, fibra \u00f3ptica)\nL\u00ednea digital Oficina interurbana\nHasta 10,000 circuitos locales\nCodec Oficina interurbana\nBanco de m\u00f3dems\nOficina interurbana Codec\nOficina central local\nTroncal de ancho de banda alto (digital, fibra \u00f3ptica)\nISP 1\nFigura 2-23. Uso de transmisi\u00f3n anal\u00f3gica y digital para una llamada de computadora a computadora. Los m\u00f3dems y los codecs realizan la conversi\u00f3n.\nCuando una computadora desea enviar datos digitales sobre una l\u00ednea anal\u00f3gica de acceso telef\u00f3nico, es necesario convertir primero los datos a formato anal\u00f3gico para transmitirlos sobre el\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n125\ncircuito local. Un dispositivo conocido como m\u00f3dem realiza esta conversi\u00f3n, tema que estudiaremos en breve. Los datos se convierten a formato digital en la oficina central de la compa\u00f1\u00eda telef\u00f3nica para transmitirlos sobre las troncales que abarcan largas distancias. Si en el otro extremo hay una computadora con un m\u00f3dem, es necesario realizar la conversi\u00f3n inversa \u2014digital a anal\u00f3gico\u2014 para recorrer el circuito local en el destino. Esta disposici\u00f3n se muestra en la figura 2-23 para el ISP 1 (proveedor de servicios de Internet), que tiene un banco de m\u00f3dems, cada uno conectado a un circuito local diferente. Este ISP puede manejar tantas conexiones como m\u00f3dems tenga (suponiendo que su servidor o sus servidores tengan suficiente potencia de c\u00f3mputo). Esta disposici\u00f3n fue la com\u00fan hasta que aparecieron los m\u00f3dems de 56 kbps, por razones que veremos m\u00e1s adelante. La se\u00f1alizaci\u00f3n anal\u00f3gica consiste en la variaci\u00f3n del voltaje con el tiempo para representar un flujo de informaci\u00f3n. Si los medios de transmisi\u00f3n fueran perfectos, el receptor recibir\u00eda exactamente la misma se\u00f1al enviada por el transmisor. Por desgracia, los medios no son perfectos, por lo cual la se\u00f1al recibida no es la misma que la transmitida. Si los datos son digitales, esta diferencia puede conducir a errores. Las l\u00edneas de transmisi\u00f3n tienen tres problemas principales: atenuaci\u00f3n, distorsi\u00f3n por retardo y ruido. La atenuaci\u00f3n es la p\u00e9rdida de energ\u00eda conforme la se\u00f1al se propaga hacia su destino. La p\u00e9rdida se expresa en decibeles por kil\u00f3metro. La cantidad de energ\u00eda perdida depende de la frecuencia. Para ver el efecto de esta dependencia de la frecuencia, imagine una se\u00f1al no como una simple forma de onda, sino como una serie de componentes de Fourier. Cada componente es atenuado en diferente medida, lo que da por resultado un espectro de Fourier distinto en el receptor. Por si esto no fuera poco, los diferentes componentes de Fourier se propagan a diferente velocidad por el cable. Esta diferencia de velocidad ocasiona una distorsi\u00f3n de la se\u00f1al que se recibe en el otro extremo. Otro problema es el ruido, que es energ\u00eda no deseada de fuentes distintas al transmisor. El movimiento al azar de los electrones en un cable causa el ruido t\u00e9rmico y es inevitable. La diafon\u00eda se debe al acoplamiento inductivo entre dos cables que est\u00e1n cerca uno de otro. A veces, al hablar por tel\u00e9fono se escucha otra conversaci\u00f3n en el fondo. \u00c9sa es la diafon\u00eda. Finalmente, hay ruido de impulso, causado por picos en la l\u00ednea de suministro de energ\u00eda o por otros fen\u00f3menos. En el caso de datos digitales, el ruido de impulso puede eliminar uno o m\u00e1s bits. M\u00f3dems Debido a los problemas antes mencionados, en especial al hecho de que tanto la atenuaci\u00f3n como la velocidad de propagaci\u00f3n dependen de la frecuencia, es indeseable tener un rango amplio de frecuencias en la se\u00f1al. Desgraciadamente, las ondas cuadradas, como las de los datos digitales, tienen un espectro amplio y por ello est\u00e1n sujetas a una fuerte atenuaci\u00f3n y a distorsi\u00f3n por retardo. Estos efectos hacen que la se\u00f1alizaci\u00f3n de banda base (CC, corriente continua) sea inadecuada, excepto a velocidades bajas y distancias cortas. La se\u00f1alizaci\u00f3n de CA (corriente alterna) se utiliza para superar los problemas asociados a la se\u00f1alizaci\u00f3n de CC, en especial en las l\u00edneas telef\u00f3nicas. Se introduce un tono continuo en el rango de 1000 a 2000 Hz, llamado portadora de onda senoidal, cuya amplitud, frecuencia o fase se\n126\nLA CAPA F\u00cdSICA\nCAP. 2\npueden modular para transmitir la informaci\u00f3n. En la modulaci\u00f3n de amplitud se usan dos niveles diferentes de amplitud para representar 0 y 1, respectivamente. En la modulaci\u00f3n de frecuencia, conocida tambi\u00e9n como modulaci\u00f3n por desplazamiento de frecuencia, se usan dos (o m\u00e1s) tonos diferentes. En la forma m\u00e1s simple de la modulaci\u00f3n de fase la onda portadora se desplaza de modo sistem\u00e1tico 0 o 180 grados a intervalos espaciados de manera uniforme. Un mejor esquema es utilizar desplazamientos de 45, 135, 225 o 315 grados para transmitir 2 bits de informaci\u00f3n por intervalo. Asimismo, al requerir siempre un desplazamiento de fase al final de cada intervalo se facilita que el receptor reconozca los l\u00edmites de los intervalos.\n(a)\n(b)\n(c)\n(d)\nCambios de fase\nFigura 2-24. (a) Se\u00f1al binaria. (b) Modulaci\u00f3n de amplitud. (c) Modulaci\u00f3n de frecuencia. (d) Modulaci\u00f3n de fase.\nLa figura 2-24 ilustra los tres tipos de modulaci\u00f3n. En la figura 2-24(a) una de las amplitudes es distinta de cero y la otra es cero. En la figura 2-24(b) se utilizan dos frecuencias. En la figura 2-24(c) est\u00e1 presente o ausente un desplazamiento de fase en cada l\u00edmite de bit. Un m\u00f3dem (por modulador-demodulador) es un dispositivo que acepta un flujo de bits en serie como entrada y que\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n127\nproduce una portadora modulada mediante uno (o m\u00e1s) de estos m\u00e9todos (o viceversa). El m\u00f3dem se conecta entre la computadora (digital) y el sistema telef\u00f3nico (anal\u00f3gico). Para alcanzar velocidades cada vez m\u00e1s altas, no basta s\u00f3lo incrementar la velocidad de muestreo. El teorema de Nyquist dice que aun con una l\u00ednea perfecta de 3000 Hz (cosa que decididamente no son las l\u00edneas de acceso telef\u00f3nico), no tiene sentido muestrear m\u00e1s all\u00e1 de 6000 Hz. En la pr\u00e1ctica, la mayor\u00eda de los m\u00f3dems muestrea 2400 veces por segundo y el objetivo es conseguir m\u00e1s bits por muestra. El n\u00famero de muestras por segundo se mide en baudios. Un s\u00edmbolo se env\u00eda durante cada baudio. De esta manera, una l\u00ednea de n baudios transmite n s\u00edmbolos por segundo. Por ejemplo, una l\u00ednea de 2400 baudios env\u00eda un s\u00edmbolo m\u00e1s o menos cada 416.667 \u03bcseg. Si el s\u00edmbolo consta de 0 voltios para un 0 l\u00f3gico y de 1 voltio para un 1 l\u00f3gico, la tasa de bits es de 2400 bps. Sin embargo, si se utilizan los voltajes 0, 1, 2 y 3, cada s\u00edmbolo consta de 2 bits, por lo que una l\u00ednea de 2400 baudios pueden transmitir 2400 s\u00edmbolos por segundo a una tasa de datos de 4800 bps. De manera similar, con cuatro posibles desplazamientos de fase tambi\u00e9n hay 2 bits por s\u00edmbolo, con lo cual la tasa de bits es otra vez el doble que la tasa de baudios. La \u00faltima t\u00e9cnica se utiliza ampliamente y se denomina QPSK (Codificaci\u00f3n por Desplazamiento de Fase en Cuadratura). Es com\u00fan la confusi\u00f3n de los conceptos ancho de banda, baudio, s\u00edmbolo y tasa de bits, por lo que los definiremos a continuaci\u00f3n. El ancho de banda de un medio es el rango de frecuencias que atraviesa al medio con atenuaci\u00f3n m\u00ednima. Es una propiedad f\u00edsica del medio (por lo general, de 0 a alguna frecuencia m\u00e1xima) y se mide en hertzios (Hz). La tasa de baudios es la cantidad de muestras por segundo que se realizan. Cada muestra env\u00eda una porci\u00f3n de informaci\u00f3n, es decir, un s\u00edmbolo. Por lo tanto, la tasa de baudios y la tasa de s\u00edmbolos significan lo mismo. La t\u00e9cnica de modulaci\u00f3n (por ejemplo, QPSK) determina la cantidad de bits por s\u00edmbolo. La tasa de bits es la cantidad de informaci\u00f3n que se env\u00eda por el canal y es igual a la cantidad de s\u00edmbolos por segundo por la cantidad de bits por s\u00edmbolo. Todos los m\u00f3dems avanzados utilizan una combinaci\u00f3n de t\u00e9cnicas de modulaci\u00f3n con el prop\u00f3sito de transmitir muchos bits por baudio. Con frecuencia se combinan m\u00faltiples amplitudes y m\u00faltiples desplazamientos de fase para transmitir muchos bits por s\u00edmbolo. En la figura 2-25(a) vemos puntos con amplitud constante a los 45, 135, 225 y 315 grados (distancia desde el origen). La fase de un punto la indica el \u00e1ngulo que se forma con el eje de las X al trazar una l\u00ednea desde el punto hacia el origen. La figura 2-25(a) tiene cuatro combinaciones v\u00e1lidas y se puede utilizar para transmitir 2 bits por s\u00edmbolo. Es QPSK. En la figura 2-25(b) se muestra un esquema de modulaci\u00f3n distinto, en el cual se utilizan cuatro amplitudes y cuatro fases, que permiten un total de 16 combinaciones diferentes. Este esquema de modulaci\u00f3n se puede utilizar para transmitir 4 bits por s\u00edmbolo. Se conoce como QAM-16 (Modulaci\u00f3n de Amplitud en Cuadratura). En algunas ocasiones tambi\u00e9n se utiliza el t\u00e9rmino 16-QAM. Por ejemplo, QAM-16 se puede utilizar para transmitir 9600 bps sobre una l\u00ednea de 2400 baudios. En la figura 2-25(c) se presenta otro esquema de modulaci\u00f3n que incluye amplitud y fase. En \u00e9ste se pueden conseguir 64 combinaciones diferentes, por lo cual es posible transmitir 6 bits por s\u00edmbolo. Se conoce como QAM-64. Tambi\u00e9n se utilizan QAMs de orden m\u00e1s alto.\n128\nLA CAPA F\u00cdSICA\n(a)\n(b)\nCAP. 2\n(c)\nFigura 2-25. (a) QPSK. (b) QAM-16. (c) QAM-64.\nA los diagramas como los de la figura 2-25, que muestran las combinaciones permitidas de amplitud y fase, se les llama diagramas de constelaci\u00f3n. Cada est\u00e1ndar de m\u00f3dem de alta velocidad tiene su propio diagrama de constelaci\u00f3n y se puede comunicar solamente con otros m\u00f3dems que utilicen el mismo modelo (aunque la mayor\u00eda de los m\u00f3dems puede emular a todos los modelos m\u00e1s lentos). Cuando hay muchos puntos en un diagrama de constelaci\u00f3n, incluso la cantidad m\u00ednima de ruido en la amplitud o fase detectada puede dar como resultado un error y, potencialmente, muchos bits malos. Con el prop\u00f3sito de reducir la posibilidad de error, los est\u00e1ndares para los m\u00f3dems de velocidades m\u00e1s altas realizan correcci\u00f3n de errores mediante la incorporaci\u00f3n de bits adicionales en cada muestra. Los esquemas se conocen como TCM (Modulaci\u00f3n por Codificaci\u00f3n de Malla). As\u00ed, por ejemplo, el est\u00e1ndar V.32 de m\u00f3dem utiliza 32 puntos de constelaci\u00f3n para transmitir 4 bits de datos y 1 bit de paridad por s\u00edmbolo a 2400 baudios, para alcanzar 9600 bps con correcci\u00f3n de errores. Su diagrama de constelaci\u00f3n se muestra en la figura 2-26(a). La decisi\u00f3n de \u201cgirar\u201d 45 grados alrededor del origen se tom\u00f3 por razones de ingenier\u00eda; las constelaciones giradas y sin girar tienen la misma capacidad de informaci\u00f3n. El siguiente escal\u00f3n despu\u00e9s de 9600 bps es 14,400 bps. Se conoce como V.32 bis. Esta velocidad se alcanza al transmitir 6 bits de datos y 1 bit de paridad por muestra a 2400 baudios. Su diagrama de constelaci\u00f3n tiene 128 puntos cuando se utiliza QAM-128, y se muestra en la figura 2-26(b). Los fax-m\u00f3dems transmiten a esta velocidad las p\u00e1ginas que han sido digitalizadas como mapas de bits. QAM-256 no se utiliza en ning\u00fan m\u00f3dem telef\u00f3nico est\u00e1ndar, pero s\u00ed en redes de cable, como veremos m\u00e1s adelante. Enseguida del m\u00f3dem telef\u00f3nico V.32 se encuentra el V.34, el cual corre a 28,800 bps, 2400 baudios y 12 bits de datos por s\u00edmbolo. El \u00faltimo m\u00f3dem de esta serie es el V.34 bis, el cual transfiere 14 bits de datos por s\u00edmbolo a 2400 baudios para alcanzar una velocidad de 33,600 bps. Para incrementar a\u00fan m\u00e1s la tasa de datos efectiva, muchos m\u00f3dems comprimen los datos antes de enviarlos, y alcanzan tasas de datos efectivas mayores a 33,600 bps. Por otra parte, casi todos los m\u00f3dems prueban la l\u00ednea antes de empezar a transmitir datos del usuario, y si encuentran una falta de calidad, reducen la velocidad a una menor a la m\u00e1xima que tiene asignada. Por lo tanto, la velocidad efectiva del m\u00f3dem que percibe el usuario puede ser menor, igual o mayor a la que oficialmente tiene asignada.\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n(b)\n129\n(c)\nFigura 2-26. (a) V.32 para 9600 bps. (b) V32 bis para 14,400 bps.\nTodos los m\u00f3dems modernos transmiten tr\u00e1fico en ambas direcciones al mismo tiempo (mediante el uso de frecuencias distintas para las diferentes direcciones). La conexi\u00f3n que permite el flujo de tr\u00e1fico en ambas direcciones de manera simult\u00e1nea se conoce como d\u00faplex total. Una carretera de dos carriles es d\u00faplex total. La conexi\u00f3n que permite el tr\u00e1fico en ambas direcciones, pero s\u00f3lo en un sentido a la vez, se denomina semid\u00faplex. Una v\u00eda de ferrocarril es semid\u00faplex. La conexi\u00f3n que permite el tr\u00e1fico en una sola direcci\u00f3n se conoce como s\u00edmplex. Una calle de un solo sentido es s\u00edmplex. Otro ejemplo de una conexi\u00f3n s\u00edmplex lo constituye una fibra \u00f3ptica con un l\u00e1ser en un extremo y un detector de luz en el otro. La raz\u00f3n por la cual los m\u00f3dems est\u00e1ndar llegan hasta 33,600 es que el l\u00edmite de Shannon para el sistema telef\u00f3nico es de aproximadamente 35 kbps, as\u00ed que velocidades mayores a este l\u00edmite violar\u00edan las leyes de la f\u00edsica (departamento de termodin\u00e1mica). Para saber si los m\u00f3dems de 56 kbps son posibles desde un punto de vista te\u00f3rico, contin\u00fae leyendo. \u00bfPero a qu\u00e9 se debe que el l\u00edmite te\u00f3rico sea de 35 kbps? La respuesta est\u00e1 en la longitud promedio de los circuitos locales y en la calidad de estas l\u00edneas. La longitud promedio de los circuitos locales determina los 35 kbps. En la figura 2-23, una llamada que se origina en la computadora de la izquierda y que termina en el ISP 1 recorre dos circuitos locales como se\u00f1al anal\u00f3gica, una vez en el punto de origen y otra en el punto de destino. En cada uno de estos circuitos se agrega ruido a la se\u00f1al. Si pudi\u00e9ramos prescindir de uno de estos circuitos locales, podr\u00eda duplicarse la tasa m\u00e1xima. El ISP 2 hace precisamente esto. Cuenta con una alimentaci\u00f3n digital pura proveniente de la oficina central m\u00e1s cercana. La se\u00f1al digital que se utiliza en las troncales es alimentada directamente al ISP 2, con lo cual se elimina la necesidad de codecs, m\u00f3dems y transmisi\u00f3n anal\u00f3gica en su extremo. As\u00ed, cuando un extremo de la conexi\u00f3n es puramente digital, como ocurre con la mayor\u00eda de los ISPs actuales, la tasa m\u00e1xima de datos puede ser de hasta 70 kbps. El m\u00e1ximo entre dos usuarios caseros con l\u00edneas anal\u00f3gicas es de 33.6 kbps. La raz\u00f3n por la cual se utilizan los m\u00f3dems de 56 kbps se relaciona con el teorema de Nyquist. El canal telef\u00f3nico tiene un ancho de alrededor de 4000 Hz (incluyendo las bandas de protecci\u00f3n o guarda). De esta forma, la cantidad m\u00e1xima de muestras independientes por segundo\n130\nLA CAPA F\u00cdSICA\nCAP. 2\nes de 8000. La cantidad de bits por muestra en Estados Unidos es de 8, uno de los cuales se utiliza con prop\u00f3sitos de control, con lo cual es posible transmitir 56,000 bits por segundo de datos de usuario. En Europa los 8 bits est\u00e1n disponibles para los usuarios, lo cual permitir\u00eda utilizar m\u00f3dems de 64,000 bits por segundo, pero se eligi\u00f3 la cifra de 56,000 para apegarse a un est\u00e1ndar internacional. Este est\u00e1ndar para m\u00f3dems se denomina V.90. Hace posible un canal ascendente o de subida (del usuario al ISP) de 33.6 kpbs y un canal descendente o de bajada (del ISP al usuario) de 56 kbps, debido a que por lo regular hay m\u00e1s transporte de datos del ISP al usuario que al rev\u00e9s (por ejemplo, la solicitud de una p\u00e1gina Web requiere s\u00f3lo algunos bytes, pero el env\u00edo de la misma puede constituir varios megabytes). En teor\u00eda, podr\u00eda ser factible un canal ascendente de m\u00e1s de 33.6 kbps de ancho, pero como muchos circuitos locales son demasiado ruidosos incluso para 33.6 kbps, se decidi\u00f3 asignar m\u00e1s ancho de banda al canal descendente para incrementar las posibilidades de que funcione en realidad a 56 kbps. El paso siguiente al V.90 es el V.92. Estos m\u00f3dems tienen capacidad de 48 kbps en el canal ascendente si la l\u00ednea puede manejarlo. Tambi\u00e9n determinan la velocidad apropiada que se utilizar\u00e1 en alrededor de la mitad de los 30 segundos en que lo hacen los m\u00f3dems m\u00e1s antiguos. Por \u00faltimo, permiten que una llamada telef\u00f3nica entrante interrumpa una sesi\u00f3n en Internet, siempre y cuando la l\u00ednea tenga el servicio de llamada en espera. L\u00edneas digitales de suscriptor Cuando la industria telef\u00f3nica alcanz\u00f3 por fin los 56 kbps, se congratul\u00f3 a s\u00ed misma por haber realizado un buen logro. Mientras tanto, la industria de TV por cable ofrec\u00eda velocidades de hasta 10 Mbps en cables compartidos, y las compa\u00f1\u00edas de sat\u00e9lite planeaban ofrecer m\u00e1s all\u00e1 de 50 Mbps. Conforme el acceso a Internet se tornaba una parte importante de su negocio, las compa\u00f1\u00edas telef\u00f3nicas (LECs) se dieron cuenta de que necesitaban un producto m\u00e1s competitivo. En respuesta comenzaron a ofrecer nuevos servicios digitales sobre el circuito local. Los servicios con mayor ancho de banda que el servicio telef\u00f3nico com\u00fan se denominan en ocasiones como de banda ancha, aunque en realidad el t\u00e9rmino es m\u00e1s un concepto de marketing que un concepto t\u00e9cnico espec\u00edfico. En un principio hab\u00eda muchas ofertas que se traslapaban, todas bajo el nombre general de xDSL (L\u00ednea Digital de Suscriptor), por diversos x. M\u00e1s adelante analizaremos estos servicios, pero primero nos enfocaremos en el que tal vez se convierta en el m\u00e1s popular: ADSL (DSL Asim\u00e9trica). Debido a que ADSL a\u00fan est\u00e1 en desarrollo y no todos los est\u00e1ndares est\u00e1n totalmente establecidos, algunos de los detalles que mencionaremos podr\u00edan cambiar con el paso del tiempo, aunque el panorama general debe permanecer igual. Para obtener mayor informaci\u00f3n sobre ADSL, vea (Summers, 1999, y Vetter y cols., 2000). La raz\u00f3n por la cual los m\u00f3dems son tan lentos es que los tel\u00e9fonos fueron creados para transportar la voz humana y todo el sistema se ha optimizado cuidadosamente con este prop\u00f3sito. Los datos siempre han sido un aspecto secundario. En el lugar donde cada circuito local termina en la oficina central, el cable pasa a trav\u00e9s de un filtro que aten\u00faa todas las frecuencias abajo de 300 Hz y arriba de 3400 Hz. El corte no es abrupto \u2014300 Hz y 3400 Hz son los puntos a 3 dB\u2014, de tal\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n131\nMbps\nmanera que el ancho de banda se indica como 4000 Hz aun cuando la distancia entre los puntos a 3 dB es de 3100 Hz. Por lo tanto, los datos tambi\u00e9n se restringen a esta banda estrecha. El truco para que xDSL funcione es que cuando un cliente se suscribe al servicio, la l\u00ednea de entrada se conecta a un tipo distinto de conmutador, que no cuenta con el filtro, gracias a lo cual toda la capacidad del circuito local queda disponible. En esta situaci\u00f3n, el ancho de banda artificial de 3100 Hz generado por el filtro ya no es el factor limitante, sino el medio f\u00edsico del circuito local. Por desgracia, la capacidad del circuito local depende de varios factores, entre ellos su longitud, espesor y calidad general. En la figura 2-27 se muestra una gr\u00e1fica del ancho de banda potencial como una funci\u00f3n de la distancia. En esta figura se da por sentado que todos los dem\u00e1s factores son \u00f3ptimos (cables nuevos, haces moderados de cables, etc\u00e9tera).\nMetros\nFigura 2-27. Ancho de banda contra distancia sobre la categor\u00eda 3 UTP para DSL.\nLa implicaci\u00f3n de esta figura crea un problema para las compa\u00f1\u00edas telef\u00f3nicas. Cuando eligen la velocidad que ofrecer\u00e1n, al mismo tiempo eligen un radio a partir de sus oficinas centrales m\u00e1s all\u00e1 del cual no pueden proporcionar el servicio. Esto quiere decir que cuando un cliente distante intenta adquirir el servicio, podr\u00eda obtener la siguiente respuesta: \u201cMuchas gracias por su inter\u00e9s, pero no podemos darle el servicio porque usted vive 100 metros m\u00e1s lejos de la oficina central m\u00e1s cercana. \u00bfPodr\u00eda mudarse?\u201d Entre m\u00e1s baja sea la velocidad elegida, m\u00e1s amplio ser\u00e1 el radio y podr\u00e1n abarcarse m\u00e1s clientes. Pero entre m\u00e1s baja sea la velocidad, el servicio ser\u00e1 menos atractivo y ser\u00e1 menos la gente dispuesta a pagar por \u00e9l. Aqu\u00ed es donde se encuentran los negocios y la tecnolog\u00eda. (Una posible soluci\u00f3n es construir minioficinas centrales en los vecindarios, pero es una alternativa costosa.) Todos los servicios xDSL se dise\u00f1aron para que cumplieran algunos objetivos. Primero, los servicios deben funcionar sobre los circuitos locales existentes de par trenzado, categor\u00eda 3. Segundo, no deben afectar las m\u00e1quinas de fax ni los tel\u00e9fonos existentes de los clientes. Tercero, deben superar por mucho los 56 kbps. Cuarto, siempre deben funcionar, con s\u00f3lo una tarifa mensual, no por minuto.\n132\nLA CAPA F\u00cdSICA\nCAP. 2\nAT&T hizo la oferta inicial de ADSL, el cual funcionaba dividiendo el espectro disponible en el circuito local, de alrededor de 1.1 MHz, en tres bandas de frecuencia: POTS (Servicio Telef\u00f3nico Convencional), canal ascendente (del usuario a la oficina central) y canal descendente (de la oficina central al usuario). La t\u00e9cnica en la cual se cuenta con m\u00faltiples bandas de frecuencia se conoce como multiplexi\u00f3n por divisi\u00f3n de frecuencia; en una secci\u00f3n posterior la analizaremos con detalle. Las ofertas subsecuentes de otros proveedores han tomado un enfoque distinto, y al parecer el siguiente es el probable ganador, as\u00ed que lo describiremos a continuaci\u00f3n. El enfoque alternativo, llamado DMT (MultiTono Discreto), se ilustra en la figura 2-28. En efecto, lo que hace es dividir el espectro disponible de 1.1 MHz en el circuito local en 256 canales independientes de 4312.5 Hz cada uno. El canal 0 se utiliza para el POTS. Los canales 1-5 no se emplean, con el prop\u00f3sito de evitar que las se\u00f1ales de voz y de datos interfieran entre s\u00ed. De los 250 canales restantes, uno se utiliza para control del flujo ascendente y uno para control del flujo descendente. El resto est\u00e1 disponible para datos del usuario.\nPotencia\n256 canales de 4 kHz\n0 Voz\n1100 kHz\n25 Flujo ascendente\nFlujo descendente\nFigura 2-28. Operaci\u00f3n de ADSL con modulaci\u00f3n multitono discreta.\nEn principio, cada uno de los canales restantes se puede utilizar para un flujo de datos de d\u00faplex total, pero las arm\u00f3nicas, la diafon\u00eda y otros efectos mantienen a los sistemas en la pr\u00e1ctica muy por debajo del l\u00edmite te\u00f3rico. Queda a cargo del proveedor determinar cu\u00e1ntos canales se utilizar\u00e1n para el flujo ascendente y cu\u00e1ntos para el flujo descendente. Es t\u00e9cnicamente posible una combinaci\u00f3n de 50-50 de flujo ascendente y flujo descendente, pero la mayor\u00eda de los proveedores asigna entre 80 y 90% del ancho de banda al canal descendente debido a que el grueso de los usuarios descargan m\u00e1s datos que los que env\u00edan. Esta situaci\u00f3n dio lugar a la \u201cA\u201d (asim\u00e9trica) de ADSL. Una divisi\u00f3n com\u00fan es asignar 32 canales para el flujo ascendente y el resto al flujo descendente. Tambi\u00e9n es posible establecer algunos de los canales de flujo ascendente m\u00e1s altos como bidireccionales para el ancho de banda incrementado, aunque esta optimizaci\u00f3n requiere agregar un circuito especial para cancelar el eco. El est\u00e1ndar ADSL (ANSI T1.413 y el ITU G.992.1) permite velocidades de hasta 8 Mbps para el flujo descendente y de 1 Mbps para el flujo ascendente. No obstante, pocos proveedores ofrecen esta velocidad. Por lo general, los proveedores ofrecen 512 kbps para el flujo descendente y 64 kbps para el flujo ascendente (en el servicio est\u00e1ndar) y 1 Mbps para el flujo descendente y 256 kbps para el flujo ascendente (en el servicio premium). Dentro de cada canal se utiliza un esquema de modulaci\u00f3n similar a V.34, aunque la tasa de muestreo es de 4000 baudios en vez de 2400. La calidad de la l\u00ednea en cada canal se monitorea\nSEC. 2.5\n133\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\nde manera constante y la tasa de datos se ajusta cada vez que es necesario, por lo cual canales distintos podr\u00edan tener tasas de datos diferentes. Los datos actuales se env\u00edan con modulaci\u00f3n QAM, con un m\u00e1ximo de 15 bits por baudio, utilizando un diagrama de constelaci\u00f3n an\u00e1logo al de la figura 2-25(b). Por ejemplo, con 224 canales descendentes y 15 bits/baudio a 4000 baudios, el ancho de banda del flujo descendente es de 13.44 Mbps. En la pr\u00e1ctica, la relaci\u00f3n se\u00f1al a ruido nunca es suficientemente buena para alcanzar esta tasa, pero en trayectorias cortas sobre circuitos de alta calidad es posible lograr 8 Mbps, raz\u00f3n por la cual el est\u00e1ndar llega hasta este punto. En la figura 2-29 se muestra una disposici\u00f3n ADSL com\u00fan. En este esquema, un t\u00e9cnico de la compa\u00f1\u00eda telef\u00f3nica debe instalar un NID (Dispositivo de Interfaz de Red) en la residencia del cliente. Esta peque\u00f1a caja de pl\u00e1stico delimita el fin de la propiedad de la compa\u00f1\u00eda telef\u00f3nica y el inicio de la propiedad del cliente. Cerca del NID (o en ocasiones en combinaci\u00f3n con \u00e9l) hay un divisor, un filtro anal\u00f3gico que separa la banda de 0-4000 Hz utilizada por la voz (POTS) de los datos. La se\u00f1al POTS se enruta hacia el tel\u00e9fono o m\u00e1quina de fax existente, y la se\u00f1al de datos se enruta a un m\u00f3dem. El m\u00f3dem ADSL es en realidad un procesador de se\u00f1ales digitales configurado para funcionar como 250 m\u00f3dems QAM operando en paralelo a diferentes frecuencias. Debido a que la mayor\u00eda de los m\u00f3dems ADSL actuales son externos, la computadora debe estar conectada a \u00e9l a una velocidad alta. Por lo general, esto se consigue al colocar una tarjeta Ethernet en la computadora y poner a funcionar una Ethernet bastante corta de dos nodos tan s\u00f3lo con la computadora y el m\u00f3dem ADSL. En ocasiones se utiliza el puerto USB en lugar de Ethernet. Sin duda, las tarjetas internas para m\u00f3dem ADSL estar\u00e1n disponibles a futuro.\nConmutador de voz\nTel\u00e9fono Codec Divisor\nL\u00ednea telef\u00f3nica\nDivisor NID Computadora\nDSLAM\nM\u00f3dem ADSL\nAl ISP Oficina central de la compa\u00f1\u00eda telef\u00f3nica\nEthernet\nResidencia del cliente\nFigura 2-29. Configuraci\u00f3n t\u00edpica de un equipo ADSL.\nEn el otro extremo del cable, en la oficina central, se instala un divisor correspondiente. Aqu\u00ed, se filtra la porci\u00f3n de voz de la se\u00f1al y se env\u00eda al conmutador de voz normal. Las se\u00f1ales por arriba\n134\nLA CAPA F\u00cdSICA\nCAP. 2\nde 26 kHZ se enrutan hacia un nuevo tipo de dispositivo conocido como DSLAM (Multiplexor de Acceso de L\u00ednea Digital de Suscriptor), el cual contiene el mismo tipo de procesador digital de se\u00f1ales que el m\u00f3dem ADSL. Una vez que la se\u00f1al digital se extrae de un flujo de bits, se elaboran paquetes y se env\u00edan al ISP. Esta completa separaci\u00f3n entre el sistema de voz y ADSL facilita relativamente a la compa\u00f1\u00eda telef\u00f3nica el despliegue de ADSL. Todo lo que tiene que hacer es comprar un DSLAM y un divisor y conectar a los suscriptores ADSL al divisor. Otros servicios de ancho de banda alto (por ejemplo, ISDN) requieren cambios mucho m\u00e1s significativos al equipo de conmutaci\u00f3n existente. Una desventaja del dise\u00f1o de la figura 2-29 es la presencia del NID y el divisor en la residencia del cliente. La instalaci\u00f3n de estos componentes en la residencia del cliente s\u00f3lo puede realizarla un t\u00e9cnico de la compa\u00f1\u00eda telef\u00f3nica, lo cual resulta bastante costoso. En consecuencia, tambi\u00e9n se ha estandarizado un dise\u00f1o alternativo sin divisor. Informalmente se le conoce como G.lite, pero el n\u00famero de est\u00e1ndar ITU es G.992.2. Es el mismo que el de la figura 2-29, aunque sin el divisor. La l\u00ednea telef\u00f3nica existente se utiliza tal como est\u00e1. La \u00fanica diferencia es que se tiene que colocar un microfiltro en cada conector telef\u00f3nico, entre el tel\u00e9fono o el m\u00f3dem ADSL y el cable. El microfiltro para el tel\u00e9fono es un filtro pasa bajas que elimina frecuencias por arriba de 3400 Hz; el microfiltro para el m\u00f3dem ADSL es un filtro pasa altas que elimina las frecuencias por abajo de 26 kHz. El inconveniente es que este sistema no es tan confiable como el de divisor, por lo que G.lite s\u00f3lo se puede utilizar hasta 1.5 Mbps (en comparaci\u00f3n con los 8 Mbps para ADSL con un divisor). No obstante, G.lite a\u00fan requiere un divisor en la oficina central pero este tipo de instalaci\u00f3n es relativamente econ\u00f3mica y sencilla. ADSL es tan s\u00f3lo un est\u00e1ndar de la capa f\u00edsica. Lo que se ejecuta encima de \u00e9l depende de la empresa portadora. Con frecuencia, ATM es la elecci\u00f3n debido a su capacidad para manejar calidad de servicio y al hecho de que muchas compa\u00f1\u00edas telef\u00f3nicas ejecutan ATM en la red central. Circuitos locales inal\u00e1mbricos Desde 1996 en Estados Unidos y un poco m\u00e1s tarde en otros pa\u00edses, existe libertad para las compa\u00f1\u00edas que desean entrar a la competencia con la compa\u00f1\u00eda telef\u00f3nica local (antes monopolista), llamada ILEC (LEC Obligada). Las candidatas m\u00e1s probables son las compa\u00f1\u00edas telef\u00f3nicas de larga distancia (IXCs). Cualquier IXC que desee entrar al negocio telef\u00f3nico local en alguna ciudad debe hacer lo siguiente: primero, debe comprar o alquilar un edificio para establecer su primera oficina central en dicha ciudad. Segundo, debe equipar la oficina con conmutadores telef\u00f3nicos y otros dispositivos, todos los cuales est\u00e1n disponibles para venta directa al p\u00fablico. Tercero, debe tender una conexi\u00f3n de fibra \u00f3ptica entre la oficina central y su central interurbana m\u00e1s cercana para que los clientes locales tengan acceso a su red nacional. Cuarto, debe conseguir clientes, por lo general, promoviendo un mejor servicio o precios m\u00e1s bajos que los de la ILEC. Aqu\u00ed empieza la parte dif\u00edcil. Suponga que la compa\u00f1\u00eda consigue algunos clientes. \u00bfDe qu\u00e9 manera la nueva compa\u00f1\u00eda telef\u00f3nica local, conocida como CLEC (LEC Competitiva), conectar\u00e1 los tel\u00e9fonos y computadoras de los clientes a su flamante nueva oficina central? La adquisici\u00f3n de los derechos de paso necesarios y el tendido de los cables o fibras son extremadamente costosos.\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n135\nMuchas CLECs han encontrado una alternativa de bajo costo en lugar del tradicional circuito local con cable de par trenzado: el WLL (Circuito Local Inal\u00e1mbrico). De cierta manera, un tel\u00e9fono fijo que utiliza un circuito local inal\u00e1mbrico se parece un poco a un tel\u00e9fono m\u00f3vil, pero existen tres diferencias t\u00e9cnicas importantes. Primera, el cliente del circuito local inal\u00e1mbrico con frecuencia desea conectividad de alta velocidad a Internet, al menos similar a la de ADSL. Segunda, al nuevo cliente probablemente no le importe que un t\u00e9cnico de la CLEC tenga que instalar una gran antena direccional en su techo, la cual apunta a la oficina central de la CLEC. Tercera, el usuario no se mueve, con lo cual se evitan todos los problemas asociados a la movilidad y la transferencia de celdas (cell handoff ) que estudiaremos m\u00e1s tarde en este cap\u00edtulo. Por lo tanto, estamos ante el surgimiento de una nueva industria: la inal\u00e1mbrica fija (tel\u00e9fono local y servicio de Internet ofrecidos por CLECs sobre circuitos locales inal\u00e1mbricos). Aunque los WLLs empezaron a funcionar de manera formal en 1998, debemos remontarnos a 1969 para conocer su origen. En ese a\u00f1o la FCC asign\u00f3 dos canales de televisi\u00f3n (a 6 MHz cada uno) para la televisi\u00f3n educativa a 2.1 GHz. En a\u00f1os posteriores se agregaron 31 canales m\u00e1s a 2.5 GHz para totalizar 198 MHz. La televisi\u00f3n educativa nunca se populariz\u00f3 y en 1998 la FCC decidi\u00f3 quitarle las frecuencias y asignarlas a la radio bidireccional. De inmediato fueron utilizadas para los circuitos locales inal\u00e1mbricos. A estas frecuencias, las microondas tienen una longitud de 10-12 cm. Poseen un rango de casi 50 km y pueden penetrar la vegetaci\u00f3n y la lluvia moderadamente bien. Los 198 MHz de nuevo espectro fueron puestos inmediatamente en uso para los circuitos locales inal\u00e1mbricos en un servicio denominado MMDS (Servicio de Distribuci\u00f3n Multipunto y Multicanal). El MMDS se puede considerar como una MAN (red de \u00e1rea metropolitana), al igual que su similar LMDS (que se analiza m\u00e1s abajo). La gran ventaja de este servicio es que la tecnolog\u00eda est\u00e1 bien desarrollada y que el equipo se consigue con facilidad. La desventaja consiste en que el ancho de banda total disponible es modesto y deben compartirlo muchos usuarios de una enorme \u00e1rea geogr\u00e1fica. El bajo ancho de banda del MMDS despert\u00f3 el inter\u00e9s en las ondas milim\u00e9tricas como alternativa. No se asignaron frecuencias en el rango de 28-31 GHz en Estados Unidos y de 40 GHz en Europa debido a la dificultad de construir circuitos integrados de silicio que operen a esas velocidades. El problema fue resuelto con la invenci\u00f3n de circuitos integrados de arseniuro de galio, lo que abri\u00f3 las bandas milim\u00e9tricas para la radiocomunicaci\u00f3n. La FCC respondi\u00f3 a la demanda al asignar 1.3 GHz a un nuevo servicio de circuito local inal\u00e1mbrico llamado LMDS (Servicio Local de Distribuci\u00f3n Multipunto). Esta porci\u00f3n de ancho de banda es la mayor que la FCC ha asignado de una sola vez para cualquier uso. En Europa se asign\u00f3 una porci\u00f3n similar, aunque a 40 GHz. En la figura 2-30 se muestra c\u00f3mo funciona LMDS. Se puede apreciar una torre con varias antenas, cada una de las cuales apunta a una direcci\u00f3n distinta. Debido a que las ondas milim\u00e9tricas son altamente direccionales, cada antena define un sector, independiente de los dem\u00e1s. A esta frecuencia, el rango es de 2-5 km, lo cual quiere decir que se necesitan muchas antenas para abarcar una ciudad.\n136\nLA CAPA F\u00cdSICA\nRed telef\u00f3nica\nCAP. 2\nISP\nFigura 2-30. Arquitectura de un sistema LMDS.\nAl igual que ADSL, LMDS asigna el ancho de banda de manera asim\u00e9trica, dando prioridad al canal descendente. Con la tecnolog\u00eda actual, cada sector puede contar con 36 Gbps de flujo descendente y 1 Mbsp de flujo ascendente, compartidos por todos los usuarios del sector. Si cada usuario activo descarga 3 p\u00e1ginas de 5 KB por minuto, el usuario ocupa un promedio de 2000 bps de espectro, lo cual permite un m\u00e1ximo de 18,000 usuarios activos por sector. No obstante, para mantener un retardo razonable debe haber un m\u00e1ximo de 9000 usuarios activos. Con cuatro sectores, como se muestra en la figura 2-30, puede soportarse una poblaci\u00f3n de 36,000 usuarios activos. Suponiendo que uno de tres clientes est\u00e9 en l\u00ednea durante las horas de m\u00e1xima actividad, una torre con cuatro antenas puede dar servicio a 100,000 usuarios dentro de un radio de 5 km de la torre. Muchas CLECs potenciales han realizado estos c\u00e1lculos, y algunas de ellas han llegado a la conclusi\u00f3n de que con la cantidad necesaria para realizar una modesta inversi\u00f3n en torres de ondas milim\u00e9tricas, se pueden meter al negocio de la telefon\u00eda local e Internet y ofrecer tasas de datos comparables a las de la televisi\u00f3n por cable, incluso a un menor precio. Sin embargo, LMDS tiene algunos problemas. Por una parte, las ondas milim\u00e9tricas se propagan en l\u00ednea recta, por lo cual debe haber una l\u00ednea visual despejada entre las antenas colocadas en el techo y la torre. Por otra parte, las hojas absorben bien estas ondas, por lo tanto, la torre debe tener suficiente altura para evitar los \u00e1rboles en la l\u00ednea visual. Lo que podr\u00eda parecer una l\u00ednea visual despejada en diciembre, tal vez no est\u00e9 despejada en julio cuando los \u00e1rboles est\u00e1n repletos de hojas. La lluvia tambi\u00e9n absorbe estas ondas. Hasta cierto punto, los errores producidos por la lluvia se pueden compensar con c\u00f3digos de correcci\u00f3n de errores o incrementando la potencia cuando llueva. Con todo, es m\u00e1s probable que el servicio LMDS se estrene primero en climas secos, como en Arizona en vez de en Seattle.\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n137\nEs poco probable que los circuitos locales inal\u00e1mbricos se popularicen si no surgen est\u00e1ndares que animen a los fabricantes a producir equipo y que aseguren a los usuarios la oportunidad de cambiar de CLEC sin necesidad de comprar equipo nuevo. Con el prop\u00f3sito de proporcionar esta estandarizaci\u00f3n, el IEEE estableci\u00f3 el comit\u00e9 802.16 para que se encargara de preparar el est\u00e1ndar para LMDS. El est\u00e1ndar 802.16 se public\u00f3 en abril de 2002. El IEEE denomina MAN inal\u00e1mbrica al 802.16. El est\u00e1ndar 802.16 del IEEE se dise\u00f1\u00f3 para telefon\u00eda digital, acceso a Internet, conexi\u00f3n de dos LANs remotas, difusi\u00f3n por televisi\u00f3n y radio, entre otros usos. En el cap\u00edtulo 4 lo veremos con m\u00e1s detalle.\n2.5.4 Troncales y multiplexi\u00f3n La econom\u00eda de escala desempe\u00f1a un papel importante en el sistema telef\u00f3nico. Cuesta pr\u00e1cticamente lo mismo instalar y mantener una troncal de ancho de banda alto que una de ancho de banda bajo entre dos oficinas de conmutaci\u00f3n (es decir, el gasto principal es la excavaci\u00f3n de zanjas y no el cable de cobre o la fibra \u00f3ptica). En consecuencia, las compa\u00f1\u00edas telef\u00f3nicas han desarrollado esquemas complejos para multiplexar muchas conversaciones en una sola troncal f\u00edsica. Estos esquemas de multiplexi\u00f3n se pueden dividir en dos categor\u00edas principales: FDM (Multiplexi\u00f3n por Divisi\u00f3n de Frecuencia) y TDM (Multiplexi\u00f3n por Divisi\u00f3n de Tiempo). En FDM el espectro de frecuencia se divide en bandas de frecuencia, y cada usuario posee exclusivamente alguna banda. En TDM los usuarios esperan su turno (en round-robin), y cada uno obtiene en forma peri\u00f3dica toda la banda durante un breve lapso de tiempo. La radiodifusi\u00f3n AM ilustra ambas clases de multiplexi\u00f3n. El espectro asignado es de alrededor de 1 MHz, aproximadamente de 500 a 1500 kHz. A los diferentes canales l\u00f3gicos (estaciones) se les asigna una frecuencia distinta, y cada uno funciona en una porci\u00f3n del espectro con una separaci\u00f3n entre canales lo bastante grande para evitar la interferencia. Este sistema es un ejemplo de multiplexi\u00f3n por divisi\u00f3n de frecuencia. Adem\u00e1s (en algunos pa\u00edses), las estaciones individuales tienen dos subcanales l\u00f3gicos: m\u00fasica y publicidad. \u00c9stos se alternan en la misma frecuencia, primero una r\u00e1faga de m\u00fasica y despu\u00e9s una r\u00e1faga de publicidad, luego m\u00e1s m\u00fasica, y as\u00ed sucesivamente. Esta situaci\u00f3n es multiplexi\u00f3n por divisi\u00f3n de tiempo. A continuaci\u00f3n examinaremos la multiplexi\u00f3n por divisi\u00f3n de frecuencia y despu\u00e9s veremos c\u00f3mo se puede aplicar FDM a la fibra \u00f3ptica (multiplexi\u00f3n por divisi\u00f3n de longitud de onda). Despu\u00e9s nos enfocaremos en TDM y terminaremos con un sistema TDM avanzado que se usa para fibra \u00f3ptica (SONET). Multiplexi\u00f3n por divisi\u00f3n de frecuencia La figura 2-31 muestra c\u00f3mo utilizar FDM para multiplexar tres canales telef\u00f3nicos de calidad de voz. Los filtros limitan el ancho de banda utilizable a cerca de 3000 Hz por canal de calidad de voz. Cuando se multiplexan muchos canales juntos, se asignan 4000 Hz a cada canal para mantenerlos bien separados. Primero se eleva la frecuencia de los canales de voz, cada uno en una\n138\nLA CAPA F\u00cdSICA\nCAP. 2\ncantidad diferente, despu\u00e9s de lo cual se pueden combinar, porque en ese momento no hay dos canales que ocupen la misma porci\u00f3n del espectro. Observe que aunque existen separaciones entre los canales (bandas de protecci\u00f3n), hay cierta superposici\u00f3n entre canales adyacentes porque los filtros no tienen bordes bien definidos. Esta superposici\u00f3n significa que un pico fuerte en el borde de un canal se detectar\u00e1 en el adyacente como ruido no t\u00e9rmico.\nFactor de atenuaci\u00f3n\nCanal 1\nCanal 2 Canal 2\nCanal 3\nCanal 1\nFrecuencia (kHz)\nCanal 3\n(c)\nFrecuencia (Hz)\nFrecuencia (kHz)\n(a)\n(b)\nFigura 2-31. Multiplexi\u00f3n por divisi\u00f3n de frecuencia. (a) Los anchos de banda originales. (b) Incremento de frecuencia de los anchos de banda. (c) El canal multiplexado.\nLos esquemas de FDM que se emplean en el mundo est\u00e1n normalizados hasta cierto punto. Un est\u00e1ndar muy difundido es el de 12 canales de voz a 4000 Hz multiplexados dentro de la banda de 60 a 108 kHz. Esta unidad se llama grupo. La banda de 12 a 60 kHz a veces se usa para otro grupo. Muchas empresas portadoras ofrecen un servicio de l\u00edneas alquiladas de 48 a 56 kbps que se basan en este grupo. Se pueden multiplexar cinco grupos (60 canales de voz) para formar un supergrupo. La siguiente unidad es el grupo maestro, que se compone de cinco supergrupos (en el est\u00e1ndar del CCITT) o de 10 supergrupos (en el sistema Bell). Tambi\u00e9n existen otros est\u00e1ndares que llegan hasta 230,000 canales de voz. Multiplexi\u00f3n por divisi\u00f3n de longitud de onda Para los canales de fibra \u00f3ptica se utiliza una variante de la multiplexi\u00f3n por divisi\u00f3n de frecuencia llamada WDM (Multiplexi\u00f3n por Divisi\u00f3n de Longitud de Onda). En la figura 2-32 se muestran los principios b\u00e1sicos de la WDM en fibra. Aqu\u00ed, cuatro fibras se juntan en un combinador \u00f3ptico, cada una con su energ\u00eda presente a diferentes longitudes de onda. Los cuatro haces se combinan en una sola fibra compartida para transmisi\u00f3n a un destino distante. En el extremo\nSEC. 2.5\n139\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\ndistante, el haz se divide en tantas fibras como hayan entrado. Cada fibra saliente contiene un n\u00facleo corto especialmente construido que filtra todas las longitudes de onda, excepto una. Las se\u00f1ales resultantes pueden enrutarse a su destino o recombinarse en diferentes formas para transporte adicional multiplexado. Espectro de la fibra 4 Energ\u00eda\nEnerg\u00eda\nEspectro de la fibra 3 Energ\u00eda\nEspectro de la fibra 2 Energ\u00eda\nEnerg\u00eda\nEspectro de la fibra 1\nEspectro de la fibra compartida\nFiltro Fibra 1 Fibra 2 Combinador\nDivisor\nFibra 3 Fibra 4\nFibra compartida de largo alcance\nFigura 2-32. Multiplexi\u00f3n por divisi\u00f3n de longitud de onda.\nEn realidad, aqu\u00ed nada es nuevo. Se trata simplemente de multiplexi\u00f3n por divisi\u00f3n de frecuencia a frecuencias muy altas. Siempre y cuando cada canal tenga su propio rango de frecuencia (es decir, longitud de onda), y todos los intervalos est\u00e9n separados, se pueden multiplexar juntos en la fibra de largo alcance. La \u00fanica diferencia con respecto a la FDM el\u00e9ctrica es que un sistema \u00f3ptico que usa una rejilla de difracci\u00f3n es totalmente pasivo y, por ello, muy confiable. La tecnolog\u00eda WDM ha progresado de tal manera que ha dejado en verg\u00fcenza a la tecnolog\u00eda de computadoras. La WDM fue inventada en 1990. Los primeros sistemas comerciales ten\u00edan ocho canales, cada uno de los cuales era de 2.5 Gbps. En 1998, los sistemas con 40 canales de 2.5 Gbps ya estaban en el mercado. En 2001 hab\u00eda productos con 96 canales de 10 Gbps, con un total de 960 Gbps. \u00c9ste es suficiente ancho de banda como para transmitir 30 pel\u00edculas completas por segundo (en MPEG-2). Los sistemas con 200 canales ya est\u00e1n trabajando en el laboratorio. Cuando el n\u00famero de canales es muy grande y las longitudes de onda est\u00e1n espaciadas entre s\u00ed de manera estrecha, por ejemplo a 0.1 nm, el sistema se conoce como DWDM (WDM Densa). Cabe se\u00f1alar que la raz\u00f3n por la que WDM es popular es que la energ\u00eda de una sola fibra por lo general es de unos cuantos gigahertz debido a que en la actualidad es imposible convertir con mayor rapidez entre los medios \u00f3ptico y el\u00e9ctrico. Al ejecutar muchos canales en paralelo sobre diferentes longitudes de onda, el ancho de banda agregado se incrementa de manera lineal de acuerdo con el n\u00famero de canales. Puesto que el ancho de banda de una sola banda de fibra es de alrededor de 25,000 GHz (vea la figura 2-6), te\u00f3ricamente hay espacio para 2500 canales de 10 Gbps incluso a 1 bit/Hz (tambi\u00e9n son posibles tasas m\u00e1s altas).\n140\nLA CAPA F\u00cdSICA\nCAP. 2\nOtro desarrollo novedoso es mediante amplificadores \u00f3pticos. Anteriormente, era necesario dividir todos los canales cada 100 km y convertir cada uno en una se\u00f1al el\u00e9ctrica para una amplificaci\u00f3n por separado antes de volver a convertirlos a \u00f3pticos y combinarlos. En la actualidad todos los amplificadores pueden regenerar toda la se\u00f1al una vez cada 1000 km sin necesidad de m\u00faltiples conversiones \u00f3ptico-el\u00e9ctricas. En el ejemplo de la figura 2-32 tenemos un sistema de longitud de onda fija. Los bits de la fibra entrante 1 van a la fibra saliente 3, los de la fibra entrante 2 van a la fibra saliente 1, etc\u00e9tera. Sin embargo, es posible construir sistemas WDM conmutados. En un dispositivo de ese tipo los filtros de salida se pueden ajustar mediante interfer\u00f3metros de Fabry-Perot o de Mach-Zehnder. Para mayor informaci\u00f3n acerca de WDM y su aplicaci\u00f3n en la conmutaci\u00f3n de paquetes en Internet, vea (Elmirghani y Mouftah, 2000; Hunter y Andonovic, 2000, y Listani y cols., 2001). Multiplexi\u00f3n por divisi\u00f3n de tiempo La tecnolog\u00eda WDM es excelente, pero a\u00fan hay mucho cable de cobre en el sistema telef\u00f3nico, por lo tanto, regresemos a ese tema por un momento. Aunque FDM a\u00fan se utiliza sobre cables de cobre o canales de microondas, requiere circuitos anal\u00f3gicos y no es f\u00e1cil hacerla con una computadora. En contraste, TDM puede manejarse por completo mediante dispositivos digitales y a ello se debe su popularidad en los \u00faltimos a\u00f1os. Desgraciadamente, s\u00f3lo se puede utilizar para datos digitales. Puesto que los circuitos locales producen se\u00f1ales anal\u00f3gicas, se necesita una conversi\u00f3n de anal\u00f3gico a digital en la oficina central, en donde todos los circuitos locales individuales se juntan para combinarse en troncales. A continuaci\u00f3n analizaremos la forma en que las m\u00faltiples se\u00f1ales anal\u00f3gicas de voz se digitalizan y combinan en una sola troncal digital saliente. Los datos de c\u00f3mputo que se env\u00edan a trav\u00e9s de un m\u00f3dem tambi\u00e9n son anal\u00f3gicos, por lo que la siguiente descripci\u00f3n tambi\u00e9n se aplica a ellos. Las se\u00f1ales anal\u00f3gicas se digitalizan en la oficina central con un dispositivo llamado codec (codificador-decodificador), con lo que se produce una serie de n\u00fameros de 8 bits. El codec toma 8000 muestras por segundo (125 \u03bcseg/muestra) porque el teorema de Nyquist dice que esto es suficiente para capturar toda la informaci\u00f3n del ancho de banda de 4 kHz del canal telef\u00f3nico. A una velocidad de muestreo menor, la informaci\u00f3n se perder\u00eda; a una mayor, no se ganar\u00eda informaci\u00f3n extra. Esta t\u00e9cnica se llama PCM (Modulaci\u00f3n por Codificaci\u00f3n de Impulsos). La PCM es el coraz\u00f3n del sistema telef\u00f3nico moderno. En consecuencia, virtualmente todos los intervalos de tiempo dentro del sistema telef\u00f3nico son m\u00faltiplos de 125 \u03bcseg. Cuando la transmisi\u00f3n digital empez\u00f3 a surgir como una tecnolog\u00eda factible, el CCITT era incapaz de lograr un acuerdo respecto al est\u00e1ndar internacional para la PCM. En consecuencia, ahora se usan diversos esquemas incompatibles en diferentes pa\u00edses alrededor del mundo. Un m\u00e9todo muy utilizado en Estados Unidos y Jap\u00f3n es el de la portadora T1, descrito en la figura 2-33. (T\u00e9cnicamente hablando, el formato se llama DS1 y la portadora se llama T1, pero aqu\u00ed no haremos esa sutil distinci\u00f3n.) La portadora T1 consiste en 24 canales de voz que se multiplexan juntos. Por lo com\u00fan, las se\u00f1ales anal\u00f3gicas se muestrean por asignaci\u00f3n c\u00edclica (en round robin), alimentando el flujo anal\u00f3gico resultante al codec en lugar de tener 24 codecs y despu\u00e9s mezclar la salida digital. Cada uno de los 24 canales inserta, a la vez, 8 bits en el flujo de salida.\nSEC. 2.5\n141\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\nSiete bits son de datos y uno es de control, con lo que se obtienen 7 \u00d7 8000 = 56,000 bps de datos, y 1 \u00d7 8000 = 8000 bps de informaci\u00f3n de se\u00f1alizaci\u00f3n por canal.\nTrama de 193 bits (125 \u03bcseg)\nCanal\nEl bit 1 es un c\u00f3digo de entramado\nCanal\nCanal\n7 bits de datos por canal por muestra\nCanal\nCanal\nEl bit 8 es para se\u00f1alizaci\u00f3n\nFigura 2-33. La portadora T1 (1.544 Mbps).\nUna trama consiste en 24 \u00d7 8 = 192 bits m\u00e1s un bit extra para entramado, lo que da 193 bits cada 125 \u03bcseg. Esto produce una tasa de transmisi\u00f3n de datos bruta de 1.544 Mbps. El bit n\u00famero 193 se usa para sincronizaci\u00f3n de la trama y sigue el patr\u00f3n 0101010101... Por lo general, el receptor verifica de manera continua este bit para asegurarse de que no ha perdido la sincronizaci\u00f3n. Si llegara a perder sincron\u00eda, el receptor puede esperar hasta detectar otra vez el patr\u00f3n y volverse a sincronizar. Los clientes anal\u00f3gicos no pueden generar el patr\u00f3n de bits porque corresponde a una onda senoidal a 4000 Hz, que ser\u00eda filtrada. Desde luego, los clientes digitales pueden generar este patr\u00f3n, pero hay poca probabilidad de que est\u00e9 presente cuando la trama pierda sincron\u00eda. Cuando se utiliza un sistema T1 exclusivamente para datos, s\u00f3lo 23 de los canales llevan datos. El vig\u00e9simo cuarto lleva un patr\u00f3n especial de sincronizaci\u00f3n que permite la recuperaci\u00f3n r\u00e1pida en caso de que la trama pierda sincron\u00eda. Cuando el CCITT por fin lleg\u00f3 a un acuerdo, sinti\u00f3 que 8000 bps de informaci\u00f3n de se\u00f1alizaci\u00f3n era demasiado, de modo que su est\u00e1ndar de 1.544 Mbps se basa en un elemento de datos de 8 bits en lugar de 7; es decir, la se\u00f1al anal\u00f3gica se cuantiza en 256 niveles discretos en lugar de 128. Hay dos variantes (incompatibles). En la se\u00f1alizaci\u00f3n por canal com\u00fan, el bit extra (que se anexa al final y no al principio de la trama de 193 bits) adopta los valores 10101010... en las tramas nones y contiene informaci\u00f3n de se\u00f1alizaci\u00f3n para todos los canales de las tramas pares. En la otra variante, la se\u00f1alizaci\u00f3n por canal asociado, cada canal tiene su propio subcanal privado de se\u00f1alizaci\u00f3n. Se establece un subcanal privado asignando uno de los ocho bits de usuario\n142\nLA CAPA F\u00cdSICA\nCAP. 2\nde cada sexta trama a funciones de se\u00f1alizaci\u00f3n, as\u00ed que cinco de cada seis muestras tienen 8 bits de ancho y la otra s\u00f3lo tiene 7. El CCITT tambi\u00e9n recomend\u00f3 una portadora PCM a 2.048 Mbps llamada E1. Esta portadora empaca 32 muestras de datos de 8 bits en la trama b\u00e1sica de 125 \u03bcseg. Treinta de los canales se usan para informaci\u00f3n y dos para se\u00f1alizaci\u00f3n. Cada grupo de cuatro tramas proporciona 64 bits de se\u00f1alizaci\u00f3n, la mitad de los cuales se usa para se\u00f1alizaci\u00f3n por canal asociado y el resto se usa para sincronizaci\u00f3n de tramas o se reserva para que cada pa\u00eds los use como quiera. Fuera de Norteam\u00e9rica y Jap\u00f3n, se utiliza la portadora E1 de 2.048 Mbps en lugar de la T1. Una vez que la se\u00f1al de voz se digitaliza, es tentador tratar de aplicar t\u00e9cnicas estad\u00edsticas para reducir la cantidad de bits necesarios por canal. Estas t\u00e9cnicas no s\u00f3lo son apropiadas para codificar la voz, sino tambi\u00e9n para digitalizar cualquier se\u00f1al anal\u00f3gica. Todos los m\u00e9todos de compactaci\u00f3n se basan en el principio de que la se\u00f1al cambia con relativa lentitud en comparaci\u00f3n con la frecuencia de muestreo, de modo que mucha de la informaci\u00f3n en el nivel digital de 7 u 8 bits es redundante. Un m\u00e9todo llamado modulaci\u00f3n diferencial por codificaci\u00f3n de impulsos consiste en transmitir no la amplitud digitalizada sino la diferencia entre su valor actual y el previo. Puesto que los saltos de \u00b116 en una escala de 128 no son probables, podr\u00edan bastar 5 bits en lugar de 7. Si la se\u00f1al llegara a saltar de manera alocada en forma ocasional, la l\u00f3gica de codificaci\u00f3n podr\u00eda requerir varios periodos de muestreo para \u201crecuperarse\u201d. En el caso de la voz, se puede ignorar el error que se introduce.\nLas muestras consecutivas siempre difieren en 1\nLa se\u00f1al cambi\u00f3 con demasiada rapidez y la codificaci\u00f3n no mantuvo el ritmo\nNiveles de digitalizaci\u00f3n\n15\n10\n5\n0\n1\n0\n1\n1\n1\n1\n1\n0\n0\n0\n0\n0\n0\n0\nTiempo Intervalo de muestreo\n0\n0\n1\n1\n1\n1\n1\n1\nFlujo de bits enviados\nFigura 2-34. Modulaci\u00f3n delta.\nUna variante de este m\u00e9todo de compactaci\u00f3n requiere que cada valor muestreado difiera de su predecesor en +1 o \u22121. Bajo estas condiciones, se transmite un solo bit, que indica si la nueva\nSEC. 2.5\n143\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\nmuestra est\u00e1 por arriba o por debajo de la anterior. En la figura 2-34 se ilustra esta t\u00e9cnica, llamada modulaci\u00f3n delta. Al igual que todas las t\u00e9cnicas de compactaci\u00f3n que suponen cambios peque\u00f1os de nivel entre muestras consecutivas, la codificaci\u00f3n delta se puede meter en problemas si la se\u00f1al cambia con demasiada rapidez, como se aprecia en la figura. Cuando esto sucede, se pierde informaci\u00f3n. Una mejora a la PCM diferencial consiste en extrapolar algunos valores previos para predecir el siguiente valor y codificar a continuaci\u00f3n la diferencia entre la se\u00f1al real y la que se predice. Desde luego, el transmisor y el receptor deben utilizar el mismo algoritmo de predicci\u00f3n. A tales esquemas se les conoce como codificaci\u00f3n por predicci\u00f3n y son \u00fatiles porque reducen el tama\u00f1o de los n\u00fameros que se codificar\u00e1n y, por tanto, la cantidad de bits que se enviar\u00e1n. La multiplexi\u00f3n por divisi\u00f3n de tiempo permite que se multiplexen varias portadoras T1 en portadoras de orden m\u00e1s alto. La figura 2-35 muestra c\u00f3mo se puede hacer esto. A la izquierda vemos que se multiplexan cuatro canales T1 en un canal T2. La multiplexi\u00f3n en T2 y superiores se hace bit por bit, en lugar de byte por byte, como en los 24 canales de voz que forman una trama T1. Cuatro flujos T1 a 1.544 Mbps deber\u00edan generar 6.176 Mbps, pero T2 en realidad es de 6.312 Mbps. Los bits adicionales sirven para entramar y para recuperar en caso de que la portadora pierda sincron\u00eda. T1 y T3 son utilizadas ampliamente por los clientes, mientras que T2 y T4 s\u00f3lo se utilizan en el sistema telef\u00f3nico mismo, por lo que no son muy conocidas. 7 flujos T2 de entrada\n4 flujos T1 de entrada\n6 flujos T3 de entrada\n1 flujos T2 de salida\n1.544 Mbps\n6.312 Mbps\n44.736 Mbps\n274.176 Mbps\nFigura 2-35. Multiplexi\u00f3n de flujos T1 en portadoras m\u00e1s altas.\nEn el siguiente nivel se combinan siete flujos T2 bit por bit que forman un flujo T3. A continuaci\u00f3n se unen seis flujos T3 para formar un flujo T4. En cada paso se agrega una peque\u00f1a sobrecarga para entramado y recuperaci\u00f3n en caso de que la sincronizaci\u00f3n entre el emisor y el receptor se pierda. As\u00ed como existe un desacuerdo en lo tocante a la portadora b\u00e1sica entre Estados Unidos y el resto del mundo, tambi\u00e9n hay desacuerdo respecto a c\u00f3mo se ha de multiplexar en portadoras de ancho de banda m\u00e1s alto. El esquema de Estados Unidos de dar pasos de 4, 6 y 7 no pareci\u00f3 l\u00f3gico a todo el mundo, de modo que el est\u00e1ndar del CCITT prescribe la multiplexi\u00f3n de cuatro flujos en uno en cada nivel. Adem\u00e1s, los datos de entramado y de recuperaci\u00f3n son diferentes entre el est\u00e1ndar de Estados Unidos y el del CCITT. La jerarqu\u00eda del CCITT para 32, 128, 512, 2048 y 8192 canales funciona a velocidades de 2.048, 8.848, 34.304, 139.264 y 565.148 Mbps.\n144\nLA CAPA F\u00cdSICA\nCAP. 2\nSONET/SDH En los primeros d\u00edas de la fibra \u00f3ptica, cada compa\u00f1\u00eda telef\u00f3nica ten\u00eda su propio sistema \u00f3ptico TDM patentado. Despu\u00e9s de que AT&T se dividi\u00f3 en 1984, las compa\u00f1\u00edas telef\u00f3nicas locales se tuvieron que conectar a m\u00faltiples empresas portadoras de larga distancia, todas con diferentes sistemas \u00f3pticos TDM, de modo que se hizo obvia la necesidad de estandarizaci\u00f3n. En 1985, Bellcore, la divisi\u00f3n de investigaci\u00f3n de las RBOCs, empez\u00f3 a trabajar en un est\u00e1ndar llamado SONET (Red \u00d3ptica S\u00edncrona). M\u00e1s tarde, el CCITT se uni\u00f3 al esfuerzo, lo que dio como resultado que en 1989 se produjera un est\u00e1ndar SONET y un conjunto de recomendaciones paralelas del CCITT (G.707, G.708 y G.709). A las recomendaciones del CCITT se les llama SDH (Jerarqu\u00eda Digital S\u00edncrona) pero difieren de SONET s\u00f3lo en detalles menores. Virtualmente todo el tr\u00e1fico telef\u00f3nico de larga distancia en Estados Unidos y una buena parte del mismo en los dem\u00e1s pa\u00edses tiene ahora troncales que funcionan con SONET en la capa f\u00edsica. Si desea informaci\u00f3n adicional, vea (Bellamy, 2000; Goralski, 2000, y Shepard, 2001). El dise\u00f1o de SONET tuvo cuatro objetivos principales. Antes que nada, SONET ten\u00eda que hacer posible la interconexi\u00f3n de diferentes operadores telef\u00f3nicos. El logro de este objetivo requiri\u00f3 que se definiera un est\u00e1ndar de se\u00f1alizaci\u00f3n con respecto a la longitud de onda, la temporizaci\u00f3n, la estructura del entramado, etc\u00e9tera. Segundo, se necesitaron medidas para unificar los sistemas digitales estadounidense, europeo y japon\u00e9s, todos los cuales se basaban en canales PCM de 64 kbps, pero combinados en formas diferentes (e incompatibles). Tercero, SONET ten\u00eda que proporcionar un mecanismo para multiplexar varios canales digitales. En el momento en que se cre\u00f3 SONET, la portadora digital de mayor velocidad que se usaba ampliamente en Estados Unidos era la T3, a 44.736 Mbps. La T4 ya se hab\u00eda definido, pero no se utilizaba mucho, y todav\u00eda no se hab\u00eda definido nada por encima de la velocidad de T4. Parte de la misi\u00f3n de SONET era continuar la jerarqu\u00eda a gigabits/seg y m\u00e1s all\u00e1. Tambi\u00e9n se necesitaba una forma est\u00e1ndar de multiplexar canales m\u00e1s lentos en un solo canal SONET. Cuarto, SONET ten\u00eda que proporcionar apoyo para las operaciones, la administraci\u00f3n y el mantenimiento (OAM). Los sistemas anteriores no hac\u00edan esto muy bien. Una decisi\u00f3n temprana fue convertir a SONET en un sistema TDM tradicional, con todo el ancho de banda de la fibra dedicado a un canal que contuviera ranuras de tiempo para los distintos subcanales. Como tal, SONET es un sistema s\u00edncrono, controlado por un reloj maestro con una precisi\u00f3n de alrededor de 1 parte en 109. En una l\u00ednea SONET, los bits se env\u00edan a intervalos de suma precisi\u00f3n, controlados por el reloj maestro. Cuando posteriormente se propuso que la conmutaci\u00f3n de celdas fuera la base de ATM, el hecho de que permitiera la llegada de celdas a intervalos irregulares le confiri\u00f3 la etiqueta de Modo de Transferencia As\u00edncrona para contrastarlo con el funcionamiento s\u00edncrono de SONET. Con este \u00faltimo, el emisor y el remitente est\u00e1n atados a un reloj com\u00fan; con ATM no lo est\u00e1n. La trama b\u00e1sica de SONET es un bloque de 810 bytes que se emite cada 125 \u03bcseg. Puesto que SONET es s\u00edncrona, las tramas se emiten haya o no datos \u00fatiles que enviar. La velocidad de 8000 tramas/seg coincide perfectamente con la tasa de muestreo de los canales PCM que se utilizan en todos los sistemas de telefon\u00eda digital.\nSEC. 2.5\n145\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\nLas tramas de 810 bytes de SONET se pueden describir mejor como un rect\u00e1ngulo de bytes de 90 columnas de ancho por nueve filas de alto. De este modo, 8 \u00d7 810 = 6480 bits se transmiten 8000 veces por segundo, lo que da una tasa de datos bruta de 51.84 Mbps. \u00c9ste es el canal b\u00e1sico de SONET y se llama STS-1 (Se\u00f1al S\u00edncrona de Transporte 1). Todas las troncales de SONET son m\u00faltiplos de STS-1. Las primeras tres columnas de cada trama se reservan para informaci\u00f3n de administraci\u00f3n del sistema, como se ilustra en la figura 2-36. Las primeras tres filas contienen el encabezado de secci\u00f3n (section overhead ); las siguientes seis contienen el encabezado de l\u00ednea (line overhead ). El encabezado de secci\u00f3n se genera y verifica al comienzo y al final de cada secci\u00f3n, mientras que el encabezado de l\u00ednea se genera y verifica al comienzo y al final de cada l\u00ednea. 3 columnas para encabezados 87 columnas\nTrama SONET (125 \u03bcseg)\n9 filas\nTrama SONET (125 \u03bcseg)\nEncabezado de secci\u00f3n\nEncabezado de l\u00ednea\nEncabezado de trayectoria\nSPE\nFigura 2-36. Dos tramas SONET consecutivas.\nUn transmisor SONET env\u00eda tramas consecutivas de 810 bytes, sin huecos entre ellas, incluso cuando no hay datos (en cuyo caso env\u00eda datos ficticios). Todo lo que el receptor ve es un flujo continuo de bits, de modo que, \u00bfc\u00f3mo sabe d\u00f3nde comienza cada trama? La respuesta es que los dos primeros bytes de cada trama contienen un patr\u00f3n fijo que el receptor busca. Si lo encuentra en el mismo lugar en una gran cantidad de tramas consecutivas, asume que est\u00e1 sincronizado con el emisor. En teor\u00eda, por lo general un usuario puede insertar este patr\u00f3n en la carga \u00fatil, pero en la pr\u00e1ctica no es posible hacer esto debido al multiplexado de m\u00faltiples usuarios que se realiza en la misma trama, entre otras razones. Las 87 columnas restantes contienen 87 \u00d7 9 \u00d7 8 \u00d7 8000 = 50.112 Mbps de datos de usuario. Sin embargo, los datos de usuario, llamados SPE (Contenedor o Sobre de Carga \u00datil S\u00edncrona), no siempre empiezan en la fila 1, columna 4. La SPE puede empezar en cualquier parte dentro de la trama. La primera fila del encabezado de l\u00ednea contiene un apuntador al primer byte. La primera columna de la SPE es del encabezado de trayectoria (es decir, el encabezado para el protocolo de la subcapa de la trayectoria de extremo a extremo).\n146\nLA CAPA F\u00cdSICA\nCAP. 2\nLa facultad de que la SPE empiece en cualquier lugar dentro de la trama SONET o incluso abarque dos tramas, como se muestra en la figura 2-36, confiere una flexibilidad adicional al sistema. Por ejemplo, si una carga \u00fatil llega a la fuente mientras se est\u00e1 construyendo una trama SONET ficticia, se puede insertar en la trama actual, en lugar de retenerla hasta el inicio de la siguiente. En la figura 2-37 se muestra la jerarqu\u00eda de multiplexi\u00f3n de SONET. Se definieron tasas de STS-1 a STS-192. La portadora \u00f3ptica que corresponde a cada STS-n se llama OC-n, pero es la misma bit por bit, excepto por un cierto reordenamiento de bits necesario para la sincronizaci\u00f3n. Los nombres de SDH son diferentes y empiezan en OC-3 porque los sistemas basados en el CCITT no tienen una tasa de transmisi\u00f3n cercana a los 51.84 Mbps. La portadora OC-9 est\u00e1 presente porque se aproxima mucho a la velocidad de una de las principales troncales de alta velocidad que se usan en Jap\u00f3n. OC-18 y OC-36 se utilizan en Jap\u00f3n. La tasa de datos bruta incluye todos los encabezados. La tasa de datos de SPE excluye los encabezados de l\u00ednea y de secci\u00f3n. La tasa de datos de usuario excluye todos los encabezados y cuenta solamente las 86 columnas disponibles para la carga \u00fatil. SONET El\u00e9ctrica\n\u00d3ptica\nSTS-1\nOC-1\nSTS-3\nOC-3\nSTS-9\nOC-9\nSTS-12\nSDH \u00d3ptica\nTasa de datos (Mbps) Bruta\nSPE\nDe usuario\n51.84\n50.112\n49.536\nSTM-1\n155.52\n150.336\n148.608\nSTM-3\n466.56\n451.008\n445.824\nOC-12\nSTM-4\n622.08\n601.344\n594.432\nSTS-18\nOC-18\nSTM-6\n933.12\n902.016\n891.648\nSTS-24\nOC-24\nSTM-8\n1244.16\n1202.688\n1188.864\nSTS-36\nOC-36\nSTM-12\n1866.24\n1804.032\n1783.296\nSTS-48\nOC-48\nSTM-16\n2488.32\n2405.376\n2377.728\nSTS-192\nOC-192\nSTM-64\n9953.28\n9621.504\n9510.912\nFigura 2-37. Tasas de multiplexi\u00f3n de SONET y SDH.\nPor cierto, cuando una portadora, como la OC-3, no se multiplexa, sino que conduce datos de una fuente \u00fanica, se agrega la letra c (de concatenado) a la designaci\u00f3n, de modo que OC-3 indica una portadora de 155.52 Mbps consistente en tres portadoras OC-1 independientes, pero OC-3c indica un flujo de datos de una sola fuente a 155.52 Mbps. Los tres flujos OC-1 dentro de un flujo OC-3c se entrelazan por columnas, primero la columna 1 del flujo 1, a continuaci\u00f3n la columna 1 del flujo 2, despu\u00e9s la columna 1 del flujo 3 seguida de la columna 2 del flujo 1, y as\u00ed sucesivamente, lo que produce una trama de 270 columnas de ancho y 9 filas de profundidad.\n2.5.5 Conmutaci\u00f3n Desde el punto de vista de un ingeniero de telefon\u00eda ordinario, el sistema telef\u00f3nico se divide en dos partes: planta externa (los circuitos locales y troncales, puesto que est\u00e1n fuera de las oficinas de conmutaci\u00f3n) y planta interna (los conmutadores, que est\u00e1n dentro de las oficinas de\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n147\nconmutaci\u00f3n). S\u00f3lo hemos visto la planta externa. Lleg\u00f3 el momento de examinar la planta interna. En la actualidad se utilizan dos t\u00e9cnicas de conmutaci\u00f3n diferentes: conmutaci\u00f3n de circuitos y conmutaci\u00f3n de paquetes. A continuaci\u00f3n presentaremos una breve introducci\u00f3n a cada una de ellas. Despu\u00e9s veremos con detalle la conmutaci\u00f3n de circuitos, porque as\u00ed es como trabaja el sistema telef\u00f3nico actual. M\u00e1s adelante, en cap\u00edtulos posteriores, examinaremos a fondo la conmutaci\u00f3n de paquetes. Conmutaci\u00f3n de circuitos Cuando usted o su computadora hacen una llamada telef\u00f3nica, el equipo de conmutaci\u00f3n del sistema telef\u00f3nico busca una trayectoria f\u00edsica que vaya desde su tel\u00e9fono al del receptor. Esta t\u00e9cnica se llama conmutaci\u00f3n de circuitos y se muestra de manera esquem\u00e1tica en la figura 2-38(a). Cada uno de los seis rect\u00e1ngulos representa una oficina de conmutaci\u00f3n de la empresa portadora (oficina central, oficina interurbana, etc\u00e9tera). En este ejemplo, cada oficina tiene tres l\u00edneas de entrada y tres de salida. Cuando una llamada pasa por una oficina de conmutaci\u00f3n, se establece una conexi\u00f3n f\u00edsica (en forma conceptual) entre la l\u00ednea por la que lleg\u00f3 la llamada y una de las l\u00edneas de salida, lo que se representa mediante las l\u00edneas punteadas.\nSe establece una conexi\u00f3n f\u00edsica (mediante cable de cobre) cuando se hace una llamada\n(a) Computadora\nOficina de conmutaci\u00f3n Los paquetes se colocan en cola de espera para una transmisi\u00f3n posterior\nComputadora (b)\nFigura 2-38. (a) Conmutaci\u00f3n de circuitos. (b) Conmutaci\u00f3n de paquetes.\n148\nLA CAPA F\u00cdSICA\nCAP. 2\nEn los primeros d\u00edas del tel\u00e9fono, se establec\u00eda la conexi\u00f3n cuando el operador conectaba un cable puenteador en los enchufes de entrada y de salida. Por cierto, existe una peque\u00f1a y sorprendente historia asociada a la invenci\u00f3n del equipo de conmutaci\u00f3n autom\u00e1tica de circuitos: lo invent\u00f3 el due\u00f1o de una funeraria del siglo XIX, un hombre llamado Almon B. Strowger. Poco despu\u00e9s de que se inventara el tel\u00e9fono, cuando alguien mor\u00eda, alguno de los deudos llamaba a la operadora del pueblo y dec\u00eda: \u201cPor favor, comun\u00edqueme con una funeraria\u201d. Desgraciadamente para el se\u00f1or Strowger, hab\u00eda dos funerarias en el pueblo, y la esposa del due\u00f1o de la otra era la operadora de tel\u00e9fonos. Strowger pronto se dio cuenta de que si no inventaba el equipo de conmutaci\u00f3n telef\u00f3nica autom\u00e1tica iba a quedar en bancarrota, as\u00ed que eligi\u00f3 la primera opci\u00f3n. Durante casi 100 a\u00f1os, el equipo de conmutaci\u00f3n de circuitos empleado en todo el mundo se conoci\u00f3 como el aparato de Strowger. (La historia no registra si la ahora desempleada operadora de conmutador obtuvo trabajo como operadora de informaci\u00f3n, contestando preguntas como: \u00bfMe da por favor el n\u00famero de una funeraria?) Desde luego, el modelo que se muestra en la figura 2-39(a) est\u00e1 altamente simplificado, porque partes de la trayectoria de \u201ccobre\u201d entre los dos tel\u00e9fonos pueden ser, de hecho, enlaces de microondas en los cuales se multiplexan miles de llamadas. Sin embargo, la idea b\u00e1sica es v\u00e1lida: una vez que se ha establecido una llamada, existe una trayectoria dedicada entre ambos extremos y continuar\u00e1 existiendo hasta que termine la llamada. La alternativa a la conmutaci\u00f3n de circuitos es la conmutaci\u00f3n de paquetes, que se muestra en la figura 2-38(b). Con esta tecnolog\u00eda, los paquetes individuales se env\u00edan conforme se necesite, y no se les asigna por adelantado ninguna trayectoria dedicada. Una propiedad importante de la conmutaci\u00f3n de circuitos es la necesidad de establecer una trayectoria de un extremo a otro antes de que se pueda enviar cualquier dato. El tiempo que transcurre entre que se termina de marcar y que el timbre comienza a sonar puede ser f\u00e1cilmente de 10 seg, y m\u00e1s en las llamadas de larga distancia o internacionales. Durante este intervalo de tiempo, el sistema telef\u00f3nico busca una trayectoria de cobre, como se muestra en la figura 2-39(a). Observe que antes de que pueda comenzar la transmisi\u00f3n de datos, la se\u00f1al de petici\u00f3n de llamada se debe propagar hasta el destino y se debe confirmar su recepci\u00f3n. En muchas aplicaciones de computadora (por ejemplo, la verificaci\u00f3n de cr\u00e9dito en un punto de venta), los tiempos de establecimiento largos son indeseables. Al existir una trayectoria de cobre entre las partes en comunicaci\u00f3n, una vez que se termina de establecer, el \u00fanico retardo de los datos es el tiempo de propagaci\u00f3n de la se\u00f1al electromagn\u00e9tica, alrededor de 5 mseg por cada 1000 km. Otra ventaja de la trayectoria establecida es que no hay peligro de congesti\u00f3n; es decir, una vez que la llamada entra, no hay posibilidad de obtener una se\u00f1al de ocupado, aunque podr\u00eda obtener una antes de establecer la conexi\u00f3n debido a la falta de capacidad de conmutaci\u00f3n o de troncal. Conmutaci\u00f3n de mensajes Una estrategia de conmutaci\u00f3n alterna es la conmutaci\u00f3n de mensajes que se muestra en la figura 2-39(b). Cuando se usa esta forma de conmutaci\u00f3n, no se establece por adelantado una trayectoria de cobre f\u00edsica entre el emisor y el receptor. En cambio, cuando el emisor tiene un blo-\nSEC. 2.5\n149\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\nSe\u00f1al de solicitud de llamada\nRetardo de propagaci\u00f3n\nPaq. 1 Mensaje\nPaq. 2 Paq. 1 Paq. 3 Paq. 2\nTiempo\nMensaje Tiempo invertido en buscar una troncal de salida\nPaq. 1\nRetardo de encolamiento\nPaq. 3 Paq. 2 Paq. 3\nMensaje Se\u00f1al de aceptaci\u00f3n de llamada\nDatos\nTroncal Troncal Troncal AB BC CD A\nB\nC (a)\nD\nA\nB\nC (b)\nD\nA\nB\nC\nD\n(c)\nFigura 2-39. Tiempos de los eventos en (a) conmutaci\u00f3n de circuitos, (b) conmutaci\u00f3n de mensajes, (c) conmutaci\u00f3n de paquetes.\nque de datos para enviar, \u00e9ste se almacena en la primera oficina de conmutaci\u00f3n (es decir, enrutador) y despu\u00e9s se reenv\u00eda, un salto a la vez. Cada bloque se recibe en su totalidad, se inspecciona en busca de errores y, despu\u00e9s, se retransmite. Una red que utiliza esta t\u00e9cnica se conoce como red de almacenamiento y reenv\u00edo (store and forward ), como se mencion\u00f3 en el cap\u00edtulo 1. Los primeros sistemas de telecomunicaci\u00f3n electromec\u00e1nicos usaban conmutaci\u00f3n de mensajes para enviar telegramas. El mensaje se perforaba en cinta de papel (fuera de l\u00ednea) en la oficina emisora y despu\u00e9s se le\u00eda y transmit\u00eda por una l\u00ednea de comunicaci\u00f3n a la siguiente oficina a lo largo del recorrido, donde se perforaba en cinta de papel. All\u00ed, una operadora arrancaba la cinta de papel y la insertaba en una de las muchas lectoras de cinta, una por cada troncal de salida. Tal oficina de conmutaci\u00f3n se llamaba oficina de arrancado de cinta de papel. La cinta de papel desapareci\u00f3 hace mucho tiempo y la conmutaci\u00f3n de mensajes ya no se utiliza, por lo que ya no la analizaremos en este libro.\n150\nLA CAPA F\u00cdSICA\nCAP. 2\nConmutaci\u00f3n de paquetes Con la conmutaci\u00f3n de mensajes, no hay l\u00edmite para el tama\u00f1o de los bloques, lo que significa que los enrutadores (en un sistema moderno) deben tener discos para almacenar en forma temporal los bloques grandes. Tambi\u00e9n significa que un solo bloque puede acaparar una l\u00ednea de enrutador a enrutador durante minutos, lo que hace in\u00fatil la conmutaci\u00f3n de mensajes para el tr\u00e1fico interactivo. Con el fin de resolver estos problemas se invent\u00f3 la conmutaci\u00f3n de paquetes, como se describi\u00f3 en el cap\u00edtulo 1. Las redes de conmutaci\u00f3n de paquetes establecen un l\u00edmite superior al tama\u00f1o del bloque, lo que permite almacenar los paquetes en la memoria principal del enrutador y no en el disco. Al asegurarse de que ning\u00fan usuario pueda monopolizar una l\u00ednea de transmisi\u00f3n durante mucho tiempo (milisegundos), las redes de conmutaci\u00f3n de paquetes pueden manejar tr\u00e1fico interactivo. En la figura 2-39 (b) y (c) se muestra una ventaja adicional de la conmutaci\u00f3n de paquetes sobre la conmutaci\u00f3n de mensajes: el primer paquete de un mensaje de varios paquetes se puede reenviar antes de que el segundo haya llegado por completo, lo que reduce el retardo y mejora el rendimiento. Por estas razones, las redes de computadoras por lo general son de conmutaci\u00f3n de paquetes, ocasionalmente de conmutaci\u00f3n de circuitos y nunca de conmutaci\u00f3n de mensajes. La conmutaci\u00f3n de circuitos y la de paquetes difieren en muchos aspectos. Para empezar, la conmutaci\u00f3n de circuitos requiere que un circuito se establezca de extremo a extremo antes de que comience la comunicaci\u00f3n. La conmutaci\u00f3n de paquetes no requiere un establecimiento previo. El primer paquete puede simplemente enviarse tan pronto como est\u00e9 disponible. El resultado del establecimiento de conexi\u00f3n mediante la conmutaci\u00f3n de circuito es la reserva de ancho de banda que se realiza desde el emisor hasta el receptor. Todos los paquetes siguen esta trayectoria. Entre otras propiedades, el hecho de que todos los paquetes sigan la misma trayectoria significa que no llegar\u00e1n en desorden a su destino. Con la conmutaci\u00f3n de paquetes no hay trayectoria, por lo que diferentes paquetes pueden seguir trayectorias distintas, dependiendo de las condiciones de la red en el momento en el que se enviaron. Pueden llegar en desorden. La conmutaci\u00f3n de paquetes es m\u00e1s tolerante a las fallas que la conmutaci\u00f3n de circuitos. De hecho, \u00e9sa es la raz\u00f3n por la cual se invent\u00f3. Si falla la conmutaci\u00f3n, todos los circuitos que la est\u00e1n utilizando se cancelan y no se puede enviar nada m\u00e1s a trav\u00e9s de ellos. Con la conmutaci\u00f3n de paquetes, los paquetes pueden enrutarse evitando a los conmutadores averiados. Establecer con antelaci\u00f3n una trayectoria tambi\u00e9n abre la posibilidad de reservar ancho de banda con antelaci\u00f3n. Si se reserva ese ancho de banda, cuando un paquete llega, puede enviarse de manera inmediata a trav\u00e9s de \u00e9l. Con la conmutaci\u00f3n de paquetes no se reserva ning\u00fan ancho de banda, por lo que los paquetes podr\u00edan tener que esperar su turno para ser reenviados. Reservar ancho de banda con antelaci\u00f3n significa que cuando llegue un paquete no habr\u00e1 congesti\u00f3n (a menos de que lleguen m\u00e1s paquetes que los esperados). Por otra parte, cuando se intenta establecer un circuito, el intento puede fallar debido a la congesti\u00f3n. Por lo tanto, la congesti\u00f3n puede ocurrir en diversas ocasiones con la conmutaci\u00f3n de circuitos (al momento del establecimiento) y con la de paquetes (cuando el paquete se env\u00eda). Si un circuito se ha reservado para un usuario en particular y no hay tr\u00e1fico que enviar, el ancho de banda de ese circuito se desperdicia. No se puede utilizar para otro tr\u00e1fico. La conmutaci\u00f3n de paquetes no desperdicia ancho de banda y, por lo tanto, es m\u00e1s eficiente desde el punto de vista del sistema. Entender esta compensaci\u00f3n es crucial para entender la diferencia entre la con-\nSEC. 2.5\nLA RED TELEF\u00d3NICA P\u00daBLICA CONMUTADA\n151\nmutaci\u00f3n de circuitos y la de paquetes. La compensaci\u00f3n est\u00e1 entre un servicio garantizado con desperdicio de recursos contra un servicio no garantizado pero sin desperdicio de recursos. La conmutaci\u00f3n de paquetes utiliza transmisi\u00f3n de almacenamiento y reenv\u00edo. Un paquete se almacena en la memoria del enrutador y luego se reenv\u00eda al siguiente enrutador. Con la conmutaci\u00f3n de paquetes los bits simplemente fluyen de manera continua a trav\u00e9s del cable. La t\u00e9cnica de almacenamiento y reenv\u00edo agrega retardo. Otra diferencia es que la conmutaci\u00f3n de circuitos es totalmente transparente. El emisor y el receptor pueden usar cualquier tasa de transmisi\u00f3n, formato o m\u00e9todo de entramado de bits que quieran. La empresa portadora no lo sabe ni le interesa. Con la conmutaci\u00f3n de paquetes la empresa portadora determina los par\u00e1metros b\u00e1sicos. Una analog\u00eda burda ser\u00eda comparar un camino con una v\u00eda de tren. En el primero, el usuario determina el tama\u00f1o, la velocidad y la naturaleza del veh\u00edculo; en la v\u00eda del tren esto lo hace el prestador de servicios. Esta transparencia es la que hace posible que coexistan voz, datos y fax dentro del sistema telef\u00f3nico. Una diferencia final entre la conmutaci\u00f3n de circuitos y la de paquetes es el algoritmo de cobro. En la conmutaci\u00f3n de circuitos, el cobro se ha basado hist\u00f3ricamente en la distancia y el tiempo. En el caso de los tel\u00e9fonos m\u00f3viles, la distancia, por lo general, no es importante, excepto cuando se trata de llamadas internacionales, y el tiempo tiene poca importancia (por ejemplo, un plan de llamadas con 2000 minutos libres cuesta m\u00e1s que uno con 1000 minutos libres y algunas veces las llamadas de noche o de fin de semana son m\u00e1s baratas de lo normal). En el caso de la conmutaci\u00f3n de paquetes, el tiempo de conexi\u00f3n no es un problema, pero con frecuencia el volumen del tr\u00e1fico s\u00ed lo es. Por lo general, los ISPs (proveedores de servicios de Internet) cargan a los usuarios dom\u00e9sticos una tarifa mensual porque es m\u00e1s sencillo y sus clientes pueden entender este modelo con mayor facilidad, pero las empresas portadoras de red dorsal realizan cargos a las redes regionales con base en el volumen de su tr\u00e1fico. Las diferencias se resumen en la figura 2-40. Elemento\nConmutaci\u00f3n de circuitos\nConmutaci\u00f3n de paquetes\nEstablecimiento de llamada\nRequerido\nNo es necesario\nTrayectoria f\u00edsica detallada\nS\u00ed\nNo\nCada paquete puede seguir la misma trayectoria\nS\u00ed\nNo\nLos paquetes llegan en orden\nS\u00ed\nNo\nEs una falla de conmutaci\u00f3n fatal\nS\u00ed\nNo\nAncho de banda disponible\nFijo\nDin\u00e1mico\nCu\u00e1ndo puede haber congesti\u00f3n\nDurante el establecimiento\nEn cada paquete\nAncho de banda potencialmente desperdiciado\nS\u00ed\nNo\nTransmisi\u00f3n de almacenamiento y reenv\u00edo\nNo\nS\u00ed\nTransparencia\nS\u00ed\nNo\nCargos\nPor minuto\nPor paquete\nFigura 2-40. Comparaci\u00f3n de redes de conmutaci\u00f3n de circuitos y conmutaci\u00f3n de paquetes.\nTanto la conmutaci\u00f3n de circuitos como la de paquetes son tan importantes que regresaremos a ellas dentro de poco y describiremos en detalle las diversas tecnolog\u00edas que se usan.\n152\nLA CAPA F\u00cdSICA\nCAP. 2\n2.6 EL SISTEMA TELEF\u00d3NICO M\u00d3VIL El sistema telef\u00f3nico tradicional (incluso aunque alg\u00fan d\u00eda llegar\u00e1 a utilizar la fibra de extremo a extremo de m\u00faltiples gigabits) no podr\u00e1 satisfacer un grupo creciente de usuarios: personas en movimiento. Los usuarios ahora esperan realizar llamadas telef\u00f3nicas desde aviones, autom\u00f3viles, albercas y mientras corren en el parque. Dentro de algunos a\u00f1os tambi\u00e9n esperar\u00e1n poder enviar correo electr\u00f3nico y navegar por Web desde cualquiera de las ubicaciones antes mencionadas, entre muchas otras cosas. En consecuencia, hay demasiado inter\u00e9s en la telefon\u00eda inal\u00e1mbrica. En las siguientes secciones estudiaremos este tema con mayor detalle. Los tel\u00e9fonos inal\u00e1mbricos se dividen en dos categor\u00edas b\u00e1sicas: tel\u00e9fonos inal\u00e1mbricos y tel\u00e9fonos m\u00f3viles (algunas veces llamados tel\u00e9fonos celulares). Los primeros son dispositivos que consisten en una estaci\u00f3n base y un tel\u00e9fono que se venden en conjunto para utilizarse dentro de una casa. \u00c9stos nunca se utilizan para conectividad de redes, por lo que no los trataremos m\u00e1s. En su lugar nos concentraremos en el sistema m\u00f3vil, que se utiliza para la comunicaci\u00f3n de datos y voz de \u00e1rea amplia. Los tel\u00e9fonos m\u00f3viles han pasado por tres generaciones distintas, con tecnolog\u00edas diferentes: 1. Voz anal\u00f3gica. 2. Voz digital. 3. Voz y datos digitales (Internet, correo electr\u00f3nico, etc\u00e9tera). Aunque la mayor parte de nuestro an\u00e1lisis se concentra en la tecnolog\u00eda de estos sistemas, es interesante mencionar c\u00f3mo es que las decisiones pol\u00edticas y de publicidad pueden tener un gran impacto. El primer sistema m\u00f3vil fue dise\u00f1ado en Estados Unidos por AT&T y regulado por la FCC. Como resultado, Estados Unidos ten\u00eda un solo sistema (anal\u00f3gico), y un tel\u00e9fono celular comprado en California tambi\u00e9n funcionaba en Nueva York. En contraste, cuando el sistema m\u00f3vil apareci\u00f3 en Europa, cada pa\u00eds dise\u00f1\u00f3 su propio sistema, lo cual fue un fracaso. Europa aprendi\u00f3 de su error y cuando aparecieron los sistemas digitales, los PTTs a cargo del gobierno se unieron y estandarizaron un solo sistema (GSM), por lo que cualquier tel\u00e9fono m\u00f3vil europeo funcionar\u00eda en cualquier lugar de Europa. En ese entonces, Estados Unidos decidi\u00f3 que el gobierno no deber\u00eda estar en el negocio de la estandarizaci\u00f3n, por lo que dej\u00f3 la cuesti\u00f3n de los sistemas digitales al mercado. Esta decisi\u00f3n result\u00f3 en diferentes fabricantes que produc\u00edan diferentes tipos de tel\u00e9fonos m\u00f3viles. En consecuencia, Estados Unidos ahora tiene funcionando dos principales sistemas telef\u00f3nicos m\u00f3viles digitales incompatibles (adem\u00e1s de otro menor). A pesar de la ventaja inicial que ten\u00eda Estados Unidos, la posesi\u00f3n y el uso de tel\u00e9fonos m\u00f3viles en Europa ahora es mayor que en Estados Unidos. El hecho de tener un solo sistema para toda Europa es una de las razones, pero hay m\u00e1s. Una segunda parte en la que Europa y Estados Unidos difieren es en la cuesti\u00f3n de los n\u00fameros telef\u00f3nicos. En Estados Unidos los tel\u00e9fonos m\u00f3viles est\u00e1n mezclados con los tel\u00e9fonos (fijos) normales. Por lo tanto, no hay forma de que la persona que llama vea si, digamos, (212)234-5678 es el n\u00famero de un tel\u00e9fono fijo (barato o de\nSEC. 2.6\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n153\nllamada gratis) o uno de tel\u00e9fono m\u00f3vil (llamada costosa). Para que la gente no se asustara de utilizar los tel\u00e9fonos m\u00f3viles, las compa\u00f1\u00edas telef\u00f3nicas decidieron que el due\u00f1o de un tel\u00e9fono m\u00f3vil pague por las llamadas entrantes. En consecuencia, muchas personas dudaron en comprar un tel\u00e9fono m\u00f3vil por miedo a terminar con una gran cuenta por pagar s\u00f3lo por recibir llamadas. En Europa, los n\u00fameros de los tel\u00e9fonos m\u00f3viles tienen un c\u00f3digo de \u00e1rea especial (parecido a los n\u00fameros 800 y 900) por lo que se pueden reconocer al instante. Como resultado la regla com\u00fan de \u201cel que llama paga\u201d tambi\u00e9n se aplica a los tel\u00e9fonos en Europa (excepto en las llamadas internacionales en las que el costo se divide). Un tercer aspecto que ha tenido un gran impacto en la adopci\u00f3n es el amplio uso de los tel\u00e9fonos m\u00f3viles prepagados en Europa (hasta de 75% en algunas \u00e1reas). Pueden comprarse en muchas tiendas de la misma manera que un radio; simplemente se pagan. Se precargan con, digamos, 20 o 50 euros y pueden recargarse (utilizando un c\u00f3digo de PIN secreto) cuando el saldo se acaba. En consecuencia, pr\u00e1cticamente todos los adolescentes y muchos ni\u00f1os de Europa tienen tel\u00e9fonos m\u00f3viles (por lo general, prepagados), y de esta manera sus padres pueden localizarlos sin el peligro de que el ni\u00f1o termine con una cuenta enorme. Si el tel\u00e9fono m\u00f3vil s\u00f3lo se utiliza de vez en cuando, su uso es esencialmente libre debido a que no hay un cargo mensual ni uno por llamadas entrantes.\n2.6.1 Tel\u00e9fonos m\u00f3viles de primera generaci\u00f3n: voz anal\u00f3gica Ya es suficiente sobre los aspectos pol\u00edticos y de marketing de los tel\u00e9fonos celulares. Ahora examinemos a la tecnolog\u00eda, comenzando con el sistema m\u00e1s antiguo. Los radiotel\u00e9fonos m\u00f3viles se utilizaban de forma espor\u00e1dica para comunicaci\u00f3n mar\u00edtima y militar durante las primeras d\u00e9cadas del siglo XX. En 1946, el primer sistema de tel\u00e9fonos instalado en autos se construy\u00f3 en St. Louis. Este sistema utilizaba un solo transmisor grande colocado en la parte superior de un edificio y ten\u00eda un solo canal que serv\u00eda para enviar y recibir. Para hablar, el usuario ten\u00eda que oprimir un bot\u00f3n que habilitaba el transmisor e inhabilitaba el receptor. Tales sistemas, conocidos como sistemas de oprimir para hablar, se instalaron en algunas ciudades desde finales de la d\u00e9cada de 1950. El radio de banda civil (CB), los taxis y las patrullas policiacas en programas de televisi\u00f3n a veces usan esta tecnolog\u00eda. En la d\u00e9cada de 1960 se instal\u00f3 el IMTS (Sistema Mejorado de Telefon\u00eda M\u00f3vil). Tambi\u00e9n utilizaba un transmisor de alta potencia (200 watts), en la cima de una colina, pero ten\u00eda dos frecuencias, una para enviar y otra para recibir, por lo que el bot\u00f3n de oprimir para hablar ya no era necesario. Puesto que toda la comunicaci\u00f3n desde los tel\u00e9fonos m\u00f3viles entraba por un canal diferente del que recib\u00edan los tel\u00e9fonos emisores, los usuarios m\u00f3viles no pod\u00edan escucharse unos a otros (a diferencia del sistema de oprimir para hablar empleado en los taxis). IMTs manejaba 23 canales dispersos desde 150 hasta 450 MHz. Debido al n\u00famero tan peque\u00f1o de canales, los usuarios a veces ten\u00edan que esperar bastante tiempo antes de obtener el tono de marcar. Adem\u00e1s, debido a la gran potencia del transmisor en la cima de la colina, los sistemas adyacentes ten\u00edan que estar alejados varios cientos de kil\u00f3metros para evitar la interferencia. Considerando todo, el sistema no era pr\u00e1ctico debido a su capacidad limitada.\n154\nLA CAPA F\u00cdSICA\nCAP. 2\nSistema Avanzado de Telefon\u00eda M\u00f3vil Todo cambi\u00f3 con AMPS (Sistema Avanzado de Telefon\u00eda M\u00f3vil), inventado por los Laboratorios Bell e instalado por primera vez en Estados Unidos en 1982. Este sistema tambi\u00e9n se utiliz\u00f3 en Inglaterra, donde se llam\u00f3 TACS, y en Jap\u00f3n, donde se llam\u00f3 MCS-L1. Aunque no es lo \u00faltimo en tecnolog\u00eda, lo analizaremos, pues muchas de sus propiedades fundamentales han sido heredadas por su sucesor digital, D-AMPS, con el fin de tener compatibilidad hacia atr\u00e1s. En todos los sistemas de telefon\u00eda m\u00f3vil, una regi\u00f3n geogr\u00e1fica se divide en celdas, raz\u00f3n por la cual los dispositivos se conocen como tel\u00e9fonos celulares. En AMPS, las celdas normalmente tienen de 10 a 20 km de di\u00e1metro; en los sistemas digitales, las celdas son m\u00e1s peque\u00f1as. Cada celda utiliza un conjunto de frecuencias que no es utilizada por ninguno de sus vecinos. La idea clave que confiere a los sistemas celulares m\u00e1s capacidad que todos los sistemas anteriores es el uso de celdas relativamente peque\u00f1as y la reutilizaci\u00f3n de las frecuencias de transmisi\u00f3n en celdas cercanas (pero no adyacentes). Mientras que un sistema IMTS de 100 km de alcance puede tener una llamada en cada frecuencia, un sistema AMPS podr\u00eda tener 100 celdas de 10 km en la misma \u00e1rea con 5 a 10 llamadas en cada frecuencia en celdas muy separadas. Por lo tanto, el dise\u00f1o celular incrementa la capacidad del sistema en un orden de magnitud conforme las celdas se hacen m\u00e1s peque\u00f1as en su \u00e1rea de cobertura. Adem\u00e1s, al ser las celdas m\u00e1s peque\u00f1as se necesita menor potencia, lo cual conduce a dispositivos m\u00e1s peque\u00f1os y econ\u00f3micos. Los tel\u00e9fonos de bolsillo tienen una salida de 0.6 watts; los transmisores en los autom\u00f3viles normalmente son de 3 watts, el m\u00e1ximo permitido por la FCC. La idea de reutilizar frecuencias se ilustra en la figura 2-41(a). Por lo general, las celdas son casi circulares, pero es m\u00e1s f\u00e1cil modelarlas como hex\u00e1gonos. En la figura 2-41(a), las celdas son del mismo tama\u00f1o y est\u00e1n agrupadas en unidades de siete celdas. Cada letra indica un grupo de frecuencias. Observe que para cada conjunto de frecuencias hay un espacio de alrededor de dos celdas de ancho en el que esa frecuencia no se reutiliza, proporcionando buena separaci\u00f3n y baja interferencia. Encontrar localidades elevadas para colocar antenas de estaci\u00f3n base es un problema importante. Este problema ha llevado a algunas empresas portadoras de telecomunicaciones a forjar alianzas con la Iglesia Cat\u00f3lica Romana, puesto que \u00e9sta posee un n\u00famero sustancial de sitios potenciales para antenas en todo el mundo, todos convenientemente bajo una administraci\u00f3n \u00fanica. En un \u00e1rea en la que la cantidad de usuarios ha crecido tanto que el sistema est\u00e1 sobrecargado, la potencia se reduce y las celdas sobrecargadas se dividen en microceldas para permitir una mayor reutilizaci\u00f3n de las frecuencias, como se muestra en la figura 2-41 (a). Las compa\u00f1\u00edas telef\u00f3nicas algunas veces crean microceldas temporales, utilizando torres portables con enlaces de sat\u00e9lite, en eventos deportivos, conciertos de rock y otros lugares donde un gran n\u00famero de usuarios m\u00f3viles se congrega por algunas horas. Qu\u00e9 tan grandes deben ser las celdas es un tema complejo, y se trata en (Hac, 1995). En el centro de cada celda est\u00e1 la estaci\u00f3n base a la cual transmiten todos los tel\u00e9fonos de la celda. La estaci\u00f3n base consiste en una computadora y un transmisor/receptor conectado a una antena. En un sistema peque\u00f1o, todas las estaciones base se conectan a un mismo dispositivo llamado MTSO (Oficina de Conmutaci\u00f3n de Telefon\u00eda M\u00f3vil) o MSC (Centro de Conmutaci\u00f3n M\u00f3vil).\nSEC. 2.6\n155\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n(a)\n(b)\nFigura 2-41. (a) Las frecuencias no se reutilizan en celdas adyacentes. (b) Para a\u00f1adir m\u00e1s usuarios se pueden usar celdas m\u00e1s peque\u00f1as.\nEn un sistema grande pueden ser necesarias varias MTSOs, las cuales se conectan a una MTSO de segundo nivel, y as\u00ed sucesivamente. Las MTSOs son esencialmente oficinas centrales como en un sistema telef\u00f3nico y, de hecho, est\u00e1n conectadas a por lo menos una oficina central del sistema telef\u00f3nico. Las MTSOs se comunican con las estaciones base, con otras MTSOs y con la PSTN mediante una red de conmutaci\u00f3n de paquetes. En cualquier instante cada tel\u00e9fono m\u00f3vil est\u00e1 en una celda espec\u00edfica y bajo el control de la estaci\u00f3n base de esa celda. Cuando un tel\u00e9fono m\u00f3vil sale de una celda, su estaci\u00f3n base nota que la se\u00f1al telef\u00f3nica se desvanece o pregunta a todas las estaciones base circundantes cu\u00e1nta potencia est\u00e1n recibiendo de ella. A continuaci\u00f3n, la estaci\u00f3n base transfiere la posesi\u00f3n a la celda que est\u00e1 recibiendo la se\u00f1al m\u00e1s fuerte, esto es, la celda donde se localiza ahora el tel\u00e9fono. Se informa entonces al tel\u00e9fono cu\u00e1l es su nueva base y, si est\u00e1 efectuando una llamada, se le pide que cambie a un nuevo canal (porque el antiguo no se reutiliza en ninguna celda adyacente). Este proceso, llamado transferencia de celda (cell handoff ), tarda cerca de 300 mseg. La asignaci\u00f3n de canal es realizada por la MTSO, que es el centro neur\u00e1lgico del sistema. Las estaciones base s\u00f3lo son retransmisoras de radio. Las transferencias de celda pueden realizarse de dos maneras. En la transferencia suave de celda (soft handoff ), el tel\u00e9fono es adquirido mediante la nueva estaci\u00f3n base antes de que las primeras terminen. De esta manera, no hay p\u00e9rdida de continuidad. La desventaja es que el tel\u00e9fono necesita estar disponible para sintonizar dos frecuencias al mismo tiempo (la anterior y la nueva). Ni los dispositivos de primera generaci\u00f3n ni los de segunda pueden hacer esto. En la transferencia dura de celda (hard handoff ) la antigua estaci\u00f3n base deja el tel\u00e9fono antes de que la nueva lo adquiera. Si la nueva no puede adquirirlo (por ejemplo, debido a que no hay frecuencia disponible), la llamada se termina de manera abrupta. Los usuarios suelen notar esto, pero con el dise\u00f1o actual es inevitable que suceda en ocasiones.\n156\nLA CAPA F\u00cdSICA\nCAP. 2\nCanales El sistema AMPS emplea 832 canales d\u00faplex, cada uno compuesto por un par de canales s\u00edmplex. Hay 832 canales de transmisi\u00f3n s\u00edmplex desde 824 hasta 849 MHz, y 832 canales de recepci\u00f3n s\u00edmplex desde 869 hasta 894 MHz. Cada uno de estos canales s\u00edmplex es de 30 kHz de ancho; por lo tanto, AMPS usa FDM para separar los canales. En la banda de 800 MHz, las ondas de radio son de cerca de 40 cm de largo y viajan en l\u00ednea recta; son absorbidas por \u00e1rboles y plantas y rebotan en el suelo y los edificios. Es posible que una se\u00f1al enviada por un tel\u00e9fono m\u00f3vil llegue a la estaci\u00f3n base por una trayectoria directa, pero tambi\u00e9n con un peque\u00f1o retardo despu\u00e9s de rebotar en el suelo o en un edificio. Esto puede producir un efecto de eco o de distorsi\u00f3n de la se\u00f1al (desvanecimiento de m\u00faltiples trayectorias). A veces es posible incluso o\u00edr una conversaci\u00f3n distante que ha rebotado varias veces. Los 832 canales se dividen en cuatro categor\u00edas: 1. Control (base a m\u00f3vil) para administrar el sistema. 2. Localizaci\u00f3n (base a m\u00f3vil) para avisar a usuarios m\u00f3viles que tienen llamadas. 3. Acceso (bidireccional) para establecimiento de llamadas y asignaci\u00f3n de canales. 4. Datos (bidireccional) para voz, fax o datos. Veinti\u00fan canales se reservan para control, y est\u00e1n fijos dentro de un PROM en cada tel\u00e9fono. Puesto que las mismas frecuencias no pueden reutilizarse en celdas cercanas, la cantidad real de canales de voz disponibles por c\u00e9lula es mucho menor que 832, normalmente cerca de 45. Administraci\u00f3n de llamadas Cada tel\u00e9fono m\u00f3vil en AMPS tiene un n\u00famero de serie de 32 bits y un n\u00famero telef\u00f3nico de 10 d\u00edgitos en su PROM. El n\u00famero de tel\u00e9fono se representa como un c\u00f3digo de \u00e1rea de 3 d\u00edgitos, en 10 bits, y un n\u00famero de suscriptor de 7 d\u00edgitos, en 24 bits. Cuando un tel\u00e9fono se enciende, examina una lista preprogramada de 21 canales de control para encontrar la se\u00f1al m\u00e1s potente. A continuaci\u00f3n, el tel\u00e9fono difunde su n\u00famero de serie de 32 bits y su n\u00famero de tel\u00e9fono de 34 bits. Al igual que toda la informaci\u00f3n de control de AMPS, este paquete se env\u00eda en forma digital varias veces y con c\u00f3digo de correcci\u00f3n de errores, aunque los canales de voz mismos son anal\u00f3gicos. Cuando la estaci\u00f3n base oye el anuncio, avisa a la MTSO, la cual registra la existencia de su nuevo cliente y tambi\u00e9n informa a la MTSO local del cliente de su ubicaci\u00f3n actual. Durante el funcionamiento normal, el tel\u00e9fono m\u00f3vil se vuelve a registrar cada 15 minutos aproximadamente. Para hacer una llamada, un usuario m\u00f3vil enciende el tel\u00e9fono, teclea el n\u00famero al que desea llamar y oprime el bot\u00f3n de Enviar. El tel\u00e9fono env\u00eda entonces el n\u00famero al que se va a llamar y su propia identidad por el canal de acceso. Si ocurre una colisi\u00f3n, lo intenta nuevamente m\u00e1s tarde.\nSEC. 2.6\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n157\nCuando la estaci\u00f3n base recibe la petici\u00f3n, informa a la MTSO. Si el que llama es un cliente de la compa\u00f1\u00eda de la MTSO (o uno de sus socios), la MTSO busca un canal desocupado para la llamada; si encuentra uno, el n\u00famero de canal se env\u00eda de regreso por el canal de control. A continuaci\u00f3n, el tel\u00e9fono m\u00f3vil se conecta en forma autom\u00e1tica con el canal de voz seleccionado y espera hasta que la persona llamada levante el tel\u00e9fono. Las llamadas entrantes funcionan de forma diferente. Para empezar, todos los tel\u00e9fonos desocupados escuchan continuamente el canal de aviso para detectar mensajes dirigidos a ellos. Cuando se hace una llamada a un tel\u00e9fono m\u00f3vil (ya sea desde un tel\u00e9fono fijo o alg\u00fan otro tel\u00e9fono m\u00f3vil), se env\u00eda un paquete a la MTSO local del destinatario de la llamada para averiguar d\u00f3nde se encuentra. Luego se env\u00eda un paquete a la estaci\u00f3n base de su celda actual, la cual realiza una difusi\u00f3n por el canal de aviso de la forma: \u201cunidad 14, \u00bfest\u00e1 ah\u00ed?\u201d A continuaci\u00f3n el tel\u00e9fono llamado responde con \u201cS\u00ed\u201d por el canal de control. Enseguida, la base dice algo como: \u201cunidad 14, tiene llamada por el canal 3\u201d. En este punto, el tel\u00e9fono llamado conmuta al canal 3 y empieza a timbrar.\n2.6.2 Tel\u00e9fonos m\u00f3viles de segunda generaci\u00f3n: voz digital La primera generaci\u00f3n de tel\u00e9fonos m\u00f3viles fue anal\u00f3gica; la segunda fue digital. Al igual que no hubo estandarizaci\u00f3n mundial en la primera generaci\u00f3n, tampoco la hubo en la segunda. En la actualidad hay cuatro sistemas en uso: D-AMPS, GSM, CDMA y PDC. A continuaci\u00f3n analizaremos las primeras tres. PDC s\u00f3lo se utiliza en Jap\u00f3n y b\u00e1sicamente es un D-AMPS modificado para compatibilidad hacia atr\u00e1s con el sistema anal\u00f3gico japon\u00e9s de primera generaci\u00f3n. A veces se utiliza el nombre PCS (Servicios de Comunicaciones Personales) para indicar el sistema de segunda generaci\u00f3n (es decir, el digital). Originalmente denotaba un tel\u00e9fono m\u00f3vil que utilizaba la banda de 1900 MHz, pero en la actualidad esa distinci\u00f3n se emplea raramente. D-AMPS\u2014El Sistema Avanzado de Telefon\u00eda M\u00f3vil Digital La segunda generaci\u00f3n de los sistemas AMPS es D-AMPS y es completamente digital. Se describe en el est\u00e1ndar internacional IS-54 y en su sucesor IS-136. D-AMPS se dise\u00f1\u00f3 con mucho cuidado para que pudiera coexistir con AMPS, a fin de que tanto los tel\u00e9fonos m\u00f3viles de primera generaci\u00f3n como los de segunda pudieran funcionar de manera simult\u00e1nea en la misma celda. En particular, D-AMPS utiliza los mismos canales a 30 kHz que AMPS y a las mismas frecuencias a fin de que un canal pueda ser anal\u00f3gico y los adyacentes, digitales. Dependiendo de la mezcla de tel\u00e9fonos en las celdas, la MTSO de la celda determina cu\u00e1les canales son anal\u00f3gicos y cu\u00e1les digitales, y puede cambiar tipos de canales de manera din\u00e1mica conforme cambie la mezcla de canales en una celda. Cuando D-AMPS fue introducido como un servicio, se puso disponible una nueva banda de frecuencia para manejar la carga esperada creciente. Los canales ascendentes estaban en el rango de 1850-1910 MHz, y los canales descendentes correspondientes estaban en el rango de 19301990 MHz, nuevamente en pares, como en AMPS. En esta banda, las ondas son de 16 cm de\n158\nLA CAPA F\u00cdSICA\nCAP. 2\nlongitud, por lo que una antena de onda est\u00e1ndar de 1/4 es de s\u00f3lo 4 cm de longitud, lo que da tel\u00e9fonos m\u00e1s peque\u00f1os. Sin embargo, muchos tel\u00e9fonos D-AMPS pueden utilizar tanto las bandas de 850-MHz como las de 1900-MHz para obtener una gama m\u00e1s amplia de canales disponibles. En un tel\u00e9fono m\u00f3vil D-AMPS, la se\u00f1al de voz capturada por el micr\u00f3fono se digitaliza y comprime utilizando un modelo m\u00e1s refinado que los esquemas de modulaci\u00f3n delta y de codificaci\u00f3n de predicci\u00f3n que analizamos anteriormente. La compresi\u00f3n toma en cuenta propiedades del sistema de voz humano para obtener el ancho de banda de la codificaci\u00f3n PCM est\u00e1ndar de 56 a 8 kbps o menos. La compresi\u00f3n se crea mediante un circuito llamado vocoder (Bellamy, 2000). La compresi\u00f3n se realiza en el tel\u00e9fono, en lugar de en la estaci\u00f3n base o en la oficina central, para reducir el n\u00famero de bits que se env\u00edan a trav\u00e9s del enlace de aire. Con la telefon\u00eda fija, no hay beneficio de hacer que la compresi\u00f3n se realice en el tel\u00e9fono, debido a que la reducci\u00f3n del tr\u00e1fico a trav\u00e9s del circuito local no incrementa la capacidad del sistema. Con la telefon\u00eda m\u00f3vil hay una gran ganancia al realizar la digitalizaci\u00f3n y compresi\u00f3n en el tel\u00e9fono, tanto que en D-AMPS tres usuarios pueden compartir un solo par de frecuencias que utilicen la multiplexi\u00f3n por divisi\u00f3n de tiempo. Cada par de frecuencia maneja 25 tramas/seg de 40 mseg cada uno. Adem\u00e1s, cada trama se divide en seis ranuras de tiempo de 6.67 mseg cada una, como se muestra en la figura 2-42(a), para el par de frecuencia m\u00e1s bajo.\nTrama TDM de 40 mseg\nTrama TDM de 40 mseg\nFlujo ascendente\nTel\u00e9fono m\u00f3vil a base de 1850.01 MHz\nTel\u00e9fono m\u00f3vil a base de 1850.01 MHz\nFlujo descendente\nBase a tel\u00e9fono m\u00f3vil de 1930.05 MHz\nBase a tel\u00e9fono m\u00f3vil de 1930.05 MHz\nRanura de 324 bits: 64 bits de control 101 bits de correcci\u00f3n de errores 159 bits de datos de voz (a)\n(b)\nFigura 2-42. (a) Un canal D-AMPS con tres usuarios. (b) Un canal D-AMPS con seis usuarios.\nCada trama mantiene tres usuarios que se turnan para utilizar los enlaces ascendente y descendente. Por ejemplo, durante la ranura 1 de la figura 2-42(a), el usuario 1 podr\u00eda transmitir a la estaci\u00f3n base y el usuario 3 recibir de ella. Cada ranura tiene un tama\u00f1o de 324 bits de longitud, de los cuales 64 se utilizan para prop\u00f3sitos de protecci\u00f3n, sincronizaci\u00f3n y control, y los 260 restantes para la carga \u00fatil del usuario. De \u00e9stos, 101 se utilizan para la correcci\u00f3n de errores a trav\u00e9s del enlace de aire con ruido, por lo que a final de cuentas s\u00f3lo 159 bits se dejan para la voz comprimida. Con 50 ranuras/seg, el ancho de banda disponible para la voz comprimida est\u00e1 por debajo de s\u00f3lo 8 kbps, que es 1/7 del ancho de banda est\u00e1ndar PCM.\nSEC. 2.6\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n159\nAl utilizar mejores algoritmos de compresi\u00f3n, es posible obtener la voz por debajo de 4 kbps, en cuyo caso seis usuarios pueden agruparse en una trama, como se ilustra en la figura 2-42(b). Desde el punto de vista del operador, poder comprimir de tres a seis veces tantos usuarios de D-AMPS en el mismo espectro que uno de AMPS es una gran ganancia y explica el porqu\u00e9 de la popularidad de PCS. Por supuesto, la calidad de voz a 4 kbps no se compara con lo que se podr\u00eda alcanzar a 56 kbps, pero muy pocos operadores de PCS anuncian su calidad de sonido de alta fidelidad. Tambi\u00e9n debe quedar claro que para datos, un canal de 8 kbps no es tan bueno como un m\u00f3dem antiguo de 9600 bps. La estructura de control de D-AMPS es bastante complicada. En resumen, una supertrama est\u00e1 formada por grupos de 16 tramas y, algunas veces, cada supertrama tiene cierta informaci\u00f3n de control. Se utilizan seis canales principales de control: configuraci\u00f3n del sistema, control en tiempo real y en tiempo no real, localizaci\u00f3n, respuesta de acceso y mensajes cortos. Pero de manera conceptual, funciona como AMPS. Cuando se enciende un tel\u00e9fono m\u00f3vil, hace contacto con la estaci\u00f3n base para anunciarse a s\u00ed mismo y despu\u00e9s escucha un canal de control para llamadas entrantes. Una vez que ha captado un nuevo tel\u00e9fono m\u00f3vil, la MTSO informa a la base dom\u00e9stica del usuario d\u00f3nde est\u00e1, y de esta manera las llamadas se pueden enrutar en forma correcta. Una diferencia entre AMPS y D-AMPS es la manera en que se maneja la transferencia de celdas. En AMPS, la MTSO la maneja por completo sin ayuda de los dispositivos m\u00f3viles. Como se puede ver en la figura 2-42, en D-AMPS, durante 1/3 del tiempo un tel\u00e9fono m\u00f3vil no necesita enviar ni recibir. Utiliza estas ranuras inactivas para medir la calidad de la l\u00ednea. Cuando descubre que la se\u00f1al se debilita, se queja con la MTSO, la cual a continuaci\u00f3n interrumpe la conexi\u00f3n, en cuyo momento el tel\u00e9fono m\u00f3vil trata de sintonizar una se\u00f1al m\u00e1s fuerte desde otra estaci\u00f3n base. Como en AMPS, le toma 300 mseg realizar la transferencia de celda. Esta t\u00e9cnica se conoce como MAHO (Transferencia Asistida M\u00f3vil de Celda). GSM\u2014Sistema Global para Comunicaciones M\u00f3viles D-AMPS es ampliamente utilizado en Estados Unidos y (en una forma modificada) en Jap\u00f3n. Casi a nivel mundial, se utiliza un sistema llamado GSM (Sistema Global para Comunicaciones M\u00f3viles), e incluso se est\u00e1 comenzando a utilizar en Estados Unidos en una escala limitada. Para una primera aproximaci\u00f3n, GSM es similar a D-AMPS. Los dos son sistemas celulares. En ambos se utiliza la multiplexi\u00f3n por divisi\u00f3n de frecuencia, en el que cada dispositivo m\u00f3vil transmite en una frecuencia y recibe en una frecuencia mayor (80 MHz m\u00e1s arriba para D-AMPS, 55 MHz m\u00e1s arriba para GSM). Adem\u00e1s, en los dos sistemas, se utiliza la multiplexi\u00f3n por divisi\u00f3n de tiempo para dividir un solo par de frecuencia en ranuras de tiempo compartidas por m\u00faltiples tel\u00e9fonos m\u00f3viles. Sin embargo, los canales GSM son mucho m\u00e1s anchos que los AMPS (200 kHz en comparaci\u00f3n con 30 kHz) y almacenan relativamente pocos usuarios (8 en comparaci\u00f3n con 3), lo que da a GSM una tasa de datos mucho m\u00e1s grande por usuario que D-AMPS. A continuaci\u00f3n describiremos brevemente algunas de las propiedades principales de GSM. Sin embargo, el est\u00e1ndar impreso GSM tiene cerca de 5000 p\u00e1ginas. Gran parte de este material se relaciona con los aspectos de ingenier\u00eda del sistema, especialmente de los receptores para\n160\nLA CAPA F\u00cdSICA\nCAP. 2\nmanejar la propagaci\u00f3n de se\u00f1al de m\u00faltiples trayectorias, y la sincronizaci\u00f3n de transmisores y receptores. Nada de esto se mencionar\u00e1 en el siguiente an\u00e1lisis. Cada banda de frecuencia tiene una longitud de 200 kHz, como se muestra en la figura 2-43. Un sistema GSM tiene 124 pares de canales s\u00edmplex. Cada uno de ellos tiene una longitud de 200 kHz y maneja ocho conexiones por separado, mediante la multiplexi\u00f3n por divisi\u00f3n de tiempo. A cada estaci\u00f3n actualmente activa se le asigna una ranura de tiempo en el par de canal. En teor\u00eda, en cada celda se pueden manejar hasta 992 canales, aunque muchos de ellos no est\u00e1n disponibles, para evitar conflictos de frecuencia con las celdas vecinas. En la figura 2-43 las ocho ranuras de tiempo sombreadas pertenecen a la misma conexi\u00f3n, pero en cada direcci\u00f3n hay s\u00f3lo cuatro. La transmisi\u00f3n y la recepci\u00f3n no suceden en la misma ranura de tiempo porque los radios GSM no pueden transmitir y recibir al mismo tiempo, adem\u00e1s de que toma algo de tiempo cambiar de una a otra. Si la estaci\u00f3n m\u00f3vil a la que se le asign\u00f3 890.4/935.4 MHz y la ranura de tiempo 2 desea transmitir a la estaci\u00f3n base, podr\u00eda utilizar las cuatro ranuras de tiempo inferiores sombreadas (y las que le sigan), y colocar datos en cada ranura hasta que se hayan enviado todos los datos. Trama TDM\nCanal\nFrecuencia\nBase a tel\u00e9fono m\u00f3vil\nTel\u00e9fono m\u00f3vil a base\nTiempo\nFigura 2-43. GSM utiliza 124 canales de frecuencia, cada uno de los cuales utiliza un sistema TDM de ocho ranuras.\nLas ranuras TDM que se muestran en la figura 2-43 son parte de una jerarqu\u00eda compleja de entramado. Cada ranura TDM tiene una estructura espec\u00edfica, as\u00ed como grupos de ranuras TDM de multitrama, que tambi\u00e9n tienen una estructura espec\u00edfica. En la figura 2-44 se muestra una versi\u00f3n simplificada de esta jerarqu\u00eda. Observe que una ranura TDM consiste en tramas de datos de 148 bits que ocupan el canal por 577 \u03bcseg (incluyendo un tiempo de protecci\u00f3n o guarda de 30 seg despu\u00e9s de cada ranura). Cada trama de datos inicia y termina con tres bits 0, para prop\u00f3sitos de delineaci\u00f3n de trama. Tambi\u00e9n contiene dos campos de informaci\u00f3n de 57 bits, cada uno de los cuales tiene un bit de control que indica si el siguiente campo de informaci\u00f3n es para voz o para datos. Entre los campos de informaci\u00f3n hay un campo de sincronizaci\u00f3n de 26 bits (entrenamiento) que es utilizado por el receptor para sincronizar los l\u00edmites de la trama del emisor.\nSEC. 2.6\n161\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL Multitrama de 32,500 bits enviada en 120 mseg\nTrama TDM de 1250 bits enviada en 4.615 mseg\nTrama de datos de 148 bits enviada en 547 \u03bcseg Informaci\u00f3n\nSincronizaci\u00f3n\nReservado para uso futuro\nTiempo de protecci\u00f3n de 8.25 bits (30 \u03bcseg)\nInformaci\u00f3n\nBits Bit de voz/datos\nFigura 2-44. Parte de la estructura de entramado GSM.\nUna trama de datos se transmite en 547 \u03bcseg, pero un transmisor s\u00f3lo tiene permitido enviar una trama de datos cada 4.615 mseg, debido a que comparte el canal con otras siete estaciones. La tasa bruta de cada canal es de 270,833 bps, dividida entre ocho usuarios. Esto da un total de 33.854 kbps, m\u00e1s del doble que los 324 bits 50 veces por segundo de 16.2 kbps de D-AMPS. Sin embargo, al igual que con AMPS, la informaci\u00f3n adicional consume una fracci\u00f3n grande del ancho de banda, lo que finalmente deja 24.7 kbps de carga \u00fatil por usuario antes de la correcci\u00f3n de errores. Despu\u00e9s de \u00e9sta, se dejan 13 kbps para voz, lo que da una calidad de voz sustancialmente mejor que D-AMPS (pero con el costo de utilizar de manera correspondiente m\u00e1s ancho de banda). C\u00f3mo puede ver en la figura 2-44, ocho tramas de datos forman una trama TDM y 26 tramas TDM forman una multitrama de 120 mseg. De las 26 tramas TDM de una multitrama, se utiliza la ranura 12 para el control y la 25 se reserva para uso futuro, de manera que s\u00f3lo 24 tramas est\u00e1n disponibles para el tr\u00e1fico del usuario. Sin embargo, adem\u00e1s de la multitrama de 26 ranuras mostrado en la figura 2-44, tambi\u00e9n se utiliza una multitrama de 51 ranuras (que no se muestra). Algunas de estas ranuras se utilizan para almacenar algunos canales de control utilizados para manejar el sistema. El canal de control de difusi\u00f3n es un flujo continuo de salida de la estaci\u00f3n base que contiene la identidad de la estaci\u00f3n base, as\u00ed como el estado del canal. Todas las estaciones m\u00f3viles supervisan su fuerza de se\u00f1al para ver cu\u00e1ndo se han movido a una nueva celda. El canal dedicado de control se utiliza para actualizaci\u00f3n de localizaci\u00f3n, registro y establecimiento de llamada. En particular, cada estaci\u00f3n base mantiene una base de datos de las estaciones m\u00f3viles actualmente bajo su jurisdicci\u00f3n. La informaci\u00f3n necesaria para mantener esta base de datos se env\u00eda en el canal dedicado de control. Por \u00faltimo, hay un canal de control com\u00fan, que se divide en tres subcanales l\u00f3gicos. El primero de estos subcanales es el canal de localizaci\u00f3n, que la estaci\u00f3n base utiliza para anunciar\n162\nLA CAPA F\u00cdSICA\nCAP. 2\nllamadas entrantes. Cada estaci\u00f3n m\u00f3vil lo supervisa continuamente en busca de llamadas a las que deber\u00eda responder. El segundo es el canal de acceso aleatorio, que permite que los usuarios soliciten una ranura del canal dedicado de control. Si dos peticiones chocan, se distorsionan y se tienen que volver a realizar m\u00e1s tarde. La estaci\u00f3n puede establecer una llamada utilizando la ranura del canal dedicado de control. La ranura asignada es anunciada en el tercer subcanal, el canal de otorgamiento de acceso. CDMA\u2014Acceso M\u00faltiple por Divisi\u00f3n de C\u00f3digo D-AMPS y GSM son sistemas muy convencionales. Utilizan tanto FDM como TDM para dividir el espectro en canales y \u00e9stos en ranuras de tiempo. Sin embargo, hay un tercer sistema, CDMA (Acceso M\u00faltiple por Divisi\u00f3n de C\u00f3digo), que trabaja de una forma completamente diferente. Cuando CDMA fue inicialmente propuesto, la industria tuvo casi la misma reacci\u00f3n que la reina Isabel cuando Col\u00f3n propuso llegar a la India navegando por una ruta diferente. Sin embargo, debido a la persistencia de una compa\u00f1\u00eda, Qualcomm, CDMA ha madurado al punto en el que no s\u00f3lo es aceptable, sino que ahora se ve como la mejor soluci\u00f3n t\u00e9cnica existente y como la base para los sistemas m\u00f3viles de la tercera generaci\u00f3n. Tambi\u00e9n se utiliza ampliamente en Estados Unidos en los sistemas m\u00f3viles de segunda generaci\u00f3n, y compite de frente con D-AMPS. Por ejemplo, Sprint PCS utiliza CDMA, mientras que AT&T Wireless utiliza D-AMPS. CDMA se describe en el International Standard IS-95 y algunas veces se hace referencia a \u00e9l mediante ese nombre. Tambi\u00e9n se utiliza el nombre cdmaOne. CDMA es completamente diferente de AMPS, D-AMPS y GSM. En lugar de dividir el rango de frecuencia permitida en algunos cientos de canales estrechos, CDMA permite que cada estaci\u00f3n transmita todo el tiempo a trav\u00e9s de todo el espectro de frecuencia. Se utiliza la teor\u00eda de codificaci\u00f3n para separar m\u00faltiples transmisiones simult\u00e1neas. CDMA no supone que las tramas que colisionan son totalmente distorsionadas. En su lugar, asume que se agregan m\u00faltiples se\u00f1ales en forma lineal. Antes de adentrarnos en el algoritmo, consideremos una analog\u00eda: una sala de espera de un aeropuerto con muchas parejas de personas conversando. TDM se compara con todas las personas que est\u00e1n en medio de la sala pero que esperan su turno para hablar. FDM se compara con las personas que est\u00e1n en grupos separados ampliamente, y cada grupo tiene su propia conversaci\u00f3n al mismo tiempo, aunque de manera independiente, que los otros. CDMA se compara con el hecho de que todas las personas est\u00e9n en medio de la sala hablando al mismo tiempo, pero cada pareja hablando en un lenguaje diferente. La pareja que habla franc\u00e9s se concentra en el franc\u00e9s, rechazando todo lo que no sea franc\u00e9s como si fuera ruido. Por lo tanto, la clave de CDMA es tener la capacidad de extraer la se\u00f1al deseada y rechazar todo lo dem\u00e1s como ruido aleatorio. A continuaci\u00f3n se da una descripci\u00f3n algo simplificada de CDMA. En CDMA, cada tiempo de bit se subdivide en m intervalos cortos llamados chips. Por lo general, hay 64 o 128 chips por bit, pero en el ejemplo que se da a continuaci\u00f3n por simplicidad utilizaremos 8 chips/bit. A cada estaci\u00f3n se le asigna un c\u00f3digo \u00fanico de m bits llamado secuencia de chip. Para transmitir un bit 1, una estaci\u00f3n env\u00eda su secuencia de chips. Para transmitir un bit 0, env\u00eda el comple-\nSEC. 2.6\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n163\nmento de uno de su secuencia de chips. No se permiten otros patrones. Por lo tanto, para m = 8, si a la estaci\u00f3n A se le asigna la secuencia de chips 00011011, env\u00eda un bit 1 mediante el env\u00edo de 00011011 y un bit 0 mediante el env\u00edo de 11100100. El incremento de la cantidad de informaci\u00f3n que se va a enviar de b bits/seg a mb chips/seg s\u00f3lo puede realizarse si el ancho de banda disponible se incrementa por un factor de m, lo que hace de CDMA una forma de comunicaciones de espectro disperso (suponiendo que no haya cambios en las t\u00e9cnicas de codificaci\u00f3n o modulaci\u00f3n). Si tenemos una banda de 1 MHz disponible para 100 estaciones, con FDM cada una tendr\u00eda 10 kHz y podr\u00eda enviarse a 10 kbps (suponiendo 1 bit por Hz). Con CDMA, cada estaci\u00f3n utiliza completamente el megahertzio, por lo que la tasa de chips es de 1 megachip por segundo. Con menos de 100 chips por bit, el ancho de banda efectivo por estaci\u00f3n es mayor para CDMA que FDM, y el problema de asignaci\u00f3n de canal se resuelve. Para prop\u00f3sitos de ense\u00f1anza, es m\u00e1s conveniente utilizar una notaci\u00f3n bipolar, donde el 0 binario es \u22121 y el 1 es +1. Mostraremos las secuencias de chips entre par\u00e9ntesis, de manera que 1 bit para la estaci\u00f3n A ahora se vuelve (\u22121\u22121\u22121+1+1\u22121+1+1). En la figura 2-45(a) mostramos las secuencias de chips asignadas a cuatro estaciones de ejemplo. En la figura 2-45(b) las mostramos en nuestra notaci\u00f3n bipolar. A: 0 0 0 1 1 0 1 1 B: 0 0 1 0 1 1 1 0 C: 0 1 0 1 1 1 0 0 D: 0 1 0 0 0 0 1 0\nA:(\u22121\u22121\u22121+1+1\u22121+1+1) B:(\u22121\u22121+1\u22121+1+1+1\u22121) C:(\u22121+1\u22121+1+1+1\u22121\u22121) D:(\u22121+1\u22121\u22121\u22121\u22121+1\u22121)\n(a)\n(b)\nSeis ejemplos: \u2212\u22121\u2212 \u221211\u2212 10\u2212\u2212 101\u2212 1111 1101\nC B A A A A\n+ + + + +\nS1 S2 S3 S4 S5 S6\nC B B+C B+C+D B+C+D\n= = = = = =\n(\u22121+1\u22121+1+1+1\u22121\u22121) (\u22122+0\u22120+0+2+2\u22120\u22122) (\u22120+0\u22122+2+0\u22122\u22120+2) (\u22121+1\u22123+3+1\u22121\u22121+1) (\u22124+0\u22122+0+2+0+2\u22122) (\u22122\u22122\u22120\u22122+0\u22122+4\u22120)\n(c) S1 \u2022 S2 \u2022 S3 \u2022 S4 \u2022 S5 \u2022 S6 \u2022\nC C C C C C\n= = = = = =\n(1+1+1+1+1+1+1+1)/8 (2+0+0+0+2+2+0+2)/8 (0+0\u22122+2+0\u22122+0\u22122)/8 (1+1+3+3+1\u22121+1\u22121)/8 (4+0+2+0+2+0\u22122+2)/8 (2\u22122+0\u22122+0\u22122\u22124+0)/8\n=1 =1 =0 =1 =1 = \u22121\n(d)\nFigura 2-45. (a) Secuencias de chips binarios para cuatro estaciones. (b) Secuencias de chips bipolares. (c) Seis ejemplos de transmisiones. (d) Recuperaci\u00f3n de la se\u00f1al s de la estaci\u00f3n C.\nCada estaci\u00f3n tiene su propia y \u00fanica secuencia de bits. Utilicemos el s\u00edmbolo S para indicar el vector de m chips para la estaci\u00f3n S, y S para su negaci\u00f3n. Todas las secuencias de chips son\n164\nLA CAPA F\u00cdSICA\nCAP. 2\nortogonales y apareadas, lo cual quiere decir que el producto interno normalizado de cualquiera de dos secuencias distintas de chips, S y T (escritas como S\u2022T), es 0. Tales secuencias ortogonales de chips se pueden generar utilizando un m\u00e9todo conocido como c\u00f3digo de Walsh. En t\u00e9rminos matem\u00e1ticos, la ortogonalidad de las secuencias de chips se puede expresar como se muestra a continuaci\u00f3n: m S\u2022T 1 \u2211 SiTi 0 m i=1\n(2-4)\nEn t\u00e9rminos simples, entre m\u00e1s parecidos sean los pares, m\u00e1s diferentes ser\u00e1n. Esta propiedad de ortogonalidad ser\u00e1 crucial m\u00e1s adelante. Observe que si S\u2022T = 0, entonces S\u2022T tambi\u00e9n es 0. El producto interno normalizado de cualquier secuencia de chips por s\u00ed misma es 1: m m m S\u2022S 1 \u2211 Si Si 1 \u2211 S 2i 1 \u2211 ( 1)2 1 m i=1 m i=1 m i=1\nEsto contin\u00faa porque cada uno de los t\u00e9rminos m del producto interno es 1, por lo que la suma es m. Adem\u00e1s, observe que S\u2022S = \u22121. Durante cada tiempo de bit, una estaci\u00f3n puede transmitir un 1 enviando su secuencia de chips, puede transmitir un 0 enviando el negativo de su secuencia de chips, o puede quedarse en silencio y no transmitir nada. Por el momento, asumimos que todas las estaciones est\u00e1n sincronizadas, por lo que todas las secuencias de chips comienzan al mismo tiempo. Cuando dos o m\u00e1s estaciones transmiten de manera simult\u00e1nea, sus se\u00f1ales bipolares se agregan de manera lineal. Por ejemplo, si en un periodo de chips tres estaciones env\u00edan +1 y una estaci\u00f3n env\u00eda \u22121, el resultado es +2. Uno podr\u00eda pensar que esto es como agregar voltaje: tres estaciones enviando +1 voltio y una estaci\u00f3n enviando \u22121 voltio da un total de 2 voltios. En la figura 2-45(c) vemos seis ejemplos de una o m\u00e1s estaciones que transmiten al mismo tiempo. En el primer ejemplo, C transmite un bit 1, por lo que simplemente obtenemos la secuencia de chips de C. En el segundo ejemplo, tanto B como C transmiten bits 1, por lo que obtenemos la suma de sus secuencias de chips bipolares, principalmente: (\u22121\u22121+1\u22121+1+1+1\u22121) + (\u22121+1\u22121+1+1+1\u22121\u22121) = (\u22122 0 0 0+2+2 0\u22122) En el tercer ejemplo, la estaci\u00f3n A env\u00eda un 1 y la estaci\u00f3n B env\u00eda un 0. Las dem\u00e1s est\u00e1n calladas. En el cuarto ejemplo, A y C env\u00edan un 1 mientras que B env\u00eda un bit 0. En el quinto ejemplo, todas las estaciones env\u00edan un bit 1. Finalmente, en el \u00faltimo ejemplo, A, B y D env\u00edan un bit 1, mientras que C env\u00eda un bit 0. Observe que cada una de las secuencias S1 a S6 que se dan en la figura 2-45(c) s\u00f3lo representa un tiempo de bit. Para recuperar el flujo de bits de una estaci\u00f3n individual, el receptor debe conocer con anticipaci\u00f3n la secuencia de chips de esa estaci\u00f3n. Realiza la recuperaci\u00f3n calculando el producto interno normalizado de la secuencia de chips recibida (la suma lineal de todas las estaciones que transmitieron) y la secuencia de chips de la estaci\u00f3n cuyo flujo de bits se est\u00e1 tratando de recuperar. Si la secuencia de chips recibida es S y el receptor est\u00e1 tratando de escuchar en una estaci\u00f3n cuya secuencia de chips es C, simplemente calcula el producto interno normalizado, S\u2022C.\nSEC. 2.6\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n165\nPara ver por qu\u00e9 funciona esto, simplemente imagine que dos estaciones, A y C, transmiten un bit 1 al mismo tiempo que B transmite un bit 0. El receptor ve la suma S = A + B + C y calcula B\u2022C + C\u2022C = 0 + 0 + 1 = 1 S\u2022C = (A + B + C)\u2022C = A\u2022C + Los primeros dos t\u00e9rminos desaparecen porque todos los pares de secuencias de chips han sido cuidadosamente elegidas para ser ortogonales, como se muestra en la ecuaci\u00f3n 2-4. Ahora ya deber\u00eda ser claro por qu\u00e9 esta propiedad debe imponerse en las secuencias de bits. Un punto de vista alterno acerca de esta situaci\u00f3n es imaginar que las tres secuencias vienen por separado, en lugar de sumadas. Despu\u00e9s, el receptor podr\u00eda calcular el producto interno con cada uno por separado y sumar los resultados. Debido a la propiedad ortogonal, todos los productos internos, excepto C\u2022C ser\u00edan 0. Sumar los productos internos y luego calcularlos es lo mismo que calcularlos y luego sumarlos. Para hacer m\u00e1s concreto el proceso de decodificaci\u00f3n, consideremos nuevamente los seis ejemplos de la figura 2-45(c), como se ilustra en la figura 2-45(d). Suponga que el receptor est\u00e1 interesado en extraer el bit enviado por la estaci\u00f3n C de cada una de las seis sumas S1 a S6. Calcula el bit sumando los productos apareados de la S recibida y del vector C de la figura 2-45(b) y, despu\u00e9s, tomando 1/8 del resultado (debido a que aqu\u00ed m = 8). Como se muestra, el bit correcto es decodificado cada vez. Es como hablar franc\u00e9s. En un sistema CDMA ideal y libre de ruido, es posible hacer que la capacidad (es decir, el n\u00famero de estaciones) sea arbitrariamente grande, de la misma manera en que lacapacidad de un canal Nyquist sin ruido puede hacerse grande de manera arbitraria utilizando m\u00e1s y m\u00e1s bits por muestra. En la pr\u00e1ctica, las limitaciones f\u00edsicas reducen la capacidad en forma considerable. Primero, hemos asumido que todos los chips est\u00e1n sincronizados. En la realidad, tal sincronizaci\u00f3n es imposible. Lo que puede hacerse es que el emisor y el receptor se sincronicen haciendo que el emisor transmita una secuencia predefinida de chips que sea lo suficientemente grande para que el receptor pueda detectarla. En consecuencia, todas las dem\u00e1s transmisiones (sin sincronizar) se consideran ruido aleatorio. Sin embargo, si no hay muchas de ellas, el algoritmo b\u00e1sico de decodificaci\u00f3n a\u00fan funciona bien. Existe bastante literatura que describe la superposici\u00f3n de las secuencias de chips a nivel de ruido (Pickholtz y cols., 1982). Como se podr\u00eda esperar, entre mayor sea la secuencia de chips, mayor ser\u00e1 la probabilidad de detectarla de manera correcta en caso de que haya ruido. Para una mayor confiabilidad, la secuencia de bits puede usar un c\u00f3digo de correcci\u00f3n de errores. Las secuencias de chips nunca utilizan c\u00f3digos de correcci\u00f3n de errores. Una suposici\u00f3n impl\u00edcita en nuestro an\u00e1lisis es que los niveles de potencia de todas las estaciones son los mismos que el receptor capt\u00f3. Por lo general, CDMA se utiliza para sistemas inal\u00e1mbricos con una estaci\u00f3n base fija y muchas estaciones m\u00f3viles a distancias distintas de ella. Los niveles de potencia recibidos en la estaci\u00f3n base dependen de qu\u00e9 tan lejos est\u00e9n los transmisores. Una buena heur\u00edstica aqu\u00ed es que cada estaci\u00f3n m\u00f3vil transmita a la estaci\u00f3n base con una magnitud de potencia inversa a la que recibe de la estaci\u00f3n base. En otras palabras, una estaci\u00f3n m\u00f3vil que reciba una se\u00f1al d\u00e9bil de la estaci\u00f3n base utilizar\u00e1 m\u00e1s potencia que una que reciba una se\u00f1al fuerte. La estaci\u00f3n base tambi\u00e9n puede dar \u00f3rdenes expl\u00edcitas a las estaciones m\u00f3viles para incrementar o decrementar su potencia de transmisi\u00f3n.\n166\nLA CAPA F\u00cdSICA\nCAP. 2\nTambi\u00e9n hemos dado por hecho que el receptor sabe qui\u00e9n es el emisor. Al principio, contando con suficiente capacidad, el receptor puede escuchar al mismo tiempo a todos los emisores mediante la ejecuci\u00f3n paralela del algoritmo de decodificaci\u00f3n para cada uno de ellos. En la realidad, esto es m\u00e1s f\u00e1cil de decir que de hacer. CDMA tambi\u00e9n tiene otros aspectos complicados que se han pasado por alto en esta breve introducci\u00f3n. A pesar de todo, CDMA es un esquema brillante y se est\u00e1 introduciendo r\u00e1pidamente en la comunicaci\u00f3n inal\u00e1mbrica m\u00f3vil. Por lo general, funciona en una banda de 1.25 MHz (en comparaci\u00f3n con los 30 kHz de D-AMPS y los 200 kHz de GSM), pero maneja muchos m\u00e1s usuarios en esa banda que cualquiera de los otros sistemas. En la pr\u00e1ctica, el ancho de banda disponible para cada usuario es tan bueno como el disponible en GSM y, con frecuencia, mejor. Para un entendimiento muy profundo de CDMA, vea (Lee y Miller, 1998). Un esquema disperso alterno, en donde la dispersi\u00f3n se realiza a trav\u00e9s del tiempo en lugar de la frecuencia, se describe en (Crespo y cols., 1995). Otro esquema m\u00e1s se describe en (Sari y cols., 2000). Todas estas referencias requieren conocimientos de ingenier\u00eda de comunicaciones.\n2.6.3 Tel\u00e9fonos m\u00f3viles de tercera generaci\u00f3n: voz y datos digitales \u00bfCu\u00e1l es el futuro de la telefon\u00eda m\u00f3vil? Echemos un vistazo. Hay algunos factores que est\u00e1n impulsando a la industria. Primero, el tr\u00e1fico de datos ya excede el tr\u00e1fico de voz en la red fija y est\u00e1 creciendo de manera exponencial, mientras que el tr\u00e1fico de voz es en esencia plano. Muchos expertos de la industria esperan que muy pronto el tr\u00e1fico de datos domine la voz en dispositivos m\u00f3viles. Segundo, las industrias telef\u00f3nica, de entretenimiento y de c\u00f3mputo han adoptado formatos digitales y est\u00e1n convergiendo r\u00e1pidamente. Muchas personas est\u00e1n deseosas de un dispositivo portable y ligero que act\u00fae como tel\u00e9fono, reproductor de CDs, reproductor de DVDs, terminal de correo electr\u00f3nico, interfaz para Web, m\u00e1quina de juegos, procesador de texto, etc\u00e9tera, todo con conectividad inal\u00e1mbrica a Internet en todo el mundo con un ancho de banda alto. Este dispositivo y c\u00f3mo conectarlo es de lo que trata la telefon\u00eda m\u00f3vil de tercera generaci\u00f3n. Para mayor informaci\u00f3n, vea (Huber y cols., 2000, y Sarikaya, 2000). En 1992, la ITU trat\u00f3 de llevar a cabo este sue\u00f1o y cre\u00f3 un dise\u00f1o para alcanzarlo, llamado IMT-2000. IMT son las siglas de Telecomunicaciones M\u00f3viles Internacionales. Se le agreg\u00f3 el n\u00famero 2000 por tres razones: (1) era el a\u00f1o en que se supon\u00eda deber\u00eda funcionar, (2) era a la frecuencia a la que se supon\u00eda que trabajar\u00eda (en MHz) y (3) era el ancho de banda que el servicio deber\u00eda tener (en kHz). No cumpli\u00f3 con nada de lo anterior. En el 2000 no se implement\u00f3 nada. La ITU recomend\u00f3 que todos los gobiernos reservaran espectro de 2 GHz a fin de que los dispositivos pudieran llevarse a cualquier pa\u00eds y funcionaran a la perfecci\u00f3n. China reserv\u00f3 el ancho de banda requerido pero nadie m\u00e1s lo hizo. Por \u00faltimo, se admiti\u00f3 que 2 Mbps no son factibles para usuarios que se desplazan mucho (debido a la dificultad de realizar transferencias de celdas con la rapidez necesaria). Los 2 Mbps son m\u00e1s factibles para usuarios fijos (lo cual podr\u00e1 competir con ADSL), 384 kbps para usuarios a pie y 144 kbps para conexiones en autom\u00f3viles. Sin embargo, el \u00e1rea completa de 3G, como se ha llamado, es un gran caldero de actividad. La tercera generaci\u00f3n podr\u00eda ser menor y llegar m\u00e1s tarde de lo que originalmente se esperaba, pero seguramente suceder\u00e1.\nSEC. 2.6\nEL SISTEMA TELEF\u00d3NICO M\u00d3VIL\n167\nLos servicios b\u00e1sicos que se supone que la red IMT-2000 proporcionar\u00e1 a sus usuarios son: 1. Transmisi\u00f3n de voz de alta calidad. 2. Mensajer\u00eda (lo cual reemplazar\u00e1 al correo electr\u00f3nico, a los faxes, a SMS, a los salones de conversaci\u00f3n, etc\u00e9tera). 3. Multimedia (reproducir m\u00fasica, ver v\u00eddeos, pel\u00edculas, televisi\u00f3n, etc\u00e9tera). 4. Acceso a Internet (navegar por Web, incluyendo p\u00e1ginas con audio y v\u00eddeo). Otros servicios adicionales podr\u00edan ser la videoconferencia, la telepresencia, los juegos en grupo y el comercio m\u00f3vil (pasar su tel\u00e9fono por el cajero para pagar en una tienda). Adem\u00e1s, se supone que todos estos servicios est\u00e9n disponibles a nivel mundial (con conexi\u00f3n autom\u00e1tica v\u00eda sat\u00e9lite cuando no se encuentre una red terrestre), de manera instant\u00e1nea (siempre conectado) y con garant\u00eda de calidad de servicio. La ITU visualiz\u00f3 una tecnolog\u00eda sencilla a nivel mundial para IMT-2000, de manera que los fabricantes pudieran construir un solo dispositivo que pudiera venderse y utilizarse en cualquier parte del mundo (similar a un reproductor de CDs y las computadoras, y diferente de los tel\u00e9fonos y televisiones m\u00f3viles). Tener una sola tecnolog\u00eda tambi\u00e9n podr\u00eda facilitar la vida de los operadores de red y alentar\u00eda a m\u00e1s personas a utilizar los servicios. Las guerras de formato, como la batalla entre Beta y VHS cuando aparecieron por primera vez las videograbadoras, no son buenas para los negocios. Se realizaron varias propuestas y, despu\u00e9s de varias selecciones, aparecieron las dos principales. La primera, W-CDMA (CDMA de Banda Ancha), fue propuesta por Ericsson. Este sistema utiliza espectro disperso de secuencia directa del tipo que describimos anteriormente. Se ejecuta en una banda ancha de 5 MHz y se ha dise\u00f1ado para interactuar con redes GSM aunque no tiene compatibilidad hacia atr\u00e1s con GSM. Sin embargo, tiene la propiedad de que el invocador puede salir de una celda W-CDMA y entrar a una celda GSM sin perder la llamada. Este sistema fue impulsado por la Uni\u00f3n Europea, que lo llam\u00f3 UMTS (Sistema Universal de Telecomunicaciones M\u00f3viles). El otro contendiente era CDMA2000, propuesto por Qualcomm. \u00c9ste tambi\u00e9n es un dise\u00f1o de espectro disperso de secuencia directa, b\u00e1sicamente una extensi\u00f3n de IS-95 y es compatible hacia atr\u00e1s con \u00e9l. Tambi\u00e9n utiliza un ancho de banda de 5-MHz, pero no ha sido dise\u00f1ado para interactuar con GSM y no puede entregar llamadas a una celda GSM (ni a una celda DAMPS). Algunas de las diferencias t\u00e9cnicas con respecto a W-CDMA son las siguientes: una tasa de chips diferente, un tiempo de trama diferente, se utiliza un espectro diferente y la sincronizaci\u00f3n de tiempo se realiza de una manera diferente. Si los ingenieros de Ericsson y de Qualcomm se reunieran en un cuarto y se les pidiera que crearan un dise\u00f1o com\u00fan, tal vez lo podr\u00edan hacer. Despu\u00e9s de todo, el principio detr\u00e1s de ambos sistemas es CDMA en un canal de 5 MHz y nadie est\u00e1 dispuesto a morir por esta tasa de chips elegida. El problema real no es la ingenier\u00eda, sino las pol\u00edticas (lo usual). Europa quer\u00eda un sistema que pudiera interactuar con GSM; Estados Unidos quer\u00eda un sistema que fuera compatible con uno que ya se distribu\u00eda ampliamente en Estados Unidos (IS-95). Cada lado tambi\u00e9n\n168\nLA CAPA F\u00cdSICA\nCAP. 2\nmanten\u00eda su compa\u00f1\u00eda local (Ericsson se encuentra en Suecia; Qualcomm en California). Por \u00faltimo, Ericsson y Qualcomm se involucraron en numerosas demandas por sus respectivas patentes de CDMA. En marzo de 1999, las dos compa\u00f1\u00edas resolvieron los problemas legales cuando Ericsson estuvo de acuerdo en comprar la infraestructura de Qualcomm. Tambi\u00e9n estaban de acuerdo en un est\u00e1ndar sencillo 3G, con m\u00faltiples opciones incompatibles, que en gran parte simplemente disfraza las diferencias t\u00e9cnicas. A pesar de estas disputas, los dispositivos y servicios de 3G probablemente comiencen a aparecer en los a\u00f1os venideros. Se ha escrito mucho acerca de los sistemas 3G, la mayor parte los describen como lo mejor desde el pan en rebanadas. Algunas referencias son (Collins y Smith, 2001; De Vriendt y cols., 2002; Harte y cols., 2002; Lu, 2002, y Sarikaya, 2000). Sin embargo, algunos disidentes piensan que la industria est\u00e1 apuntando en la direcci\u00f3n equivocada (Garber, 2002, y Goodman, 2000). Mientras se espera que termine la batalla por 3G, algunos operadores est\u00e1n dando cautelosamente un peque\u00f1o paso en direcci\u00f3n a 3G al ir a lo que algunas veces se llama 2.5G, aunque 2.1G ser\u00eda m\u00e1s preciso. Tal sistema es EDGE (Tasa de Datos Mejorada para la Evoluci\u00f3n del GSM), que simplemente es GSM con m\u00e1s bits por baudio. El problema es que m\u00e1s bits por baudio tambi\u00e9n significan m\u00e1s errores por baudio, por lo que EDGE tiene nueve esquemas diferentes para modulaci\u00f3n y correcci\u00f3n de errores, que difieren en la cantidad de ancho de banda que se dedica a arreglar los errores introducidos por la velocidad m\u00e1s alta. Otro esquema de 2.5G es GPRS (Servicio de Radio de Paquetes Generales), que es una red de paquetes superpuestos encima de D-AMPS o GSM. Permite que las estaciones m\u00f3viles env\u00eden y reciban paquetes IP en una celda que se ejecuta en un sistema de voz. Cuando GPRS est\u00e1 en operaci\u00f3n, algunas ranuras de tiempo en algunas frecuencias se reservan para el tr\u00e1fico de paquetes. La estaci\u00f3n base puede manejar de manera din\u00e1mica el n\u00famero y la ubicaci\u00f3n de las ranuras de tiempo, dependiendo de la tasa de voz sobre el tr\u00e1fico de datos de la celda. Las ranuras de tiempo disponibles se dividen en varios canales l\u00f3gicos, utilizados para prop\u00f3sitos diferentes. La estaci\u00f3n base determina qu\u00e9 canales l\u00f3gicos se asignan en qu\u00e9 ranuras de tiempo. Un canal l\u00f3gico se utiliza para bajar paquetes de la estaci\u00f3n base a algunas estaciones m\u00f3viles, y cada paquete indica a qui\u00e9n va destinado. Para enviar un paquete IP, una estaci\u00f3n m\u00f3vil solicita una o m\u00e1s ranuras de tiempo enviando una petici\u00f3n a la estaci\u00f3n base. Si la petici\u00f3n llega sin da\u00f1o alguno, la estaci\u00f3n base anuncia la frecuencia y las ranuras de tiempo asignadas al m\u00f3vil para enviar el paquete. Una vez que el paquete llega a la estaci\u00f3n base, se transfiere a Internet mediante una conexi\u00f3n de cable. Puesto que GPRS s\u00f3lo es una superposici\u00f3n en el sistema de voz existente, es en el mejor de los casos una medida provisional hasta que llegue 3G. Aunque las redes 3G a\u00fan no se han distribuido ampliamente, algunos investigadores consideran a 3G como un asunto terminado y ya no est\u00e1n interesados. Estas personas ahora trabajan en sistemas 4G (Berezdivin y cols., 2002; Guo y Chaskar, 2002; Huang y Zhuang, 2002; Kellerer y cols., 2002, y Misra y cols., 2002). Entre las caracter\u00edsticas propuestas de los sistemas 4G se encuentran un ancho de banda alto, ubicuidad (conectividad en cualquier lado), integraci\u00f3n perfecta con redes de cable y especialmente IP, manejo de espectro y de recursos adaptable, radios de software y alta calidad de servicio para multimedia.\nSEC. 2.7\n169\nTELEVISI\u00d3N POR CABLE\nPor otro lado, se est\u00e1n estableciendo tantos puntos de acceso a LANs inal\u00e1mbricas 802.11 por todos lados, que algunas personas piensan que 3G no solamente no es un asunto terminado, sino que est\u00e1 condenado al fracaso. Bajo esta \u00f3ptica, las personas ir\u00e1n de un punto de acceso 802.11 a otro para mantenerse conectados. Decir que la industria est\u00e1 en medio de un intenso proceso de cambio es poco. Echemos un vistazo en cinco a\u00f1os para ver qu\u00e9 pasa.\n2.7 TELEVISI\u00d3N POR CABLE Hemos estudiado tanto los sistemas inal\u00e1mbricos como los fijos con suficiente detalle. Ambos jugar\u00e1n un papel importante en las redes futuras. Sin embargo, hay una alternativa para la conectividad de redes fija que est\u00e1 tomando mucha importancia: las redes de televisi\u00f3n por cable. Muchas personas ya tienen su tel\u00e9fono y servicio de Internet a trav\u00e9s de cable, y los operadores de cable est\u00e1n trabajando arduamente para incrementar su participaci\u00f3n de mercado. En las siguientes secciones analizaremos con detalle a la televisi\u00f3n por cable como un sistema de conectividad de redes y lo compararemos con los sistemas telef\u00f3nicos que acabamos de estudiar. Para mayor informaci\u00f3n sobre el cable, vea (Laubach y cols., 2001; Louis, 2002; Ovadia, 2001, y Smith, 2002).\n2.7.1 Televisi\u00f3n por antena comunal La televisi\u00f3n por cable se concibi\u00f3 en la \u00faltima parte de la d\u00e9cada de 1940 como una forma de proporcionar mejor recepci\u00f3n a las personas que viven en las \u00e1reas rurales o monta\u00f1osas. El sistema consisti\u00f3 inicialmente en una antena grande en la cima de una colina para captar la se\u00f1al de televisi\u00f3n, un amplificador, llamado amplificador head end, para reforzarla y un cable coaxial para enviarla a las casas de las personas, como se ilustra en la figura 2-46.\nAntena para captar se\u00f1ales distantes Amplificador head end\nCable de derivaci\u00f3n\nToma de se\u00f1al o derivador\nFigura 2-46. Sistema de televisi\u00f3n por cable antiguo.\nCable coaxial\n170\nLA CAPA F\u00cdSICA\nCAP. 2\nEn sus primeros a\u00f1os, la televisi\u00f3n por cable fue llamada televisi\u00f3n por antena comunal. Era un negocio familiar; cualquiera que fuera h\u00e1bil con la electr\u00f3nica pod\u00eda establecer un servicio para su comunidad, y los usuarios pod\u00edan pagarlo en conjunto. Conforme el n\u00famero de suscriptores crec\u00eda, se un\u00edan cables adicionales al cable original y se agregaban amplificadores. La transmisi\u00f3n era de una v\u00eda, del amplificador head end a los usuarios. En 1970 ya exist\u00edan miles de sistemas independientes. En 1974, Time, Inc. inici\u00f3 un nuevo canal, Home Box Office, con contenido nuevo (pel\u00edculas) y que se distribu\u00eda s\u00f3lo por cable. Le siguieron otros canales que se transmit\u00edan s\u00f3lo por cable y cuyo contenido eran noticias, deportes, cocina entre muchos otros. Este desarrollo dio origen a dos cambios en la industria. Primero, las grandes compa\u00f1\u00edas comenzaron a comprar sistemas de cable existentes e instalar nuevo cable para adquirir m\u00e1s suscriptores. Segundo, surgi\u00f3 la necesidad de conectar m\u00faltiples sistemas, por lo general en ciudades distantes, para distribuir los nuevos canales por cable. Las compa\u00f1\u00edas de cable comenzaron a instalar cable entre ciudades para conectarlas en un solo sistema. Este patr\u00f3n fue similar a lo que pas\u00f3 en la industria telef\u00f3nica 80 a\u00f1os antes con la conexi\u00f3n de las oficinas centrales locales previamente aisladas para hacer posible las llamadas de larga distancia.\n2.7.2 Internet a trav\u00e9s de cable A trav\u00e9s de los a\u00f1os, el sistema de televisi\u00f3n por cable creci\u00f3 y los cables entre las distintas ciudades se reemplazaron por fibra de ancho de banda alto, de manera similar a lo que sucedi\u00f3 con el sistema telef\u00f3nico. Un sistema con fibra para distancias considerables y cable coaxial para las casas se conoce como sistema HFC (Red H\u00edbrida de Fibra \u00d3ptica y Cable Coaxial). Los convertidores electro\u00f3pticos que interact\u00faan entre las partes \u00f3ptica y el\u00e9ctrica del sistema se llaman nodos de fibra. Debido a que el ancho de banda de la fibra es mucho mayor al del cable coaxial, un nodo de fibra puede alimentar m\u00faltiples cables coaxiales. En la figura 2-47(a) se muestra parte de un sistema moderno HFC. En los a\u00f1os recientes, muchos operadores de cable han decidido entrar al negocio de acceso a Internet y con frecuencia tambi\u00e9n al de la telefon\u00eda. Sin embargo, las diferencias t\u00e9cnicas entre la planta de cable y la de telefon\u00eda tiene mucho que ver con respecto a lo que se tiene que hacer para alcanzar esas metas. Por un lado, todos los amplificadores de una v\u00eda del sistema tienen que reemplazarse por amplificadores de dos v\u00edas. Sin embargo, hay otra diferencia entre el sistema HFC de la figura 2-47(a) y el sistema telef\u00f3nico de la figura 2-47(b) que es m\u00e1s dif\u00edcil eliminar. En los vecindarios, muchas casas comparten un solo cable, mientras que en el sistema telef\u00f3nico, cada casa tiene su propio circuito local privado. Cuando se emplea en la difusi\u00f3n de televisi\u00f3n, esta compartici\u00f3n no tiene importancia. Todos los programas se difunden a trav\u00e9s del cable y no importa si hay diez o tres o 10,000 televidentes. Cuando el mismo cable se utiliza para el acceso a Internet, el hecho de que haya 10 o 10,000 usuarios tiene mucha importancia. Si un usuario decide descargar un archivo muy grande, ese ancho de banda se les resta a otros usuarios. Entre m\u00e1s usuarios haya, habr\u00e1 m\u00e1s competencia por el ancho de banda. El sistema telef\u00f3nico no tiene esta propiedad particular: descargar un\nSEC. 2.7\nConmutador\n171\nTELEVISI\u00d3N POR CABLE Troncal de fibra de ancho de banda alto\nCable coaxial Nodo de fibra\nAmplificador head end Casa\nToma de se\u00f1al o derivador\nFibra\nOficina interurbana\nTroncal de fibra de ancho de banda alto\nOficina central local\nCircuito local\nCasa\nFibra Cable de par trenzado de cobre\nFigura 2-47. (a) Televisi\u00f3n por cable. (b) El sistema telef\u00f3nico fijo.\narchivo grande a trav\u00e9s de una l\u00ednea ADSL no reduce el ancho de banda del vecino. Por otra parte, el ancho de banda del cable coaxial es mucho mayor que el del cable de par trenzado. La forma en que la industria del cable ha abordado este problema es dividiendo los cables largos y conect\u00e1ndolos directamente al nodo de fibra. El ancho de banda que el amplificador head end proporciona a cada nodo de fibra es infinito; por lo tanto, siempre y cuando no haya demasiados suscriptores en cada segmento del cable, la cantidad de tr\u00e1fico ser\u00e1 manejable. En la actualidad, los cables t\u00edpicos tienen de 500\u20132000 casas, pero entre m\u00e1s y m\u00e1s gente se suscribe a Internet a trav\u00e9s de cable, la carga podr\u00eda volverse demasiada, lo que requerir\u00eda m\u00e1s divisiones y m\u00e1s nodos de fibra.\n172\nLA CAPA F\u00cdSICA\nCAP. 2\n2.7.3 Asignaci\u00f3n de espectro\nFrecuencias ascendentes\nDatos ascendentes\nDeshacerse de todos los canales de TV y utilizar la infraestructura de cable tan s\u00f3lo para el acceso a Internet tal vez generar\u00eda una cantidad considerable de clientes iracundos, por lo que las compa\u00f1\u00edas de cable dudan en hacer esto. Adem\u00e1s, la mayor\u00eda de las ciudades regulan estrictamente lo que hay en el cable, por lo que podr\u00eda no permitirse que los operadores de cable hagan esto aunque realmente deseen hacerlo. Como consecuencia, necesitan encontrar una manera de que las televisiones e Internet coexistan en el mismo cable. Los canales de televisi\u00f3n por cable en Norteam\u00e9rica normalmente ocupan la regi\u00f3n de 54\u2013550 MHz (excepto por la radio FM de 88 a 108 MHz). Estos canales tienen 6 MHz de ancho, incluyendo las bandas de protecci\u00f3n. En Europa el extremo inferior por lo general es de 65 MHz y los canales tienen un ancho de 6\u20138 MHz para la resoluci\u00f3n m\u00e1s alta requerida por PAL y SECAM, pero en lo dem\u00e1s el esquema de asignaci\u00f3n es similar. La parte baja de la banda no se utiliza. Los cables modernos tambi\u00e9n pueden operar bien arriba de 550 MHz, con frecuencia a 750 MHz o m\u00e1s. La soluci\u00f3n elegida fue introducir canales ascendentes en la banda de 5\u201342 MHz (un poco m\u00e1s arriba en Europa) y utilizar las frecuencias en el extremo superior para el flujo descendente. El espectro del cable se ilustra en la figura 2-48.\nTV\nDatos descendentes\nFrecuencias descendentes\nFigura 2-48. Asignaci\u00f3n de frecuencia en un sistema t\u00edpico de cable por TV utilizado para acceso a Internet.\nObserve que debido a que todas las se\u00f1ales de televisi\u00f3n son descendentes, es posible utilizar amplificadores ascendentes que funcionen en la regi\u00f3n de 5\u201342 MHz y amplificadores descendentes que s\u00f3lo funcionen a 54 MHz y mayor, como se muestra en la figura. Por lo tanto, obtenemos una asimetr\u00eda en los anchos de banda de los flujos ascendente y descendente debido a que hay disponible m\u00e1s espectro arriba del espectro de la televisi\u00f3n que abajo. Por otra parte, la mayor parte del tr\u00e1fico probablemente sea hacia abajo, por lo que los operadores de cable no est\u00e1n descontentos con este hecho. Como vimos anteriormente, las compa\u00f1\u00edas telef\u00f3nicas por lo general ofrecen un servicio DSL asim\u00e9trico, aunque no tienen ninguna raz\u00f3n t\u00e9cnica para hacerlo. Los cables coaxiales largos no son mejores para transmitir se\u00f1ales digitales que los circuitos locales largos, por lo que aqu\u00ed tambi\u00e9n se necesita la modulaci\u00f3n anal\u00f3gica. El esquema usual es tomar cada canal descendente de 6 u 8 MHz y modularlo con QAM-64 o, si la calidad del cable\nSEC. 2.7\nTELEVISI\u00d3N POR CABLE\n173\nes muy buena, QAM-256. Con un canal de 6 MHz y QAM-64, obtenemos casi 36 Mbps. Cuando se sustrae la sobrecarga, la carga \u00fatil de la red es de aproximadamente 27 Mbps. Con QAM-256, dicha carga es de aproximadamente de 39 Mbps. Los valores europeos son 1/3 m\u00e1s grandes. Para el flujo ascendente, incluso QAM-64 no funciona bien. Hay mucho ruido proveniente de las microondas, radios CB y otras fuentes, y por esto se utiliza un esquema m\u00e1s conservador \u2014QPSK. Este m\u00e9todo (mostrado en la figura 2-25) proporciona 2 bits por baudio en lugar de los 6 u 8 bits que QAM proporciona en los canales descendentes. En consecuencia, la asimetr\u00eda entre el ancho de banda ascendente y el descendente es mayor de la que se sugiere en la figura 2-48. Adem\u00e1s de actualizar los amplificadores, el operador tambi\u00e9n tiene que actualizar el amplificador head end, de un amplificador tonto a un sistema de c\u00f3mputo digital inteligente con una interfaz de fibra de ancho de banda alto a un ISP. Por lo general, el nombre tambi\u00e9n se actualiza, de \u201camplificador head end \u201d a CMTS (Sistema de Terminaci\u00f3n de M\u00f3dem de Cable). En el siguiente texto, nos referiremos a \u00e9l como \u201camplificador head end \u201d.\n2.7.4 M\u00f3dems de cable El acceso a Internet requiere un m\u00f3dem de cable, un dispositivo que tiene dos interfaces: una en la computadora y la otra en la red de cable. En los primeros a\u00f1os de Internet por cable, cada operador ten\u00eda un m\u00f3dem de cable patentado, que era instalado por un t\u00e9cnico de la compa\u00f1\u00eda de cable. Sin embargo, pronto qued\u00f3 claro que un est\u00e1ndar abierto podr\u00eda crear un mercado de m\u00f3dems de cable competitivo y bajar los precios, con lo que se alentar\u00eda el uso del servicio. Adem\u00e1s, al permitir que los clientes compren los m\u00f3dems de cable en tiendas y que los instalen ellos mismos (como lo hicieron con los m\u00f3dems de tel\u00e9fono V.9x) se podr\u00edan eliminar los temidos camiones de la compa\u00f1\u00eda de cable. En consecuencia, los operadores de cable m\u00e1s grandes se unieron a una compa\u00f1\u00eda llamada CableLabs para producir un m\u00f3dem de cable est\u00e1ndar y probar la compatibilidad de productos. Este est\u00e1ndar, llamado DOCSIS (Especificaci\u00f3n de Interfaz para Servicio de Datos por Cable), est\u00e1 comenzando a reemplazar a los m\u00f3dems patentados. La versi\u00f3n europea se llama EuroDOCSIS. Sin embargo, no a todos los operadores de cable les gusta la idea de un est\u00e1ndar, debido a que muchos de ellos estaban ganando bastante dinero rentando sus m\u00f3dems a sus clientes cautivos. Un est\u00e1ndar abierto con docenas de fabricantes vendiendo m\u00f3dems de cable en tiendas termina con esta pr\u00e1ctica tan lucrativa. La interfaz m\u00f3dem a computadora es directa. En la actualidad, con frecuencia es la Ethernet a 10-Mbps (y en ocasiones es USB). En el futuro, todo el m\u00f3dem podr\u00eda ser una peque\u00f1a tarjeta conectada en la computadora, al igual que con los m\u00f3dems internos V.9x. El otro extremo es m\u00e1s complicado. Una gran parte del est\u00e1ndar tiene que ver con la ingenier\u00eda de radio, tema que est\u00e1 muy alejado del objetivo de este libro. La \u00fanica parte que vale la pena mencionar aqu\u00ed es que los m\u00f3dems de cable, al igual que los ADSL, siempre est\u00e1n activos. Establecen una conexi\u00f3n cuando se encienden y la mantienen todo el tiempo que tengan energ\u00eda, debido a que los operadores de cable no cobran por el tiempo de conexi\u00f3n. Para entender mejor c\u00f3mo funcionan, veamos lo que pasa cuando un m\u00f3dem de cable se conecta y activa. El m\u00f3dem explora los canales descendentes en busca de un paquete especial que el\n174\nLA CAPA F\u00cdSICA\nCAP. 2\namplificador head end transmite peri\u00f3dicamente para proporcionar par\u00e1metros del sistema a los m\u00f3dems que se acaban de conectar. Al encontrar este paquete, el nuevo m\u00f3dem anuncia su presencia en uno de los canales ascendentes. El amplificador head end responde asignando al m\u00f3dem a sus canales ascendente y descendente. Estas asignaciones pueden cambiarse m\u00e1s tarde si el amplificador head end estima que es necesario balancear la carga. A continuaci\u00f3n, el m\u00f3dem determina su distancia con respecto al amplificador head end envi\u00e1ndole un paquete especial y tomando el tiempo que tarda en llegar la respuesta. Este proceso se conoce como alineaci\u00f3n (ranging). Es importante que el m\u00f3dem sepa su distancia para reubicar el camino por el que los canales ascendentes funcionan y para obtener la temporizaci\u00f3n correcta. Dichos canales se dividen en minirranuras. Cada paquete ascendente debe ajustarse en una o m\u00e1s minirranuras consecutivas. El amplificador head end indica en forma peri\u00f3dica el inicio de una nueva ronda de minirranuras, pero la se\u00f1al de partida no es escuchada en todos los m\u00f3dems de manera simult\u00e1nea debido al tiempo de propagaci\u00f3n en el cable. Al saber la distancia que separa al m\u00f3dem del amplificador head end, cada m\u00f3dem puede calcular el momento en que en realidad se inici\u00f3 la primera minirranura. La longitud de la minirranura depende de la red. Una carga \u00fatil t\u00edpica es de 8 bytes. Durante la inicializaci\u00f3n, el amplificador head end tambi\u00e9n asigna a cada m\u00f3dem una minirranura a fin de utilizarla para solicitar el ancho de banda ascendente. Como regla, la misma minirranura se asignar\u00e1 a m\u00faltiples m\u00f3dems, lo que produce contenci\u00f3n por las minirranuras. Cuando una computadora necesita enviar un paquete, lo transfiere al m\u00f3dem, el cual a continuaci\u00f3n solicita el n\u00famero necesario de minirranuras para realizar el env\u00edo. Si la solicitud es aceptada, el amplificador head end coloca una confirmaci\u00f3n de recepci\u00f3n en el canal descendente que indica al m\u00f3dem cu\u00e1les minirranuras se han reservado para su paquete. A continuaci\u00f3n el paquete se env\u00eda, comenzando en la minirranura asignada para ese prop\u00f3sito. Es posible solicitar paquetes adicionales mediante el uso de un campo en el encabezado. Por otro lado, si hay contienda por la minirranura solicitada, no habr\u00e1 confirmaci\u00f3n de recepci\u00f3n y el m\u00f3dem simplemente espera un tiempo aleatorio y vuelve a intentar. Despu\u00e9s de cada falla sucesiva, el tiempo aleatorio se duplica. (Para los lectores que ya est\u00e1n familiarizados con la conectividad de redes, este algoritmo s\u00f3lo es ALOHA ranurado con retroceso exponencial binario. No es posible utilizar Ethernet en el cable porque las estaciones no pueden detectar el medio. En el cap\u00edtulo 4 retomaremos este tema.) Los canales descendentes se manejan de manera diferente que los ascendentes. Por un lado, s\u00f3lo hay un emisor (el amplificador head end ) por lo que no hay contienda ni necesidad de minirranuras, lo que en realidad es multiplexi\u00f3n estad\u00edstica por divisi\u00f3n de tiempo. Por otro lado, el tr\u00e1fico descendente por lo general es mayor que el ascendente, por lo que se utiliza un tama\u00f1o fijo de paquete de 204 bytes. Parte de esto es un c\u00f3digo de correcci\u00f3n de errores Reed-Solomon y otra es sobrecarga, lo que deja una carga \u00fatil de usuario de 184 bytes. Estos n\u00fameros se eligieron por compatibilidad con la televisi\u00f3n digital que utiliza MPEG-2, por lo que los canales descendente de datos y de TV se formatean de la misma manera. L\u00f3gicamente, las conexiones son como se muestra en la figura 2-49. Volviendo al tema de la inicializaci\u00f3n, una vez que el m\u00f3dem ha terminado la alineaci\u00f3n y obtenido su canal ascendente, canal descendente y sus asignaciones de minirranuras, puede comenzar\nSEC. 2.7\n175\nTELEVISI\u00d3N POR CABLE Canal descendente sin contenci\u00f3n: 27 Mbps que utilizan QAM-64 y cargas \u00fatiles de 184 bytes\nCable coaxial\nFibra ISP\nAmplificador head end\nM\u00f3dem\nPaquete\nCanal ascendente con contenci\u00f3n: 9 Mbps con QPSK y minirranuras de 8 bytes\nFigura 2-49. Detalles t\u00edpicos de los canales ascendente y descendente en Norteam\u00e9rica.\na enviar paquetes. El primer paquete que env\u00eda es uno para el ISP pidi\u00e9ndole una direcci\u00f3n IP, que se asigna de manera din\u00e1mica utilizando un protocolo llamado DHCP, el cual analizaremos en el cap\u00edtulo 5. Tambi\u00e9n solicita y obtiene una hora precisa del amplificador head end. El siguiente paso tiene que ver con la seguridad. Debido a que el cable es un medio compartido, cualquiera que desee utilizarlo puede leer todo el tr\u00e1fico que pasa a trav\u00e9s de \u00e9l. Para evitar a los curiosos, todo el tr\u00e1fico se encripta en ambas direcciones. Parte del proceso de inicializaci\u00f3n involucra el establecimiento de claves de encriptaci\u00f3n. Al principio se podr\u00eda pensar que es imposible que dos extra\u00f1os, el amplificador head end y el m\u00f3dem, establezcan una clave secreta a plena luz del d\u00eda con miles de personas observando. Sin embargo, no lo es, pero tendremos que esperar hasta el cap\u00edtulo 8 para explicar c\u00f3mo puede hacerse (la respuesta corta ser\u00eda: mediante el algoritmo de Diffie-Hellman). Por \u00faltimo, el m\u00f3dem tiene que iniciar sesi\u00f3n y proporcionar su identificador \u00fanico a trav\u00e9s del canal seguro. Hasta este punto la inicializaci\u00f3n est\u00e1 completa. A continuaci\u00f3n, el usuario puede iniciar sesi\u00f3n en el ISP y comenzar a trabajar. Hay mucho m\u00e1s por decir acerca de los m\u00f3dems de cable. Algunas referencias son (Adams y Dulchinos, 2001; Donaldson y Jones, 2001, y Dutta-Roy, 2001).\n2.7.5 ADSL en comparaci\u00f3n con el cable \u00bfQu\u00e9 es mejor, ADSL o el cable? Eso es como preguntar cu\u00e1l sistema operativo es mejor. O qu\u00e9 lenguaje es mejor. O qu\u00e9 religi\u00f3n. La respuesta que obtenga depende de a qui\u00e9n le pregunte. Comparemos ADSL y el cable mediante algunos puntos. Los dos utilizan la fibra \u00f3ptica en la red dorsal, pero difieren en el extremo. El cable utiliza cable coaxial; ADSL, cable de par trenzado. La capacidad de carga te\u00f3rica del cable coaxial es de cientos de veces m\u00e1s que el cable de par trenzado. Sin embargo, la capacidad m\u00e1xima del cable no est\u00e1 disponible para los usuarios de datos porque la mayor parte del ancho de banda del cable se desperdicia en cosas in\u00fatiles; por ejemplo, en programas de televisi\u00f3n.\n176\nLA CAPA F\u00cdSICA\nCAP. 2\nEn la pr\u00e1ctica, es dif\u00edcil generalizar acerca de la capacidad efectiva. Los proveedores de ADSL indican espec\u00edficamente el ancho de banda (por ejemplo, flujo descendente de 1 Mbps, flujo ascendente de 256 kbps) y por lo general logran alrededor de 80% de manera consistente. Los proveedores de cable no dan ninguna indicaci\u00f3n pues la capacidad efectiva depende de cu\u00e1ntas personas est\u00e9n actualmente activas en el segmento de cable del usuario. Algunas veces puede ser mejor que ADSL y otras podr\u00eda ser peor. Sin embargo, lo que s\u00ed puede ser molesto es la incertidumbre. Tener servicio excelente por un minuto no garantiza que al siguiente minuto tambi\u00e9n lo tendr\u00e1, debido a que el ancho de banda m\u00e1s grande de la ciudad ha sido acaparado por otra computadora. Conforme un sistema ADSL adquiere usuarios, este incremento tiene muy poco efecto en los usuarios existentes, debido a que cada usuario tiene una conexi\u00f3n dedicada. Con el cable, conforme m\u00e1s personas se suscriban al servicio de Internet, el rendimiento de los usuarios existentes disminuir\u00e1. El \u00fanico remedio es que el operador de cable divida los cables ocupados y conecte en forma directa cada uno a un nodo de fibra \u00f3ptica. Esto cuesta tiempo y dinero, y son presiones de negocios que se deben evitar. Adem\u00e1s, estudiamos otro sistema con un canal compartido como el cable: el sistema telef\u00f3nico m\u00f3vil. Aqu\u00ed un grupo de usuarios tambi\u00e9n comparte una cantidad fija de ancho de banda. Por lo general, la FDM y la TDM lo dividen estrictamente en porciones fijas entre los usuarios activos pues el tr\u00e1fico de voz es suave. Pero para el tr\u00e1fico de datos, esta divisi\u00f3n r\u00edgida es muy ineficiente debido a que los usuarios de datos por lo general est\u00e1n inactivos, en cuyo caso el ancho de banda reservado es un desperdicio. No obstante, en este caso el acceso al cable es m\u00e1s parecido al sistema telef\u00f3nico m\u00f3vil que al sistema fijo. La disponibilidad es un tema en el que ADSL y el cable difieren. Todas las personas tienen tel\u00e9fono, pero no todos los usuarios est\u00e1n lo suficientemente cerca de su oficina central local para obtener ADSL. Por otro lado, no todos los usuarios tienen cable, pero si usted tiene cable y la compa\u00f1\u00eda proporciona acceso a Internet, puede obtenerlo. Para el nodo de fibra o el amplificador head end la distancia no es un problema. Tambi\u00e9n vale la pena mencionar que debido a que el cable inici\u00f3 como un medio de distribuci\u00f3n de televisi\u00f3n, pocos negocios cuentan con \u00e9l. Debido a que es un medio de punto a punto, ADSL es inherentemente m\u00e1s seguro que el cable. Cualquier usuario de cable puede leer f\u00e1cilmente todos los paquetes que pasen por el cable. Por esta raz\u00f3n, cualquier proveedor de cable que se precie de serlo encriptar\u00e1 todo el tr\u00e1fico en ambas direcciones. Sin embargo, el hecho de que su vecino pueda obtener sus mensajes encriptados a\u00fan es menos seguro que el hecho de que no obtenga nada. El sistema telef\u00f3nico por lo general es m\u00e1s confiable que el cable. Por ejemplo, tiene energ\u00eda reservada y contin\u00faa trabajando de manera normal incluso durante una falla en la energ\u00eda. Con el cable, si falla la energ\u00eda de cualquier amplificador de la cadena, todos los usuarios descendentes experimentar\u00e1n un corte de manera instant\u00e1nea. Por \u00faltimo, la mayor\u00eda de los proveedores ADSL ofrece una opci\u00f3n de ISPs. Algunas veces la ley los obliga a hacerlo. \u00c9ste no siempre es el caso con los operadores de cable. La conclusi\u00f3n es que ADSL y el cable son tan parecidos como diferentes. Ofrecen servicios comparables y, conforme la competencia entre ellos se avive m\u00e1s, probablemente precios comparables.\nCAP. 2\nPROBLEMAS\n177\n2.8 RESUMEN La capa f\u00edsica es la base de todas las redes. La naturaleza impone dos l\u00edmites fundamentales a todos los canales, y esto determina su ancho de banda. Estos l\u00edmites son el de Nyquist, que tiene que ver con los canales sin ruido, y el de Shannon, para canales con ruido. Los medios de transmisi\u00f3n pueden ser guiados y no guiados. Los principales medios guiados son el cable de par trenzado, el cable coaxial y la fibra \u00f3ptica. Los medios no guiados incluyen la radio, las microondas, el infrarrojo y los l\u00e1seres a trav\u00e9s del aire. Un sistema de comunicaci\u00f3n prometedor es la comunicaci\u00f3n por sat\u00e9lite, especialmente los sistemas LEO. Un elemento clave de la mayor parte de las redes de \u00e1rea amplia es el sistema telef\u00f3nico. Sus componentes principales son los circuitos locales, troncales y conmutadores. Los circuitos locales son circuitos de cable de par trenzado, anal\u00f3gicos, que requieren m\u00f3dems para transmitir datos digitales. ADSL ofrece velocidades de hasta 50 Mbps dividiendo el circuito local en muchos canales individuales y modulando cada uno por separado. Los ciclos locales inal\u00e1mbricos son otro nuevo desarrollo que observar, especialmente LMDS. Las troncales son digitales y se pueden multiplexar de varias formas, incluidas FDM, TDM y WDM. Tanto la conmutaci\u00f3n de circuitos como la de paquetes son importantes. Para las aplicaciones m\u00f3viles, el sistema de tel\u00e9fono fijo no es adecuado. En la actualidad los tel\u00e9fonos m\u00f3viles se est\u00e1n usando ampliamente para voz y muy pronto se utilizar\u00e1n ampliamente para datos. La primera generaci\u00f3n fue anal\u00f3gica, y dominada por AMPS. La segunda generaci\u00f3n fue digital, en la que D-AMPS, GSM y CDMA eran las opciones principales. La tercera generaci\u00f3n ser\u00e1 digital y se basar\u00e1 en la banda ancha CDMA. Un sistema alternativo para acceso a red es el sistema de televisi\u00f3n por cable, que ha evolucionado de manera gradual de una antena comunal a una red h\u00edbrida de fibra \u00f3ptica y cable coaxial. Potencialmente, ofrece un ancho de banda muy alto, pero en la pr\u00e1ctica, el ancho de banda real disponible depende del n\u00famero de usuarios activos y de lo que est\u00e9n haciendo.\nPROBLEMAS 1. Calcule los coeficientes de Fourier para la funci\u00f3n f (t) = t (0 \u2264 t \u2264 1). 2. Un canal sin ruido de 4 kHz se muestrea cada 1 mseg. \u00bfCu\u00e1l es la tasa de datos m\u00e1xima? 3. Los canales de televisi\u00f3n tienen un ancho de 6 Mhz. \u00bfCu\u00e1ntos bits/seg se pueden enviar si se usan se\u00f1ales digitales de cuatro niveles? Suponga que el canal es sin ruido. 4. Si se env\u00eda una se\u00f1al binaria por un canal de 3 kHz cuya relaci\u00f3n de se\u00f1al a ruido es de 20 dB, \u00bfcu\u00e1l es la tasa de datos m\u00e1xima que se puede obtener? 5. \u00bfQu\u00e9 relaci\u00f3n de se\u00f1al a ruido se necesita para poner una portadora T1 en una l\u00ednea de 50 kHz?\n178\nLA CAPA F\u00cdSICA\nCAP. 2\n6. \u00bfQu\u00e9 diferencia hay entre una estrella pasiva y un repetidor activo en una red de fibra \u00f3ptica? 7. \u00bfCu\u00e1nto ancho de banda existe en 0.1 micras de espectro a una longitud de onda de 1 micra? 8. Se desea enviar una secuencia de im\u00e1genes de pantalla de computadora por una fibra \u00f3ptica. La pantalla es de 480 \u00d7 640 p\u00edxeles y cada p\u00edxel ocupa 24 bits. Hay 60 im\u00e1genes de pantalla por segundo. \u00bfCu\u00e1nto ancho de banda se necesita y cu\u00e1ntas micras de longitud de onda se necesitan para esta banda a 1.30 micras? 9. \u00bfSe cumple el teorema de Nyquist para la fibra \u00f3ptica o solamente para el alambre de cobre? 10. En la figura 2-6 la banda de la izquierda es m\u00e1s angosta que las otras. \u00bfPor qu\u00e9? 11. A menudo las antenas de radio funcionan mejor cuando el di\u00e1metro de la antena es igual a la longitud de la onda de radio. Las antenas pr\u00e1cticas tienen di\u00e1metros desde 1 cm hasta 5 m de di\u00e1metro. \u00bfQu\u00e9 rango de frecuencias cubre esto? 12. El desvanecimiento por m\u00faltiples trayectorias alcanza un m\u00e1ximo cuando los dos haces llegan desfasados 180 grados. \u00bfQu\u00e9 tan diferentes deben ser las trayectorias para que el desvanecimiento sea m\u00e1ximo para un enlace de microondas de 1 GHz de 50 km de largo? 13. Un rayo l\u00e1ser de 1 mm de di\u00e1metro se apunta a un detector de 1 mm de di\u00e1metro a 100 m en el techo de un edificio. \u00bfCu\u00e1nta desviaci\u00f3n angular deber\u00e1 tener el l\u00e1ser antes de que pierda al detector? 14. Los 66 sat\u00e9lites de \u00f3rbita baja en el proyecto Iridium se dividen en seis collares alrededor de la Tierra. A la altitud que est\u00e1n utilizando, el periodo es de 90 minutos. \u00bfCu\u00e1l es el intervalo promedio de transferencias de celdas para un transmisor fijo? 15. Considere un sat\u00e9lite a una altitud de sat\u00e9lites geoestacionarios pero cuyo plan de \u00f3rbitas se inclina hacia el plano ecuatorial a un \u00e1ngulo \u03c6. Para un usuario fijo en la superficie de la Tierra a una altitud norte \u03c6, \u00bfeste sat\u00e9lite da la impresi\u00f3n en el cielo de que no tiene movimiento? De lo contrario, describa su movimiento. 16. Cu\u00e1ntos c\u00f3digos de oficina central local hab\u00eda antes de 1984, cuando cada oficina central ten\u00eda el nombre de los tres d\u00edgitos de su c\u00f3digo de \u00e1rea y los primeros tres d\u00edgitos del n\u00famero local? Los c\u00f3digos de \u00e1rea iniciaban con un d\u00edgito en el rango de 2\u20139, ten\u00edan un 0 o un 1 como su segundo d\u00edgito, y terminaban con cualquier d\u00edgito. Los primeros dos d\u00edgitos de un n\u00famero local siempre estaban en el rango de 2\u20139. El tercer d\u00edgito pod\u00eda ser cualquiera. 17. Utilizando s\u00f3lo los datos dados en el texto, \u00bfcu\u00e1l es la cantidad m\u00e1xima de tel\u00e9fonos que el sistema existente de Estados puede manejar sin cambiar el plan de numeraci\u00f3n o agregar equipo adicional? \u00bfEs posible alcanzar esta cantidad de tel\u00e9fonos? Para prop\u00f3sitos de este problema, una computadora o m\u00e1quina de fax cuenta como un tel\u00e9fono. Suponga que s\u00f3lo hay un dispositivo por l\u00ednea de suscriptor. 18. Un sistema telef\u00f3nico simple consiste en dos oficinas centrales locales y una interurbana a la que est\u00e1 conectada cada oficina central por una troncal d\u00faplex de 1 MHz. En promedio, cada tel\u00e9fono se usa para hacer cuatro llamadas por cada jornada de 8 horas. La duraci\u00f3n media de las llamadas es de 6 minutos. El 10% de las llamadas son de larga distancia (esto es, pasan por la oficina interurbana). \u00bfCu\u00e1l es la cantidad m\u00e1xima de tel\u00e9fonos que puede manejar una oficina central local? (Suponga que hay 4 kHz por circuito.) 19. Una compa\u00f1\u00eda de tel\u00e9fonos regional tiene 10 millones de suscriptores. Cada uno de sus tel\u00e9fonos est\u00e1 conectado a una oficina central local mediante un cable de par trenzado de cobre. La longitud promedio\nCAP. 2\nPROBLEMAS\n179\nde estos cables de par trenzado es de 10 km. \u00bfCu\u00e1nto vale el cobre de los circuitos locales? Suponga que la secci\u00f3n transversal de cada filamento es un c\u00edrculo de 1 mm de di\u00e1metro, que el peso espec\u00edfico relativo del cobre es 9.0 y que el cobre se vende a 3 d\u00f3lares por kilogramo. 20. \u00bfUn gasoducto es un sistema s\u00edmplex, uno semid\u00faplex, uno d\u00faplex total, o ninguno de los antes mencionados? 21. El costo de un microprocesador potente se ha reducido a tal grado que ahora es posible incluir uno en cada m\u00f3dem. \u00bfC\u00f3mo afecta esto el manejo de errores en las l\u00edneas telef\u00f3nicas? 22. Un diagrama de constelaci\u00f3n de m\u00f3dem, similar al de la figura 2-25, tiene puntos de datos en las siguientes coordenadas: (1, 1), (1, \u22121), (\u22121, 1) y (\u22121, \u22121). \u00bfCu\u00e1ntos bps puede lograr un m\u00f3dem a 1200 baudios con estos par\u00e1metros? 23. Un diagrama de constelaci\u00f3n de m\u00f3dem, similar al de la figura 2-25, tiene puntos de datos en (0, 1) y (0, 2). \u00bfEl m\u00f3dem usa modulaci\u00f3n de fase o modulaci\u00f3n de amplitud? 24. En un diagrama de constelaci\u00f3n todos los puntos est\u00e1n en un c\u00edrculo centrado en el origen. \u00bfQu\u00e9 tipo de modulaci\u00f3n se utiliza? 25. \u00bfCu\u00e1ntas frecuencias utiliza un m\u00f3dem QAM-64 de d\u00faplex total? 26. Un sistema ADSL que utiliza DMT asigna 3/4 de los canales de datos disponibles al enlace descendente. Utiliza modulaci\u00f3n QAM-64 en cada canal. \u00bfCu\u00e1l es la capacidad del enlace descendente? 27. En el ejemplo de cuatro sectores LMDS de la figura 2-30, cada sector tiene su propio canal de 36 Mbps. De acuerdo con la teor\u00eda de encolamiento, si el canal est\u00e1 cargado en 50%, el tiempo de encolamiento ser\u00e1 igual que el de descarga. Bajo estas condiciones, \u00bfcu\u00e1nto tiempo se tarda en bajar una p\u00e1gina Web de 5 KB? \u00bfCu\u00e1nto tiempo se tarda en bajar la p\u00e1gina a trav\u00e9s de una l\u00ednea ADSL de 1 Mbps? \u00bfA trav\u00e9s de un m\u00f3dem de 56 kbps? 28. Diez se\u00f1ales, cada una de las cuales requiere 4000 Hz, se multiplexan en un solo canal utilizando FDM. \u00bfCu\u00e1l es el ancho de banda m\u00ednimo requerido para el canal multiplexado? Suponga que las bandas de protecci\u00f3n tienen un ancho de 400 Hz. 29. \u00bfPor qu\u00e9 se fij\u00f3 el tiempo de muestreo de PCM en 125 \u03bcseg? 30. \u00bfCu\u00e1l es el porcentaje de sobrecarga en una portadora T1?; esto es, \u00bfqu\u00e9 porcentaje de los 1.544 Mbps no se entrega al usuario final? 31. Compare la tasa de datos m\u00e1xima de un canal sin ruido de 4 kHz que utiliza: (a) Codificaci\u00f3n anal\u00f3gica con 2 bits por muestra. (b) El sistema T1 de PCM. 32. Si un sistema de portador T1 pierde la pista de d\u00f3nde est\u00e1, trata de resincronizarse con base en el primer bit de cada trama. \u00bfCu\u00e1ntas tramas se tendr\u00edan que inspeccionar en promedio para resincronizarse con una probabilidad de 0.001 de estar en un error? 33. \u00bfCu\u00e1l es la diferencia, si la hay, entre la parte desmoduladora de un m\u00f3dem y la parte codificadora de un codec? (Despu\u00e9s de todo, ambas convierten se\u00f1ales anal\u00f3gicas a digitales.) 34. Una se\u00f1al se transmite en forma digital por un canal sin ruido de 4 kHz, con una muestra cada 125 \u03bcseg. \u00bfCu\u00e1ntos bits por segundo se env\u00edan realmente con cada uno de los siguientes m\u00e9todos de codificaci\u00f3n? (a) CCITT, 2.048 Mbps est\u00e1ndar.\n180\nLA CAPA F\u00cdSICA\nCAP. 2\n(b) DPCM con un valor de se\u00f1al relativo de 4 bits. (c) Modulaci\u00f3n delta. 35. Se codifica una onda senoidal pura de amplitud A usando modulaci\u00f3n delta, con x muestras/seg. Una salida de +1 corresponde a un cambio de se\u00f1al de +A/8, y una se\u00f1al de salida de \u20131 corresponde a un cambio de se\u00f1al de \u2013A/8. \u00bfCu\u00e1l es la frecuencia m\u00e1s alta que se puede rastrear sin error acumulativo? 36. Los relojes de SONET tienen una tasa de arrastre de casi 1 parte en 109. \u00bfCu\u00e1nto tiempo tomar\u00e1 para que el arrastre iguale el ancho de 1 bit? \u00bfCu\u00e1les son las implicaciones de este c\u00e1lculo? 37. En la figura 2-37 se establece que la tasa de datos del usuario para OC-3 es de 148.608 Mbps. Demuestre c\u00f3mo se puede deducir esta cantidad de los par\u00e1metros de OC-3 de SONET. 38. Para acomodar tasas de datos menores que STS-1, SONET tiene un sistema de tributarias virtuales (VT). Una VT es una carga \u00fatil parcial que se puede insertar en una trama STS-1 y combinar con otras cargas \u00fatiles parciales para llenar la trama de datos. VT1.5 utiliza 3 columnas, VT2 utiliza 4, VT3 utiliza 6 y VT6 utiliza 12 columnas de una trama STS-1. \u00bfCu\u00e1l VT puede acomodar (a) Un servicio DS-1 (1.544 Mbps)? (b) Un servicio europeo CEPT-1 (2.048 Mbps o E1)? (c) Un servicio DS-2 (6.312 Mbps)? 39. \u00bfCu\u00e1l es la diferencia esencial entre la conmutaci\u00f3n de mensajes y la de paquetes? 40. \u00bfCu\u00e1l es el ancho de banda disponible para el usuario en una conexi\u00f3n OC-12c? 41. Tres redes de conmutaci\u00f3n de paquetes contienen n nodos cada una. La primera red tiene una topolog\u00eda de estrella con un conmutador central, la segunda es un anillo (bidireccional) y la tercera est\u00e1 interconectada por completo, con una conexi\u00f3n de cada nodo hacia cada uno de los otros nodos. \u00bfCu\u00e1les son las rutas de transmisi\u00f3n \u00f3ptima, media y de peor caso en saltos? 42. Compare el retardo al enviar un mensaje de x bits por una trayectoria de k saltos en una red de conmutaci\u00f3n de circuitos y en una red de conmutaci\u00f3n de paquetes (con carga ligera). El tiempo de establecimiento de circuito es de s segundos, el retardo de propagaci\u00f3n es de d segundos por salto, el tama\u00f1o del paquete es de p bits y la tasa de datos es de b bps. \u00bfEn qu\u00e9 condiciones tiene un retardo menor la red de paquetes? 43. Suponga que se van a transmitir x bits de datos de usuario por una trayectoria de k saltos en una red de conmutaci\u00f3n de paquetes como una serie de paquetes, cada uno contiene p bits de datos y h bits de encabezado, donde x p + h. La tasa de bits de las l\u00edneas es de b bps y el retardo de propagaci\u00f3n es nulo. \u00bfQu\u00e9 valor de p minimiza el retardo total? 44. En un sistema de telef\u00f3nico m\u00f3vil t\u00edpico con celdas hexagonales se permite reutilizar una banda de frecuencia en una celda adyacente. Si est\u00e1n disponibles 840 frecuencias, \u00bfcu\u00e1ntas se pueden utilizar en una celda dada? 45. El dise\u00f1o real de las celdas rara vez es tan regular como se muestra en la figura 2-41. Incluso la forma de las celdas individuales por lo general es irregular. D\u00e9 una posible raz\u00f3n de por qu\u00e9 suceder\u00eda esto. 46. Realice una estimaci\u00f3n aproximada de la cantidad de microceldas PCS con un di\u00e1metro de 100 m que se requerir\u00edan para cubrir San Francisco (120 km2).\nCAP. 2\nPROBLEMAS\n181\n47. Algunas veces cuando un usuario m\u00f3vil cruza el l\u00edmite de una celda a otra, la llamada actual se termina de manera repentina, aunque todos los transmisores y receptores est\u00e9n funcionando correctamente. \u00bfPor qu\u00e9? 48. D-AMPS tiene evidentemente una calidad de voz menor que GSM. \u00bf\u00c9sta es la raz\u00f3n por la que D-AMPS necesita tener compatibilidad hacia atr\u00e1s con AMPS, y GSM no? Si no es as\u00ed, explique la causa. 49. Calcule el n\u00famero m\u00e1ximo de usuarios que D-AMPS puede manejar de manera simult\u00e1nea dentro de una celda. Realice el mismo c\u00e1lculo para GSM. Explique la diferencia. 50. Suponga que A, B y C, transmiten de manera simult\u00e1nea bits 0 mediante un sistema CDMA con las secuencias de chips que se muestran en la figura 2-45(b). \u00bfCu\u00e1l es la secuencia de chips resultante? 51. En el an\u00e1lisis acerca de la ortogonalidad de las secuencias de chips CDMA se dijo que si S\u2022T = 0, entonces S\u2022T tambi\u00e9n es 0. Pruebe esto. 52. Considere una manera diferente de mirar la propiedad de ortogonalidad de las secuencias de chips CDMA. Cada bit en un par de secuencias puede o no coincidir. Exprese la propiedad de ortogonalidad en t\u00e9rminos de coincidencias y falta de coincidencias. 53. Un receptor CDMA obtiene los siguientes chips: (\u22121 +1 \u22123 +1 \u22121 \u22123 +1 +1). Suponiendo las secuencias de chips definidas en la figura 2-45(b), \u00bfcu\u00e1les estaciones transmitieron y qu\u00e9 bits envi\u00f3 cada una? 54. En su parte m\u00e1s baja, el sistema telef\u00f3nico tiene forma de estrella, y todos los circuitos locales de un vecindario convergen en una oficina central local. En contraste, la televisi\u00f3n por cable consiste en un solo cable largo que pasa por todas las casas del mismo vecindario. Suponga que un cable de TV fuera de fibra \u00f3ptica de 10 Gbps en lugar de cable de cobre. \u00bfPodr\u00eda utilizarse para simular un modelo telef\u00f3nico en el que todo mundo tuviera su propia l\u00ednea privada a la oficina central local? Si esto fuera posible, \u00bfcu\u00e1ntas casas con un tel\u00e9fono podr\u00edan conectarse a una sola fibra \u00f3ptica? 55. Un sistema de TV por cable tiene cien canales comerciales y todos ellos alternan programas con anuncios. \u00bfEsto es m\u00e1s parecido a TDM o a FDM? 56. Una compa\u00f1\u00eda de cable decide proporcionar acceso a Internet a trav\u00e9s de cable en un vecindario que consiste en 5000 casas. La compa\u00f1\u00eda utiliza cable coaxial y asignaci\u00f3n de espectro que permite un ancho de banda descendente de 100 Mbps por cable. Para atraer clientes la compa\u00f1\u00eda decide garantizar un ancho de banda descendente de por lo menos 2 Mbps a cada casa en cualquier momento. Describa lo que necesita hacer la compa\u00f1\u00eda de cable para proporcionar esta garant\u00eda. 57. Tomando en cuenta la asignaci\u00f3n espectral mostrada en la figura 2-48 y la informaci\u00f3n dada en el texto, \u00bfcu\u00e1ntos Mbps necesita asignar el sistema por cable al flujo ascendente y cu\u00e1ntos al flujo descendente? 58. \u00bfQu\u00e9 tan r\u00e1pido un usuario de cable puede recibir datos si la red est\u00e1 inactiva? 59. Multiplexar flujos de datos m\u00faltiples STS-1, llamados tributarias, tiene un papel importante en SONET. Un multiplexor 3:1 multiplexa tres tributarias STS-1 de entrada en un flujo STS-3 de salida. Esta multiplexi\u00f3n se realiza byte por byte, es decir, los tres primeros bytes de salida son los primeros bytes de las tributarias 1, 2 y 3, respectivamente. Los siguientes tres bytes de salida son los segundos bytes\n182\nLA CAPA F\u00cdSICA\nCAP. 2\nde las tributarias 1, 2 y 3, respectivamente, etc\u00e9tera. Escriba un programa que simule este multiplexor 3:1. El programa deber\u00e1 consistir de cinco procesos. El proceso principal crea cuatro procesos, uno para cada una de las tres tributarias STS-1 y uno para el multiplexor. Cada proceso tributario lee una trama STS-1 de un archivo de entrada como una secuencia de 810 bytes. Tales procesos tributarios env\u00edan sus tramas (byte por byte) al proceso multiplexor. \u00c9ste recibe los bytes y env\u00eda una trama STS-3 (byte por byte) escribi\u00e9ndola en una salida est\u00e1ndar. Utilice canalizaciones para la comunicaci\u00f3n entre procesos.\n3 LA CAPA DE ENLACE DE DATOS\nEn este cap\u00edtulo estudiaremos los principios de dise\u00f1o de la capa 2, la capa de enlace de datos. Este estudio tiene que ver con los algoritmos para lograr una comunicaci\u00f3n confiable y eficiente entre dos m\u00e1quinas adyacentes en la capa de enlace de datos. Por adyacente, queremos decir que las dos m\u00e1quinas est\u00e1n conectadas por un canal de comunicaciones que act\u00faa de manera conceptual como un alambre (por ejemplo, un cable coaxial, una l\u00ednea telef\u00f3nica o un canal inal\u00e1mbrico de punto a punto). La propiedad esencial de un canal que lo hace asemejarse a un alambre es que los bits se entregan con exactitud en el mismo orden en que fueron enviados. A primera vista podr\u00eda pensarse que este problema es tan trivial que no hay ning\u00fan software que estudiar: la m\u00e1quina A s\u00f3lo pone los bits en el alambre, y la m\u00e1quina B simplemente los toma. Por desgracia, los circuitos de comunicaci\u00f3n cometen errores ocasionales. Adem\u00e1s, tienen una tasa de datos finita y hay un retardo de propagaci\u00f3n diferente de cero entre el momento en que se env\u00eda un bit y el momento en que se recibe. Estas limitaciones tienen implicaciones importantes para la eficiencia de la transferencia de datos. Los protocolos usados para comunicaciones deben considerar todos estos factores. Dichos protocolos son el tema de este cap\u00edtulo. Tras una introducci\u00f3n a los aspectos clave de dise\u00f1o presentes en la capa de enlace de datos, comenzaremos nuestro estudio de sus protocolos observando la naturaleza de los errores, sus causas y la manera en que se pueden detectar y corregir. Despu\u00e9s estudiaremos una serie de protocolos de complejidad creciente, cada uno de los cuales resuelve los problemas presentes en esta capa. Por \u00faltimo, concluiremos con un estudio del modelado y la correcci\u00f3n de los protocolos y daremos algunos ejemplos de protocolos de enlace de datos. 183\n184\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\n3.1 CUESTIONES DE DISE\u00d1O DE LA CAPA DE ENLACE DE DATOS La capa de enlace de datos tiene que desempe\u00f1ar varias funciones espec\u00edficas, entre las que se incluyen: 1. Proporcionar una interfaz de servicio bien definida con la capa de red. 2. Manejar los errores de transmisi\u00f3n. 3. Regular el flujo de datos para que receptores lentos no sean saturados por emisores r\u00e1pidos. Para cumplir con estas metas, la capa de enlace de datos toma de la capa de red los paquetes y los encapsula en tramas para transmitirlos. Cada trama contiene un encabezado, un campo de carga \u00fatil (payload) para almacenar el paquete y un terminador o final, como se ilustra en la figura 3-1. El manejo de las tramas es la tarea primordial de la capa de enlace de datos. En las siguientes secciones examinaremos en detalle todos los aspectos mencionados. M\u00e1quina emisora\nM\u00e1quina receptora\nPaquete\nPaquete Trama\nEncabezado\nCampo de carga \u00fatil\nTerminador\nEncabezado\nCampo de carga \u00fatil\nTerminador\nFigura 3-1. Relaci\u00f3n entre los paquetes y las tramas.\nAunque este cap\u00edtulo s\u00f3lo analiza la capa de enlace de datos y los protocolos de enlace de datos, muchos de los principios que analizaremos aqu\u00ed, como el control de errores y el de flujo, tambi\u00e9n se encuentran en la capa de transporte y en otros protocolos. De hecho, en muchas redes, estas funciones se encuentran s\u00f3lo en las capas superiores y no en la de enlace de datos. Sin embargo, independientemente de donde se encuentren, los principios son casi los mismos, por lo que en realidad no importa en qu\u00e9 parte del libro los analicemos. Por lo general, \u00e9stos se muestran en la capa de enlace de datos en sus formas m\u00e1s simples y puras, por lo que dicha capa es un buen lugar para examinarlos en detalle.\n3.1.1 Servicios proporcionados a la capa de red La funci\u00f3n de la capa de enlace de datos es suministrar servicios a la capa de red. El servicio principal es transferir datos de la capa de red en la m\u00e1quina de origen a la capa de red en la m\u00e1quina de destino. En la capa de red de la m\u00e1quina de origen hay una entidad, llamada proceso, que entrega algunos bits a la capa de enlace de datos para transmitirlos a la m\u00e1quina de destino. El tra-\nSEC. 3.1\nCUESTIONES DE DISE\u00d1O DE LA CAPA DE ENLACE DE DATOS\n185\nbajo de la capa de enlace de datos es transmitir los bits a la m\u00e1quina de destino, para que puedan ser entregados a su capa de red, como se muestra en la figura 3-2(a). La transmisi\u00f3n real sigue la trayectoria de la figura 3-2(b), pero es m\u00e1s f\u00e1cil pensar en t\u00e9rminos de dos procesos de capa de enlace de datos que se comunican usando un protocolo de enlace de datos. Por esta raz\u00f3n, a lo largo de este cap\u00edtulo usaremos de manera impl\u00edcita el modelo de la figura 3-2(a). Host 1\nHost 2\nHost 1\nHost 2\nRuta de datos virtual\nRuta de datos real (a)\n(b)\nFigura 3-2. (a) Comunicaci\u00f3n virtual. (b) Comunicaci\u00f3n real.\nLa capa de enlace de datos puede dise\u00f1arse para ofrecer varios servicios. Los servicios reales ofrecidos pueden variar de sistema a sistema. Tres posibilidades razonables que normalmente se proporcionan son: 1. Servicio no orientado a la conexi\u00f3n sin confirmaci\u00f3n de recepci\u00f3n. 2. Servicio no orientado a la conexi\u00f3n con confirmaci\u00f3n de recepci\u00f3n. 3. Servicio orientado a la conexi\u00f3n con confirmaci\u00f3n de recepci\u00f3n. Consideremos cada uno de ellos por separado. El servicio no orientado a la conexi\u00f3n sin confirmaci\u00f3n de recepci\u00f3n consiste en hacer que la m\u00e1quina de origen env\u00ede tramas independientes a la m\u00e1quina de destino sin pedir que \u00e9sta confirme la recepci\u00f3n. No se establece conexi\u00f3n de antemano ni se libera despu\u00e9s. Si se pierde una trama debido a ruido en la l\u00ednea, en la capa de enlace de datos no se realiza ning\u00fan intento por detectar la p\u00e9rdida ni por recuperarse de ella. Esta clase de servicio es apropiada cuando la tasa de errores es muy baja, por lo que la recuperaci\u00f3n se deja a las capas superiores. Tambi\u00e9n es apropiada para el tr\u00e1fico en tiempo real, por ejemplo de voz, en el que la llegada retrasada de datos es peor que\n186\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nlos errores de datos. La mayor\u00eda de las LANs utilizan servicios no orientados a la conexi\u00f3n sin confirmaci\u00f3n de recepci\u00f3n en la capa de enlace de datos. El siguiente paso hacia adelante en cuanto a confiabilidad es el servicio no orientado a la conexi\u00f3n con confirmaci\u00f3n de recepci\u00f3n. Cuando se ofrece este servicio tampoco se utilizan conexiones l\u00f3gicas, pero se confirma de manera individual la recepci\u00f3n de cada trama enviada. De esta manera, el emisor sabe si la trama ha llegado bien o no. Si no ha llegado en un tiempo especificado, puede enviarse nuevamente. Este servicio es \u00fatil en canales inestables, como los de los sistemas inal\u00e1mbricos. Tal vez valga la pena poner \u00e9nfasis en que proporcionar confirmaciones de recepci\u00f3n en la capa de enlace de datos s\u00f3lo es una optimizaci\u00f3n, nunca un requisito. La capa de red siempre puede enviar un paquete y esperar que se confirme su recepci\u00f3n. Si la confirmaci\u00f3n no llega antes de que expire el temporizador, el emisor puede volver a enviar el mensaje. El problema con esta estrategia es que las tramas tienen una longitud m\u00e1xima impuesta por el hardware mientras que los paquetes de la capa de red no la tienen. Si el paquete promedio se divide en, digamos, 10 tramas, y se pierde 20% de todas las tramas enviadas, el paquete puede tardar mucho tiempo en pasar. Si las tramas se confirman y retransmiten de manera individual, los paquetes completos pasan con mayor rapidez. En los canales confiables, como la fibra \u00f3ptica, la sobrecarga que implica el uso de un protocolo de enlace de datos muy robusto puede ser innecesaria, pero en canales inal\u00e1mbricos bien vale la pena el costo debido a su inestabilidad inherente. Regresando a nuestros servicios, el servicio m\u00e1s refinado que puede proporcionar la capa de enlace de datos a la capa de red es el servicio orientado a la conexi\u00f3n. Con este servicio, las m\u00e1quinas de origen y de destino establecen una conexi\u00f3n antes de transferir datos. Cada trama enviada a trav\u00e9s de la conexi\u00f3n est\u00e1 numerada, y la capa de enlace de datos garantiza que cada trama enviada llegar\u00e1 a su destino. Es m\u00e1s, garantiza que cada trama ser\u00e1 recibida exactamente una vez y que todas las tramas se recibir\u00e1n en el orden adecuado. En contraste, con el servicio no orientado a la conexi\u00f3n es posible que una confirmaci\u00f3n de recepci\u00f3n perdida cause que una trama se env\u00ede varias veces y, por lo tanto, que se reciba varias veces. Por su parte, el servicio orientado a la conexi\u00f3n proporciona a los procesos de la capa de red el equivalente de un flujo de bits confiable. Cuando se utiliza un servicio orientado a la conexi\u00f3n, las transferencias tienen tres fases distintas. En la primera, la conexi\u00f3n se establece haciendo que ambos lados inicialicen las variables y los contadores necesarios para seguir la pista de las tramas que han sido recibidas y las que no. En la segunda fase se transmiten una o m\u00e1s tramas. En la tercera fase, la conexi\u00f3n se cierra y libera las variables, los b\u00faferes y otros recursos utilizados para mantener la conexi\u00f3n. Considere un ejemplo t\u00edpico: una subred de WAN que consiste en enrutadores conectados por medio de l\u00edneas telef\u00f3nicas alquiladas de punto a punto. Cuando llega una trama a un enrutador, el hardware la examina para verificar si est\u00e1 libre de errores (mediante una t\u00e9cnica que veremos m\u00e1s adelante en este cap\u00edtulo), y despu\u00e9s la pasa al software de la capa de enlace de datos (que podr\u00eda estar integrado en un chip de la tarjeta de interfaz de red). Dicho software comprueba si \u00e9sta es la trama esperada y, de ser as\u00ed, entrega el paquete contenido en el campo de carga \u00fatil al software de enrutamiento. A continuaci\u00f3n, este software elige la l\u00ednea de salida adecuada y reenv\u00eda el paquete al software de la capa de enlace de datos, que luego lo transmite. En la figura 3-3 se muestra el flujo a trav\u00e9s de dos enrutadores.\nSEC. 3.1\nCUESTIONES DE DISE\u00d1O DE LA CAPA DE ENLACE DE DATOS\n187\nEnrutador\nProceso de la capa de enlace de datos\n2\nTramas aqu\u00ed\n2\nProceso de enrutamiento\n2\n3 Paquetes aqu\u00ed\n2\n3\nProtocolo de enlace de datos\nL\u00ednea de transmisi\u00f3n a un enrutador\nFigura 3-3. Ubicaci\u00f3n del protocolo de enlace de datos.\nEl c\u00f3digo de enrutamiento con frecuencia requiere que el trabajo se haga bien, es decir, que haya conexiones estables y ordenadas en cada una de las l\u00edneas punto a punto. No quiere que se le moleste frecuentemente con paquetes que se perdieron en el camino. Es responsabilidad del protocolo de enlace de datos, mostrado en el rect\u00e1ngulo punteado, hacer que las l\u00edneas de comunicaci\u00f3n no estables parezcan perfectas o, cuando menos, bastante buenas. Como informaci\u00f3n adicional, aunque hemos mostrado m\u00faltiples copias del software de la capa de enlace de datos en cada enrutador, de hecho una sola copia maneja todas las l\u00edneas, con diferentes tablas y estructuras de datos para cada una.\n3.1.2 Entramado A fin de proporcionar servicios a la capa de red, la de enlace de datos debe utilizar los servicios que la capa f\u00edsica le proporciona. Lo que hace la capa f\u00edsica es aceptar un flujo de bits puros e intentar entregarlo al destino. No se garantiza que este flujo de bits est\u00e9 libre de errores. La cantidad de bits recibidos puede ser menor, igual o mayor que la cantidad de bits transmitidos, y \u00e9stos pueden tener diferentes valores. Es responsabilidad de la capa de enlace de datos detectar y, de ser necesario, corregir los errores. El m\u00e9todo com\u00fan es que la capa de enlace de datos divida el flujo de bits en tramas separadas y que calcule la suma de verificaci\u00f3n de cada trama. (Posteriormente en este cap\u00edtulo se analizar\u00e1n los algoritmos de suma de verificaci\u00f3n.) Cuando una trama llega al destino, se recalcula la suma de verificaci\u00f3n. Si la nueva suma de verificaci\u00f3n calculada es distinta de la contenida en la trama, la capa de enlace de datos sabe que ha ocurrido un error y toma medidas para manejarlo (por ejemplo, descartando la trama mala y, posiblemente, regresando un informe de error).\n188\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nLa divisi\u00f3n en tramas del flujo de bits es m\u00e1s dif\u00edcil de lo que parece a primera vista. Una manera de lograr esta divisi\u00f3n en tramas es introducir intervalos de tiempo entre las tramas, de la misma manera que los espacios entre las palabras en el texto com\u00fan. Sin embargo, las redes pocas veces ofrecen garant\u00edas sobre la temporizaci\u00f3n, por lo que es posible que estos intervalos sean eliminados o que puedan introducirse otros intervalos durante la transmisi\u00f3n. Puesto que es demasiado riesgoso depender de la temporizaci\u00f3n para marcar el inicio y el final de cada trama, se han dise\u00f1ado otros m\u00e9todos. En esta secci\u00f3n veremos cuatro m\u00e9todos: 1. Conteo de caracteres. 2. Banderas, con relleno de caracteres. 3. Banderas de inicio y fin, con relleno de bits. 4. Violaciones de codificaci\u00f3n de la capa f\u00edsica. El primer m\u00e9todo de entramado se vale de un campo en el encabezado para especificar el n\u00famero de caracteres en la trama. Cuando la capa de enlace de datos del destino ve la cuenta de caracteres, sabe cu\u00e1ntos caracteres siguen y, por lo tanto, d\u00f3nde est\u00e1 el fin de la trama. Esta t\u00e9cnica se muestra en la figura 3-4(a) para cuatro tramas de 5, 5, 8 y 8 caracteres de longitud, respectivamente.\nUn car\u00e1cter\nCuenta de caracteres\n(a) 5\n1 2\n3 4\nTrama 1, 5 caracteres\n5 6\n7\n8\n9\n8\nTrama 2, 5 caracteres\n0 1\n2 3\n4\n5 6\n8 7\nTrama 3, 8 caracteres\n8 9\n0\n1\n2 3\nTrama 4, 8 caracteres\nError\n(b)\n5\n1 2\n3 4\nTrama 1\n7 6\n7\n8\n9\nTrama 2 (err\u00f3nea)\n8\n0 1\n2 3\n4\n5 6\n8 7\n8 9\n0\n1\n2 3\nAhora es una cuenta de caracteres\nFigura 3-4. Un flujo de caracteres. (a) Sin errores. (b) Con un error.\nEl problema con este algoritmo es que la cuenta puede alterarse por un error de transmisi\u00f3n. Por ejemplo, si la cuenta de caracteres de 5 en la segunda trama de la figura 3-4(b) se vuelve un 7, el destino perder\u00e1 la sincron\u00eda y ser\u00e1 incapaz de localizar el inicio de la siguiente trama. Incluso si el destino sabe que la trama est\u00e1 mal porque la suma de verificaci\u00f3n es incorrecta, no tiene forma de saber d\u00f3nde comienza la siguiente trama. Regresar una trama a la fuente solicitando una retransmisi\u00f3n tampoco ayuda, ya que el destino no sabe cu\u00e1ntos caracteres tiene que saltar para\nSEC. 3.1\n189\nCUESTIONES DE DISE\u00d1O DE LA CAPA DE ENLACE DE DATOS\nllegar al inicio de la retransmisi\u00f3n. Por esta raz\u00f3n, en la actualidad casi no se utiliza el m\u00e9todo de conteo de caracteres. El segundo m\u00e9todo de entramado evita el problema de tener que sincronizar nuevamente despu\u00e9s de un error, haciendo que cada trama inicie y termine con bytes especiales. En el pasado, los bytes de inicio y final eran diferentes, pero en los a\u00f1os recientes la mayor\u00eda de los protocolos han utilizado el mismo byte, llamado bandera (o indicador), como delimitador de inicio y final, que en la figura 3-5(a) se muestra como FLAG. De esta manera, si el receptor pierde la sincron\u00eda, simplemente puede buscar la bandera para encontrar el final e inicio de la trama actual. Dos banderas consecutivas se\u00f1alan el final de una trama y el inicio de la siguiente.\nFLAG\nEncabezado\nTerminador\nCampo de carga \u00fatil\nFLAG\n(a) Caracteres originales\nDespu\u00e9s del relleno de caracteres\nA\nFLAG\nB\nA\nESC\nFLAG\nB\nA\nESC\nB\nA\nESC\nESC\nB\nA\nESC\nFLAG\nB\nA\nESC\nESC\nESC\nFLAG\nB\nA\nESC\nESC\nB\nA\nESC\nESC\nESC\nESC\nB\n(b)\nFigura 3-5. (a) Una trama delimitada por banderas. (b) Cuatro ejemplos de secuencias de bytes antes y despu\u00e9s del relleno de caracteres.\nCuando se utiliza este m\u00e9todo para transmitir datos binarios, como programas objeto o n\u00fameros de punto flotante, surge un problema serio. Se puede dar el caso con mucha facilidad de que el patr\u00f3n de bits de la bandera aparezca en los datos (payload), lo que interferir\u00eda en el entramado. Una forma de resolver este problema es hacer que la capa de enlace de datos del emisor inserte un byte de escape especial (ESC) justo antes de cada bandera \u201caccidental\u201d en los datos. La capa de enlace de datos del lado receptor quita el byte de escape antes de entregar los datos a la capa de red. Esta t\u00e9cnica se llama relleno de caracteres. Por lo tanto, una bandera de entramado se puede distinguir de uno en los datos por la ausencia o presencia de un byte de escape que la antecede. Por supuesto que surge la pregunta de qu\u00e9 sucede si un byte de escape aparece en medio de los datos. La respuesta es que tambi\u00e9n se rellena con un byte de escape. Por lo tanto, cualquier byte de escape individual es parte de una secuencia de escape, mientras que uno doble indica que un\n190\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nescape sencillo apareci\u00f3 de manera natural en los datos. En la figura 3-5(b) se muestran algunos ejemplos. En todos los casos, la secuencia de bytes que se entrega despu\u00e9s de la eliminaci\u00f3n de los bytes de escape es exactamente la misma que la secuencia de bytes original. El esquema de relleno de caracteres que se muestra en la figura 3-5 es una ligera simplificaci\u00f3n del esquema empleado en el protocolo PPP que la mayor\u00eda de las computadoras utiliza para comunicarse con el proveedor de servicios de Internet. M\u00e1s tarde analizaremos este protocolo. Una desventaja importante del uso de esta t\u00e9cnica de entramado es que est\u00e1 fuertemente atada a los caracteres de 8 bits. No todos los c\u00f3digos utilizan caracteres de 8 bits. Por ejemplo, UNICODE utiliza caracteres de 16 bits. A medida que se desarrollaron las redes, las desventajas de incorporar la longitud del c\u00f3digo de caracteres en el mecanismo de entramado se volvieron m\u00e1s obvias, por lo que tuvo que desarrollarse una t\u00e9cnica nueva que permitiera caracteres de tama\u00f1o arbitrario. La nueva t\u00e9cnica permite que las tramas de datos contengan un n\u00famero arbitrario de bits y admite c\u00f3digos de caracteres con un n\u00famero arbitrario de bits por car\u00e1cter. Dicha t\u00e9cnica funciona de la siguiente manera: cada trama comienza y termina con un patr\u00f3n especial de bits, 01111110 (que es de hecho una bandera). Cada vez que la capa de enlace de datos del emisor encuentra cinco unos consecutivos en los datos, autom\u00e1ticamente inserta un bit 0 en el flujo de bits saliente. Este relleno de bits es an\u00e1logo al relleno de caracteres, en el cual un byte de escape se inserta en el flujo de caracteres saliente antes de un byte igual a la bandera de entramado en los datos. Cuando el receptor ve cinco bits 1 de entrada consecutivos, seguidos de un bit 0, autom\u00e1ticamente extrae (es decir, borra) el bit 0 de relleno. As\u00ed como el relleno de caracteres es completamente transparente para la capa de red en ambas computadoras, tambi\u00e9n lo es el relleno de bits. Si los datos de usuario contienen el patr\u00f3n indicador 01111110, \u00e9ste se transmite como 011111010, pero se almacena en la memoria del receptor como 01111110. En la figura 3-6 se da un ejemplo del relleno de bits. (a) 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 (b) 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 0 1 0 Bits de relleno (c) 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0\nFigura 3-6. Relleno de bits. (a) Los datos originales. (b) Los datos, seg\u00fan aparecen en la l\u00ednea. (c) Los datos, como se guardan en la memoria del receptor tras eliminar el relleno.\nCon el relleno de bits, el l\u00edmite entre las dos tramas puede ser reconocido sin ambig\u00fcedades mediante el patr\u00f3n de banderas. De esta manera, si el receptor pierde la pista de d\u00f3nde est\u00e1, todo lo que tiene que hacer es explorar la entrada en busca de secuencias de banderas, pues s\u00f3lo pueden ocurrir en los l\u00edmites de las tramas y nunca en los datos. El \u00faltimo m\u00e9todo de entramado s\u00f3lo se aplica a las redes en las que la codificaci\u00f3n en el medio f\u00edsico contiene cierta redundancia. Por ejemplo, algunas LANs codifican un bit de datos usando dos bits f\u00edsicos. Normalmente, un bit 1 es un par alto-bajo, y un bit 0 es un par bajo-alto. El esquema implica que cada bit de datos tiene una transici\u00f3n a medio camino, lo que hace f\u00e1cil\nSEC. 3.1\nCUESTIONES DE DISE\u00d1O DE LA CAPA DE ENLACE DE DATOS\n191\npara el receptor localizar los l\u00edmites de los bits. Las combinaciones alto-alto y bajo-bajo no se usan para datos, pero en algunos protocolos se utilizan para delimitar tramas. Como nota final sobre el entramado, muchos protocolos de enlace de datos usan, por seguridad, una combinaci\u00f3n de cuenta de caracteres con uno de los otros m\u00e9todos. Cuando llega una trama, se usa el campo de cuenta para localizar el final de la trama. S\u00f3lo si el delimitador apropiado est\u00e1 presente en esa posici\u00f3n y la suma de verificaci\u00f3n es correcta, la trama se acepta como v\u00e1lida. De otra manera, se explora el flujo de entrada en busca del siguiente delimitador.\n3.1.3 Control de errores Una vez resuelto el problema de marcar el inicio y el final de cada trama, llegamos al siguiente problema: c\u00f3mo asegurar que todas las tramas realmente se entreguen en el orden apropiado a la capa de red del destino. Suponga que el emisor se dedic\u00f3 a enviar tramas sin importarle si estaban llegando de manera adecuada. Esto podr\u00eda estar bien para un servicio no orientado a la conexi\u00f3n sin confirmaci\u00f3n de recepci\u00f3n, pero no ser\u00e1 correcto para un servicio confiable orientado a la conexi\u00f3n. La manera normal de asegurar la entrega confiable de datos es proporcionar retroalimentaci\u00f3n al emisor sobre lo que est\u00e1 ocurriendo en el otro lado de la l\u00ednea. Por lo general, el protocolo exige que el receptor regrese tramas de control especiales que contengan confirmaciones de recepci\u00f3n positivas o negativas de las tramas que llegan. Si el emisor recibe una confirmaci\u00f3n de recepci\u00f3n positiva de una trama, sabe que la trama lleg\u00f3 correctamente. Por otra parte, una confirmaci\u00f3n de recepci\u00f3n negativa significa que algo fall\u00f3 y que la trama debe transmitirse otra vez. Una complicaci\u00f3n adicional surge de la posibilidad de que los problemas de hardware causen la desaparici\u00f3n de una trama completa (por ejemplo, por una r\u00e1faga de ruido). En este caso, el receptor no reaccionar\u00e1 en absoluto, ya que no tiene raz\u00f3n para reaccionar. Debe quedar claro que un protocolo en el cual el emisor env\u00eda una trama y luego espera una confirmaci\u00f3n de recepci\u00f3n, positiva o negativa, se quedar\u00eda esperando eternamente si se pierde por completo una trama debido a una falla de hardware. Esta posibilidad se maneja introduciendo temporizadores en la capa de enlace de datos. Cuando el emisor env\u00eda una trama, por lo general tambi\u00e9n inicia un temporizador. \u00c9ste se ajusta de modo que expire cuando haya transcurrido un intervalo suficiente para que la trama llegue a su destino, se procese ah\u00ed y la confirmaci\u00f3n de recepci\u00f3n se regrese al emisor. Por lo general, la trama se recibir\u00e1 de manera correcta y la confirmaci\u00f3n de recepci\u00f3n llegar\u00e1 antes de que el temporizador expire, en cuyo caso se cancelar\u00e1. Sin embargo, si la trama o la confirmaci\u00f3n de recepci\u00f3n se pierden, el temporizador expirar\u00e1, alertando al emisor sobre un problema potencial. La soluci\u00f3n obvia es simplemente transmitir de nuevo la trama. Sin embargo, aunque las tramas pueden transmitirse muchas veces, existe el peligro de que el receptor acepte la misma trama dos o m\u00e1s veces y que la pase a la capa de red m\u00e1s de una vez. Para evitar que esto ocurra, generalmente es necesario asignar n\u00fameros de secuencia a las tramas que salen, a fin de que el receptor pueda distinguir las retransmisiones de los originales.\n192\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nEl asunto de la administraci\u00f3n de temporizadores y n\u00fameros de secuencia para asegurar que cada trama llegue finalmente a la capa de red en el destino una sola vez, ni m\u00e1s ni menos, es una parte importante de las tareas de la capa de enlace de datos. Posteriormente en este cap\u00edtulo estudiaremos la manera en que se lleva a cabo esta administraci\u00f3n, observando una serie de ejemplos de complejidad creciente.\n3.1.4 Control de flujo Otro tema de dise\u00f1o importante que se presenta en la capa de enlace de datos (y tambi\u00e9n en las capas superiores) es qu\u00e9 hacer con un emisor que quiere transmitir tramas de manera sistem\u00e1tica y a mayor velocidad que aquella con que puede aceptarlos el receptor. Esta situaci\u00f3n puede ocurrir f\u00e1cilmente cuando el emisor opera en una computadora r\u00e1pida (o con baja carga) y el receptor opera en una m\u00e1quina lenta (o sobrecargada). El emisor env\u00eda las tramas a alta velocidad hasta que satura por completo al receptor. Aunque la transmisi\u00f3n est\u00e9 libre de errores, en cierto punto el receptor simplemente no ser\u00e1 capaz de manejar las tramas conforme lleguen y comenzar\u00e1 a perder algunas. Es obvio que tiene que hacerse algo para evitar esta situaci\u00f3n. Por lo general se utilizan dos m\u00e9todos. En el primero, el control de flujo basado en retroalimentaci\u00f3n, el receptor regresa informaci\u00f3n al emisor autoriz\u00e1ndolo para enviar m\u00e1s datos o indic\u00e1ndole su estado. En el segundo, el control de flujo basado en tasa, el protocolo tiene un mecanismo integrado que limita la tasa a la que el emisor puede transmitir los datos, sin recurrir a retroalimentaci\u00f3n por parte del receptor. En este cap\u00edtulo estudiaremos el m\u00e9todo de control de flujo basado en retroalimentaci\u00f3n debido a que el m\u00e9todo basado en tasa no se utiliza en la capa de enlace de datos. En el cap\u00edtulo 5 analizaremos el m\u00e9todo basado en tasa. Se conocen varios esquemas de control de flujo basados en retroalimentaci\u00f3n, pero la mayor\u00eda se fundamenta en el mismo principio. El protocolo contiene reglas bien definidas respecto al momento en que un emisor puede enviar la siguiente trama. Con frecuencia estas reglas proh\u00edben el env\u00edo de tramas hasta que el receptor lo autorice, impl\u00edcita o expl\u00edcitamente. Por ejemplo, cuando se establece una conexi\u00f3n, el receptor podr\u00eda decir: \u201cPuedes enviarme n tramas ahora, pero una vez que lo hagas, no env\u00edes nada m\u00e1s hasta que te indique que contin\u00faes\u201d. Mas adelante analizaremos los detalles.\n3.2 DETECCI\u00d3N Y CORRECCI\u00d3N DE ERRORES Como vimos en el cap\u00edtulo 2, el sistema telef\u00f3nico tiene tres partes: los conmutadores, las troncales interoficinas y los circuitos locales. Las primeras dos son ahora casi enteramente digitales en la mayor\u00eda de los pa\u00edses desarrollados. Los circuitos locales a\u00fan son cables de par trenzado de cobre anal\u00f3gicos en todos lados y continuar\u00e1n as\u00ed durante d\u00e9cadas debido al enorme costo de su reemplazo. Aunque los errores son raros en la parte digital, a\u00fan son comunes en los circuitos locales. Adem\u00e1s, la comunicaci\u00f3n inal\u00e1mbrica se est\u00e1 volviendo m\u00e1s com\u00fan, y las tasas de errores son de magnitud mucho mayor que en las troncales de fibra interoficinas. La conclusi\u00f3n es: los errores de transmisi\u00f3n van a ser inevitables durante muchos a\u00f1os m\u00e1s. Tendremos que aprender a lidiar con ellos.\nSEC. 3.2\nDETECCI\u00d3N Y CORRECCI\u00d3N DE ERRORES\n193\nComo resultado de los procesos f\u00edsicos que los generan, los errores en algunos medios (por ejemplo, la radio) tienden a aparecer en r\u00e1fagas y no de manera individual. El hecho de que los errores lleguen en r\u00e1faga tiene ventajas y desventajas con respecto a los errores aislados de un solo bit. Por el lado de las ventajas, los datos de computadora siempre se env\u00edan en bloques de bits. Suponga que el tama\u00f1o de bloque es de 1000 bits y la tasa de errores es de 0.001 por bit. Si los errores fueran independientes, la mayor\u00eda de los bloques contendr\u00eda un error. Sin embargo, si los errores llegan en r\u00e1fagas de 100, en promedio s\u00f3lo uno o dos bloques de cada 100 ser\u00e1n afectados. La desventaja de los errores en r\u00e1faga es que son mucho m\u00e1s dif\u00edciles de detectar y corregir que los errores aislados.\n3.2.1 C\u00f3digos de correcci\u00f3n de errores Los dise\u00f1adores de redes han desarrollado dos estrategias principales para manejar los errores. Una es incluir suficiente informaci\u00f3n redundante en cada bloque de datos transmitido para que el receptor pueda deducir lo que debi\u00f3 ser el car\u00e1cter transmitido. La otra estrategia es incluir s\u00f3lo suficiente redundancia para permitir que el receptor sepa que ha ocurrido un error (pero no qu\u00e9 error) y entonces solicite una retransmisi\u00f3n. La primera estrategia utiliza c\u00f3digos de correcci\u00f3n de errores; la segunda usa c\u00f3digos de detecci\u00f3n de errores. El uso de c\u00f3digos de correcci\u00f3n de errores usualmente se conoce como correcci\u00f3n de errores hacia adelante. Cada una de estas t\u00e9cnicas ocupa un nicho ecol\u00f3gico diferente. En los canales que son altamente confiables, como los de fibra, es m\u00e1s econ\u00f3mico utilizar un c\u00f3digo de detecci\u00f3n de errores y simplemente retransmitir los bloques defectuosos que surgen ocasionalmente. Sin embargo, en los canales que causan muchos errores, como los enlaces inal\u00e1mbricos, es mejor agregar la redundancia suficiente a cada bloque para que el receptor pueda descubrir cu\u00e1l era el bloque original transmitido, en lugar de confiar en una retransmisi\u00f3n, que tambi\u00e9n podr\u00eda tener errores. Para entender la manera en que pueden manejarse los errores, es necesario estudiar de cerca lo que es en realidad un error. Por lo general, una trama consiste en m bits de datos (es decir, de mensaje) y r bits redundantes o de verificaci\u00f3n. Sea la longitud total n (es decir, n = m + r). A una unidad de n bits que contiene datos y bits de verificaci\u00f3n se le conoce como palabra codificada de n bits. Dadas dos palabras codificadas cualesquiera, digamos 10001001 y 10110001, es posible determinar cu\u00e1ntos bits correspondientes difieren. En este caso, difieren tres bits. Para determinar la cantidad de bits diferentes, basta aplicar un OR exclusivo a las dos palabras codificadas y contar la cantidad de bits 1 en el resultado, por ejemplo: 10001001 10110001 00111000\nLa cantidad de posiciones de bits en la que difieren dos palabras codificadas se llama distancia de Hamming (Hamming, 1950). Su significado es que, si dos palabras codificadas est\u00e1n separadas una distancia de Hamming d, se requerir\u00e1n d errores de un bit para convertir una en la otra.\n194\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nEn la mayor\u00eda de las aplicaciones de transmisi\u00f3n de datos, todos los 2m mensajes de datos posibles son legales, pero debido a la manera en que se calculan los bits de verificaci\u00f3n no se usan todas las 2n palabras codificadas posibles. Dado el algoritmo de c\u00e1lculo de los bits de verificaci\u00f3n, es posible construir una lista completa de palabras codificadas legales y encontrar, en esta lista, las dos palabras codificadas cuya distancia de Hamming es m\u00ednima. \u00c9sta es la distancia de Hamming de todo el c\u00f3digo. Las propiedades de detecci\u00f3n y correcci\u00f3n de errores de un c\u00f3digo dependen de su distancia de Hamming. Para detectar d errores se necesita un c\u00f3digo con distancia d + 1, pues con tal c\u00f3digo no hay manera de que d errores de un bit puedan cambiar una palabra codificada v\u00e1lida a otra. Cuando el receptor ve una palabra codificada no v\u00e1lida, sabe que ha ocurrido un error de transmisi\u00f3n. De manera similar, para corregir d errores se necesita un c\u00f3digo de distancia 2d + 1, pues as\u00ed las palabras codificadas legales est\u00e1n tan separadas que, aun con d cambios, la palabra codificada original sigue estando m\u00e1s cercana que cualquier otra palabra codificada, por lo que puede determinarse de manera \u00fanica. Como ejemplo sencillo de c\u00f3digo de detecci\u00f3n de errores, considere un c\u00f3digo en el que se agrega un solo bit de paridad a los datos. Este bit se escoge de manera que la cantidad de bits 1 en la palabra c\u00f3digo sea par (o impar). Por ejemplo, cuando se env\u00eda 1011010 con paridad par, se agrega un bit al final, y se vuelve 10110100. Con paridad impar, 1011010 se vuelve 10110101. Un c\u00f3digo con un solo bit de paridad tiene una distancia de 2, pues cualquier error de un bit produce una palabra codificada con la paridad equivocada. Este sistema puede usarse para detectar errores individuales. Como ejemplo sencillo de c\u00f3digo de correcci\u00f3n de errores, considere un c\u00f3digo con s\u00f3lo cuatro palabras codificadas v\u00e1lidas: 0000000000,\n0000011111,\n1111100000\ny 1111111111\nEste c\u00f3digo tiene una distancia de 5, lo que significa que puede corregir errores dobles. Si llega la palabra codificada 0000000111, el receptor sabe que el original debi\u00f3 ser 0000011111. Sin embargo, si un error triple cambia 0000000000 a 0000000111, el error no se corregir\u00e1 de manera adecuada. Imagine que deseamos dise\u00f1ar un c\u00f3digo con m bits de mensaje y r bits de verificaci\u00f3n que permitir\u00e1 la correcci\u00f3n de todos los errores individuales. Cada uno de los 2m mensajes legales tiene n palabras codificadas ilegales a una distancia 1 de \u00e9l. \u00c9stas se forman invirtiendo en forma sistem\u00e1tica cada uno de los n bits de la palabra codificada de n bits que la forman. Por lo tanto, cada uno de los 2m mensajes legales requiere n + 1 patrones de bits dedicados a \u00e9l. Dado que la cantidad de patrones de bits es 2n, debemos tener (n + 1)2m \u2264 2n. Usando n = m + r, este requisito se vuelve (m + r + 1) \u2264 2r. Dado m, esto impone un l\u00edmite inferior a la cantidad de bits de verificaci\u00f3n necesarios para corregir errores individuales. De hecho, este l\u00edmite inferior te\u00f3rico puede lograrse usando un m\u00e9todo gracias a Hamming (1950). Los bits de la palabra codificada se numeran en forma consecutiva, comenzando por el bit 1 a la izquierda, el bit 2 a su derecha inmediata, etc\u00e9tera. Los bits que son potencias de 2 (1, 2, 4, 8, 16, etc\u00e9tera) son bits de verificaci\u00f3n. El resto (3, 5, 6, 7, 9, etc\u00e9tera) se rellenan con los m bits de datos. Cada bit de verificaci\u00f3n obliga a que la paridad de un grupo de bits, incluy\u00e9ndolo a \u00e9l\nSEC. 3.2\nDETECCI\u00d3N Y CORRECCI\u00d3N DE ERRORES\n195\nmismo, sea par (o impar). Un bit puede estar incluido en varios c\u00e1lculos de paridad. Para ver a qu\u00e9 bits de verificaci\u00f3n contribuye el bit de datos en la posici\u00f3n k, reescriba k como una suma de potencias de 2. Por ejemplo, 11 = 1 + 2 + 8 y 29 = 1 + 4 + 8 + 16. Se comprueba un bit solamente por los bits de verificaci\u00f3n que ocurren en su expansi\u00f3n (por ejemplo, el bit 11 es comprobado por los bits 1, 2 y 8). Cuando llega una palabra codificada, el receptor inicializa a cero un contador y luego examina cada bit de verificaci\u00f3n, k (k = 1, 2, 4, 8,...), para ver si tiene la paridad correcta. Si no, suma k al contador. Si el contador es igual a cero tras haber examinado todos los bits de verificaci\u00f3n (es decir, si todos fueron correctos), la palabra codificada se acepta como v\u00e1lida. Si el contador es diferente de cero, contiene el n\u00famero del bit incorrecto. Por ejemplo, si los bits de verificaci\u00f3n 1, 2 y 8 tienen errores, el bit invertido es el 11, pues es el \u00fanico comprobado por los bits 1, 2 y 8. En la figura 3-7 se muestran algunos caracteres ASCII de 7 bits codificados como palabras codificadas de 11 bits usando un c\u00f3digo de Hamming. Recuerde que los datos se encuentran en las posiciones de bit 3, 5, 6, 7, 9, 10 y 11. Car\u00e1cter\nASCII\nBits de verificaci\u00f3n\nH a m m i n g c o d e Orden de transmisi\u00f3n de bits\nFigura 3-7. Uso de un c\u00f3digo de Hamming para corregir errores en r\u00e1faga.\nLos c\u00f3digos de Hamming s\u00f3lo pueden corregir errores individuales. Sin embargo, hay un truco que puede servir para que los c\u00f3digos de Hamming corrijan errores de r\u00e1faga. Se dispone como matriz una secuencia de k palabras codificadas consecutivas, con una palabra codificada por fila. Normalmente se transmitir\u00eda una palabra codificada a la vez, de izquierda a derecha. Para corregir los errores en r\u00e1faga, los datos deben transmitirse una columna a la vez, comenzando por la columna del extremo izquierdo. Cuando todos los bits k han sido enviados, se env\u00eda la segunda columna, y as\u00ed sucesivamente. Cuando la trama llega al receptor, la matriz se reconstruye, una columna a la vez. Si ocurre un error en r\u00e1faga de longitud k, cuando mucho se habr\u00e1 afectado 1 bit de cada una de las k palabras codificadas; sin embargo, el c\u00f3digo de Hamming puede corregir un error por palabra codificada, as\u00ed que puede restaurarse la totalidad del bloque. Este m\u00e9todo usa kr bits de verificaci\u00f3n para inmunizar bloques de km bits de datos contra un solo error en r\u00e1faga de longitud k o menos.\n196\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\n3.2.2 C\u00f3digos de detecci\u00f3n de errores Los c\u00f3digos de correcci\u00f3n de errores se utilizan de manera amplia en los enlaces inal\u00e1mbricos, que son notoriamente m\u00e1s ruidosos y propensos a errores que el alambre de cobre o la fibra \u00f3ptica. Sin los c\u00f3digos de correcci\u00f3n de errores ser\u00eda dif\u00edcil pasar cualquier cosa. Sin embargo, a trav\u00e9s del cable de cobre o de la fibra \u00f3ptica, la tasa de error es mucho m\u00e1s baja, por lo que la detecci\u00f3n de errores y la retransmisi\u00f3n por lo general son m\u00e1s eficientes ah\u00ed para manejar un error ocasional. Como un ejemplo simple, considere un canal en el que los errores son aislados y la tasa de errores es de 10\u22126 por bit. Sea el tama\u00f1o de bloque 1000 bits. Para proporcionar correcci\u00f3n de errores en bloques de 1000 bits se requieren 10 bits de verificaci\u00f3n; un megabit de datos requerir\u00e1 10000 bits de verificaci\u00f3n. Para detectar un solo bloque con 1 bit de error, basta con un bit de paridad por bloque. Por cada 1000 bloques se tendr\u00e1 que transmitir un bloque extra (1001 bits). La sobrecarga total del m\u00e9todo de detecci\u00f3n de errores + retransmisi\u00f3n es de s\u00f3lo 2001 bits por megabit de datos, contra 10,000 bits con un c\u00f3digo de Hamming. Si se agrega un solo bit de paridad a un bloque y el bloque viene muy alterado por una r\u00e1faga de errores prolongada, la probabilidad de que se detecte el error es de 0.5, lo que dif\u00edcilmente es aceptable. Es posible aumentar la probabilidad considerando a cada bloque por enviar como una matriz rectangular de n bits de ancho y k bits de alto, como se describi\u00f3 anteriormente. Se calcula por separado un bit de paridad para cada columna y se agrega a la matriz como \u00faltima fila. La matriz se transmite entonces fila por fila. Cuando llega el bloque, el receptor comprueba todos los bits de paridad. Si cualquiera de ellos est\u00e1 mal, solicita la retransmisi\u00f3n del bloque. Se solicitan retransmisiones adicionales hasta que un bloque entero se reciba sin ning\u00fan error de paridad. Este m\u00e9todo puede detectar una sola r\u00e1faga de longitud n, pues s\u00f3lo se cambiar\u00e1 un bit por columna. Sin embargo, una r\u00e1faga de longitud n + 1 pasar\u00e1 sin ser detectada si se invierten el primero y \u00faltimo bits, y si todos los dem\u00e1s bits est\u00e1n correctos. (Una r\u00e1faga de errores no implica que todos los bits est\u00e1n mal; s\u00f3lo implica que cuando menos el primero y el \u00faltimo est\u00e1n mal.) Si el bloque est\u00e1 muy alterado por una r\u00e1faga continua o por m\u00faltiples r\u00e1fagas m\u00e1s cortas, la probabilidad de que cualquiera de las n columnas tenga, por accidente, la paridad correcta es de 0.5, por lo que la probabilidad de aceptar un bloque alterado cuando no se debe es de 2\u2212n. Aunque en algunos casos el m\u00e9todo anterior puede ser adecuado, en la pr\u00e1ctica se usa uno muy definido: el c\u00f3digo polinomial (tambi\u00e9n conocido como c\u00f3digo de redundancia c\u00edclica o c\u00f3digo CRC). Los c\u00f3digos polinomiales se basan en el tratamiento de cadenas de bits como representaciones de polinomios con coeficientes de 0 y 1 solamente. Una trama de k bits se considera como la lista de coeficientes de un polinomio con k t\u00e9rminos que van de xk\u22121 a x0. Se dice que tal polinomio es de grado k \u2212 1. El bit de orden mayor (que se encuentra m\u00e1s a la izquierda) es el coeficiente de xk\u22121, el siguiente bit es el coeficiente de xk\u22122 y as\u00ed sucesivamente. Por ejemplo, 110001 tiene 6 bits y, por lo tanto, representa un polinomio de seis t\u00e9rminos con coeficientes 1, 1, 0, 0, 0 y 1: x5 + x4 + x0.\nSEC. 3.2\n197\nDETECCI\u00d3N Y CORRECCI\u00d3N DE ERRORES\nLa aritm\u00e9tica polinomial se hace mediante una operaci\u00f3n m\u00f3dulo 2, de acuerdo con las reglas de la teor\u00eda de campos algebraicos. No hay acarreos para la suma, ni pr\u00e9stamos para la resta. Tanto la suma como la resta son id\u00e9nticas a un OR exclusivo. Por ejemplo: 10011011 + 11001010 ________ 01010001\n00110011 + 11001101 ________ 11111110\n11110000 \u2212 10100110 ________ 01010110\n01010101 \u221210101111 ________ 11111010\nLa divisi\u00f3n se lleva a cabo de la misma manera que en binario, excepto que la resta es m\u00f3dulo 2, igual que antes. Se dice que un divisor \u201ccabe\u201d en un dividendo si \u00e9ste tiene tantos bits como el divisor. Cuando se emplea el m\u00e9todo de c\u00f3digo polinomial, el emisor y el receptor deben acordar por adelantado un polinomio generador, G(x). Tanto los bits de orden mayor y menor del generador deben ser 1. Para calcular la suma de verificaci\u00f3n para una trama con m bits, correspondiente al polinomio M(x), la trama debe ser m\u00e1s larga que el polinomio generador. La idea es incluir una suma de verificaci\u00f3n al final de la trama de tal manera que el polinomio representado por la trama con suma de verificaci\u00f3n sea divisible entre G(x). Cuando el receptor recibe la trama con suma de verificaci\u00f3n, intenta dividirla entre G(x). Si hay un residuo, ha habido un error de transmisi\u00f3n. El algoritmo para calcular la suma de verificaci\u00f3n es el siguiente: 1. Sea r el grado de G(x). Anexe r bits cero al final de la trama, para que ahora contenga m + r bits y corresponda al polinomio xrM(x). 2. Divida la cadena de bits correspondiente a G(x) entre la correspondiente a xrM(x) usando una divisi\u00f3n m\u00f3dulo 2. 3. Reste el residuo (que siempre es de r o menos bits) a la cadena de bits correspondiente a xrM(x) usando una resta m\u00f3dulo 2. El resultado es la trama con suma de verificaci\u00f3n que va a transmitirse. Llame a su polinomio T(x). En la figura 3-8 se ilustra el c\u00e1lculo para una trama 1101011011 utilizando el generador G(x) = x4 + x + 1. Debe quedar claro que T(x) es divisible (m\u00f3dulo 2) entre G(x). En cualquier problema de divisi\u00f3n, si se resta el residuo del dividendo, lo que queda es divisible entre el divisor. Por ejemplo, en base 10, si se divide 210,278 entre 10,941, el residuo es 2399. Si se resta 2399 a 210,278, lo que queda (207,879) es divisible entre 10,941. Ahora analizaremos el alcance de este m\u00e9todo. \u00bfQu\u00e9 tipos de error se detectar\u00e1n? Imagine que ocurre un error de transmisi\u00f3n tal que en lugar de que llegue la cadena de bits para T(x), llega T(x) + E(x). Cada bit 1 en E(x) corresponde a un bit que ha sido invertido. Si hay k bits 1 en E(x), han ocurrido k errores de un solo bit. Una r\u00e1faga de errores individual se caracteriza por un 1 inicial, una mezcla de ceros y unos, y un 1 final, siendo los dem\u00e1s bits 0.\n198\nLA CAPA DE ENLACE DE DATOS Trama\nCAP. 3\n:\nGenerador: Mensaje tras anexar 4 bits cero:\nResiduo\nTrama transmitida:\nFigura 3-8. C\u00e1lculo de la suma de verificaci\u00f3n de c\u00f3digo polinomial.\nAl recibir la trama con suma de verificaci\u00f3n, el receptor la divide entre G(x); es decir, calcula [T(x) + E(x)]/G(x). T(x)/G(x) es 0, por lo que el resultado del c\u00e1lculo es simplemente E(x)/G(x). No se detectar\u00e1n los errores que por casualidad correspondan a polinomios que contengan G(x) como factor; todos los dem\u00e1s errores ser\u00e1n atrapados. Si ha ocurrido un error de un solo bit, E(x) = xi, donde i determina qu\u00e9 bit es err\u00f3neo. Si G(x) contiene dos o m\u00e1s t\u00e9rminos, nunca ser\u00e1 divisor exacto de E(x), por lo que se detectar\u00e1n los errores de un solo bit.\nSEC. 3.2\nDETECCI\u00d3N Y CORRECCI\u00d3N DE ERRORES\n199\nSi han ocurrido dos errores de un solo bit aislados, E(x) = x i + x j, donde i > j. Esto tambi\u00e9n se puede escribir como E(x) = x j(x i\u2212j + 1). Si suponemos que G(x) no es divisible entre x, una condici\u00f3n suficiente para detectar todos los errores dobles es que G(x) no divida a xk + 1 para ninguna k hasta el valor m\u00e1ximo de i \u2212 j (es decir, hasta la longitud m\u00e1xima de la trama). Se conocen polinomios sencillos de bajo grado que dan protecci\u00f3n a tramas largas. Por ejemplo, x15 + x14 + 1 no ser\u00e1 divisor exacto de xk + 1 para ning\u00fan valor de k menor que 32,768. Si hay una cantidad impar de bits con error, E(x) contiene un n\u00famero impar de t\u00e9rminos (por ejemplo, x5 + x2 + 1, pero no x2 + 1). Curiosamente, ning\u00fan polinomio con un n\u00famero impar de t\u00e9rminos posee a x + 1 como un factor en el sistema de m\u00f3dulo 2. Haciendo x + 1 un factor de G(x), podemos atrapar todos los errores consistentes en un n\u00famero impar de bits invertidos. Para comprobar que ning\u00fan polinomio con una cantidad impar de t\u00e9rminos es divisible entre x + 1, suponga que E(x) tiene un n\u00famero impar de t\u00e9rminos y que es divisible entre x + 1. Factorice E(x) en (x + 1) Q(x). Ahora eval\u00fae E(1) = (1 + 1)Q(1). Dado que 1 + 1 = 0 (m\u00f3dulo 2), E(1) debe ser cero. Si E(x) tiene un n\u00famero impar de t\u00e9rminos, la sustituci\u00f3n de 1 por x en cualquier lugar siempre dar\u00e1 como resultado un 1. Por lo tanto, ning\u00fan polinomio con un n\u00famero impar de t\u00e9rminos es divisible entre x + 1. Por \u00faltimo, y lo que es m\u00e1s importante, un c\u00f3digo polinomial con r bits de verificaci\u00f3n detectar\u00e1 todos los errores en r\u00e1faga de longitud \u2264 r. Un error en r\u00e1faga de longitud k puede representarse mediante xi(xk\u22121 +. . .+ 1), donde i determina la distancia a la que se encuentra la r\u00e1faga desde el extremo derecho de la trama recibida. Si G(x) contiene un t\u00e9rmino x0, no tendr\u00e1 xi como factor, por lo que, si el grado de la expresi\u00f3n entre par\u00e9ntesis es menor que el grado de G(x), el residuo nunca puede ser cero. Si la longitud de la r\u00e1faga es de r + 1, el residuo de la divisi\u00f3n entre G(x) ser\u00e1 cero si, y s\u00f3lo si, la r\u00e1faga es id\u00e9ntica a G(x). Por la definici\u00f3n de r\u00e1faga, el primero y el \u00faltimo bit deben ser 1, as\u00ed que el que sean iguales o no depende de los r \u2212 1 bits intermedios. Si se consideran igualmente probables todas las combinaciones, la probabilidad de que se acepte como v\u00e1lida tal trama incorrecta es de 1/2 r\u22121. Tambi\u00e9n puede demostrarse que cuando ocurre una r\u00e1faga de errores mayor que r + 1, o cuando ocurren varias r\u00e1fagas m\u00e1s cortas, la probabilidad de que una trama incorrecta no sea detectada es de 1/2 r, suponiendo que todos los patrones de bits sean igualmente probables. Ciertos polinomios se han vuelto est\u00e1ndares internacionales. El que se utiliza en el IEEE 802 es: x32 x26 x23 x22 x16 x12 x11 x10 x8 x7 x5 x4 x2 x1 1 Entre otras propiedades deseables, tiene la de que detecta todas las r\u00e1fagas con una longitud de 32 o menor y todas las r\u00e1fagas que afecten un n\u00famero impar de bits. Aunque el c\u00e1lculo requerido para obtener la suma de verificaci\u00f3n puede parecer complicado, Peterson y Brown (1961) han demostrado que puede construirse un circuito sencillo con un registro de desplazamiento para calcular y comprobar las sumas de verificaci\u00f3n por hardware. En la pr\u00e1ctica, casi siempre se usa este hardware. La mayor\u00eda de las LANs lo utiliza y, en algunos casos, tambi\u00e9n lo hacen las l\u00edneas punto a punto.\n200\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nDurante d\u00e9cadas se ha supuesto que las tramas para las que se generan sumas de verificaci\u00f3n contienen bits aleatorios. Todos los an\u00e1lisis de algoritmos de suma de verificaci\u00f3n se han hecho bajo este supuesto. En fechas m\u00e1s recientes, la inspecci\u00f3n de datos reales ha demostrado que este supuesto es equivocado. Como consecuencia, en algunas circunstancias los errores no detectados son mucho m\u00e1s comunes de lo que se pensaba anteriormente (Partridge y cols., 1995).\n3.3 PROTOCOLOS ELEMENTALES DE ENLACE DE DATOS Como introducci\u00f3n al tema de los protocolos, comenzaremos por estudiar tres protocolos de complejidad creciente. Los lectores interesados pueden conseguir un simulador de estos protocolos y otros subsecuentes a trav\u00e9s de WWW (vea el prefacio). Antes de estudiar los protocolos, es \u00fatil hacer expl\u00edcitos algunos de los supuestos impl\u00edcitos del modelo de comunicaciones. Para comenzar, estamos suponiendo que en las capas f\u00edsica, de enlace de datos y de red hay procesos independientes que se comunican pasando mensajes de un lado a otro. En muchos casos, los procesos de las capas f\u00edsica y de enlace de datos se ejecutan en un procesador dentro de un chip especial de E/S y los de la capa de red lo hacen en la CPU principal. Sin embargo, tambi\u00e9n puede haber otras implementaciones (por ejemplo, tres procesos en un solo chip de E/S o las capas f\u00edsica y de enlace de datos como procedimientos invocados por el proceso de la capa de red). En cualquier caso, el hecho de tratar las tres capas como procesos independientes hace m\u00e1s n\u00edtido el an\u00e1lisis en el terreno conceptual y tambi\u00e9n sirve para subrayar la independencia de las capas. Otro supuesto clave es que la m\u00e1quina A desea mandar un flujo considerable de datos a la m\u00e1quina B usando un servicio confiable orientado a la conexi\u00f3n. Despu\u00e9s consideraremos el caso en que B tambi\u00e9n quiere mandar datos a A de manera simult\u00e1nea. Se ha supuesto que A tiene un suministro infinito de datos listos para ser enviados y nunca tiene que esperar a que se produzcan datos. Cuando la capa de enlace de datos de A solicita datos, la capa de red siempre es capaz de proporcionarlos de inmediato. (Esta restricci\u00f3n tambi\u00e9n se desechar\u00e1 posteriormente.) Tambi\u00e9n supondremos que las m\u00e1quinas no fallan. Es decir, estos protocolos manejan errores de comunicaci\u00f3n, pero no los problemas causados por computadoras que fallan y se reinician. En lo que concierne a la capa de enlace de datos, el paquete que se le pasa a trav\u00e9s de la interfaz desde la capa de red es de datos puros, que deben ser entregados bit por bit a la capa de red del destino. El hecho de que la capa de red del destino pueda interpretar parte del paquete como un encabezado no es de importancia para la capa de enlace de datos. Cuando la capa de enlace de datos acepta un paquete, lo encapsula en una trama agreg\u00e1ndole un encabezado y un terminador de enlace de datos (vea la figura 3-1). Por lo tanto, una trama consiste en un paquete incorporado, cierta informaci\u00f3n de control (en el encabezado) y una suma de verificaci\u00f3n (en el terminador). A continuaci\u00f3n la trama se transmite a la capa de enlace de datos de la otra m\u00e1quina. Supondremos que existen procedimientos de biblioteca adecuados to_ physical_ layer para enviar una trama y from_ physical_layer para recibir una trama. El hardware emisor calcula y agrega la suma de verificaci\u00f3n (y de esta manera crea el terminador) por lo que el software\nSEC. 3.3\nPROTOCOLOS ELEMENTALES DE ENLACE DE DATOS\n201\nde la capa de enlace de datos no necesita preocuparse por ella. Por ejemplo, podr\u00eda utilizarse el algoritmo polinomial analizado antes en este cap\u00edtulo. Inicialmente el receptor no tiene nada que hacer. S\u00f3lo est\u00e1 esperando que ocurra algo. En los protocolos de ejemplo de este cap\u00edtulo indicamos que la capa de enlace de datos est\u00e1 en espera de que ocurra algo con la llamada de procedimiento wait_ for_event(&event). Este procedimiento s\u00f3lo regresa cuando ocurre algo (por ejemplo, cuando llega una trama). Al regresar, la variable event indica lo que ha ocurrido. El grupo de eventos posibles difiere para cada uno de los diferentes protocolos que describiremos, y se definir\u00e1n por separado para cada protocolo. Observe que en una situaci\u00f3n m\u00e1s realista, la capa de enlace de datos no se quedar\u00e1 en un ciclo cerrado esperando un evento, como hemos sugerido, sino que recibir\u00e1 una interrupci\u00f3n, la que ocasionar\u00e1 que suspenda lo que estaba haciendo y proceda a manejar la trama entrante. Sin embargo, por sencillez ignoraremos todos los detalles de la actividad paralela en la capa de enlace de datos y daremos por hecho que la capa est\u00e1 dedicada de tiempo completo a manejar nuestro canal. Cuando llega una trama al receptor, el hardware calcula la suma de verificaci\u00f3n. Si \u00e9sta es incorrecta (es decir, si hubo un error de transmisi\u00f3n), se le informa a la capa de enlace de datos (event = cksum_err). Si la trama entrante llega sin da\u00f1o, tambi\u00e9n se le informa a la capa de enlace de datos (event = frame_arrival) para que pueda adquirir la trama para inspeccionarla usando from_ physical_layer. Tan pronto como la capa de enlace de datos receptora adquiere una trama sin da\u00f1os, revisa la informaci\u00f3n de control del encabezado y, si todo est\u00e1 bien, pasa la parte que corresponde al paquete a la capa de red. En ninguna circunstancia se entrega un encabezado de trama a la capa de red. Hay una buena raz\u00f3n por la que la capa de red nunca debe recibir ninguna parte del encabezado de trama: para mantener completamente separados el protocolo de red y el de enlace de datos. En tanto la capa de red no sepa nada en absoluto sobre el protocolo de enlace de datos ni el formato de la trama, \u00e9stos podr\u00e1n cambiarse sin requerir cambios en el software de la capa de red. Al proporcionarse una interfaz r\u00edgida entre la capa de red y la de enlace de datos se simplifica en gran medida el dise\u00f1o del software, pues los protocolos de comunicaci\u00f3n de las diferentes capas pueden evolucionar en forma independiente. En la figura 3-9 se muestran algunas declaraciones comunes (en C) para muchos de los protocolos que se analizar\u00e1n despu\u00e9s. All\u00ed se definen cinco estructuras de datos: boolean, seq_nr, packet, frame_kind y frame. Un boolean es un tipo de dato num\u00e9rico que puede tener los valores true y false. Un seq_nr (n\u00famero de secuencia) es un entero peque\u00f1o que sirve para numerar las tramas, a fin de distinguirlas. Estos n\u00fameros de secuencia van de 0 hasta MAX_SEQ (inclusive), que se define en cada protocolo que lo necesita. Un packet es la unidad de intercambio de informaci\u00f3n entre la capa de red y la de enlace de datos en la misma m\u00e1quina, o entre entidades iguales de la capa de red. En nuestro modelo siempre contiene MAX_PKT bytes, pero en la pr\u00e1ctica ser\u00eda de longitud variable. Un frame est\u00e1 compuesto de cuatro campos: kind, Seq, ack e info. Los primeros tres contienen informaci\u00f3n de control y el \u00faltimo puede contener los datos por transferir. Estos campos de control constituyen en conjunto el encabezado de la trama.\n202\nLA CAPA DE ENLACE DE DATOS\n#define MAX_PKT 1024\nCAP. 3\n/* determina el tama\u00f1o del paquete en bytes */\ntypedef enum {false, true} boolean; typedef unsigned int seq_nr;\n/* tipo booleano */ /* n\u00fameros de secuencia o confirmaci\u00f3n */ typedef struct {unsigned char data[MAX_PKT];} packet;/* definici\u00f3n de paquete */ typedef enum {data, ack, nak} frame_kind; /* definici\u00f3n de frame_kind */ typedef struct { frame_kind kind; seq_nr seq; seq_nr ack; packet info; } frame;\n/* las tramas se transportan en esta capa */ /* \u00bfqu\u00e9 clase de trama es? */ /* n\u00famero de secuencia */ /* n\u00famero de confirmaci\u00f3n de recepci\u00f3n */ /* paquete de la capa de red */\n/* Espera que ocurra un evento; devuelve el tipo en la variable event. */ void wait_for_event(event_type *event); /* Obtiene un paquete de la capa de red para transmitirlo por el canal. */ void from_network_layer(packet *p); /* Entrega informaci\u00f3n de una trama entrante a la capa de red. */ void to_network_layer(packet *p); /* Obtiene una trama entrante de la capa f\u00edsica y la copia en r. */ void from_physical_layer(frame *r); /* Pasa la trama a la capa f\u00edsica para transmitirla. */ void to_physical_layer(frame *s); /* Arranca el reloj y habilita el evento de expiraci\u00f3n de temporizador. */ void start_timer(seq_nr k); /* Detiene el reloj e inhabilita el evento de expiraci\u00f3n de temporizador. */ void stop_timer(seq_nr k); /* Inicia un temporizador auxiliar y habilita el evento ack_timeout. */ void start_ack_timer(void); /* Detiene el temporizador auxiliar e inhabilita el evento ack_timeout. */ void stop_ack_timer(void); /* Permite que la capa de red cause un evento network_layer_ready. */ void enable_network_layer(void); /* Evita que la capa de red cause un evento network_layer_ready. */ void disable_network_layer(void); /* La macro inc se expande en l\u00ednea: incrementa circularmente k. */ #define inc(k) if (k < MAX_SEQ) k = k + 1; else k = 0 Figura 3-9. Algunas definiciones necesarias en los protocolos que siguen. Estas definiciones se encuentran en el archivo protocol.h.\nSEC. 3.3\nPROTOCOLOS ELEMENTALES DE ENLACE DE DATOS\n203\nEl campo kind indica si hay datos en la trama, porque algunos de los protocolos distinguen entre las tramas que contienen exclusivamente informaci\u00f3n de control y los que tambi\u00e9n contienen datos. Los campos seq y ack se emplean para n\u00fameros de secuencia y confirmaciones de recepci\u00f3n, respectivamente; su uso se describir\u00e1 posteriormente con mayor detalle. El campo info de una trama de datos contiene un solo paquete; el campo info de una trama de control no se usa. En una implementaci\u00f3n m\u00e1s realista se usar\u00eda un campo info de longitud variable, omiti\u00e9ndolo por completo en las tramas de control. Es importante entender la relaci\u00f3n entre un paquete y una trama. La capa de red construye un paquete tomando un mensaje de la capa de transporte y agreg\u00e1ndole el encabezado de la capa de red. Este paquete se pasa a la capa de enlace de datos para incluirlo en el campo info de una trama saliente. Cuando \u00e9sta llega a su destino, la capa de enlace de datos extrae de ella el paquete y a continuaci\u00f3n lo pasa a la capa de red. De esta manera, esta capa puede actuar como si las m\u00e1quinas pudieran intercambiar paquetes directamente. En la figura 3-9 tambi\u00e9n se listan varios procedimientos que son rutinas de biblioteca cuyos detalles dependen de la implementaci\u00f3n, por lo que no nos ocuparemos de su funcionamiento interno aqu\u00ed. El procedimiento wait_ for_event se queda en un ciclo cerrado esperando que algo ocurra, como se mencion\u00f3 antes. Con los procedimientos to_network_layer y from_network_layer, la capa de enlace de datos pasa paquetes a la capa de red y acepta paquetes de ella, respectivamente. Observe que from_ physical_layer y to_ physical_layer pasan tramas entre la capa de enlace de datos y la capa f\u00edsica, y que los procedimientos to_network_layer y from_network_layer pasan paquetes entre la capa de enlace de datos y la capa de red. En otras palabras, to_network_layer y from_network_layer tienen que ver con la interfaz entre las capas 2 y 3, y from_ physical_layer y to_ physical_layer, con la interfaz entre las capas 1 y 2. En la mayor\u00eda de los protocolos suponemos un canal inestable que pierde tramas completas ocasionalmente. Para poder recuperarse de tales calamidades, la capa de enlace de datos emisora debe arrancar un temporizador o reloj interno cada vez que env\u00eda una trama. Si no obtiene respuesta tras transcurrir cierto intervalo de tiempo predeterminado, el temporizador expira y la capa de enlace de datos recibe una se\u00f1al de interrupci\u00f3n. En nuestros protocolos, esto se maneja permitiendo que el procedimiento wait_ for_event devuelva event = timeout. Los procedimientos start_timer y stop_timer inician y detienen, respectivamente, el temporizador. Las terminaciones del temporizador s\u00f3lo son posibles cuando \u00e9ste se encuentra en funcionamiento. Se permite expl\u00edcitamente llamar a start_timer cuando el temporizador est\u00e1 funcionando; tal llamada tan s\u00f3lo restablece el reloj para hacer que el temporizador termine despu\u00e9s de haber transcurrido un intervalo completo de temporizaci\u00f3n (a menos que se restablezca o apague antes). Los procedimientos star_ack_timer y stop_ack_timer controlan un temporizador auxiliar usado para generar confirmaciones de recepci\u00f3n en ciertas condiciones. Los procedimientos enable_network_layer y disable_network_layer se usan en los protocolos m\u00e1s complicados, en los que ya no suponemos que la capa de red siempre tiene paquetes que enviar. Cuando la capa de enlace de datos habilita a la capa de red, \u00e9sta tiene permitido interrumpir cuando tenga que enviar un paquete. Esto lo indicamos con event = network_layer_ready. Cuando una capa de red est\u00e1 inhabilitada, no puede causar tales eventos. Teniendo cuidado respecto a\n204\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\ncu\u00e1ndo habilitar e inhabilitar su capa de red, la capa de enlace de datos puede evitar que la capa de red la sature con paquetes para los que no tiene espacio de b\u00fafer. Los n\u00fameros de secuencia de las tramas siempre est\u00e1n en el intervalo de 0 a MAX_SEQ (inclusive), donde MAX_SEQ es diferente para los distintos protocolos. Con frecuencia es necesario avanzar circularmente en 1 un n\u00famero de secuencia (por ejemplo, MAX_SEQ va seguido de 0). La macro inc lleva a cabo este incremento. Esta funci\u00f3n se ha definido como macro porque se usa en l\u00ednea dentro de la ruta cr\u00edtica. Como veremos despu\u00e9s en este libro, el factor que limita el desempe\u00f1o de una red con frecuencia es el procesamiento del protocolo, por lo que definir como macros las operaciones sencillas como \u00e9sta no afecta la legibilidad del c\u00f3digo y s\u00ed mejora el desempe\u00f1o. Adem\u00e1s, ya que MAX_SEQ tendr\u00e1 diferentes valores en diferentes protocolos, al hacer que inc sea una macro, cabe la posibilidad de incluir todos los protocolos en el mismo binario sin conflictos. Esta capacidad es \u00fatil para el simulador. Las declaraciones de la figura 3-9 son parte de todos los protocolos que siguen. Para ahorrar espacio y proporcionar una referencia pr\u00e1ctica, se han extra\u00eddo y listado juntas, pero conceptualmente deber\u00edan estar integradas con los protocolos mismos. En C, esta integraci\u00f3n se efect\u00faa poniendo las definiciones en un archivo especial de encabezado, en este caso protocol.h, y usando la directiva #include del preprocesador de C para incluirlas en los archivos de protocolos.\n3.3.1 Un protocolo s\u00edmplex sin restricciones Como ejemplo inicial consideraremos un protocolo que es lo m\u00e1s sencillo posible. Los datos se transmiten s\u00f3lo en una direcci\u00f3n; las capas de red tanto del emisor como del receptor siempre est\u00e1n listas; el tiempo de procesamiento puede ignorarse; hay un espacio infinito de b\u00fafer y, lo mejor de todo, el canal de comunicaci\u00f3n entre las capas de enlace de datos nunca tiene problemas ni pierde tramas. Este protocolo completamente irreal, al que apodaremos \u201cutop\u00eda\u201d, se muestra en la figura 3-10. El protocolo consiste en dos procedimientos diferentes, uno emisor y uno receptor. El emisor se ejecuta en la capa de enlace de datos de la m\u00e1quina de origen y el receptor se ejecuta en la capa de enlace de datos de la m\u00e1quina de destino. No se usan n\u00fameros de secuencia ni confirmaciones de recepci\u00f3n, por lo que no se necesita MAX_SEQ. El \u00fanico tipo de evento posible es frame_arrival (es decir, la llegada de una trama sin da\u00f1os). El emisor est\u00e1 en un ciclo while infinito que s\u00f3lo env\u00eda datos a la l\u00ednea tan r\u00e1pidamente como puede. El cuerpo del ciclo consiste en tres acciones: obtener un paquete de la (siempre dispuesta) capa de red, construir una trama de salida usando la variable s y enviar la trama a su destino. Este protocolo s\u00f3lo utiliza el campo info de la trama, pues los dem\u00e1s campos tienen que ver con el control de errores y de flujo, y aqu\u00ed no hay restricciones de control de errores ni de flujo. El receptor tambi\u00e9n es sencillo. Inicialmente, espera que algo ocurra, siendo la \u00fanica posibilidad la llegada de una trama sin da\u00f1os. En alg\u00fan momento, la trama llega y el procedimiento wait_ for_event regresa, conteniendo event el valor frame_arrival (que de todos modos se ignora). La llamada a from_ physical_layer elimina la trama reci\u00e9n llegada del b\u00fafer de hardware y la\nSEC. 3.3\nPROTOCOLOS ELEMENTALES DE ENLACE DE DATOS\n205\n/* El protocolo 1 (utop\u00eda) provee la transmisi\u00f3n de datos en una sola direcci\u00f3n, del emisor al receptor. Se supone que el canal de comunicaci\u00f3n est\u00e1 libre de errores, y que el receptor es capaz de procesar toda la entrada a una rapidez infinita. En consecuencia, el emisor se mantiene en un ciclo, enviando datos a la l\u00ednea tan r\u00e1pidamente como puede. */ typedef enum {frame_arrival} event_type; #include \u201cprotocol.h\u201d void sender1(void) { frame s; packet buffer;\n/* b\u00fafer para una trama de salida */ /* b\u00fafer para un paquete de salida */\nwhile (true) { from_network_layer(&buffer); s.info = buffer; to_physical_layer(&s); }\n/* /* /* /*\nconsigue algo que enviar */ lo copia en s para transmisi\u00f3n */ lo env\u00eda a su destino */ Ma\u00f1ana, y ma\u00f1ana, y ma\u00f1ana, Se arrastra a este m\u00edsero paso de d\u00eda a d\u00eda Hasta la \u00faltima s\u00edlaba del tiempo recordado -Macbeth, V, v */\n} void receiver1(void) { frame r; event_type event;\n/* ocupado por wait, pero no se usa aqu\u00ed */\nwhile (true) { wait_for_event(&event); from_physical_layer(&r); to_network_layer(&r.info); }\n/* la \u00fanica posibilidad es frame_arrival */ /* obtiene la trama entrante */ /* pasa los datos a la capa de red */\n} Figura 3-10. Protocolo s\u00edmplex sin restricciones.\ncoloca en la variable r, en donde el c\u00f3digo receptor pueda obtenerla. Por \u00faltimo, la parte de datos se pasa a la capa de red y la capa de enlace de datos se retira para esperar la siguiente trama, suspendi\u00e9ndose efectivamente hasta que llega la trama.\n206\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\n3.3.2 Protocolo s\u00edmplex de parada y espera Ahora omitiremos el supuesto m\u00e1s irreal hecho en el protocolo 1: la capacidad de la capa de red receptora de procesar datos de entrada con una rapidez infinita (o, lo que es equivalente, la presencia en la capa de enlace de datos receptora de una cantidad infinita de espacio de b\u00fafer en el cual almacenar todas las tramas de entrada mientras esperan su respectivo turno). Todav\u00eda se supone que el canal de comunicaciones est\u00e1 libre de errores y que el tr\u00e1fico de datos es s\u00edmplex. El problema principal que debemos resolver aqu\u00ed es c\u00f3mo evitar que el emisor sature al receptor enviando datos a mayor velocidad de la que este \u00faltimo puede procesarlos. En esencia, si el receptor requiere un tiempo \u0394t para ejecutar from_ physical_layer m\u00e1s to_network_layer, el emisor debe transmitir a una tasa media menor que una trama por tiempo \u0394t. Es m\u00e1s, si suponemos que en el hardware del receptor no se realiza de manera autom\u00e1tica el almacenamiento en el b\u00fafer y el encolamiento, el emisor nunca debe transmitir una trama nueva hasta que la vieja haya sido obtenida por from_ physical_layer, para que lo nuevo no sobrescriba lo antiguo. En ciertas circunstancias restringidas (por ejemplo, transmisi\u00f3n s\u00edncrona y una capa de enlace de datos receptora dedicada por completo a procesar la l\u00ednea de entrada \u00fanica), el emisor podr\u00eda introducir simplemente un retardo en el protocolo 1 y as\u00ed reducir su velocidad lo suficiente para evitar que se sature el receptor. Sin embargo, es m\u00e1s com\u00fan que la capa de enlace de datos tenga varias l\u00edneas a las cuales atender, y el intervalo de tiempo entre la llegada de una trama y su procesamiento puede variar en forma considerable. Si los dise\u00f1adores de la red pueden calcular el comportamiento de peor caso del receptor, podr\u00e1n programar al emisor para que transmita con tanta lentitud que, aun si cada trama sufre el retardo m\u00e1ximo, no haya desbordamientos. El problema con este m\u00e9todo es que es demasiado conservador. Conduce a un aprovechamiento del ancho de banda muy por debajo del \u00f3ptimo, a menos que el mejor caso y el peor sean iguales (es decir, la variaci\u00f3n en el tiempo de reacci\u00f3n de la capa de enlace de datos sea peque\u00f1a). Una soluci\u00f3n m\u00e1s general para este dilema es hacer que el receptor proporcione retroalimentaci\u00f3n al emisor. Tras haber pasado un paquete a su capa de red, el receptor regresa al emisor una peque\u00f1a trama ficticia que, de hecho, autoriza al emisor para transmitir la siguiente trama. Tras haber enviado una trama, el protocolo exige que el emisor espere hasta que llegue la peque\u00f1a trama ficticia (es decir, la confirmaci\u00f3n de recepci\u00f3n). Utilizar la retroalimentaci\u00f3n del receptor para indicar al emisor cu\u00e1ndo puede enviar m\u00e1s datos es un ejemplo del control de flujo que se mencion\u00f3 anteriormente. Los protocolos en los que el emisor env\u00eda una trama y luego espera una confirmaci\u00f3n de recepci\u00f3n antes de continuar se denominan de parada y espera. En la figura 3-11 se da un ejemplo de un protocolo s\u00edmplex de parada y espera. Aunque el tr\u00e1fico de datos en este ejemplo es s\u00edmplex, y va s\u00f3lo desde el emisor al receptor, las tramas viajan en ambas direcciones. En consecuencia, el canal de comunicaci\u00f3n entre las dos capas de enlace de datos necesita tener capacidad de transferencia de informaci\u00f3n bidireccional. Sin embargo, este protocolo implica una alternancia estricta de flujo: primero el emisor env\u00eda una trama, despu\u00e9s el receptor env\u00eda una trama, despu\u00e9s el emisor env\u00eda otra trama, despu\u00e9s el receptor env\u00eda otra, y as\u00ed sucesivamente. Aqu\u00ed ser\u00eda suficiente un canal f\u00edsico semid\u00faplex.\nSEC. 3.3\nPROTOCOLOS ELEMENTALES DE ENLACE DE DATOS\n207\n/* El protocolo 2 (parada y espera) tambi\u00e9n contempla un flujo unidireccional de datos del emisor al receptor. Se da por hecho nuevamente que el canal de comunicaci\u00f3n est\u00e1 libre de errores, como en el protocolo 1. Sin embargo, esta vez el receptor tiene capacidad finita de b\u00fafer y capacidad finita de procesamiento, por lo que el protocolo debe evitar de manera expl\u00edcita que el emisor sature al receptor con datos a mayor velocidad de la que puede manejar. */ typedef enum {frame_arrival} event_type; #include \u201cprotocol.h\u201d void sender2(void) { frame s; packet buffer; event_type event;\n/* b\u00fafer para una trama de salida */ /* b\u00fafer para un paquete de salida */ /* frame_arrival es la \u00fanica posibilidad */\nwhile (true) { from_network_layer(&buffer); s.info = buffer; to_physical_layer(&s); wait_for_event(&event);\n/* /* /* /*\nconsigue algo que enviar */ lo copia en s para transmisi\u00f3n */ adi\u00f3s a la peque\u00f1a trama */ no procede hasta que recibe la se\u00f1al de continuaci\u00f3n */\n} } void receiver2(void) { frame r, s; event_type event; while (true) { wait_for_event(&event); from_physical_layer(&r); to_network_layer(&r.info); to_physical_layer(&s);\n/* b\u00faferes para las tramas */ /* frame_arrival es la \u00fanica posibilidad */ /* /* /* /*\nla \u00fanica posibilidad es frame_arrival */ obtiene la trama entrante */ pasa los datos a la capa de red */ env\u00eda una trama ficticia para informar al emisor */\n} } Figura 3-11. Protocolo s\u00edmplex de parada y espera.\nAl igual que en el protocolo 1, el emisor comienza obteniendo un paquete de la capa de red, us\u00e1ndolo para construir una trama y enviarla a su destino. S\u00f3lo que ahora, a diferencia del protocolo 1, el emisor debe esperar hasta que llegue una trama de confirmaci\u00f3n de recepci\u00f3n antes de reiniciar el ciclo y obtener el siguiente paquete de la capa de red. La capa de enlace de datos emisora no necesita inspeccionar la trama entrante, ya que s\u00f3lo hay una posibilidad: la trama siempre es de confirmaci\u00f3n de recepci\u00f3n.\n208\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nLa \u00fanica diferencia entre receiver1 y receiver2 es que, tras entregar un paquete a la capa de red, receiver2 regresa al emisor una trama de confirmaci\u00f3n de recepci\u00f3n antes de entrar nuevamente en el ciclo de espera. Puesto que s\u00f3lo es importante la llegada de la trama en el emisor, no su contenido, el receptor no necesita poner ninguna informaci\u00f3n espec\u00edfica en \u00e9l.\n3.3.3 Protocolo s\u00edmplex para un canal con ruido Ahora consideremos la situaci\u00f3n normal de un canal de comunicaci\u00f3n que comete errores. Las tramas pueden llegar da\u00f1adas o perderse por completo. Sin embargo, suponemos que si una trama se da\u00f1a en tr\u00e1nsito, el hardware del receptor detectar\u00e1 esto cuando calcule la suma de verificaci\u00f3n. Si la trama est\u00e1 da\u00f1ada de tal manera que pese a ello la suma de verificaci\u00f3n sea correcta, un caso excesivamente improbable, este protocolo (y todos los dem\u00e1s) puede fallar (es decir, entregar un paquete incorrecto a la capa de red). A primera vista puede parecer que funcionar\u00eda una variaci\u00f3n del protocolo 2: agregar un temporizador. El emisor podr\u00eda enviar una trama, pero el receptor s\u00f3lo enviar\u00eda una trama de confirmaci\u00f3n de recepci\u00f3n si los datos llegaran correctamente. Si llegara una trama da\u00f1ada al receptor, se desechar\u00eda. Poco despu\u00e9s, el temporizador del emisor expirar\u00eda y se enviar\u00eda la trama de nuevo. Este proceso se repetir\u00eda hasta que la trama por fin llegara intacta. El esquema anterior tiene un defecto mortal. Medite el problema e intente descubrir lo que podr\u00eda fallar antes de continuar leyendo. Para ver lo que puede resultar mal, recuerde que la capa de enlace de datos debe proporcionar una comunicaci\u00f3n transparente y libre de errores entre los procesos de las capas de red. La capa de red de la m\u00e1quina A pasa una serie de paquetes a la capa de enlace de datos, que debe asegurar que se entregue una serie de paquetes id\u00e9ntica a la capa de red de la m\u00e1quina B a trav\u00e9s de su capa de enlace de datos. En particular, la capa de red en B no tiene manera de saber si el paquete se ha perdido o se ha duplicado, por lo que la capa de enlace de datos debe garantizar que ninguna combinaci\u00f3n de errores de transmisi\u00f3n, por improbables que sean, pueda causar la entrega de un paquete duplicado a la capa de red. Considere el siguiente escenario: 1. La capa de red de A entrega el paquete 1 a su capa de enlace de datos. El paquete se recibe correctamente en B y se pasa a la capa de red de B. B regresa a A una trama de confirmaci\u00f3n de recepci\u00f3n. 2. La trama de confirmaci\u00f3n de recepci\u00f3n se pierde por completo. Nunca llega. La vida ser\u00eda mucho m\u00e1s sencilla si el canal s\u00f3lo alterara o perdiera tramas de datos y no tramas de control, pero desgraciadamente el canal no hace distinciones. 3. El temporizador de la capa de enlace de datos de A expira en alg\u00fan momento. Al no haber recibido una confirmaci\u00f3n de recepci\u00f3n, supone (incorrectamente) que su trama de datos se ha perdido o da\u00f1ado, y env\u00eda otra vez la trama que contiene el paquete 1.\nSEC. 3.3\nPROTOCOLOS ELEMENTALES DE ENLACE DE DATOS\n209\n4. La trama duplicada tambi\u00e9n llega bien a la capa de enlace de datos de B y de ah\u00ed se pasa de manera inadvertida a la capa de red. Si A est\u00e1 enviando un archivo a B, parte del archivo se duplicar\u00e1 (es decir, la copia del archivo reconstruida por B ser\u00e1 incorrecta y el error no se habr\u00e1 detectado). En otras palabras, el protocolo fallar\u00e1. Es claro que lo que se necesita es alguna manera de que el receptor sea capaz de distinguir entre una trama que est\u00e1 viendo por primera vez y una retransmisi\u00f3n. La forma evidente de lograr esto es hacer que el emisor ponga un n\u00famero de secuencia en el encabezado de cada trama que env\u00eda. A continuaci\u00f3n, el receptor puede examinar el n\u00famero de secuencia de cada trama que llega para ver si es una trama nueva o un duplicado que debe descartarse. Dado que es deseable que el encabezado de las tramas sea peque\u00f1o, surge la pregunta: \u00bfcu\u00e1l es la cantidad m\u00ednima de bits necesarios para el n\u00famero de secuencia? La \u00fanica ambig\u00fcedad de este protocolo es entre una trama, m, y su sucesor directo, m + 1. Si la trama m se pierde o se da\u00f1a, el receptor no confirmar\u00e1 su recepci\u00f3n y el emisor seguir\u00e1 tratando de enviarla. Una vez que la trama se recibe correctamente, el receptor regresa una confirmaci\u00f3n de recepci\u00f3n al emisor. Es aqu\u00ed donde surge el problema potencial. Dependiendo de si el emisor recibe correctamente la trama de confirmaci\u00f3n de recepci\u00f3n, tratar\u00e1 de enviar m o m + 1. El evento que indica al emisor que puede enviar m + 2 es la llegada de una confirmaci\u00f3n de recepci\u00f3n de m + 1. Pero esto implica que m se recibi\u00f3 de manera correcta, y adem\u00e1s que su confirmaci\u00f3n de recepci\u00f3n fue recibida correctamente por el emisor (de otra manera, el emisor no habr\u00eda comenzado con m + 1, y mucho menos con m + 2). Como consecuencia, la \u00fanica ambig\u00fcedad es entre una trama y su antecesor o sucesor inmediatos, no entre el antecesor y el sucesor mismos. Por lo tanto, basta con un n\u00famero de secuencia de 1 bit (0 o 1). En cada instante, el receptor espera un n\u00famero de secuencia en particular. Cualquier trama de entrada que contenga un n\u00famero de secuencia equivocado se rechaza como duplicado. Cuando llega una trama que contiene el n\u00famero de secuencia correcto, se acepta y se pasa a la capa de red, y el n\u00famero de secuencia esperado se incrementa m\u00f3dulo 2 (es decir, 0 se vuelve 1 y 1 se vuelve 0). En la figura 3-12 se muestra un ejemplo de este tipo de protocolo. Los protocolos en los que el emisor espera una confirmaci\u00f3n de recepci\u00f3n positiva antes de avanzar al siguiente elemento de datos suelen llamarse PAR (Confirmaci\u00f3n de Recepci\u00f3n Positiva con Retransmisi\u00f3n) o ARQ (Solicitud Autom\u00e1tica de Repetici\u00f3n). Al igual que el protocolo 2, \u00e9ste tambi\u00e9n transmite datos en una sola direcci\u00f3n. El protocolo 3 difiere de sus antecesores en que tanto el emisor como el receptor tienen una variable cuyo valor se recuerda mientras la capa de enlace de datos est\u00e1 en estado de espera. El emisor recuerda el n\u00famero de secuencia de la siguiente trama a enviar en next_ frame_to_send; el receptor recuerda el n\u00famero de secuencia de la siguiente trama esperada en frame_expected. Cada protocolo tiene una fase de inicializaci\u00f3n corta antes de entrar en el ciclo infinito.\n210\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\n/* El protocolo 3 (par) permite el flujo unidireccional de datos por un canal no confiable. */ #define MAX_SEQ 1 /* debe ser 1 para el protocolo 3 */ typedef enum {frame_arrival, cksum_err, timeout} event_type; #include \u201cprotocol.h\u201d void sender3(void) { seq_nr next_frame_to_send; frame s; packet buffer; event_type event; next_frame_to_send = 0; from_network_layer(&buffer); while (true){ s.info = buffer; s.seq = next_frame_to_send; to_physical_layer(&s); start_timer(s.seq);\n/* n\u00famero de secuencia de la siguiente trama de salida */ /* variable de trabajo */ /* b\u00fafer para un paquete de salida */ /* inicializa n\u00fameros de secuencia de salida */ /* obtiene el primer paquete */ /* construye una trama para transmisi\u00f3n */ /* inserta un n\u00famero de secuencia en la trama */ /* la env\u00eda a su destino */ /* si la respuesta tarda mucho, expira el temporizador */ /* frame_arrival, cksum_err, timeout */\nwait_for_event(&event); if (event == frame_arrival){ from_physical_layer(&s); /* obtiene la confirmaci\u00f3n de recepci\u00f3n */ if (s.ack == next_frame_to_send){ stop_timer(s.ack); /* desactiva el temporizador */ from_network_layer(&buffer); /* obtiene siguiente a enviar */ inc(next_frame_to_send); /* invierte next_frame_to_send */ } } } } void receiver3(void) { seq_nr frame_expected; frame r, s; event_type event; frame_expected = 0; while (true){ wait_for_event(&event); if (event == frame_arrival){ from_physical_layer(&r); if (r.seq == frame_expected){ to_network_layer(&r.info); inc(frame_expected); } s.ack = 1 \u2013 frame_expected; to_physical_layer(&s);\n/* /* /* /* /* /*\nposibilidades: frame_arrival, cksum_err */ ha llegado una trama v\u00e1lida. */ obtiene la trama reci\u00e9n llegada */ esto es lo que hemos estado esperando. */ pasa los datos a la capa de red */ para la pr\u00f3xima se espera el otro n\u00famero de secuencia */\n/* indica la trama cuya recepci\u00f3n se est\u00e1 confirmando */ /* env\u00eda confirmaci\u00f3n de recepci\u00f3n */\n} } }\nFigura 3-12. Protocolo de confirmaci\u00f3n de recepci\u00f3n positiva con retransmisi\u00f3n.\nSEC. 3.4\nPROTOCOLOS DE VENTANA CORREDIZA\n211\nTras transmitir una trama, el emisor arranca el temporizador. Si \u00e9ste ya se estaba ejecutando, se restablece para conceder otro intervalo completo de temporizaci\u00f3n. Dicho intervalo debe escogerse de modo que haya suficiente tiempo para que la trama llegue al receptor, \u00e9ste la procese en el peor caso y la confirmaci\u00f3n de recepci\u00f3n se regrese al emisor. S\u00f3lo cuando ha transcurrido ese intervalo de tiempo se puede suponer con seguridad que se ha perdido la trama transmitida o su confirmaci\u00f3n de recepci\u00f3n, y que se debe enviar un duplicado. Si el intervalo establecido es muy peque\u00f1o, el emisor transmitir\u00e1 tramas innecesarias. Si bien estas tramas adicionales no afectar\u00e1n la correcci\u00f3n del protocolo, s\u00ed da\u00f1ar\u00e1n el rendimiento. Tras transmitir una trama y arrancar el temporizador, el emisor espera que ocurra algo interesante. Hay tres posibilidades: llega una trama de confirmaci\u00f3n de recepci\u00f3n sin da\u00f1o, llega una trama de confirmaci\u00f3n de recepci\u00f3n da\u00f1ada o expira el temporizador. Si recibe una confirmaci\u00f3n de recepci\u00f3n v\u00e1lida, el emisor obtiene el siguiente paquete de la capa de red y lo coloca en el b\u00fafer, sobrescribiendo el paquete previo. Tambi\u00e9n avanza el n\u00famero de secuencia. Si llega una trama da\u00f1ada o no llega ninguna, ni el b\u00fafer ni el n\u00famero de secuencia cambia, con el fin de que se pueda enviar un duplicado. Cuando llega una trama v\u00e1lida al receptor, su n\u00famero de secuencia se verifica para saber si es un duplicado. Si no lo es, se acepta, se pasa a la capa de red y se genera una confirmaci\u00f3n de recepci\u00f3n. Los duplicados y las tramas da\u00f1adas no se pasan a la capa de red.\n3.4 PROTOCOLOS DE VENTANA CORREDIZA En los protocolos previos, las tramas de datos se transmiten en una sola direcci\u00f3n. En la mayor\u00eda de las situaciones pr\u00e1cticas hay necesidad de transmitir datos en ambas direcciones. Una manera de lograr una transmisi\u00f3n de datos d\u00faplex total es tener dos canales de comunicaci\u00f3n separados y utilizar cada uno para tr\u00e1fico de datos s\u00edmplex (en diferentes direcciones). Si se hace esto, tenemos dos circuitos f\u00edsicos separados, cada uno con un canal \u201cde ida\u201d (para datos) y un canal \u201cde retorno\u201d (para confirmaciones de recepci\u00f3n). En ambos casos, el ancho de banda del canal usado para confirmaciones de recepci\u00f3n se desperdicia casi por completo. En efecto, el usuario est\u00e1 pagando dos circuitos, pero s\u00f3lo usa la capacidad de uno. Una mejor idea es utilizar el mismo circuito para datos en ambas direcciones. Despu\u00e9s de todo, en los protocolos 2 y 3 ya se usaba para transmitir tramas en ambos sentidos, y el canal de retorno tiene la misma capacidad que el canal de ida. En este modelo, las tramas de datos de A a B se mezclan con las tramas de confirmaci\u00f3n de recepci\u00f3n de A a B. Analizando el campo de tipo (kind) en el encabezado de una trama de entrada, el receptor puede saber si la trama es de datos o de confirmaci\u00f3n de recepci\u00f3n. Aunque el entrelazado de datos y de tramas de control en el mismo circuito es una mejora respecto al uso de dos circuitos f\u00edsico separados, se puede lograr otra mejora. Cuando llega una trama de datos, en lugar de enviar inmediatamente una trama de control independiente, el receptor se aguanta y espera hasta que la capa de red le pasa el siguiente paquete. La confirmaci\u00f3n de recepci\u00f3n se anexa a la trama de datos de salida (usando el campo ack del encabezado de la trama). En efecto, la confirmaci\u00f3n de recepci\u00f3n viaja gratuitamente en la siguiente trama de datos de salida.\n212\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nLa t\u00e9cnica de retardar temporalmente las confirmaciones de recepci\u00f3n para que puedan viajar en la siguiente trama de datos de salida se conoce como superposici\u00f3n (piggybacking). La ventaja principal de usar la superposici\u00f3n en lugar de tener tramas de confirmaci\u00f3n de recepci\u00f3n independientes es un mejor aprovechamiento del ancho de banda disponible del canal. El campo ack del encabezado de la trama ocupa s\u00f3lo unos cuantos bits, mientras que una trama aparte requerir\u00eda de un encabezado, la confirmaci\u00f3n de recepci\u00f3n y una suma de verificaci\u00f3n. Adem\u00e1s, el env\u00edo de menos tramas implica menos interrupciones de \u201cha llegado trama\u201d y tal vez menos segmentos de b\u00fafer en el receptor, dependiendo de la manera en que est\u00e9 organizado el software del receptor. En el siguiente protocolo que examinaremos, el campo de superposici\u00f3n ocupa s\u00f3lo 1 bit en el encabezado de la trama y pocas veces ocupa m\u00e1s de algunos bits. Sin embargo, la superposici\u00f3n introduce una complicaci\u00f3n inexistente en las confirmaciones de recepci\u00f3n independientes. \u00bfCu\u00e1nto tiempo debe esperar la capa de enlace de datos un paquete al cual superponer la confirmaci\u00f3n de recepci\u00f3n? Si la capa de enlace de datos espera m\u00e1s tiempo del que tarda en terminar el temporizador del emisor, la trama ser\u00e1 retransmitida, frustrando el prop\u00f3sito de enviar confirmaciones de recepci\u00f3n. Si la capa de enlace de datos fuera un or\u00e1culo y pudiera predecir el futuro, sabr\u00eda cu\u00e1ndo se recibir\u00eda el siguiente paquete de la capa de red y podr\u00eda decidir esperarlo o enviar de inmediato una confirmaci\u00f3n de recepci\u00f3n independiente, dependiendo del tiempo de espera proyectado. Por supuesto, la capa de enlace de datos no puede predecir el futuro, por lo que debe recurrir a alg\u00fan esquema particular para el caso, como esperar un n\u00famero fijo de milisegundos. Si llega r\u00e1pidamente un nuevo paquete, la confirmaci\u00f3n de recepci\u00f3n se superpone a \u00e9l; de otra manera, si no ha llegado ning\u00fan paquete nuevo al final de este periodo, la capa de enlace de datos manda una trama de confirmaci\u00f3n de recepci\u00f3n independiente. Los siguientes tres protocolos son bidireccionales y pertenecen a una clase llamada protocolos de ventana corrediza. Los tres difieren entre ellos en la eficiencia, complejidad y requerimientos de b\u00fafer, como se analizar\u00e1 m\u00e1s adelante. En ellos, al igual que en todos los protocolos de ventana corrediza, cada trama de salida contiene un n\u00famero de secuencia, que va desde 0 hasta alg\u00fan n\u00famero m\u00e1ximo. Por lo general, \u00e9ste es 2n \u2212 1, por lo que el n\u00famero de secuencia encaja perfectamente en un campo de n bits. El protocolo de ventana corrediza de parada y espera utiliza n = 1, y restringe los n\u00fameros de secuencia de 0 y 1, pero las versiones m\u00e1s refinadas pueden utilizar un n arbitrario. La esencia de todos los protocolos de ventana corrediza es que, en cualquier instante, el emisor mantiene un grupo de n\u00fameros de secuencia que corresponde a las tramas que tiene permitido enviar. Se dice que estas tramas caen dentro de la ventana emisora. De manera semejante, el receptor mantiene una ventana receptora correspondiente al grupo de tramas que tiene permitido aceptar. La ventana del emisor y la del receptor no necesitan tener los mismos l\u00edmites inferior y superior, ni siquiera el mismo tama\u00f1o. En algunos protocolos las ventanas son de tama\u00f1o fijo, pero en otros pueden crecer y disminuir a medida que se env\u00edan y reciben las tramas. Aunque estos protocolos dan a la capa de enlace de datos mayor libertad en cuanto al orden en que puede enviar y recibir tramas, hemos conservado decididamente el requisito de que el protocolo debe entregar los paquetes a la capa de red del destino en el mismo orden en que se pasaron a la capa de enlace de datos de la m\u00e1quina emisora. Tampoco hemos cambiado el requisito de que\nSEC. 3.4\n213\nPROTOCOLOS DE VENTANA CORREDIZA\nel canal f\u00edsico de comunicaci\u00f3n es \u201cde tipo alambre\u201d, es decir, que debe entregar todas las tramas en el orden en que fueron enviadas. Los n\u00fameros de secuencia en la ventana del emisor representan tramas enviadas, o que pueden ser enviadas, pero cuya recepci\u00f3n a\u00fan no se ha confirmado. Cuando llega un paquete nuevo de la capa de red, se le da el siguiente n\u00famero secuencial mayor, y el extremo superior de la ventana avanza en uno. Al llegar una confirmaci\u00f3n de recepci\u00f3n, el extremo inferior avanza en uno. De esta manera, la ventana mantiene continuamente una lista de tramas sin confirmaci\u00f3n de recepci\u00f3n. En la figura 3-13 se muestra un ejemplo.\nEmisor\nReceptor\n(a)\n(b)\n(c)\n(d)\nFigura 3-13. Ventana corrediza de tama\u00f1o 1, con un n\u00famero de secuencia de 3 bits. (a) Al inicio. (b) Tras la transmisi\u00f3n de la primera trama. (c) Tras la recepci\u00f3n de la primera trama. (d) Tras recibir la primera confirmaci\u00f3n de recepci\u00f3n.\nDado que las tramas que est\u00e1n en la ventana del emisor pueden perderse o da\u00f1arse en tr\u00e1nsito, el emisor debe mantener todas estas tramas en su memoria para su posible retransmisi\u00f3n. Por lo tanto, si el tama\u00f1o m\u00e1ximo de la ventana es n, el emisor necesita n b\u00faferes para contener las tramas sin confirmaci\u00f3n de recepci\u00f3n. Si la ventana llega a crecer a su tama\u00f1o m\u00e1ximo, la capa de enlace de datos emisora deber\u00e1 hacer que la capa de red se detenga hasta que se libere otro b\u00fafer. La ventana de la capa de enlace de datos receptora corresponde a las tramas que puede aceptar. Toda trama que caiga fuera de la ventana se descartar\u00e1 sin comentarios. Cuando se recibe la trama cuyo n\u00famero de secuencia es igual al extremo inferior de la ventana, se pasa a la capa de red, se genera una confirmaci\u00f3n de recepci\u00f3n y se avanza la ventana en uno. A diferencia de la ventana del emisor, la ventana del receptor conserva siempre el mismo tama\u00f1o inicial. Note que\n214\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nun tama\u00f1o de ventana de 1 significa que la capa de enlace de datos s\u00f3lo acepta tramas en orden, pero con ventanas m\u00e1s grandes esto no es as\u00ed. La capa de red, en contraste, siempre recibe los datos en el orden correcto, sin importar el tama\u00f1o de la ventana de la capa de enlace de datos. En la figura 3-13 se muestra un ejemplo con un tama\u00f1o m\u00e1ximo de ventana de 1. Inicialmente no hay tramas pendientes, por lo que los extremos de la ventana del emisor son iguales, pero a medida que pasa el tiempo, la situaci\u00f3n progresa como se muestra.\n3.4.1 Un protocolo de ventana corrediza de un bit Antes de lidiar con el caso general, examinemos un protocolo de ventana corrediza con un tama\u00f1o m\u00e1ximo de ventana de 1. Tal protocolo utiliza parada y espera, ya que el emisor env\u00eda una trama y espera su confirmaci\u00f3n de recepci\u00f3n antes de transmitir la siguiente. En la figura 3-14 se presenta tal protocolo. Como los dem\u00e1s, comienza por definir algunas variables. Next_ frame_to_send indica qu\u00e9 trama est\u00e1 tratando de enviar el emisor. De manera semejante, frame_expected indica qu\u00e9 trama espera el receptor. En ambos casos, 0 y 1 son las \u00fanicas posibilidades. Normalmente, una de las dos capas de enlace de datos es la que comienza a transmitir la primera trama. En otras palabras, s\u00f3lo uno de los programas de capa de enlace de datos debe contener las llamadas de procedimiento to_ physical_layer y start_timer fuera del ciclo principal. Si ambas capas se iniciaran en forma simult\u00e1nea, surgir\u00eda una situaci\u00f3n peculiar que se analizar\u00e1 despu\u00e9s. La m\u00e1quina que arranca obtiene el primer paquete de su capa de red, construye una trama a partir de \u00e9l y la env\u00eda. Al llegar esta (o cualquier) trama, la capa de enlace de datos receptora la revisa para saber si es un duplicado, igual que en el protocolo 3. Si la trama es la esperada, se pasa a la capa de red y la ventana del receptor se recorre hacia arriba. El campo de confirmaci\u00f3n de recepci\u00f3n contiene el n\u00famero de la \u00faltima trama recibida sin error. Si este n\u00famero concuerda con el de secuencia de la trama que est\u00e1 tratando de enviar el emisor, \u00e9ste sabe que ha terminado con la trama almacenada en el b\u00fafer y que puede obtener el siguiente paquete de su capa de red. Si el n\u00famero de secuencia no concuerda, debe continuar intentando enviar la misma trama. Por cada trama que se recibe, se regresa una. Ahora examinemos el protocolo 4 para ver qu\u00e9 tan flexible es ante circunstancias patol\u00f3gicas. Suponga que A est\u00e1 tratando de enviar su trama 0 a B y que B est\u00e1 tratando de enviar su trama 0 a A. Suponga que A env\u00eda una trama a B, pero que el intervalo de temporizaci\u00f3n de A es un poco corto. En consecuencia, A podr\u00eda terminar su temporizaci\u00f3n repetidamente, enviando una serie de tramas id\u00e9nticas, todas con seq = 0 y ack = 1. Al llegar la primera trama v\u00e1lida a B, es aceptada y frame_expected se establece en 1. Todas las tramas subsiguientes ser\u00e1n rechazadas, pues B ahora espera tramas con el n\u00famero de secuencia 1, no 0. Adem\u00e1s, dado que los duplicados tienen ack = 1 y B a\u00fan est\u00e1 esperando una confirmaci\u00f3n de recepci\u00f3n de 0, B no extraer\u00e1 un nuevo paquete de su capa de red.\nSEC. 3.4\nPROTOCOLOS DE VENTANA CORREDIZA\n215\n/* El protocolo 4 (de ventana corrediza) es bidireccional. */ #define MAX_SEQ 1 /* debe ser 1 para el protocolo 4 */ typedef enum {frame_arrival, cksum_err, timeout} event_type; #include \u201cprotocol.h\u201d void protocol4 (void) { seq_nr next_frame_to_send; /* s\u00f3lo 0 o 1 */ seq_nr frame_expected; /* s\u00f3lo 0 o 1 */ frame r, s; /* variables de trabajo */ packet buffer; /* paquete actual que se env\u00eda */ event_type event; next_frame_to_send = 0; /* siguiente trama del flujo de salida */ frame_expected = 0; /* n\u00famero de trama de llegada esperada */ from_network_layer(&buffer); /* obtiene un paquete de la capa de red */ s.info = buffer; /* se prepara para enviar la trama inicial */ s.seq = next_frame_to_send; /* inserta el n\u00famero de secuencia en la trama */ s.ack = 1 \u2013 frame_expected; /* confirmaci\u00f3n de recepci\u00f3n superpuesta */ to_physical_layer(&s); /* transmite la trama */ start_timer(s.seq); /* inicia el temporizador */ while (true){ wait_for_event(&event); /* frame_arrival, cksum_err o timeout */ if (event == frame_arrival){ /* ha llegado una trama sin da\u00f1o. */ from_physical_layer(&r); /* lo obtiene */ if(r.seq == frame_expected) { /* maneja flujo de tramas de entrada. */ to_network_layer(&r.info); /* pasa el paquete a la capa de red */ inc(frame_expected); /* invierte el siguiente n\u00famero de secuencia esperado */ } if(r.ack == next_frame_to_send){ /* maneja flujo de tramas de salida. */ stop_timer(r.ack); /* desactiva el temporizador */ from_network_layer(&buffer); /* obtiene paquete nuevo de la capa de red */ inc(next_frame_to_send); /* invierte el n\u00famero de secuencia del emisor */ } } s.info = buffer; /* construye trama de salida */ s.seq = next_frame_to_send; /* le introduce el n\u00famero de secuencia */ s.ack = 1 \u2013 frame_expected; /* n\u00famero de secuencia de la \u00faltima trama recibida */ to_physical_layer(&s); /* transmite una trama */ start_timer(s.seq); /* inicia el temporizador */ } }\nFigura 3-14. Protocolo de ventana corrediza de 1 bit.\n216\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nCada vez que llega un duplicado rechazado, B env\u00eda a A una trama que contiene seq = 0 y ack = 0. Tarde o temprano una de \u00e9stas llegar\u00e1 correctamente a A, haciendo que A comience a enviar el siguiente paquete. Ninguna combinaci\u00f3n de tramas perdidas o expiraci\u00f3n de temporizadores puede hacer que el protocolo entregue paquetes duplicados a cualquiera de las capas de red, ni que omita un paquete, ni que entre en un bloqueo irreversible. Sin embargo, si ambos lados env\u00edan de manera simult\u00e1nea un paquete inicial, surge una situaci\u00f3n peculiar. En la figura 3-15 se muestra este problema de sincronizaci\u00f3n. En la parte (a) se muestra la operaci\u00f3n normal del protocolo. En (b) se ilustra la peculiaridad. Si B espera la primera trama de A antes de enviar la suya, la secuencia es como se muestra en (a), y todas las tramas son aceptadas. Sin embargo, si A y B inician la comunicaci\u00f3n simult\u00e1neamente, se cruzan sus primeras tramas y las capas de enlace de datos entran en la situaci\u00f3n (b). En (a) cada trama que llega trae un paquete nuevo para la capa de red; no hay duplicados. En (b) la mitad de las tramas contienen duplicados, aun cuando no hay errores de transmisi\u00f3n. Pueden ocurrir situaciones similares como resultado de la expiraci\u00f3n prematura de temporizadores, aun cuando un lado comience evidentemente primero. De hecho, si ocurren varias expiraciones prematuras de temporizadores las tramas podr\u00edan enviarse tres o m\u00e1s veces. A env\u00eda (0, 1, A0)\nA env\u00eda (0, 1, A0)\nB env\u00eda (0, 1, B0); B obtiene (0, 1, A0)*; B env\u00eda (0, 0, B0)\nB obtiene (0, 1, A0)*; B env\u00eda (0, 0, B0) A obtiene (0, 0, B0)*; A env\u00eda (1, 0, A1)\nB obtiene (1, 0, A1)*; B env\u00eda (1, 1, B1)\nA obtiene (1, 1, B1)*; A env\u00eda (0, 1, A2)\nB obtiene (0, 1, A2)*; B env\u00eda (0, 0, B2)\nA obtiene (0, 0, B2)*; A env\u00eda (1, 0, A3)\nB obtiene (1, 0, A3)*; B env\u00eda (1, 1, B3)\n(a)\nA obtiene (0, 1, B0)*; A env\u00eda (0, 0, A0) B obtiene (0, 0, A0); B env\u00eda (1, 0, B1) A obtiene (0, 0, B0); A env\u00eda (1, 0, A1)\nB obtiene (1, 0, A1)*; B env\u00eda (1, 1, B1)\nA obtiene (1, 0, B1)*; A env\u00eda (1, 1, A1)\nTiempo\nB obtiene (1, 1, A1); B env\u00eda (0, 1, B2)\n(b)\nFigura 3-15. Dos escenarios para el protocolo 4. (a) Caso normal. (b) Caso anormal. La notaci\u00f3n es (secuencia, confirmaci\u00f3n de recepci\u00f3n, n\u00famero de paquete). Un asterisco indica el lugar en que una capa de red acepta un paquete.\n3.4.2 Protocolo que usa retroceso N Hasta ahora hemos supuesto que el tiempo de transmisi\u00f3n requerido para que una trama llegue al receptor m\u00e1s el necesario para que la confirmaci\u00f3n de recepci\u00f3n regrese es insignificante. A veces esta suposici\u00f3n es totalmente falsa. En estas situaciones el tiempo de viaje de ida y vuelta prolongado puede tener implicaciones importantes para la eficiencia del aprovechamiento del ancho\nSEC. 3.4\nPROTOCOLOS DE VENTANA CORREDIZA\n217\nde banda. Por ejemplo, considere un canal de sat\u00e9lite de 50 kbps con un retardo de propagaci\u00f3n de ida y vuelta de 500 mseg. Imagine que intentamos utilizar el protocolo 4 para enviar tramas de 1000 bits por medio del sat\u00e9lite. El emisor empieza a enviar la primera trama en t = 0. En t = 20 mseg la trama ha sido enviada por completo. En las mejores circunstancias (sin esperas en el receptor y una trama de confirmaci\u00f3n de recepci\u00f3n corta), no es sino hasta t = 270 mseg que la trama ha llegado por completo al receptor, y no es sino hasta t = 520 mseg que ha llegado la confirmaci\u00f3n de recepci\u00f3n de regreso al emisor. Esto implica que el emisor estuvo bloqueado durante el 500/520 = 96% del tiempo. En otras palabras, s\u00f3lo se us\u00f3 el 4% del ancho de banda disponible. Queda claro que la combinaci\u00f3n de un tiempo de tr\u00e1nsito grande, un ancho de banda alto y una longitud de tramas corta es desastrosa para la eficiencia. El problema antes descrito puede verse como una consecuencia de la regla que requiere que el emisor espere una confirmaci\u00f3n de recepci\u00f3n antes de enviar otra trama. Si relajamos esa restricci\u00f3n, se puede lograr una mejor eficiencia. B\u00e1sicamente la soluci\u00f3n est\u00e1 en permitir que el emisor env\u00ede hasta w tramas antes de bloquearse, en lugar de s\u00f3lo 1. Con una selecci\u00f3n adecuada de w, el emisor podr\u00e1 transmitir tramas continuamente durante un tiempo igual al tiempo de tr\u00e1nsito de ida y vuelta sin llenar la ventana. En el ejemplo anterior, w debe ser de cuando menos 26. El emisor comienza por enviar la trama 0, como antes. Para cuando ha terminado de enviar 26 tramas, en t = 520, llega la confirmaci\u00f3n de recepci\u00f3n de la trama 0. A partir de entonces, las confirmaciones de recepci\u00f3n llegar\u00e1n cada 20 mseg, por lo que el emisor siempre tendr\u00e1 permiso de continuar justo cuando lo necesita. En todo momento hay 25 o 26 tramas pendientes de confirmaci\u00f3n de recepci\u00f3n. Dicho de otra manera, el tama\u00f1o m\u00e1ximo de la ventana del emisor es de 26. La necesidad de una ventana grande en el lado emisor se presenta cuando el producto del ancho de banda por el retardo del viaje de ida y vuelta es grande. Si el ancho de banda es alto, incluso para un retardo moderado, el emisor agotar\u00e1 su ventana r\u00e1pidamente a menos que tenga una ventana grande. Si el retardo es grande (por ejemplo, en un canal de sat\u00e9lite geoestacionario), el emisor agotar\u00e1 su ventana incluso con un ancho de banda moderado. El producto de estos dos factores indica b\u00e1sicamente cu\u00e1l es la capacidad del canal, y el emisor necesita la capacidad de llenarlo sin detenerse para poder funcionar con una eficiencia m\u00e1xima. Esta t\u00e9cnica se conoce como canalizaci\u00f3n. Si la capacidad del canal es de b bits/seg, el tama\u00f1o de la trama de l bits y el tiempo de propagaci\u00f3n de ida y vuelta de R segundos, el tiempo requerido para transmitir una sola trama es de l/b segundos. Una vez que ha sido enviado el \u00faltimo bit de una trama de datos, hay un retardo de R/2 antes de que llegue ese bit al receptor y un retardo de cuando menos R/2 para que la confirmaci\u00f3n de recepci\u00f3n llegue de regreso, lo que da un retardo total de R. En parada y espera, la l\u00ednea est\u00e1 ocupada durante l/b e inactiva durante R, dando una utilizaci\u00f3n de la l\u00ednea de l/(l bR) Si l < bR, la eficiencia ser\u00e1 menor que 50%. Ya que siempre hay un retardo diferente de cero para que la confirmaci\u00f3n de recepci\u00f3n se propague de regreso, en principio la canalizaci\u00f3n puede servir para mantener ocupada la l\u00ednea durante este intervalo, pero si el intervalo es peque\u00f1o, la complejidad adicional no justifica el esfuerzo.\n218\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\nEl env\u00edo de tramas en canalizaci\u00f3n por un canal de comunicaci\u00f3n inestable presenta problemas serios. Primero, \u00bfqu\u00e9 ocurre si una trama a la mitad de una serie larga se da\u00f1a o pierde? Llegar\u00e1n grandes cantidades de tramas sucesivas al receptor antes de que el emisor se entere de que algo anda mal. Cuando llega una trama da\u00f1ada al receptor, obviamente debe descartarse, pero, \u00bfqu\u00e9 debe hacerse con las tramas correctas que le siguen? Recuerde que la capa de enlace de datos receptora est\u00e1 obligada a entregar paquetes a la capa de red en secuencia. En la figura 3-16 se muestran los efectos de la canalizaci\u00f3n en la recuperaci\u00f3n de un error. A continuaci\u00f3n lo analizaremos en detalle.\nError\nAc k7\nAc k6\nAc k5\nAc k4\nAc k3\nAc k2\nAc k1\nAc k0\nIntervalo de expiraci\u00f3n de temporizador\nTramas descartadas por la capa de enlace de datos Tiempo\nError\nAc k9 Ac k1 0 Ac k1 1 Ac k1 2 Ac k1 3\nAc k8\nAc k7\nAc k6\nAc k5\nNa k 2 Ac k1 Ac k1\nAc k1\nAc k0\n(a)\nTramas almacenadas en b\u00fafer por la capa de enlace de datos (b)\nFigura 3-16. Canalizaci\u00f3n y recuperaci\u00f3n de un error. (a) Efecto de un error cuando el tama\u00f1o de la ventana del receptor es de 1. (b) Efecto de un error cuando el tama\u00f1o de la ventana del receptor es grande.\nHay dos m\u00e9todos b\u00e1sicos para manejar los errores durante la canalizaci\u00f3n. Una manera, llamada retroceso n, es que el receptor simplemente descarte todas las tramas subsecuentes, sin enviar confirmaciones de recepci\u00f3n para las tramas descartadas. Esta estrategia corresponde a una ventana de recepci\u00f3n de tama\u00f1o 1. En otras palabras, la capa de enlace de datos se niega a aceptar cualquier trama excepto la siguiente que debe entregar a la capa de red. Si la ventana del emisor se llena antes de terminar el temporizador, el canal comenzar\u00e1 a vaciarse. En alg\u00fan momento, el emisor terminar\u00e1 de esperar y retransmitir\u00e1 en orden todas las tramas cuya recepci\u00f3n a\u00fan no se\nSEC. 3.4\nPROTOCOLOS DE VENTANA CORREDIZA\n219\nhaya confirmado, comenzando por la da\u00f1ada o perdida. Esta estrategia puede desperdiciar bastante ancho de banda si la tasa de errores es alta. En la figura 3-16(a) se muestra el retroceso n en el caso en que la ventana del receptor es grande. Las tramas 0 y 1 se reciben y confirman de manera correcta. Sin embargo, la trama 2 se da\u00f1a o pierde. El emisor, no consciente de este problema, contin\u00faa enviando tramas hasta que expira el temporizador para la trama 2. Despu\u00e9s retrocede a la trama 2 y comienza con ella, enviando 2, 3, 4, etc\u00e9tera, nuevamente. La otra estrategia general para el manejo de errores cuando las tramas se colocan en canalizaciones se conoce como repetici\u00f3n selectiva. Cuando se utiliza, se descarta una trama da\u00f1ada recibida, pero las tramas en buen estado recibidas despu\u00e9s de \u00e9sa se almacenan en el b\u00fafer. Cuando el emisor termina, s\u00f3lo la \u00faltima trama sin confirmaci\u00f3n se retransmite. Si la trama llega correctamente, el receptor puede entregar a la capa de red, en secuencia, todas las tramas que ha almacenado en el b\u00fafer. La repetici\u00f3n selectiva con frecuencia se combina con el hecho de que el receptor env\u00ede una confirmaci\u00f3n de recepci\u00f3n negativa (NAK) cuando detecta un error, por ejemplo, cuando recibe un error de suma de verificaci\u00f3n o una trama en desorden. Las confirmaciones de recepci\u00f3n negativas estimulan la retransmisi\u00f3n antes de que el temporizador correspondiente expire y, por lo tanto, mejoran el rendimiento. En la figura 3-16(b), las tramas 0 y 1 se vuelven a recibir y confirmar correctamente y la trama 2 se pierde. Cuando la trama 3 llega al receptor, su capa de enlace de datos observa que falta una trama, por lo que regresa una NAK para la trama 2 pero almacena la trama 3. Cuando las tramas 4 y 5 llegan, tambi\u00e9n son almacenadas por la capa de enlace de datos en lugar de pasarse a la capa de red. En alg\u00fan momento, la NAK 2 llega al emisor, que inmediatamente reenv\u00eda la trama 2. Cuando llega, la capa de enlace de datos ahora tiene 2, 3, 4 y 5 y ya las puede pasar a la capa de red en el orden correcto. Tambi\u00e9n puede confirmar la recepci\u00f3n de todas las tramas hasta, e incluyendo, la 5, como se muestra en la figura. Si la NAK se perdiera, en alg\u00fan momento el temporizador del emisor expirar\u00e1 para la trama 2 y la enviar\u00e1 (s\u00f3lo a ella), pero eso puede tardar un poco m\u00e1s. En efecto, la NAK acelera la retransmisi\u00f3n de una trama espec\u00edfica. La repetici\u00f3n selectiva corresponde a una ventana del receptor mayor que 1. Cualquier trama dentro de la ventana puede ser aceptada y mantenida en el b\u00fafer hasta que todas las que le preceden hayan sido pasadas a la capa de red. Esta estrategia puede requerir cantidades grandes de memoria en la capa de enlace de datos si la ventana es grande. Estas dos estrategias alternativas son intercambios entre el ancho de banda y el espacio de b\u00fafer en la capa de enlace de datos. Dependiendo de qu\u00e9 recurso sea m\u00e1s valioso, se puede utilizar uno o el otro. En la figura 3-17 se muestra un protocolo de canalizaci\u00f3n en el que la capa de enlace de datos receptora s\u00f3lo acepta tramas en orden; las tramas siguientes a un error son descartadas. En este protocolo hemos omitido por primera vez el supuesto de que la capa de red siempre tiene un suministro infinito de paquetes que enviar. Cuando la capa de red tiene un paquete para enviar, puede causar la ocurrencia de un evento network_layer_ready. Sin embargo, para poder cumplir la regla de control de flujo de que no debe haber m\u00e1s de MAX_SEQ tramas sin confirmaci\u00f3n de recepci\u00f3n pendientes en cualquier momento, la capa de enlace de datos debe poder prohibir a la capa de red que la moleste con m\u00e1s trabajo. Los procedimientos de biblioteca enable_network_layer y disable_network_layer llevan a cabo esta funci\u00f3n.\n220\nLA CAPA DE ENLACE DE DATOS\nCAP. 3\n/* El protocolo 5 (retroceso n) permite m\u00faltiples tramas pendientes. El emisor podr\u00eda enviar hasta MAX_SEQ tramas sin esperar una confirmaci\u00f3n de recepci\u00f3n. Adem\u00e1s, a diferencia de los primeros protocolos, no se supone que la capa de red debe tener siempre un paquete nuevo. En vez de ello, la capa de red activa un evento network_layer_ready cuando hay un paquete por enviar. */ #define MAX_SEQ 7 /* debe ser 2^n \u2013 1 */ typedef enum {frame_arrival, cksum_err, timeout, network_layer_ready} event_type; #include \"protocol.h\" static boolean between(seq_nr a, seq_nr b, seq_nr c) { /* Devuelve true si a f\nEsta llamada s\u00f3lo funciona si el servidor ya se est\u00e1 ejecutando en flits.cs.vu.nl, si existe el archivo /usr/tom/nombredearchivo y si el servidor tiene acceso de lectura a \u00e9l. Si la llamada es exitosa, el archivo se transfiere a trav\u00e9s de Internet y se escribe en f, despu\u00e9s de lo cual finaliza el programa cliente. Puesto que el servidor contin\u00faa despu\u00e9s de una transferencia, el cliente puede iniciarse una y otra vez para obtener otros archivos. El c\u00f3digo del cliente inicia con algunas inclusiones y declaraciones. La ejecuci\u00f3n comienza verificando si el c\u00f3digo ha sido llamado con el n\u00famero correcto de argumentos (argc = 3 significa el nombre del programa m\u00e1s dos argumentos). Observe que argv [1] contiene el nombre del servidor (por ejemplo, flits.cs.vu.nl ) y que gethostbyname lo convierte en una direcci\u00f3n IP. Esta funci\u00f3n utiliza DNS para buscar el nombre. En el cap\u00edtulo 7 analizaremos DNS. A continuaci\u00f3n se crea e inicializa un socket. Despu\u00e9s de esto, el cliente intenta establecer una conexi\u00f3n TCP con el servidor, mediante connect. Si el servidor est\u00e1 activo y ejecut\u00e1ndose en la m\u00e1quina especificada y enlazado a SERVER_PORT y si est\u00e1 inactivo o tiene espacio es su cola listen, la conexi\u00f3n se establecer\u00e1 (en alg\u00fan momento). El cliente utiliza esta conexi\u00f3n para enviar el nombre del archivo escribiendo en el socket. El n\u00famero de bytes enviados es un byte mayor que el propio nombre, puesto que se env\u00eda al servidor el byte 0 para indicarle en d\u00f3nde termina dicho nombre.\n490\nLA CAPA DE TRANSPORTE\nCAP. 6\n/* Esta p\u00e1gina contiene un programa cliente que puede solicitar un archivo * desde el programa servidor de la siguiente p\u00e1gina. El servidor responde * enviando el archivo completo. */ #include #include #include #include\n#define SERVER_PORT 12345 #define BUF_SIZE 4096\n/* arbitrario, pero el cliente y el /* servidor deben coincidir */ /* tama\u00f1o de bloque para transferencia */\nint main(int argc, char **argv) { int c, s, bytes; char buf[BUF_SIZE]; struct hostent *h; struct sockaddr_in channel;\n/* b\u00fafer para el archivo entrante */ /* informaci\u00f3n sobre el servidor */ /* contiene la direcci\u00f3n IP */\nif (argc != 3) fatal(\u201cUsage: client server-name file-name\u201d); h = gethostbyname(argv[1]); /* busca la direcci\u00f3n IP del host */ if (!h) fatal(\u201cgethostbyname failed\u201d); s = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP); if (s < 0) fatal(\u201csocket\u201d); memset(&channel, 0, sizeof(channel)); channel.sin_family= AF_INET; memcpy(&channel.sin_addr.s_addr, h->h_addr, h->h_length); channel.sin_port= htons(SERVER_PORT); c = connect(s, (struct sockaddr *) &channel, sizeof(channel)); if (c < 0) fatal(\u201cconnect failed\u201d); /* Se ha establecido la conexi\u00f3n. Se env\u00eda el nombre del archivo incluyendo /* el byte 0 al final. */ write(s, argv[2], strlen(argv[2])+1); /* Obtiene el archivo y lo escribe en la salida est\u00e1ndar. */ while (1) { bytes = read(s, buf, BUF_SIZE); /* lee del socket */ if (bytes remote_address = r; cptr->state = WAITING; cptr->clr_req_received = 0; cptr->credits = 0; cptr->timer = 0; to_net(i, 0, 0, CALL_REQ, data, 2); sleep(); /* espera CALL_ACC o CLEAR_REQ */ if (cptr->state == ESTABLISHED) return(i); if (cptr->clr_req_received) { /* El otro lado rechaz\u00f3 la llamada. */ cptr->state = IDLE; /* regresa al estado de inactividad */ to_net(i, 0, 0, CLEAR_CONF, data, 0); return(ERR_REJECT); } } else return(ERR_FULL); /* rechaza la conexi\u00f3n: no hay espacio en la tabla */ } int send(int cid, unsigned char bufptr[], int bytes) { /* El usuario desea enviar un mensaje. */ int i, count, m; struct conn *cptr = &conn[cid]; /* Pasa al estado de transmisi\u00f3n. */ cptr->state = SENDING; cptr->byte_count = 0; /* # de bytes enviados hasta ahora de este mensaje */ if (cptr->clr_req_received == 0 && cptr->credits == 0) sleep(); if (cptr->clr_req_received == 0) { /* Cr\u00e9dito disponible; divide el mensaje en paquetes si es necesario. */ do { if (bytes - cptr->byte_count > MAX_PKT_SIZE) { /* mensaje con m\u00faltiples paquetes */ count = MAX_PKT_SIZE; m = 1; /* m\u00e1s paquetes posteriormente */ } else { /* mensaje de un solo paquete */ count = bytes - cptr->byte_count; m = 0; /* \u00faltimo paquete de este mensaje*/ } for (i = 0; i < count; i++) data[i] = bufptr[cptr->byte_count + i]; to_net(cid, 0, m, DATA_PKT, data, count); /* env\u00eda un paquete */ cptr->byte_count = cptr->byte_count + count; /* incrementa los bytes enviados hasta ahora */ } while (cptr->byte_count < bytes); /* repite el ciclo hasta enviar todo el mensaje */\n520\nLA CAPA DE TRANSPORTE\ncptr->credits--; cptr->state = ESTABLISHED; return(OK); } else { cptr->state = ESTABLISHED; return(ERR_CLOSED);\nCAP. 6\n/* cada mensaje utiliza un cr\u00e9dito */\n/* transmisi\u00f3n fallida: el igual desea desconectarse */\n} } int receive(int cid, unsigned char bufptr[], int *bytes) { /* El usuario est\u00e1 preparado para recibir un mensaje. */ struct conn *cptr = &conn[cid]; if (cptr->clr_req_received == 0) { /* La conexi\u00f3n a\u00fan permanece; trata de recibir. */ cptr->state = RECEIVING; cptr->user_buf_addr = bufptr; cptr->byte_count = 0; data[0] = CRED; data[1] = 1; to_net(cid, 1, 0, CREDIT, data, 2); /* env\u00eda cr\u00e9dito */ sleep(); /* se bloquea en espera de datos */ *bytes = cptr->byte_count; } cptr->state = ESTABLISHED; return(cptr->clr_req_received ? ERR_CLOSED : OK); } int disconnect(int cid) { /* El usuario desea liberar una conexi\u00f3n. */ struct conn *cptr = &conn[cid]; if (cptr->clr_req_received) { cptr->state = IDLE; to_net(cid, 0, 0, CLEAR_CONF, } else { cptr->state = DISCONN;\n/* el otro lado inici\u00f3 la terminaci\u00f3n */ /* se libera la conexi\u00f3n */ data, 0); /* nosotros iniciamos la terminaci\u00f3n */ /* no liberada hasta que el otro lado est\u00e9 de acuerdo */ to_net(cid, 0, 0, CLEAR_REQ, data, 0);\n} return(OK); } void packet_arrival(void) { /* Ha llegado un paquete, se obtiene y procesa. */ int cid; /* conexi\u00f3n en la cual arrib\u00f3 el paquete */ int count, i, q, m; pkt_type ptype; /* CALL_REQ, CALL_ACC, CLEAR_REQ, CLEAR_CONF, DATA_PKT, CREDIT */ unsigned char data[MAX_PKT_SIZE]; /* porci\u00f3n de datos del paquete que lleg\u00f3 */ struct conn *cptr; from_net(&cid, &q, &m, &ptype, data, &count); cptr = &conn[cid];\n/* se obtiene*/\nSEC. 6.3\nUN PROTOCOLO DE TRANSPORTE SENCILLO\n521\nswitch (ptype) { case CALL_REQ: /* el usuario remoto desea establecer conexi\u00f3n */ cptr->local_address = data[0]; cptr->remote_address = data[1]; if (cptr->local_address == listen_address) { listen_conn = cid; cptr->state = ESTABLISHED; wakeup(); } else { cptr->state = QUEUED; cptr->timer = TIMEOUT; } cptr->clr_req_received = 0; cptr->credits = 0; break; case CALL_ACC:\n/* el usuario remoto ha aceptado nuestra CALL_ REQ */\ncptr->state = ESTABLISHED; wakeup(); break; case CLEAR_REQ:\n/* usuario remoto desea desconectarse o rechazar la llamada */\ncptr->clr_req_received = 1; if (cptr->state == DISCONN) cptr->state = IDLE; /* limpia la colisi\u00f3n */ if (cptr->state == WAITING l l cptr->state == RECEIVING l l cptr->state == SENDING) wakeup(); break; case CLEAR_CONF:\n/* el usuario remoto est\u00e1 de acuerdo en la desconexi\u00f3n */\ncptr->state = IDLE; break; case CREDIT: /* el usuario remoto espera datos */ cptr->credits += data[1]; if (cptr->state == SENDING) wakeup(); break; case DATA_PKT: /* el usuario remoto ha enviado datos */ for (i = 0; i < count; i++) cptr->user_buf_addr[cptr->byte_count + i] = data[i]; cptr->byte_count += count; if (m == 0 ) wakeup(); } } void clock(void) { /* El reloj puls\u00f3, verificar si expir\u00f3 el temporizador de solicitudes de conexi\u00f3n en cola. */ int i; struct conn *cptr; for (i = 1; i timer > 0) { /* el temporizador estaba en funcionamiento */ cptr->timer\u2013\u2013; if (cptr->timer == 0) { /* el temporizador expir\u00f3 */ cptr->state = IDLE; to_net(i, 0, 0, CLEAR_REQ, data, 0); } } } }\nFigura 6-20. Entidad de transporte de ejemplo.\n522\nLA CAPA DE TRANSPORTE\nCAP. 6\nCuando un usuario llama a RECEIVE, se env\u00eda un mensaje de cr\u00e9dito especial a la entidad de transporte de la m\u00e1quina emisora y se registra en el arreglo conn. Al llamar a SEND, la entidad de transporte revisa si ha llegado un cr\u00e9dito en la conexi\u00f3n especificada. De ser as\u00ed, el mensaje se env\u00eda (en m\u00faltiples paquetes de ser necesario) y se disminuye el cr\u00e9dito; en caso contrario, la entidad de transporte se pone a dormir hasta la llegada de un cr\u00e9dito. Este mecanismo garantiza que no se enviar\u00e1 nunca un mensaje a menos que el otro lado ya haya hecho un RECEIVE. Como resultado, siempre que llegue un mensaje habr\u00e1 un b\u00fafer disponible en el cual puede ponerse. El esquema puede generalizarse f\u00e1cilmente para permitir que los receptores proporcionen m\u00faltiples b\u00faferes y soliciten m\u00faltiples mensajes. Es importante no olvidar la sencillez de la figura 6-20. Una entidad de transporte para uso real normalmente comprobar\u00eda la validez de todos los par\u00e1metros proporcionados por el usuario, manejar\u00eda la recuperaci\u00f3n de ca\u00eddas de la capa de red, se encargar\u00eda de colisiones de llamadas y soportar\u00eda un servicio de transporte m\u00e1s general, incluidas funciones como interrupciones, datagramas y versiones no bloqueadoras de las primitivas SEND y RECEIVE.\n6.3.3 El ejemplo como m\u00e1quina de estados finitos Escribir una entidad de transporte es un trabajo dif\u00edcil y exigente, especialmente para los protocolos m\u00e1s realistas. A fin de reducir la posibilidad de cometer errores, el estado del protocolo se puede representar como m\u00e1quina de estados finitos. Ya hemos visto que nuestro protocolo de ejemplo tiene siete estados por conexi\u00f3n. Tambi\u00e9n es posible aislar 12 eventos que pueden ocurrir para pasar una conexi\u00f3n de un estado a otro. Cinco de estos eventos son las cinco primitivas de servicio. Otros seis son las llegadas de los seis tipos de paquete legales. El \u00faltimo es la expiraci\u00f3n del temporizador. En la figura 6-21 se muestran las acciones principales del protocolo en forma de matriz. Las columnas son los estados y las filas son los 12 eventos. Cada entrada de la matriz (es decir, la m\u00e1quina de estados finitos) de la figura 6-21 tiene hasta tres campos: un predicado, una acci\u00f3n y un estado nuevo. El predicado indica en qu\u00e9 condiciones se emprende la acci\u00f3n. Por ejemplo, en la entrada de la esquina superior izquierda, si se ejecuta una LISTEN y no hay m\u00e1s espacio de tabla (predicado P1) falla la LISTEN y no cambia el estado. Por otra parte, si ya ha llegado un paquete CALL REQUEST para la direcci\u00f3n de transporte en la que se est\u00e1 escuchando (predicado P2), se establece de inmediato la conexi\u00f3n. Otra posibilidad es que P2 sea falso, es decir, que no ha entrado ning\u00fan CALL REQUEST, en cuyo caso la conexi\u00f3n permanece en el estado IDLE, esperando un paquete CALL REQUEST. Es importante indicar que la selecci\u00f3n de estados a usar en la matriz no es fijada completamente por el protocolo mismo. En este ejemplo, no hay ning\u00fan estado LISTENING, lo que ser\u00eda algo razonable despu\u00e9s de una LISTEN. No hay estado LISTENING porque un estado se asocia a un registro de conexi\u00f3n, y LISTEN no crea un registro de conexi\u00f3n. \u00bfPor qu\u00e9 no? Porque hemos decidido usar los n\u00fameros de circuito virtual de la capa de red como identificadores de la conexi\u00f3n, y el n\u00famero de circuito virtual para una LISTEN es escogido por la capa de red al llegar el paquete CALL REQUEST.\nSEC. 6.3\n523\nUN PROTOCOLO DE TRANSPORTE SENCILLO Estado\nPrimitivas\nInactivo LISTEN\nP1: ~/Inactivo P2: A1/Estab. P2: A2/Inactivo\nCONNECT\nP1: ~/Inactivo P1: A3/En esp.\nEn espera En cola ~/Estab.\nDISCONNECT\nP4: A5/Inactivo P4: A6/Desc.\nSEND\nP5: A7/Estab. P5: A8/Trans.\nRECEIVE\nPaquetes de entrada\nCall_req\nA9/Recib. P3: A1/Estab. P3: A4/En cola\nCall_acc\n~/Estab.\nClear_req\n~/Inactivo\nA10/Estab.\nA10/Estab.\nA10/Estab.\nClear_conf DataPkt\nTimeout\n~/Inactivo\n~/Inactivo\nA12/Estab.\nCredit Reloj\nTransDesEstablecido mitiendo Recibiendo conexi\u00f3n\nA11/Estab.\nA7/Estab.\n~/Inactivo\nPredicados P1: Tabla de conexiones llena P2: Call_req pendiente P3: LISTEN pendiente P4: Clear_req pendiente P5: Cr\u00e9dito disponible\nAcciones A1: Env\u00eda Call_acc A2: Espera Call_req A3: Env\u00eda Call_req A4: Inicia temporizador A5: Env\u00eda Clear_conf A6: Env\u00eda Clear_req\nA7: Env\u00eda mensaje A8: Espera cr\u00e9dito A9: Env\u00eda cr\u00e9dito A10: Establece indicador Clr_req_received A11: Registra cr\u00e9dito A12: Acepta mensaje\nFigura 6-21. El protocolo de ejemplo como m\u00e1quina de estados finitos. Cada entrada tiene un predicado opcional, una acci\u00f3n opcional y el estado nuevo. La tilde indica que no se realiz\u00f3 ninguna acci\u00f3n importante. Una barra sobre un predicado indica la negaci\u00f3n del predicado. Las entradas en blanco corresponden a eventos imposibles o inv\u00e1lidos.\nLas acciones A1 a A12 son las acciones principales, como el env\u00edo de paquetes y el inicio de temporizadores. No se listan todas las acciones menores, como la inicializaci\u00f3n de los campos de un registro de conexi\u00f3n. Si una acci\u00f3n comprende despertar un proceso dormido, las acciones que\n524\nLA CAPA DE TRANSPORTE\nCAP. 6\nsiguen a su despertar tambi\u00e9n cuentan. Por ejemplo, si entra un paquete CALL REQUEST y un proceso estaba dormido esper\u00e1ndolo, la transmisi\u00f3n del paquete CALL ACCEPT que sigue al despertar cuenta como parte de la acci\u00f3n de CALL REQUEST. Tras la ejecuci\u00f3n de cada acci\u00f3n, la conexi\u00f3n puede pasar a un estado nuevo, como se muestra en la figura 6-21. La ventaja de representar el protocolo como una matriz es triple. Primero, de esta manera es mucho m\u00e1s f\u00e1cil que el programador revise sistem\u00e1ticamente cada combinaci\u00f3n de estado y evento para ver si se requiere una acci\u00f3n. En las implementaciones de producci\u00f3n se usar\u00edan algunas de las combinaciones para manejo de errores. En la figura 6-21 no se hace distinci\u00f3n entre situaciones imposibles e ilegales. Por ejemplo, si una conexi\u00f3n est\u00e1 en el estado waiting, el evento DISCONNECT es imposible porque el usuario est\u00e1 bloqueado y no puede ejecutar primitivas. Por otra parte, en el estado sending no se esperan paquetes de datos porque no se ha emitido cr\u00e9dito. La llegada de un paquete de datos es un error del protocolo. La segunda ventaja de la representaci\u00f3n en matriz del protocolo tiene que ver con su implementaci\u00f3n. Podemos imaginar un arreglo de dos dimensiones en el que el elemento a[i][ j] es un apuntador o \u00edndice al procedimiento que maneja la ocurrencia del evento i cuando se est\u00e1 en el estado j. Una posible implementaci\u00f3n es escribir la entidad de transporte como ciclo corto, esperando un evento en la parte superior del ciclo. Al ocurrir un evento, se localiza la conexi\u00f3n pertinente y se extrae su estado. Sabiendo ahora el evento y el estado, la entidad de transporte simplemente indexa en el arreglo a e invoca el procedimiento adecuado. Este enfoque produce un dise\u00f1o mucho m\u00e1s regular y sistem\u00e1tico que nuestra entidad de transporte. La tercera ventaja del enfoque de m\u00e1quina de estados finitos se aprecia en la descripci\u00f3n del protocolo. En algunos documentos est\u00e1ndares, los protocolos se dan como m\u00e1quinas de estados finitos similares a la de la figura 6-21. Pasar de este tipo de descripci\u00f3n a una entidad de transporte operante es mucho m\u00e1s f\u00e1cil si la entidad de transporte tambi\u00e9n es impulsada por una m\u00e1quina de estados finitos basada en el est\u00e1ndar. La desventaja principal del enfoque de m\u00e1quina de estados finitos es que puede ser m\u00e1s dif\u00edcil de entender que el ejemplo de programaci\u00f3n que usamos inicialmente. Sin embargo, este problema puede resolverse parcialmente dibujando la m\u00e1quina de estados finitos en forma de grafo, como se hace en la figura 6-22.\n6.4 LOS PROTOCOLOS DE TRANSPORTE DE INTERNET: UDP Internet tiene dos protocolos principales en la capa de transporte, uno orientado y otro no orientado a la conexi\u00f3n. En las siguientes secciones analizaremos los dos. El protocolo no orientado a la conexi\u00f3n es UDP. El protocolo orientado a la conexi\u00f3n es TCP. Empezaremos con UDP porque es b\u00e1sicamente IP con un encabezado corto. Tambi\u00e9n veremos dos aplicaciones de UDP.\nSEC. 6.4\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: UDP\nCONNECT\n525\nTIMEOUT INACTIVO CALL_REQ DISCONNECT\nLISTEN,\nEN ESPERA\nCALL_REQ\nCLEAR_REQ\nEN COLA\nLISTEN\nCALL_ACC CREDIT,\nESTABLECIDO\nRECEIVE\nENVIANDO\nSEND\nDISCONNECT\nCLEAR_REQ DATA, RECIBIENDO CLEAR_REQ\nDESCONEXI\u00d3N CLEAR_REQ, CLEAR_CONF\nFigura 6-22. El protocolo de ejemplo en forma gr\u00e1fica. Por sencillez, se han omitido las transiciones que dejan sin cambio el estado de las conexiones.\n6.4.1 Introducci\u00f3n a UDP El conjunto de protocolos de Internet soporta un protocolo de transporte no orientado a la conexi\u00f3n, UDP (Protocolo de Datagramas de Usuario). Este protocolo proporciona una forma para que las aplicaciones env\u00eden datagramas IP encapsulados sin tener que establecer una conexi\u00f3n. UDP se describe en el RFC 768. UDP transmite segmentos que consisten en un encabezado de 8 bytes seguido por la carga \u00fatil. En la figura 6-23 se muestra tal encabezado. Los dos puertos sirven para identificar los puntos terminales dentro de las m\u00e1quinas de origen y destino. Cuando llega un paquete UDP, su carga \u00fatil se entrega al proceso que est\u00e1 enlazado al puerto de destino. Este enlace ocurre cuando se utiliza la primitiva BIND o algo similar, como vimos en la figura 6-6 para TCP (el proceso de enlace es el mismo para UDP). De hecho, el valor principal de contar con UDP en lugar de simplemente utilizar el IP puro es la adici\u00f3n de los puertos de origen y destino. Sin los campos de puerto, la capa de transporte no sabr\u00eda qu\u00e9 hacer con el paquete. Con ellos, entrega los segmentos de manera correcta.\n526\nLA CAPA DE TRANSPORTE\nCAP. 6\n32 bits\nPuerto de origen\nPuerto de destino\nLongitud UDP\nSuma de verificaci\u00f3n UDP\nFigura 6-23. El encabezado UDP.\nEl puerto de origen se necesita principalmente cuando debe enviarse una respuesta al origen. Al copiar el campo Puerto de origen del segmento que llega en el campo Puerto de destino del segmento que sale, el proceso que env\u00eda la respuesta puede especificar cu\u00e1l proceso de la m\u00e1quina emisora va a obtenerlo. El campo Longitud UDP incluye el encabezado de 8 bytes y los datos. El campo Suma de verificaci\u00f3n UDP es opcional y se almacena como 0 si no se calcula (un 0 calculado se almacena como 1s). Su desactivaci\u00f3n no tiene sentido a menos que la calidad del servicio de los datos no importe (por ejemplo, en la voz digitalizada). Probablemente valga la pena mencionar de manera expl\u00edcita algunas de las cosas que UDP no realiza. No realiza control de flujo, control de errores o retransmisi\u00f3n cuando se recibe un segmento err\u00f3neo. Todo lo anterior le corresponde a los procesos de usuario. Lo que s\u00ed realiza es proporcionar una interfaz al protocolo IP con la caracter\u00edstica agregada de desmultiplexar varios procesos utilizando los puertos. Esto es todo lo que hace. Para aplicaciones que necesitan tener control preciso sobre el flujo de paquetes, control de errores o temporizaci\u00f3n, UDP es lo ideal. Un \u00e1rea en la que UDP es especialmente \u00fatil es en las situaciones cliente-servidor. Con frecuencia, el cliente env\u00eda una solicitud corta al servidor y espera una respuesta corta. Si se pierde la solicitud o la respuesta, el cliente simplemente puede terminar y probar nuevamente. El c\u00f3digo no s\u00f3lo es simple, sino que se necesitan muy pocos mensajes (uno en cada direcci\u00f3n) en comparaci\u00f3n con un protocolo que requiere una configuraci\u00f3n inicial. Una aplicaci\u00f3n que utiliza de esta manera a UDP es DNS (el Sistema de Nombres de Dominio), el cual analizaremos en el cap\u00edtulo 7. En resumen, un programa que necesita buscar la direcci\u00f3n IP de alg\u00fan host, por ejemplo, www.cs.berkeley.edu, puede enviar al servidor DNS un paquete UDP que contenga el nombre de dicho host. El servidor responde con un paquete UDP que contiene la direcci\u00f3n IP del host. No se necesita configuraci\u00f3n por adelantado ni tampoco liberaci\u00f3n posterior. S\u00f3lo dos mensajes viajan a trav\u00e9s de la red.\n6.4.2 Llamada a procedimiento remoto En cierto sentido, enviar un mensaje a un host remoto y obtener una respuesta es muy parecido a hacer una llamada a funci\u00f3n en un lenguaje de programaci\u00f3n. En ambos casos, usted inicia con uno o m\u00e1s par\u00e1metros y obtiene un resultado. Esta observaci\u00f3n ha llevado a la gente a tratar de que las interacciones de solicitud-respuesta en redes se asignen en forma de llamadas a procedimiento. Esto hace que las aplicaciones de red sean mucho m\u00e1s f\u00e1ciles de programar y de manejar.\nSEC. 6.4\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: UDP\n527\nPor ejemplo, imagine un procedimiento llamado obt_direccion_IP (nombre_de_host) que env\u00eda un paquete UDP a un servidor DNS y espera una respuesta, y en caso de que no llegue ninguna con rapidez, termina y lo intenta nuevamente. De esta forma, todos los detalles de la conectividad pueden ocultarse al programador. El trabajo clave en esta \u00e1rea fue realizado por Birrell y Nelson (1984), quienes sugirieron que se permitiera que los programas invocaran procedimientos localizados en hosts remotos. Cuando un proceso en la m\u00e1quina 1 llama a uno en la m\u00e1quina 2, el proceso invocador de la primera se suspende y la ejecuci\u00f3n del procedimiento se lleva a cabo en la 2. La informaci\u00f3n se puede transportar desde el invocador al proceso invocado en los par\u00e1metros, y se puede regresar en el resultado del procedimiento. El paso de mensajes es transparente para el programador. Esta t\u00e9cnica se conoce como RPC (Llamada a Procedimiento Remoto) y se ha vuelto la base de muchas aplicaciones de redes. Tradicionalmente, el procedimiento invocador se conoce como cliente y el proceso invocado, como servidor, por lo que aqu\u00ed utilizaremos esos nombres. El prop\u00f3sito esencial de RPC es hacer que una llamada a procedimiento remoto sea lo m\u00e1s parecida posible a una local. En la forma m\u00e1s simple, para llamar a un procedimiento remoto, el programa cliente debe enlazarse con un peque\u00f1o procedimiento de biblioteca, llamado stub del cliente, que representa al procedimiento servidor en el espacio de direcciones del cliente. De forma similar, el servidor se enlaza con una llamada a procedimiento denominada stub del servidor. Estos procedimientos ocultan el hecho de que la llamada a procedimiento desde el cliente al servidor no es local. En la figura 6-24 se muestran los pasos reales para realizar una RPC. El paso 1 consiste en que el cliente llame al stub del cliente. \u00c9sta es una llamada a procedimiento local, y los par\u00e1metros se colocan en la pila de la forma tradicional. El paso 2 consiste en que el stub del cliente empaca los par\u00e1metros en un mensaje y realiza una llamada de sistema para enviar dicho mensaje. El empaquetamiento de los par\u00e1metros se conoce como marshaling. El paso 3 consiste en que el kernel env\u00eda el mensaje desde la m\u00e1quina cliente a la m\u00e1quina servidor. El paso 4 consiste en que el kernel pasa el paquete entrante al stub del servidor. Por \u00faltimo, el paso 5 consiste en que el stub del servidor llame al procedimiento servidor con par\u00e1metros sin marshaling. La respuesta sigue la misma ruta en la direcci\u00f3n opuesta. El elemento clave a notar aqu\u00ed es que el procedimiento cliente, escrito por el usuario, simplemente realiza una llamada a procedimiento normal (es decir, local) al stub del cliente, lo cual tiene el mismo nombre que el procedimiento servidor. Puesto que el procedimiento cliente y el stub del cliente est\u00e1n en el mismo espacio de direcciones, los par\u00e1metros se pasan de la forma usual. De manera similar, el procedimiento servidor es llamado por un procedimiento en su espacio de direcciones con los par\u00e1metros que esperaba. Para el procedimiento servidor, nada es inusual. De esta forma, en lugar de que la E/S se realice en sockets, la comunicaci\u00f3n de red se realiza simulando una llamada a procedimiento normal. A pesar de la elegancia conceptual de RPC, hay algunas desventajas ocultas. La m\u00e1s grande es el uso de par\u00e1metros de apuntador. Por lo general, pasar un apuntador a un procedimiento no es un problema. El procedimiento invocado puede utilizar el apuntador de la misma manera que el invocador, porque ambos procedimientos habitan el mismo espacio de direcciones virtual. Con\n528\nLA CAPA DE TRANSPORTE CPU del cliente\nCAP. 6\nCPU del servidor Stub del cliente\nStub del servidor\nCliente\nServidor\nSistema operativo\nSistema operativo\nRed\nFigura 6-24. Pasos para realizar una llamada a procedimiento remoto. Los stubs est\u00e1n sombreados.\nRPC, el paso de apuntadores es imposible porque el cliente y el servidor est\u00e1n en diferentes espacios de direcciones. En algunos casos, se pueden utilizar trucos para hacer que el paso de apuntadores sea posible. Suponga que el primer par\u00e1metro es un apuntador a un entero, k. El stub del cliente puede clasificar k y enviarlo a lo largo del servidor. El stub del servidor a continuaci\u00f3n crea un apuntador a k y lo pasa al procedimiento servidor, justamente como lo espera. Cuando el procedimiento servidor regresa el control al stub del servidor, este \u00faltimo regresa k al cliente, donde k se copia en el anterior, por si el servidor cambi\u00f3. En efecto, la secuencia de llamada est\u00e1ndar de llamada por referencia se ha reemplazado con copiar-restaurar. Desgraciadamente, este truco no siempre funciona, por ejemplo, si el apuntador apunta hacia un grafo o a otra estructura de datos compleja. Por esta raz\u00f3n, se deben colocar algunas restricciones para los procedimientos llamados de manera remota. Un segundo problema es que en los lenguajes de tipos flexibles, como C, es perfectamente legal escribir un procedimiento que calcule el producto interno de dos vectores (arreglos), sin especificar la longitud de cada uno. \u00c9stos pueden terminarse mediante un valor especial conocido s\u00f3lo por los procedimientos invocador e invocado. Bajo estas circunstancias, es esencialmente imposible que el stub del cliente aplique marshaling a los par\u00e1metros debido a que no tiene forma de determinar su longitud. Un tercer problema es que no siempre es posible deducir los tipos de par\u00e1metros, ni siquiera de una especificaci\u00f3n formal o el c\u00f3digo mismo. Un ejemplo de esto es printf, el cual puede tener cualquier n\u00famero de par\u00e1metros (por lo menos uno), y \u00e9stos pueden ser una mezcla arbitraria de tipos enteros, cortos, largos, caracteres, cadenas, as\u00ed como de n\u00fameros de punto flotante de varias longitudes, entre otros. Tratar de llamar a printf como un procedimiento remoto ser\u00eda pr\u00e1cticamente imposible debido a que C es demasiado permisivo. Sin embargo, una regla que especifique el uso de RPC siempre y cuando no se utilice C (o C++) para programar tal vez no sea muy popular. Un cuarto problema se relaciona con el uso de las variables globales. Por lo general, los procedimientos invocador e invocado pueden comunicarse utilizando variables globales y par\u00e1metros. Si el procedimiento invocado se mueve a una m\u00e1quina remota, el c\u00f3digo fallar\u00e1 porque las variables globales ya no se pueden compartir.\nSEC. 6.4\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: UDP\n529\nEstos problemas no significan que RPC no tiene mucho futuro. De hecho, se utiliza ampliamente, pero se necesitan algunas restricciones para hacerlo funcionar bien en la pr\u00e1ctica. Por supuesto, RPC no necesita utilizar paquetes UDP, pero RPC y UDP son una buena combinaci\u00f3n y UDP se utiliza com\u00fanmente con RPC. No obstante, cuando los par\u00e1metros o resultados son m\u00e1s grandes que el tama\u00f1o m\u00e1ximo del paquete UDP o cuando la operaci\u00f3n solicitada no tiene la misma potencia (es decir, no se puede repetir de forma segura, como cuando se incrementa un contador), tal vez sea necesario establecer una conexi\u00f3n TCP y enviar una solicitud a trav\u00e9s de ella en lugar de utilizar UDP.\n6.4.3 El protocolo de transporte en tiempo real El RPC cliente-servidor es un \u00e1rea en la que se utiliza ampliamente UDP. Otra son las aplicaciones multimedia en tiempo real. En particular, conforme el radio en Internet, la telefon\u00eda en Internet, la m\u00fasica bajo demanda, la videoconferencia, el v\u00eddeo bajo demanda y otras aplicaciones multimedia se volv\u00edan m\u00e1s comunes, las personas que descubrieron cada una de esas aplicaciones estaba reinventando m\u00e1s o menos el mismo protocolo de transporte de tiempo-real. Gradualmente se volvi\u00f3 m\u00e1s claro que tener un protocolo de transporte gen\u00e9rico para m\u00faltiples aplicaciones ser\u00eda una excelente idea. Y fue por esto que naci\u00f3 el RTP (Protocolo de Transporte en Tiempo Real). Se describe en el RFC 1889 y ahora se utiliza ampliamente. La posici\u00f3n del RTP en la pila de protocolos es algo extra\u00f1a. Se decidi\u00f3 colocarlo en el espacio de usuario y ejecutarlo (por lo general) sobre UDP. Opera como se muestra a continuaci\u00f3n. La aplicaci\u00f3n multimedia consiste en m\u00faltiples flujos de audio, v\u00eddeo, texto, entre otros. \u00c9stos se colocan en la biblioteca RTP, la cual est\u00e1 en el espacio de usuario junto con la aplicaci\u00f3n. Esta biblioteca multiplexa los flujos y los codifica en paquetes RTP, que despu\u00e9s coloca en un socket. En el otro extremo del socket (en el kernel del sistema operativo), los paquetes UDP se generan e incrustan en paquetes IP. Si la computadora est\u00e1 en una Ethernet, los paquetes IP se colocan a continuaci\u00f3n en tramas Ethernet para su transmisi\u00f3n. En la figura 6-25(a) se muestra la pila de protocolos para esta situaci\u00f3n, y en la 6-25(b) se muestra el anidamiento de paquetes.\nEspacio de usuario\nAplicaci\u00f3n multimedia\nEncabezado Encabezado Ethernet UDP Encabezado Encabezado RTP IP\nRTP Carga \u00fatil de RTP\nInterfaz de socket UDP Kernel del SO\nCarga \u00fatil de UDP\nIP Ethernet\nCarga \u00fatil de IP Carga \u00fatil de Ethernet\n(a)\n(b)\nFigura 6-25. (a) La posici\u00f3n del RTP en la pila de protocolos. (b) Anidamiento de paquetes.\n530\nLA CAPA DE TRANSPORTE\nCAP. 6\nComo consecuencia de este dise\u00f1o, es un poco dif\u00edcil decir en cu\u00e1l capa est\u00e1 RTP. Debido a que se ejecuta en el espacio de usuario y a que est\u00e1 enlazado al programa de aplicaci\u00f3n, ciertamente luce como un protocolo de aplicaci\u00f3n. Por otro lado, es un protocolo gen\u00e9rico, independiente de la aplicaci\u00f3n que simplemente proporciona caracter\u00edsticas de transporte, por lo que se parece a un protocolo de transporte. Probablemente la mejor descripci\u00f3n es que es un protocolo de transporte que est\u00e1 implementado en la capa de aplicaci\u00f3n. La funci\u00f3n b\u00e1sica de RTP es multiplexar varios flujos de datos en tiempo real en un solo flujo de paquetes UDP. El flujo UDP se puede enviar a un solo destino (unidifusi\u00f3n) o a m\u00faltiples destinos (multidifusi\u00f3n). Debido a que RTP s\u00f3lo utiliza UDP normal, sus paquetes no son tratados de manera especial por los enrutadores, a menos que se habiliten algunas caracter\u00edsticas de calidad de servicio IP normales. En particular, no hay garant\u00edas especiales acerca de la entrega, fluctuaci\u00f3n, etc\u00e9tera. A cada paquete enviado en un flujo RTP se le da un n\u00famero m\u00e1s grande que a su predecesor. Esta numeraci\u00f3n permite al destino determinar si falta alg\u00fan paquete. Si falta alguno, la mejor acci\u00f3n que el destino puede realizar es aproximar el valor faltante mediante la interpolaci\u00f3n. La retransmisi\u00f3n no es una opci\u00f3n pr\u00e1ctica debido a que el paquete retransmitido probablemente llegar\u00e1 muy tarde como para ser \u00fatil. En consecuencia, RTP no tiene control de flujo, control de errores, confirmaciones de recepci\u00f3n ni ning\u00fan mecanismo para solicitar retransmisiones. Cada carga \u00fatil RTP podr\u00eda contener m\u00faltiples muestras, y \u00e9stas podr\u00edan codificarse de la forma en la que la aplicaci\u00f3n desee. Para permitir la interconectividad, RTP define diversos perfiles (por ejemplo, un solo flujo de audio), y para cada perfil se podr\u00edan permitir m\u00faltiples formatos de codificaci\u00f3n. Por ejemplo, un solo flujo de audio podr\u00eda codificarse como muestras de PCM de 8 bits a 8 kHz, codificaci\u00f3n delta, codificaci\u00f3n predictiva, codificaci\u00f3n GSM, MP3, etc\u00e9tera. RTP proporciona un campo de encabezado en el que el origen puede especificar la codificaci\u00f3n, pero por otro lado no tiene nada que ver en la forma en que se realiza la codificaci\u00f3n. Otra caracter\u00edstica que muchas de las aplicaciones en tiempo real necesitan es la marcaci\u00f3n del tiempo (timestamping). La idea aqu\u00ed es permitir que el origen asocie una marca de tiempo con la primera muestra de cada paquete. Las marcas de tiempo son relativas al inicio del flujo, por lo que s\u00f3lo son importantes las diferencias entre dichas marcas de tiempo. Los valores absolutos no tienen significado. Este mecanismo permite que el destino realice una peque\u00f1a cantidad de almacenamiento en b\u00fafer y reproduzca cada muestra el n\u00famero exacto de milisegundos despu\u00e9s del inicio del flujo, independientemente de cu\u00e1ndo lleg\u00f3 el paquete que contiene la muestra. La marcaci\u00f3n del tiempo no s\u00f3lo reduce los efectos de la fluctuaci\u00f3n, sino que tambi\u00e9n permite que m\u00faltiples flujos est\u00e9n sincronizados entre s\u00ed. Por ejemplo, un programa de televisi\u00f3n digital podr\u00eda tener un flujo de v\u00eddeo y dos flujos de audio. Estos flujos de audio podr\u00edan ser para difusiones de est\u00e9reo o para manejar pel\u00edculas con la banda sonora del idioma original y con una doblada al idioma local, d\u00e1ndole una opci\u00f3n al espectador. Cada flujo proviene de un dispositivo f\u00edsico diferente, pero si tienen marcas de tiempo de un solo contador, pueden reproducirse de manera s\u00edncrona, incluso si los flujos se transmiten de manera irregular. En la figura 6-26 se ilustra el encabezado RTP. Consiste de tres palabras de 32 bits y de algunas extensiones. La primera palabra contiene el campo Versi\u00f3n, que es la 2. Esperemos que esta versi\u00f3n est\u00e9 muy cerca de la final debido a que s\u00f3lo qued\u00f3 pendiente un punto del c\u00f3digo\nSEC. 6.4\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: UDP\n531\n(aunque se puede definir como 3 dando a entender que la versi\u00f3n real estaba en una palabra de extensi\u00f3n). 32 bits\nVer. P X\nCC\nM\nTipo de carga \u00fatil\nN\u00famero de secuencia\nMarca de tiempo Identificador de origen de sincronizaci\u00f3n\nIdentificador de origen de contribuci\u00f3n\nFigura 6-26. El encabezado RTP.\nEl bit P indica que el paquete se ha rellenado a un m\u00faltiplo de 4 bytes. El \u00faltimo byte de relleno indica cu\u00e1ntos bytes se agregaron. El bit X indica que hay un encabezado de extensi\u00f3n. El formato y el significado de este encabezado no se definen. Lo \u00fanico que se define es que la primera palabra de la extensi\u00f3n proporciona la longitud. \u00c9sta es una puerta de escape para cualquier requerimiento imprevisto. El campo CC indica cu\u00e1ntos or\u00edgenes de contribuci\u00f3n est\u00e1n presentes, de 0 a 15 (vea m\u00e1s adelante). El bit M es un bit marcador espec\u00edfico de la aplicaci\u00f3n. Puede utilizarse para marcar el inicio de un cuadro de v\u00eddeo, el inicio de una palabra en un canal de audio, o algo m\u00e1s que la aplicaci\u00f3n entienda. El campo Tipo de carga \u00fatil indica cu\u00e1l algoritmo de codificaci\u00f3n se ha utilizado (por ejemplo, audio de 8 bits sin compresi\u00f3n, MP3, etc\u00e9tera). Puesto que cada paquete lleva este campo, la codificaci\u00f3n puede cambiar durante la transmisi\u00f3n. El N\u00famero de secuencia es simplemente un contador que se incrementa en cada paquete RTP enviado. Se utiliza para detectar paquetes perdidos. El origen del flujo produce la marca de tiempo para indicar cu\u00e1ndo se cre\u00f3 la primera muestra en el paquete. Este valor puede ayudar a reducir la fluctuaci\u00f3n en el receptor al desacoplar la reproducci\u00f3n del tiempo de llegada del paquete. El Identificador de origen de sincronizaci\u00f3n indica a cu\u00e1l flujo pertenece el paquete. Es el m\u00e9todo utilizado para multiplexar y desmultiplexar varios flujos de datos en un solo flujo de paquetes UDP. Por \u00faltimo, los Identificadores de origen de contribuci\u00f3n, en caso de que haya, se utilizan cuando los mezcladores est\u00e1n presentes en el estudio. En ese caso, el mezclador es el origen de sincronizaci\u00f3n, y los flujos que se mezclan se listan aqu\u00ed. RTP tiene un hermano peque\u00f1o llamado RTCP (Protocolo de Control de Transporte en Tiempo Real). Maneja la retroalimentaci\u00f3n, sincronizaci\u00f3n y la interfaz de usuario, pero no transporta ning\u00fan tipo de datos. La primera funci\u00f3n se puede utilizar para proporcionar a los or\u00edgenes\n532\nLA CAPA DE TRANSPORTE\nCAP. 6\nretroalimentaci\u00f3n en caso de retardo, fluctuaci\u00f3n, ancho de banda, congesti\u00f3n y otras propiedades de red. El proceso de codificaci\u00f3n puede utilizar esta informaci\u00f3n para incrementar la tasa de datos (y para proporcionar mejor calidad) cuando la red est\u00e1 funcionando bien y para disminuir la tasa de datos cuando hay problemas en la red. Al proporcionar retroalimentaci\u00f3n continua, los algoritmos de codificaci\u00f3n se pueden adaptar continuamente para proporcionar la mejor calidad posible bajo las circunstancias actuales. Por ejemplo, si el ancho de banda crece o decrece durante la transmisi\u00f3n, la codificaci\u00f3n puede cambiar de MP3 a PCM de 8 bits a codificaci\u00f3n delta conforme se requiera. El campo Tipo de carga \u00fatil se utiliza para indicar al destino cu\u00e1l algoritmo de codificaci\u00f3n se emplea en el paquete actual, lo que hace posible modificarlo a solicitud. RTCP tambi\u00e9n maneja sincronizaci\u00f3n entre flujos. El problema es que flujos diferentes pueden utilizar relojes diferentes, con distintas granularidades y distintas tasas de derivaci\u00f3n. RTCP puede utilizarse para mantenerlos sincronizados. Por \u00faltimo, RTCP proporciona una forma para nombrar los diversos or\u00edgenes (por ejemplo, en texto ASCII). Esta informaci\u00f3n puede desplegarse en la pantalla del receptor para indicar qui\u00e9n est\u00e1 hablando en ese momento. Podr\u00e1 encontrar m\u00e1s informaci\u00f3n en (Perkins, 2002).\n6.5 LOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP UDP es un protocolo simple y tiene algunos usos espec\u00edficos, como interacciones cliente-servidor y multimedia, pero para la mayor\u00eda de las aplicaciones de Internet se necesita una entrega en secuencia confiable. UDP no puede proporcionar esto, por lo que se necesita otro protocolo. Se llama TCP y es el m\u00e1s utilizado en Internet. A continuaci\u00f3n lo estudiaremos con detalle.\n6.5.1 Introducci\u00f3n a TCP TCP (Protocolo de Control de Transmisi\u00f3n) se dise\u00f1o espec\u00edficamente para proporcionar un flujo de bytes confiable de extremo a extremo a trav\u00e9s de una interred no confiable. Una interred difiere de una sola red debido a que diversas partes podr\u00edan tener diferentes topolog\u00edas, anchos de banda, retardos, tama\u00f1os de paquete y otros par\u00e1metros. TCP tiene un dise\u00f1o que se adapta de manera din\u00e1mica a las propiedades de la interred y que se sobrepone a muchos tipos de fallas. TCP se defini\u00f3 formalmente en el RFC 793. Conforme el tiempo pas\u00f3, se detectaron varios errores e inconsistencias, y los requerimientos de algunas \u00e1reas cambiaron. En el RFC 1122 se detallan estas especificaciones y algunos arreglos de errores. En el RFC 1323 se dan algunas extensiones. Cada m\u00e1quina que soporta TCP tiene una entidad de transporte TCP, ya sea un procedimiento de biblioteca, un proceso de usuario o parte del kernel. En todos los casos, maneja flujos TCP e interact\u00faa con la capa IP. Una entidad TCP acepta flujos de datos de usuario de procesos locales, los divide en fragmentos que no excedan los 64 KB (en la pr\u00e1ctica, por lo general, 1460 bytes de datos que se ajustan en una sola trama Ethernet con los encabezados IP y TCP), y env\u00eda cada fragmento como un datagrama IP independiente. Cuando los datagramas que contienen datos TCP\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n533\nllegan a una m\u00e1quina, se pasan a la entidad TCP, la cual reconstruye los flujos de bytes originales. Por simplicidad, algunas veces utilizaremos \u201cTCP\u201d para referirnos a la entidad de transporte TCP (una pieza de software) o al protocolo TCP (un conjunto de reglas). El contexto dejar\u00e1 claro a que nos referimos. Por ejemplo, en la frase \u201cEl usuario proporciona los datos a TCP\u201d, es claro que nos referimos a la entidad de transporte TCP. La capa IP no proporciona ninguna garant\u00eda de que los datagramas se entregar\u00e1n de manera apropiada, por lo que corresponde a TCP terminar los temporizadores y retransmitir los datagramas conforme sea necesario. Los datagramas que llegan podr\u00edan hacerlo en el orden incorrecto; tambi\u00e9n corresponde a TCP reensamblarlos en mensajes en la secuencia apropiada. En resumen, TCP debe proporcionar la confiabilidad que la mayor\u00eda de los usuarios desean y que IP no proporciona.\n6.5.2 El modelo del servicio TCP El servicio TCP se obtiene al hacer que tanto el servidor como el cliente creen puntos terminales, llamados sockets, como se mencion\u00f3 en la secci\u00f3n 6.1.3. Cada socket tiene un n\u00famero (direcci\u00f3n), que consiste en la direcci\u00f3n IP del host, y un n\u00famero de 16 bits, que es local a ese host, llamado puerto. Un puerto es el nombre TCP para un TSAP. Para obtener el servicio TCP, se debe establecer de manera expl\u00edcita una conexi\u00f3n entre un socket en la m\u00e1quina emisora y uno en la m\u00e1quina receptora. Las llamadas de socket se listan en la figura 6-5. Un socket puede utilizarse para m\u00faltiples conexiones al mismo tiempo. En otras palabras, dos o m\u00e1s conexiones pueden terminar en el mismo socket. Las conexiones se identifican mediante los identificadores de socket de los dos extremos, es decir (socket1, socket2). No se utiliza ning\u00fan otro n\u00famero de circuitos virtuales ni identificador. Los n\u00fameros de puerto menores que 1024 se llaman puertos bien conocidos y se reservan para servicios est\u00e1ndar. Por ejemplo, cualquier proceso que desee establecer una conexi\u00f3n a un host para transferir un archivo utilizando FTP puede conectarse con el puerto 21 del host de destino para conectar su demonio (daemon) FTP. La lista de puertos bien conocidos se proporciona en www.iana.org. Se han asignado aproximadamente 300. En la figura 6-27 se listan algunos de los m\u00e1s conocidos. Ciertamente podr\u00eda ser posible que el demonio FTP se conecte a s\u00ed mismo al puerto 21 en tiempo de arranque, que el demonio telnet se conecte a s\u00ed mismo al puerto 23 en tiempo de arranque, y as\u00ed sucesivamente. Sin embargo, hacer lo anterior podr\u00eda llenar la memoria con demonios que est\u00e1n inactivos la mayor parte del tiempo. En su lugar, lo que se hace generalmente es que un solo demonio, llamado inetd (demonio de Internet) en UNIX, se conecte a s\u00ed mismo a m\u00faltiples puertos y esperar la primera conexi\u00f3n entrante. Cuando eso ocurre, inetd bifurca un nuevo proceso y ejecuta el demonio apropiado en \u00e9l, dejando que ese demonio maneje la solicitud. De esta forma, los demonios distintos a inetd s\u00f3lo est\u00e1n activos cuando hay trabajo para ellos. Inetd consulta un archivo de configuraci\u00f3n para saber cu\u00e1l puerto utilizar. En consecuencia, el administrador del sistema puede configurar el sistema para tener demonios permanentes en los puertos m\u00e1s ocupados (por ejemplo, el puerto 80) e inetd en los dem\u00e1s.\n534\nLA CAPA DE TRANSPORTE Puerto\nProtocolo\nCAP. 6\nUso\n21\nFTP\nTransferencia de archivos\n23\nTelnet\nInicio remoto de sesi\u00f3n\n25\nSMTP\nCorreo electr\u00f3nico\n69\nTFTP\nProtocolo de transferencia de archivos trivial\n79\nFinger\nB\u00fasqueda de informaci\u00f3n sobre un usuario\n80\nHTTP\nWorld Wide Web\n110\nPOP-3\nAcceso remoto al correo electr\u00f3nico\n119\nNNTP\nNoticias USENET\nFigura 6-27. Algunos puertos asignados.\nTodas las conexiones TCP son de d\u00faplex total y de punto a punto. D\u00faplex total significa que el tr\u00e1fico puede ir en ambas direcciones al mismo tiempo. Punto a punto significa que cada conexi\u00f3n tiene exactamente dos puntos finales. TCP no soporta la multidifusi\u00f3n ni la difusi\u00f3n. Una conexi\u00f3n TCP es un flujo de bytes, no uno de mensajes. Los l\u00edmites de los mensajes no se preservan de extremo a extremo. Por ejemplo, si el proceso emisor realiza cuatro escrituras de 512 bytes en un flujo TCP, tal vez estos datos se entreguen al proceso receptor como cuatro fragmentos de 512 bytes, dos fragmentos de 1024 bytes, uno de 2048 bytes (vea la figura 6-28), o de alguna otra forma. No hay manera de que el receptor detecte la(s) unidad(es) en la(s) que se escribieron los datos. Encabezado IP\nEncabezado TCP\n(a)\n(b)\nFigura 6-28. (a) Cuatro segmentos de 512 bytes enviados como datagramas IP independientes. (b) Los 2048 bytes de datos que se entregan a la aplicaci\u00f3n en una sola llamada a READ.\nLos archivos de UNIX tambi\u00e9n tienen esta propiedad. El lector de un archivo no puede indicar si \u00e9ste escribi\u00f3 un bloque a la vez, un byte a la vez o todos al mismo tiempo. Al igual que con un archivo de UNIX, el software TCP no tiene idea de lo que significan los bytes y no le interesa averiguarlo. Un byte es s\u00f3lo un byte. Cuando una aplicaci\u00f3n pasa datos a TCP, \u00e9ste decide si los env\u00eda inmediatamente o los almacena en el b\u00fafer (a fin de recolectar una gran cantidad y, as\u00ed, enviarlos al mismo tiempo). Sin embargo, algunas veces, la aplicaci\u00f3n realmente necesita que los datos se env\u00eden de inmediato. Por ejemplo, suponga que un usuario inicia una sesi\u00f3n en una m\u00e1quina remota. Una vez que se termina una l\u00ednea de comandos y que se introduce un retorno de carro, es esencial que la l\u00ednea se env\u00ede\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n535\na la m\u00e1quina remota inmediatamente y que no se almacene en el b\u00fafer hasta que llegue la siguiente l\u00ednea. Para obtener los datos, las aplicaciones pueden utilizar el indicador PUSH, que es una se\u00f1al para TCP de que no debe retrasar la transmisi\u00f3n. Algunas de las primeras aplicaciones utilizaban el indicador PUSH como un tipo de marcador para delinear los l\u00edmites de los mensajes. Si bien este truco funcionaba algunas veces, otras fallaba debido a que no todas las implementaciones de TCP pasan el indicador PUSH a la aplicaci\u00f3n del receptor. Adem\u00e1s, si llegan indicadores PUSH antes de que el primero se haya transmitido (por ejemplo, debido a que la l\u00ednea de salida est\u00e1 ocupada), TCP es libre de recolectar todos los datos con indicadores PUSH en un solo datagrama IP, sin ninguna separaci\u00f3n entre las diversas piezas. Una \u00faltima caracter\u00edstica del servicio TCP que vale la pena mencionar son los datos urgentes. Cuando un usuario interactivo oprime las teclas Supr o Ctrl+C para interrumpir una operaci\u00f3n remota que ha iniciado, la aplicaci\u00f3n emisora coloca informaci\u00f3n de control en el flujo de datos y se la da a TCP junto con el indicador URGENT. Este evento ocasiona que TCP interrumpa el encolamiento de datos y transmita inmediatamente todo lo que tenga para esa conexi\u00f3n. Cuando el destino recibe los datos urgentes, se interrumpe la aplicaci\u00f3n receptora (por ejemplo, se le da una se\u00f1al en t\u00e9rminos de UNIX), a fin de que pueda detener lo que est\u00e9 haciendo y que lea el flujo de datos para encontrar los datos urgentes. El final de los datos urgentes se marca para que la aplicaci\u00f3n sepa cu\u00e1ndo terminan. El inicio de \u00e9stos no se marca; la aplicaci\u00f3n tiene que averiguarlo. Este esquema proporciona b\u00e1sicamente un mecanismo de se\u00f1alizaci\u00f3n simple y deja todo lo dem\u00e1s a la aplicaci\u00f3n.\n6.5.3 El protocolo TCP En esta secci\u00f3n daremos un repaso general del protocolo TCP; en la siguiente veremos el encabezado del protocolo, campo por campo. Una caracter\u00edstica clave de TCP, y una que domina el dise\u00f1o del protocolo, es que cada byte de una conexi\u00f3n TCP tiene su propio n\u00famero de secuencia de 32 bits. Cuando Internet comenz\u00f3, las l\u00edneas entre los enrutadores eran principalmente l\u00edneas alquiladas de 56 kbps, por lo que un host que mandaba datos a toda velocidad tardaba una semana en recorrer los n\u00fameros de secuencia. A las velocidades de las redes modernas, los n\u00fameros de secuencia pueden consumirse con una rapidez alarmante, como veremos m\u00e1s adelante. Los n\u00fameros de secuencia separados de 32 bits se utilizan para confirmaciones de recepci\u00f3n y para el mecanismo de ventana, como se analiza a continuaci\u00f3n. La entidad TCP emisora y la receptora intercambian datos en forma de segmentos. Un segmento consiste en un encabezado TCP fijo de 20 bytes (m\u00e1s una parte opcional) seguido de cero o m\u00e1s bytes de datos. El software de TCP decide el tama\u00f1o de los segmentos; puede acumular datos de varias escrituras para formar un segmento, o dividir los datos de una escritura en varios segmentos. Hay dos l\u00edmites que restringen el tama\u00f1o de segmento. Primero, cada segmento, incluido el encabezado TCP, debe caber en la carga \u00fatil de 65,515 bytes del IP. Segundo, cada red tiene una unidad m\u00e1xima de transferencia (MTU) y cada segmento debe caber en la MTU. En la pr\u00e1ctica, la MTU es, generalmente, de 1500 bytes (el tama\u00f1o de la carga \u00fatil en Ethernet) y, por tanto, define el l\u00edmite superior del tama\u00f1o de segmento.\n536\nLA CAPA DE TRANSPORTE\nCAP. 6\nEl protocolo b\u00e1sico usado por las entidades TCP es el protocolo de ventana corrediza. Cuando un transmisor env\u00eda un segmento, tambi\u00e9n inicia un temporizador. Cuando llega el segmento al destino, la entidad TCP receptora devuelve un segmento (con datos, si existen, de otro modo sin ellos) que contiene un n\u00famero de confirmaci\u00f3n de recepci\u00f3n igual al siguiente n\u00famero de secuencia que espera recibir. Si el temporizador del emisor expira antes de la recepci\u00f3n de la confirmaci\u00f3n, el emisor env\u00eda de nuevo el segmento. Aunque este protocolo suena sencillo, tiene muchos vericuetos que explicaremos a continuaci\u00f3n. Por ejemplo, pueden llegar segmentos fuera de orden, por lo que los bytes 3072\u22124095 podr\u00edan llegar pero no enviarse confirmaci\u00f3n de recepci\u00f3n porque los bytes 2048\u22123071 no han aparecido a\u00fan. Tambi\u00e9n pueden retardarse segmentos en tr\u00e1nsito durante tanto tiempo que el temporizador del emisor expira y los segmentos se retransmiten. Las retransmisiones podr\u00edan incluir rangos de bytes diferentes a los de la transmisi\u00f3n original, lo cual requiere una administraci\u00f3n cuidadosa para llevar el control de los bytes que se han recibido correctamente en un momento determinado. Sin embargo, esto es factible ya que cada byte del flujo tiene su propio desplazamiento \u00fanico. El TCP debe estar preparado para manejar y resolver estos problemas de una manera eficiente. Se ha invertido una cantidad considerable de esfuerzo en la optimizaci\u00f3n del desempe\u00f1o de los flujos TCP, incluso ante problemas de red. A continuaci\u00f3n se estudiar\u00e1n varios de los algoritmos usados por muchas implementaciones de TCP.\n6.5.4 El encabezado del segmento TCP En la figura 6-29 se muestra la distribuci\u00f3n de un segmento TCP. Cada segmento comienza con un encabezado de formato fijo de 20 bytes. El encabezado fijo puede ir seguido de opciones de encabezado. Tras las opciones, si las hay, pueden continuar hasta 65,535 \u2212 20 \u2212 20 = 65,495 bytes de datos, donde los primeros 20 se refieren al encabezado IP y los segundos al encabezado TCP. Los segmentos sin datos son legales y se usan por lo com\u00fan para confirmaciones de recepci\u00f3n y mensajes de control. Realicemos la disecci\u00f3n del encabezado TCP campo por campo. Los campos de Puerto de origen y Puerto de destino identifican los puntos terminales locales de la conexi\u00f3n. Los puertos bien conocidos se especifican en www.iana.org pero cada host puede asignar los dem\u00e1s seg\u00fan sea necesario. La direcci\u00f3n de un puerto m\u00e1s la direcci\u00f3n IP de su host forman un punto terminal \u00fanico de 48 bits. Los puntos terminales de origen y de destino en conjunto identifican la conexi\u00f3n. Los campos de N\u00famero de secuencia y N\u00famero de confirmaci\u00f3n de recepci\u00f3n desempe\u00f1an sus funciones normales. N\u00f3tese que el segundo especifica el siguiente byte esperado, no el \u00faltimo byte correctamente recibido. Ambos tienen 32 bits de longitud porque cada byte de datos est\u00e1 numerado en un flujo TCP. La Longitud del encabezado TCP indica la cantidad de palabras de 32 bits contenidas en el encabezado TCP. Esta informaci\u00f3n es necesaria porque el campo de Opciones es de longitud variable, por lo que el encabezado tambi\u00e9n. T\u00e9cnicamente, este campo en realidad indica el comienzo\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n537\n32 bits\nPuerto de origen\nPuerto de destino N\u00famero de secuencia\nN\u00famero de confirmaci\u00f3n de recepci\u00f3n Longitud del encabezado TCP\nU A P R S F R C S S Y I G K H T N N\nTama\u00f1o de ventana\nApuntador urgente\nSuma de verificaci\u00f3n\nOpciones (0 o m\u00e1s palabras de 32 bits)\nDatos (opcional)\nFigura 6-29. Encabezado TCP.\nde los datos en el segmento, medido en palabras de 32 bits, pero ese n\u00famero es simplemente la longitud del encabezado en palabras, por lo que el efecto es el mismo. A continuaci\u00f3n viene un campo de 6 bits que no se usa. El que este campo haya sobrevivido intacto durante m\u00e1s de una d\u00e9cada es testimonio de lo bien pensado que est\u00e1 el TCP. Protocolos inferiores lo habr\u00edan necesitado para corregir errores del dise\u00f1o original. Ahora vienen seis indicadores de 1 bit. URG se establece en 1 se est\u00e1 en uso el apuntador urgente. El apuntador urgente sirve para indicar un desplazamiento en bytes a partir del n\u00famero actual de secuencia en el que se encuentran datos urgentes. Este recurso sustituye los mensajes de interrupci\u00f3n. Como se mencion\u00f3 antes, este recurso es un mecanismo rudimentario para permitir que el emisor env\u00ede una se\u00f1al al receptor sin implicar al TCP en la raz\u00f3n de la interrupci\u00f3n. El bit ACK se establece en 1 para indicar que el N\u00famero de confirmaci\u00f3n de recepci\u00f3n es v\u00e1lido. Si el ACK es 0, el segmento no contiene una confirmaci\u00f3n de recepci\u00f3n, por lo que se ignora el campo de N\u00famero de confirmaci\u00f3n de recepci\u00f3n. El bit PSH indica datos que se deben transmitir de inmediato. Por este medio se solicita atentamente al receptor que entregue los datos a la aplicaci\u00f3n a su llegada y no los almacene en b\u00fafer hasta la recepci\u00f3n de un b\u00fafer completo (lo que podr\u00eda hacer en otras circunstancias por razones de eficiencia). El bit RST se usa para restablecer una conexi\u00f3n que se ha confundido debido a una ca\u00edda de host u otra raz\u00f3n; tambi\u00e9n sirve para rechazar un segmento no v\u00e1lido o un intento de abrir una conexi\u00f3n. Por lo general, si usted recibe un segmento con el bit RST encendido, tiene un problema entre manos.\n538\nLA CAPA DE TRANSPORTE\nCAP. 6\nEl bit SYN se usa para establecer conexiones. La solicitud de conexi\u00f3n tiene SYN = 1 y ACK = 0 para indicar que el campo de confirmaci\u00f3n de recepci\u00f3n incorporado no est\u00e1 en uso. La respuesta de conexi\u00f3n s\u00ed lleva una confirmaci\u00f3n de recepci\u00f3n, por lo que tiene SYN = 1 y ACK = 1. En esencia, el bit SYN se usa para denotar CONNECTION REQUEST y CONNECTION ACCEPTED, y el bit ACK sirve para distinguir entre ambas posibilidades. El bit FIN se usa para liberar una conexi\u00f3n; especifica que el emisor no tiene m\u00e1s datos que transmitir. Sin embargo, tras cerrar una conexi\u00f3n, un proceso puede continuar recibiendo datos indefinidamente. Ambos segmentos, SYN y FIN, tienen n\u00fameros de secuencia y, por tanto, tienen la garant\u00eda de procesarse en el orden correcto. El control de flujo en el TCP se maneja usando una ventana corrediza de tama\u00f1o variable. El campo Tama\u00f1o de ventana indica la cantidad de bytes que pueden enviarse comenzando por el byte cuya recepci\u00f3n se ha confirmado. Es v\u00e1lido un campo de Tama\u00f1o de ventana de 0, e indica que se han recibido los bytes hasta N\u00famero de confirmaci\u00f3n de recepci\u00f3n \u2212 1, inclusive, pero que el receptor actualmente necesita un descanso y quisiera no recibir m\u00e1s datos por el momento, gracias. El permiso para enviar puede otorgarse despu\u00e9s enviando un segmento con el mismo N\u00famero de confirmaci\u00f3n de recepci\u00f3n y un campo Tama\u00f1o de ventana distinto de cero. En los protocolos del cap\u00edtulo 3, las confirmaciones de recepci\u00f3n de las tramas recibidas y los permisos para enviar nuevas tramas estaban enlazados. \u00c9sta fue una consecuencia de un tama\u00f1o de ventana fijo para cada protocolo. En TCP, las confirmaciones de recepci\u00f3n y los permisos para enviar datos adicionales son completamente independientes. En efecto, un receptor puede decir: \u201cHe recibido bytes hasta k, pero por ahora no deseo m\u00e1s\u201d. Esta independencia (de hecho, una ventana de tama\u00f1o variable) da flexibilidad adicional. M\u00e1s adelante lo estudiaremos con m\u00e1s detalle. Tambi\u00e9n se proporciona una Suma de verificaci\u00f3n para agregar confiabilidad. Es una suma de verificaci\u00f3n del encabezado, los datos y el pseudoencabezado conceptual mostrado en la figura 6-30. Al realizar este c\u00e1lculo, se establece el campo de Suma de verificaci\u00f3n del TCP en cero, y se rellena el campo de datos con un byte cero adicional si la longitud es un n\u00famero impar. El algoritmo de suma de verificaci\u00f3n simplemente suma todas las palabras de 16 bits en complemento a 1 y luego obtiene el complemento a 1 de la suma. Como consecuencia, al realizar el c\u00e1lculo el receptor con el segmento completo, incluido el campo de Suma de verificaci\u00f3n, el resultado debe ser 0. El pseudoencabezado contiene las direcciones IP de 32 bits de las m\u00e1quinas de origen y de destino, el n\u00famero de protocolo de TCP (6), y la cuenta de bytes del segmento TCP (incluido el encabezado). La inclusi\u00f3n del pseudoencabezado en el c\u00e1lculo de la suma de verificaci\u00f3n TCP ayuda a detectar paquetes mal entregados, pero hacerlo viola la jerarqu\u00eda de protocolos puesto que las direcciones de IP que contiene pertenecen a la capa IP, no a la capa TCP. UDP utiliza el mismo pseudoencabezado para su suma de verificaci\u00f3n. El campo Opciones ofrece una forma de agregar caracter\u00edsticas extra no cubiertas por el encabezado normal. La opci\u00f3n m\u00e1s importante es la que permite que cada host especifique la carga \u00fatil TCP m\u00e1xima que est\u00e1 dispuesto a aceptar. El uso de segmentos grandes es m\u00e1s eficiente que el de segmentos peque\u00f1os, puesto que el encabezado de 20 bytes puede entonces amortizarse entre m\u00e1s datos, pero los hosts peque\u00f1os tal vez no puedan manejar segmentos muy grandes. Durante el\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n539\n32 bits\nDirecci\u00f3n de origen Direcci\u00f3n de destino 00000000\nProtocolo = 6\nLongitud de segmento TCP\nFigura 6-30. Pseudoencabezado incluido en la suma de verificaci\u00f3n del TCP.\nestablecimiento de la conexi\u00f3n, cada lado puede anunciar su m\u00e1ximo y ver el de su compa\u00f1ero. Si un host no usa esta opci\u00f3n, tiene una carga \u00fatil predeterminada de 536 bytes. Se requiere que todos los hosts de Internet acepten segmentos TCP de 536 + 20 = 556 bytes. No es necesario que el tama\u00f1o m\u00e1ximo de segmento en ambas direcciones sea el mismo. En las l\u00edneas con alto ancho de banda, alto retardo o ambas cosas, la ventana de 64 KB con frecuencia es un problema. En una l\u00ednea T3 (44.736 Mbps) se requieren s\u00f3lo 12 mseg para enviar una ventana completa de 64 KB. Si el retardo de propagaci\u00f3n de ida y vuelta es de 50 mseg (t\u00edpico de una fibra transcontinental), el emisor estar\u00e1 inactivo 3/4 del tiempo en espera de confirmaciones de recepci\u00f3n. En una conexi\u00f3n satelital la situaci\u00f3n es peor a\u00fan. Un tama\u00f1o de ventana m\u00e1s grande permitir\u00e1 al emisor continuar enviando datos, pero como el campo de Tama\u00f1o de ventana es de 16 bits, es imposible expresar tal tama\u00f1o. En el RFC 1323 se propuso una opci\u00f3n de escala de ventana que permite al emisor y al receptor negociar un factor de escala de ventana. Este n\u00famero da la posibilidad de que ambos lados desplacen el campo de Tama\u00f1o de ventana hasta 14 bits a la izquierda, permitiendo por tanto ventanas de hasta 230 bytes. La mayor\u00eda de las implementaciones actuales de TCP manejan esta opci\u00f3n. Otra opci\u00f3n propuesta en el RFC 1106 y ahora de uso difundido es el empleo de la repetici\u00f3n selectiva en lugar del protocolo de retroceso n. Si el receptor recibe un segmento malo y luego una gran cantidad de segmentos buenos, el temporizador del protocolo TCP normal expirar\u00e1 en alg\u00fan momento y se retransmitir\u00e1n todos los segmentos sin confirmaci\u00f3n de recepci\u00f3n, incluidos los que se recibieron correctamente. El RFC 1106 introdujo los NAKs, para permitir que el receptor solicite un segmento (o segmentos) espec\u00edfico. Tras recibirlo, puede enviar una confirmaci\u00f3n de recepci\u00f3n de todos los datos que tiene en b\u00fafer, reduciendo de esta manera la cantidad de datos retransmitidos.\n6.5.5 Establecimiento de una conexi\u00f3n TCP En el TCP las conexiones se establecen usando el acuerdo de tres v\u00edas estudiado en la secci\u00f3n 6.2.2. Para establecer una conexi\u00f3n, un lado, digamos el servidor, espera pasivamente una conexi\u00f3n entrante ejecutando las primitivas LISTEN y ACCEPT y especificando cierto origen o bien nadie en particular.\n540\nLA CAPA DE TRANSPORTE\nCAP. 6\nEl otro lado, digamos el cliente, ejecuta una primitiva CONNECT especificando la direcci\u00f3n y el puerto IP con el que se desea conectar, el tama\u00f1o m\u00e1ximo de segmento TCP que est\u00e1 dispuesto a aceptar y opcionalmente algunos datos de usuario (por ejemplo, una contrase\u00f1a). La primitiva CONNECT env\u00eda un segmento TCP con el bit SYN encendido y el bit ACK apagado, y espera una respuesta. Al llegar el segmento al destino, la entidad TCP ah\u00ed revisa si hay un proceso que haya ejecutado un LISTEN en el puerto indicado en el campo de Puerto de destino. Si no lo hay, env\u00eda una respuesta con el bit RST encendido para rechazar la conexi\u00f3n. Host 2\nHost 1\nTiempo\nSYN (SEQ = x)\n1) K=x+ = y, AC Q E SYN (S\nHost 2\nHost 1 SYN (SE Q = x) ) EQ = y SYN (S\nK=x y, AC = Q (SE SYN SYN (SE Q=\n(SEQ = x + 1, ACK = y + 1)\n(a)\nx, A CK =\ny+\n+ 1)\n1)\n(b)\nFigura 6-31. (a) Establecimiento de una conexi\u00f3n TCP en el caso normal. (b) Colisi\u00f3n de llamadas.\nSi alg\u00fan proceso est\u00e1 escuchando en el puerto, ese proceso recibe el segmento TCP entrante y puede entonces aceptar o rechazar la conexi\u00f3n; si la acepta, se devuelve un segmento de confirmaci\u00f3n de recepci\u00f3n. La secuencia de segmentos TCP enviados en el caso normal se muestra en la figura 6-31(a). N\u00f3tese que un segmento SYN consume 1 byte de espacio de secuencia, por lo que puede reconocerse sin ambig\u00fcedades. En el caso en que dos hosts intentan simult\u00e1neamente establecer una conexi\u00f3n entre los mismos dos sockets, la secuencia de eventos es la que se ilustra en la figura 6-31(b). El resultado de estos eventos es que s\u00f3lo se establece una conexi\u00f3n, no dos, pues las conexiones se identifican por sus puntos terminales. Si el primer establecimiento resulta en una conexi\u00f3n identificada por (x, y), al igual que en el segundo, s\u00f3lo se hace una entrada de tabla, es decir, de (x, y). El n\u00famero de secuencia inicial de una conexi\u00f3n no es 0 por las razones que se\u00f1alamos antes. Se usa un esquema basado en reloj, con un pulso de reloj cada 4 \u03bcseg. Por seguridad adicional, al caerse un host, no podr\u00e1 reiniciarse durante el tiempo m\u00e1ximo de paquete (120 seg) para asegurar que no haya paquetes de conexiones previas vagando por Internet.\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n541\n6.5.6 Liberaci\u00f3n de una conexi\u00f3n TCP Aunque las conexiones TCP son d\u00faplex total, para entender la manera en que se liberan las conexiones es mejor visualizarlas como un par de conexiones s\u00edmplex. Cada conexi\u00f3n s\u00edmplex se libera independientemente de su igual. Para liberar una conexi\u00f3n, cualquiera de las partes puede enviar un segmento TCP con el bit FIN establecido, lo que significa que no tiene m\u00e1s datos por transmitir. Al confirmarse la recepci\u00f3n del FIN, ese sentido se apaga. Sin embargo, puede continuar un flujo de datos indefinido en el otro sentido. Cuando ambos sentidos se han apagado, se libera la conexi\u00f3n. Normalmente se requieren cuatro segmentos TCP para liberar una conexi\u00f3n, un FIN y un ACK para cada sentido. Sin embargo, es posible que el primer ACK y el segundo FIN est\u00e9n contenidos en el mismo segmento, reduciendo la cuenta total a tres. Al igual que con las llamadas telef\u00f3nicas en las que ambas partes dicen adi\u00f3s y cuelgan el tel\u00e9fono simult\u00e1neamente, ambos extremos de una conexi\u00f3n TCP pueden enviar segmentos FIN al mismo tiempo. La recepci\u00f3n de ambos se confirma de la manera normal, y se apaga la conexi\u00f3n. De hecho, en esencia no hay diferencia entre la liberaci\u00f3n secuencial o simult\u00e1nea por parte de los hosts. Para evitar el problema de los dos ej\u00e9rcitos, se usan temporizadores. Si no llega una respuesta a un FIN en un m\u00e1ximo de dos tiempos de vida de paquete, el emisor del FIN libera la conexi\u00f3n. Tarde o temprano el otro lado notar\u00e1 que, al parecer, ya nadie lo est\u00e1 escuchando, y tambi\u00e9n expirar\u00e1 su temporizador. Aunque esta soluci\u00f3n no es perfecta, dado el hecho de que te\u00f3ricamente es imposible una soluci\u00f3n perfecta tendremos que conformarnos con ella. En la pr\u00e1ctica, pocas veces ocurren problemas.\n6.5.7 Modelado de administraci\u00f3n de conexiones TCP Los pasos requeridos para establecer y liberar conexiones pueden representarse en una m\u00e1quina de estados finitos con los 11 estados listados en la figura 6-32. En cada estado son legales ciertos eventos. Al ocurrir un evento legal, debe emprenderse alguna acci\u00f3n. Si ocurren otros eventos, se informa un error. Cada conexi\u00f3n comienza en el estado CLOSED (cerrado) y deja ese estado cuando hace una apertura pasiva (LISTEN), o una apertura activa (CONNECT). Si el otro lado realiza la acci\u00f3n opuesta, se establece una conexi\u00f3n y el estado se vuelve ESTABLISHED. La liberaci\u00f3n de la conexi\u00f3n puede iniciarse desde cualquiera de los dos lados. Al completarse, el estado regresa a CLOSED. La m\u00e1quina de estados finitos se muestra en la figura 6-28. El caso com\u00fan de un cliente que se conecta activamente a un servidor pasivo se indica con l\u00edneas gruesas (continuas para el cliente, punteadas para el servidor). Las l\u00edneas delgadas son secuencia de eventos poco comunes. Cada l\u00ednea de la figura 6-33 se marca mediante un par evento/acci\u00f3n. El evento puede ser una llamada de sistema iniciada por el usuario (CONNECT, LISTEN, SEND o CLOSE), la llegada de un segmento (SYN, FIN, ACK o RST ) o, en un caso, una expiraci\u00f3n de temporizador del doble del tiempo de vida m\u00e1ximo del paquete. La acci\u00f3n es el env\u00edo de un segmento de control (SYN, FIN o RST ), o nada, indicado por \u2014. Los comentarios aparecen entre par\u00e9ntesis.\n542\nLA CAPA DE TRANSPORTE Estado\nCAP. 6\nDescripci\u00f3n\nCLOSED\nNo hay conexi\u00f3n activa ni pendiente\nLISTEN\nEl servidor espera una llamada\nSYN RCVD\nLleg\u00f3 solicitud de conexi\u00f3n; espera ACK\nSYN SENT\nLa aplicaci\u00f3n comenz\u00f3 a abrir una conexi\u00f3n\nESTABLISHED\nEstado normal de transferencia de datos\nFIN WAIT 1\nLa aplicaci\u00f3n dijo que ya termin\u00f3\nFIN WAIT 2\nEl otro lado acord\u00f3 liberar\nTIMED WAIT\nEspera que todos los paquetes mueran\nCLOSING\nAmbos lados intentaron cerrar simult\u00e1neamente\nCLOSE WAIT\nEl otro lado inici\u00f3 una liberaci\u00f3n\nLAST ACK\nEspera que todos los paquetes mueran\nFigura 6-32. Estados usados en la m\u00e1quina de estados finitos de administraci\u00f3n de conexiones TCP.\nEl diagrama puede entenderse mejor siguiendo primero la trayectoria de un cliente (la l\u00ednea continua gruesa) y luego la de un servidor (l\u00ednea punteada gruesa). Al emitir una solicitud CONNECT una aplicaci\u00f3n de la m\u00e1quina cliente, la entidad TCP local crea un registro de conexi\u00f3n, lo marca para indicar que est\u00e1 en el estado SYN SENT, y env\u00eda un segmento SYN. Observe que muchas conexiones pueden estar abiertas (o en proceso de apertura) al mismo tiempo como parte de varias aplicaciones, por lo que el estado es por conexi\u00f3n y se asienta en el registro de conexiones. Al llegar el SYN+ACK, el TCP env\u00eda al ACK final del acuerdo de tres v\u00edas y se conmuta al estado ESTABLISHED. Ahora pueden enviarse y recibirse datos. Al terminar una aplicaci\u00f3n, ejecuta una primitiva CLOSE, que causa que la entidad TCP local env\u00ede un segmento FIN y espere el ACK correspondiente (recuadro punteado rotulado \u201ccierre activo\u201d). Al llegar el ACK, se hace una transici\u00f3n al estado FIN WAIT 2, y ya est\u00e1 cerrado un sentido de la conexi\u00f3n. Cuando tambi\u00e9n cierra el otro lado, llega un FIN, para el cual se env\u00eda una confirmaci\u00f3n de recepci\u00f3n. Ahora ambos lados est\u00e1n cerrados, pero el TCP espera un tiempo igual al tiempo de vida m\u00e1ximo del paquete para garantizar que todos los paquetes de la conexi\u00f3n han sido eliminados, como protecci\u00f3n en caso de la p\u00e9rdida de una confirmaci\u00f3n de recepci\u00f3n. Al expirar el temporizador, el TCP borra el registro de la conexi\u00f3n. Examinemos ahora la administraci\u00f3n de la conexi\u00f3n desde el punto de vista del servidor. El servidor hace un LISTEN y se detiene a esperar la aparici\u00f3n de alguien. Al llegar un SYN, se env\u00eda una confirmaci\u00f3n de recepci\u00f3n y el servidor pasa al estado SYN RCVD. Cuando llega la confirmaci\u00f3n de recepci\u00f3n del SYN del servidor, el acuerdo de tres v\u00edas se ha completado y el servidor regresa al estado ESTABLISHED. Ahora puede ocurrir la transferencia de datos. Cuando el cliente ha tenido suficiente, hace un CLOSE, que causa la llegada de un FIN al servidor (recuadro punteado rotulado \u201ccierre pasivo\u201d). Entonces se env\u00eda una se\u00f1al al servidor. Cuando \u00e9ste tambi\u00e9n hace un CLOSE, se env\u00eda un FIN al cliente. Al llegar la confirmaci\u00f3n de recepci\u00f3n del cliente, el servidor libera la conexi\u00f3n y elimina el registro de conexi\u00f3n.\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP (Inicio)\n543\nCONNECT/SYN (Paso 1 del acuerdo de tres v\u00edas)\nCLOSED CLOSE\u2013 CLOSE/\u2013\nLISTEN/\u2013 SYN/SYN + ACK (Paso 2\nLISTEN\ndel acuerdo de tres v\u00edas) RST/\u2013\nSEND/SYN\nSYN RCVD\nSYN SENT\n(apertura simult\u00e1nea)\nSYN/SYN + ACK\n(Estado de transferencia de datos) ACK/\u2013\nSYN + ACK/ACK ESTABLISHED (Paso 3 del acuerdo de tres v\u00edas)\nCLOSE/FIN CLOSE/FIN\nFIN/ACK\n(Cierre activo)\nFIN WAIT 1\n(Cierre pasivo)\nFIN/ACK\nCLOSE WAIT\nCLOSING ACK/\u2013\nACK/\u2013\nCLOSE/FIN\nFIN + ACK/ACK FIN WAIT 2\nLAST ACK\nTIME WAIT\nFIN/ACK\n(Expiraci\u00f3n del temporizador/) ACK/CLOSED (Regresa al inicio)\nFigura 6-33. M\u00e1quina de estados finitos de administraci\u00f3n de conexiones TCP. La l\u00ednea continua gruesa es la trayectoria normal de un cliente. La l\u00ednea punteada gruesa es la trayectoria normal de un servidor. Las l\u00edneas delgadas son eventos poco comunes. Cada transici\u00f3n est\u00e1 indicada por el evento que la ocasiona y la acci\u00f3n resultante, separada por una diagonal.\n6.5.8 Pol\u00edtica de transmisi\u00f3n del TCP Como ya vimos, la administraci\u00f3n de ventanas en el TCP no est\u00e1 vinculada directamente a las confirmaciones de recepci\u00f3n como en la mayor\u00eda de los protocolos de enlace de datos. Por ejemplo, suponga que el receptor tiene un b\u00fafer de 4096 bytes, como se muestra en la figura 6-34. Si el emisor env\u00eda un segmento de 2048 bytes que se recibe correctamente, el receptor enviar\u00e1 la confirmaci\u00f3n de recepci\u00f3n del segmento. Sin embargo, dado que ahora s\u00f3lo tiene 2048 bytes de\n544\nLA CAPA DE TRANSPORTE\nCAP. 6\nespacio de b\u00fafer (hasta que la aplicaci\u00f3n retire algunos datos de \u00e9ste), anunciar\u00e1 una ventana de 2048 comenzando con el siguiente byte esperado.\nEmisor\nReceptor\nLa aplicaci\u00f3n hace una escritura de 2K\nB\u00fafer del receptor 0\n4K Vac\u00edo\n2K\nSEQ = 0\n2K 8 ACK = 2048 WIN = 204\nLa aplicaci\u00f3n hace una escritura de 3K\n2K\nSEQ = 2048\nLleno Emisor bloqueado\nIN 4096 W ACK =\nIN 4096 W ACK =\nLa aplicaci\u00f3n lee 2K\n=0\n8 = 204\n2K\nEl emisor puede enviar hasta 2K 1K\nSEQ = 4096\n1K\n2K\nFigura 6-34. Administraci\u00f3n de ventanas en TCP.\nAhora el emisor env\u00eda otros 2048 bytes, para los cuales el receptor env\u00eda la confirmaci\u00f3n de recepci\u00f3n, pero la ventana anunciada es de 0. El emisor debe detenerse hasta que el proceso de aplicaci\u00f3n del host receptor retire algunos datos del b\u00fafer, en cuyo momento el TCP puede anunciar una ventana m\u00e1s grande. Cuando la ventana es de 0, el emisor normalmente no puede enviar segmentos, salvo en dos situaciones. Primera, pueden enviarse datos urgentes (por ejemplo, para permitir que el usuario elimine el proceso en ejecuci\u00f3n en la m\u00e1quina remota). Segunda, el emisor puede enviar un segmento de 1 byte para hacer que el receptor reanuncie el siguiente byte esperado y el tama\u00f1o de la ventana. El est\u00e1ndar TCP proporciona expl\u00edcitamente esta opci\u00f3n para evitar un bloqueo irreversible si llega a perderse un anuncio de ventana.\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n545\nNo se requiere que los emisores env\u00eden datos tan pronto como llegan de la aplicaci\u00f3n. Tampoco se requiere que los receptores env\u00eden confirmaciones de recepci\u00f3n tan pronto como sea posible. Por ejemplo, en la figura 6-34, cuando llegaron los primeros 2 KB de datos, el TCP, sabiendo que ten\u00eda disponible una ventana de 4 KB, habr\u00eda actuado perfectamente bien si simplemente almacena en b\u00fafer los datos hasta la llegada de otros 2 KB, para poder transmitir un segmento con una carga \u00fatil de 4 KB. Esta libertad puede explotarse para mejorar el desempe\u00f1o. Considere una conexi\u00f3n telnet a un editor interactivo que reacciona con cada pulso de tecla. En el peor caso, al llegar un car\u00e1cter a la entidad TCP emisora, el TCP crea un segmento TCP de 21 bytes que entrega al IP para su env\u00edo como datagrama IP de 41 bytes. Del lado receptor, el TCP env\u00eda de inmediato una confirmaci\u00f3n de recepci\u00f3n de 40 bytes (20 bytes de encabezado TCP y 20 bytes de encabezado IP). Despu\u00e9s, cuando el editor ha le\u00eddo el byte, el TCP env\u00eda una actualizaci\u00f3n de ventana, recorriendo la ventana 1 byte hacia la derecha. Este paquete tambi\u00e9n es de 40 bytes. Por \u00faltimo, cuando el editor ha procesado el car\u00e1cter, lo retransmite como paquete de 41 bytes. En conjunto, se usan 162 bytes de ancho de banda y se env\u00edan cuatro segmentos por cada car\u00e1cter pulsado. Cuando es escaso el ancho de banda, no es deseable este m\u00e9todo de operaci\u00f3n. Un enfoque que usan muchas implementaciones del TCP para mejorar esta situaci\u00f3n es el retardo de las confirmaciones de recepci\u00f3n y de las actualizaciones de ventana durante 500 mseg con la esperanza de que lleguen algunos datos con los cuales viajar gratuitamente. Suponiendo que el editor hace eco en un lapso de 500 mseg, s\u00f3lo se necesita enviar ahora un paquete de 41 bytes de regreso al usuario remoto, recortando a la mitad la cuenta de paquetes y el uso de ancho de banda. Aunque esta regla reduce la carga impuesta a la red por el receptor, \u00e9ste a\u00fan opera de manera ineficiente al enviar paquetes de 41 bytes que contienen 1 byte de datos. Una manera de reducir este uso es empleando el algoritmo de Nagle (Nagle, 1984). Lo que sugiri\u00f3 Nagle es sencillo: al llegar datos al emisor un byte a la vez, simplemente se env\u00eda el primer byte y se almacena en b\u00fafer los dem\u00e1s hasta la confirmaci\u00f3n de recepci\u00f3n del byte pendiente. Luego se transmiten todos los caracteres del b\u00fafer en un segmento TCP y nuevamente se comienzan a almacenar en b\u00fafer los datos hasta que se haya confirmado la recepci\u00f3n de todos. Si el usuario escribe con rapidez y la red es lenta, puede entrar una cantidad importante de caracteres en cada segmento, reduciendo en gran medida el ancho de banda usado. Adem\u00e1s, el algoritmo permite el env\u00edo de un nuevo paquete si han entrado suficientes datos para llenar la mitad de la ventana o la totalidad de un segmento. El algoritmo de Nagle se usa ampliamente en las implementaciones de TCP, pero hay veces en que es mejor inhabilitarlo. En particular, al operar una aplicaci\u00f3n X-Windows a trav\u00e9s de Internet, los movimientos del rat\u00f3n tienen que enviarse a la computadora remota. (X-Windows es el sistema de ventanas que se utiliza en la mayor\u00eda de los sistemas UNIX.) Su acumulaci\u00f3n para enviarlos en r\u00e1fagas hace que el movimiento del cursor sea err\u00e1tico, lo que no complace mucho a los usuarios. Otro problema que puede arruinar el desempe\u00f1o del TCP es el s\u00edndrome de ventana tonta (Clark, 1982). Este problema ocurre cuando se pasan datos a la entidad emisora en bloques grandes, pero una aplicaci\u00f3n interactiva del lado receptor lee datos a raz\u00f3n de 1 byte a la vez. Para ver el problema, observe la figura 6-35. Inicialmente, el b\u00fafer TCP del lado receptor est\u00e1 lleno y el\n546\nLA CAPA DE TRANSPORTE\nCAP. 6\nemisor lo sabe (es decir, tiene un tama\u00f1o de ventana de 0). Entonces la aplicaci\u00f3n interactiva lee un car\u00e1cter del flujo TCP. Esta acci\u00f3n hace feliz al TCP receptor, por lo que env\u00eda una actualizaci\u00f3n de ventana al emisor indicando que est\u00e1 bien que env\u00ede 1 byte. El emisor accede y env\u00eda 1 byte. El b\u00fafer ahora est\u00e1 lleno, por lo que el receptor confirma la recepci\u00f3n del segmento de 1 byte pero establece la ventana en 0. Este comportamiento puede continuar indefinidamente.\nEl b\u00fafer del receptor est\u00e1 lleno\nLa aplicaci\u00f3n lee 1 byte Espacio para un byte m\u00e1s\nEncabezado\nEncabezado 1 byte\nEnv\u00edo de segmento de actualizaci\u00f3n de ventana\nLlega un byte nuevo\nEl b\u00fafer del receptor est\u00e1 lleno\nFigura 6-35. S\u00edndrome de ventana tonta.\nLa soluci\u00f3n de Clark es evitar que el receptor env\u00ede una actualizaci\u00f3n de ventana para 1 byte. En cambio, se le obliga a esperar hasta tener disponible una cantidad de espacio, y luego lo anuncia. Espec\u00edficamente, el receptor no debe enviar una actualizaci\u00f3n de ventana hasta que pueda manejar el tama\u00f1o m\u00e1ximo de segmento que anunci\u00f3 al establecerse la conexi\u00f3n, o que su b\u00fafer quede a la mitad de capacidad, lo que sea m\u00e1s peque\u00f1o. Adem\u00e1s, el emisor tambi\u00e9n puede ayudar al no enviar segmentos muy peque\u00f1os. En cambio, debe intentar esperar hasta haber acumulado suficiente espacio en la ventana para enviar un segmento completo, o cuando menos uno que contenga la mitad del tama\u00f1o de b\u00fafer del receptor (que debe estimar a partir del patr\u00f3n de las actualizaciones de ventana que ha recibido anteriormente). El algoritmo de Nagle y la soluci\u00f3n de Clark al s\u00edndrome de ventana tonta son complementarios. Nagle trataba de resolver el problema causado por la entrega de datos al TCP desde la aplicaci\u00f3n emisora un byte a la vez. Clark trataba de resolver el problema de que la aplicaci\u00f3n receptora toma los datos del TCP un byte a la vez. Ambas soluciones son v\u00e1lidas y pueden operar juntas. La meta es que el emisor no env\u00ede segmentos peque\u00f1os y que el receptor no los pida.\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n547\nEl TCP receptor tambi\u00e9n puede hacer m\u00e1s para mejorar el desempe\u00f1o que simplemente actualizar ventanas en unidades grandes. Al igual que el TCP emisor, tiene la capacidad de almacenar datos en el b\u00fafer, por lo que puede bloquear una solicitud READ de la aplicaci\u00f3n hasta poder proporcionar un bloque grande de datos. Hacer esto reduce la cantidad de llamadas al TCP y, por tanto, la sobrecarga. Por supuesto, tambi\u00e9n aumenta el tiempo de respuesta, pero en las aplicaciones no interactivas, como la transferencia de archivos, la eficiencia puede tener mayor peso que el tiempo de respuesta a las solicitudes individuales. Otro problema del receptor es qu\u00e9 debe hacer con los segmentos fuera de orden. Pueden conservarse o descartarse, al albedr\u00edo del receptor. Por supuesto, las confirmaciones de recepci\u00f3n pueden enviarse s\u00f3lo despu\u00e9s de haber recibido todos los datos hasta el byte confirmado. Si el receptor recibe los segmentos 0, 1, 2, 4, 5, 6 y 7, puede enviar una confirmaci\u00f3n de recepci\u00f3n de todos los bytes hasta el \u00faltimo byte del segmento 2, inclusive. Al expirar el temporizador del emisor, retransmitir\u00e1 el segmento 3. Si el receptor tienen en b\u00fafer los segmentos 4 a 7, al recibir el segmento 3 puede enviar una confirmaci\u00f3n de recepci\u00f3n de todos los bytes hasta el final del segmento 7.\n6.5.9 Control de congesti\u00f3n en TCP Cuando la carga ofrecida a cualquier red es mayor que la que puede manejar, se genera una congesti\u00f3n. Internet no es ninguna excepci\u00f3n. En esta secci\u00f3n estudiaremos los algoritmos que se han desarrollado durante la \u00faltima d\u00e9cada para manejar la congesti\u00f3n. Aunque la capa de red tambi\u00e9n intenta manejarlos, gran parte del trabajo pesado recae sobre el TCP porque la soluci\u00f3n real a la congesti\u00f3n es la disminuci\u00f3n de la tasa de datos. En teor\u00eda, puede manejarse la congesti\u00f3n aprovechando un principio de f\u00edsica: la ley de conservaci\u00f3n de los paquetes. La idea es no inyectar un paquete nuevo en la red hasta que salga uno viejo (es decir, se entregue). El TCP intenta lograr esta meta manipulando din\u00e1micamente el tama\u00f1o de la ventana. El primer paso del manejo de la congesti\u00f3n es su detecci\u00f3n. Anta\u00f1o la detecci\u00f3n de congestionamientos era muy dif\u00edcil. La expiraci\u00f3n de un temporizador causada por un paquete perdido pod\u00eda deberse a (1) ruido en la l\u00ednea de transmisi\u00f3n o (2) el descarte de paquetes en el enrutador congestionado. Saber cu\u00e1l era la diferencia era dif\u00edcil. Hoy d\u00eda, la p\u00e9rdida de paquetes por errores de transmisi\u00f3n es relativamente rara debido a que las troncales de larga distancia son de fibra (aunque las redes inal\u00e1mbricas son otra historia). En consecuencia, la mayor\u00eda de las expiraciones de tiempo en Internet se deben a congesti\u00f3n. Todos los algoritmos TCP de Internet suponen que las expiraciones de tiempo son causadas por congesti\u00f3n y las revisan en busca de problemas, de la misma manera que los mineros observan a sus canarios. Antes de analizar la manera en que el TCP reacciona a la congesti\u00f3n, describiremos primero lo que hace para evitar que ocurra. Al establecerse una conexi\u00f3n, se tiene que seleccionar un tama\u00f1o de ventana adecuado. El receptor puede especificar una ventana con base en su tama\u00f1o de b\u00fafer. Si el emisor se ajusta a su tama\u00f1o de ventana, no ocurrir\u00e1n problemas por desbordamiento de b\u00faferes en la terminal receptora, pero a\u00fan pueden ocurrir debido a congesti\u00f3n interna en la red.\n548\nLA CAPA DE TRANSPORTE\nCAP. 6\nEn la figura 6-36 ilustramos este problema hidr\u00e1ulicamente. En la figura 6-36(a) vemos un tubo grueso que conduce a un receptor de poca capacidad. Mientras el emisor no env\u00ede m\u00e1s agua de la que puede contener la cubeta, no se perder\u00e1 agua. En la figura 6-36(b), el factor limitante no es la capacidad de la cubeta, sino la capacidad de conducci\u00f3n interna de la red. Si entra demasiada agua a alta velocidad, \u00e9sta retroceder\u00e1, perdi\u00e9ndose algo (en este caso, por el desbordamiento del embudo).\nAjuste de la tasa de transmisi\u00f3n\nRed de transmisi\u00f3n\nReceptor de baja capacidad\n(a)\nCongesti\u00f3n interna\nReceptor de alta capacidad\n(b)\nFigura 6-36. (a) Red r\u00e1pida alimentando un receptor de baja capacidad. (b) Red lenta alimentando un receptor de alta capacidad.\nLa soluci\u00f3n de Internet es aceptar que existen dos problemas potenciales (capacidad de la red y capacidad del receptor) y manejarlos por separado. Para ello, cada emisor mantiene dos ventanas: la ventana que ha otorgado el receptor y una segunda ventana, la ventana de congesti\u00f3n. Cada una refleja la cantidad de bytes que puede enviar el emisor. La cantidad de bytes que pueden enviarse es la cifra menor de las dos ventanas. Por tanto, la ventana efectiva es el m\u00ednimo de lo que el emisor piensa que es correcto y lo que el receptor piensa que est\u00e1 bien. Si el receptor dice \u201cenv\u00eda 8 KB\u201d pero el emisor sabe que las r\u00e1fagas de m\u00e1s de 4 KB saturan la red, env\u00eda 4 KB. Por otra parte, si el receptor dice \u201cenv\u00eda 8 KB\u201d y el emisor sabe que las r\u00e1fagas de hasta 32 KB pueden llegar sin problemas, env\u00eda los 8 KB solicitados.\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n549\nAl establecer una conexi\u00f3n, el emisor asigna a la ventana de congesti\u00f3n el tama\u00f1o de segmento m\u00e1ximo usado por la conexi\u00f3n; entonces env\u00eda un segmento m\u00e1ximo. Si se recibe la confirmaci\u00f3n de recepci\u00f3n de este segmento antes de que expire el temporizador, el emisor agrega el equivalente en bytes de un segmento a la ventana de congesti\u00f3n para hacerla de dos segmentos de tama\u00f1o m\u00e1ximo, y env\u00eda dos segmentos. A medida que se confirma cada uno de estos segmentos, se aumenta el tama\u00f1o de la ventana de congesti\u00f3n en un segmento m\u00e1ximo. Cuando la ventana de congesti\u00f3n es de n segmentos, si de todos los n se reciben confirmaciones de recepci\u00f3n a tiempo, se aumenta el tama\u00f1o de la ventana de congesti\u00f3n en la cuenta de bytes correspondiente a n segmentos. De hecho, cada r\u00e1faga confirmada duplica la ventana de congestionamiento. La ventana de congesti\u00f3n sigue creciendo exponencialmente hasta ocurrir una expiraci\u00f3n del temporizador o alcanzar el tama\u00f1o de la ventana receptora. La idea es que, si las r\u00e1fagas de 1024, 2048 y 4096 bytes funcionan bien, pero una r\u00e1faga de 8192 produce una expiraci\u00f3n del temporizador, la ventana de congesti\u00f3n debe establecerse en 4096 para evitar la congesti\u00f3n. Mientras el tama\u00f1o de la ventana de congesti\u00f3n permanezca en 4096, no se enviar\u00e1 una r\u00e1faga de mayor longitud, sin importar la cantidad de espacio de ventana otorgada por el receptor. Este algoritmo se llama arranque lento, pero no es lento en lo absoluto (Jacobson, 1988); es exponencial, y se requiere que todas las implementaciones de TCP lo manejen. Veamos ahora el algoritmo de control de congesti\u00f3n de Internet, el cual usa un tercer par\u00e1metro, el umbral, inicialmente de 64 KB, adem\u00e1s de las ventanas de recepci\u00f3n y congesti\u00f3n. Al ocurrir una expiraci\u00f3n del temporizador, se establece el umbral en la mitad de la ventana de congesti\u00f3n actual, y la ventana de congesti\u00f3n se restablece a un segmento m\u00e1ximo. Luego se usa el arranque lento para determinar lo que puede manejar la red, excepto que el crecimiento exponencial termina al alcanzar el umbral. A partir de este punto, las transmisiones exitosas aumentan linealmente la ventana de congesti\u00f3n (en un segmento m\u00e1ximo por r\u00e1faga) en lugar de uno por segmento. En efecto, este algoritmo est\u00e1 suponiendo que probablemente es aceptable recortar la ventana de congesti\u00f3n a la mitad, y luego aumentarla gradualmente a partir de ah\u00ed. Como ilustraci\u00f3n de la operaci\u00f3n del algoritmo de congesti\u00f3n, v\u00e9ase la figura 6-37. El tama\u00f1o m\u00e1ximo de segmento aqu\u00ed es de 1024 bytes. Inicialmente, la ventana de congesti\u00f3n era de 64 KB, pero ocurre una expiraci\u00f3n del temporizador, as\u00ed que se establece el umbral en 32KB y la ventana de congesti\u00f3n en 1KB, para la transmisi\u00f3n 0. La ventana de congesti\u00f3n entonces crece exponencialmente hasta alcanzar el umbral (32 KB). A partir de entonces, crece linealmente. La transmisi\u00f3n 13 tiene mala suerte (deber\u00eda saberlo) y ocurre una expiraci\u00f3n del temporizador. Se establece el umbral en la mitad de la ventana actual (ahora de 40 KB, por lo que la mitad es de 20 KB), e inicia de nuevo el arranque lento. Al llegar las confirmaciones de recepci\u00f3n de la transmisi\u00f3n 14, los primeros cuatro incrementan la ventana de congesti\u00f3n en un segmento m\u00e1ximo, pero despu\u00e9s de eso el crecimiento se vuelve lineal nuevamente. Si no ocurren m\u00e1s expiraciones del temporizador, la ventana de congesti\u00f3n continuar\u00e1 creciendo hasta el tama\u00f1o de la ventana del receptor. En ese punto, dejar\u00e1 de crecer y permanecer\u00e1 constante mientras no ocurran m\u00e1s expiraciones del temporizador y la ventana del receptor no cambie de tama\u00f1o. Como nota al margen, si llega un paquete SOURCE QUENCH de ICMP y pasa al TCP, este evento ser\u00e1 tratado de la misma manera que una expiraci\u00f3n del temporizador. Un enfoque alternativo (y m\u00e1s reciente) se describe en el RFC 3168.\n550\nLA CAPA DE TRANSPORTE\nCAP. 6\nVentana de congesti\u00f3n (en kilobytes)\nExpiraci\u00f3n del temporizador\nUmbral\nUmbral\nN\u00famero de transmisi\u00f3n\nFigura 6-37. Ejemplo del algoritmo de congesti\u00f3n de Internet.\n6.5.10 Administraci\u00f3n de temporizadores del TCP El TCP usa varios temporizadores (al menos conceptualmente) para hacer su trabajo. El m\u00e1s importante de \u00e9stos es el temporizador de retransmisi\u00f3n. Al enviarse un segmento, se inicia un temporizador de retransmisiones. Si la confirmaci\u00f3n de recepci\u00f3n del segmento llega antes de expirar el temporizador, \u00e9ste se detiene. Si, por otra parte, el temporizador termina antes de llegar la confirmaci\u00f3n de recepci\u00f3n, se retransmite el segmento (y se inicia nuevamente el temporizador). Surge entonces la pregunta: \u00bfqu\u00e9 tan grande debe ser el intervalo de expiraci\u00f3n del temporizador? Este problema es mucho m\u00e1s dif\u00edcil en la capa de transporte de Internet que en los protocolos de enlace de datos gen\u00e9ricos del cap\u00edtulo 3. En este \u00faltimo caso, el retardo esperado es altamente predecible (es decir, tiene una variaci\u00f3n baja), por lo que el temporizador puede ejecutarse para expirar justo despu\u00e9s del momento en que se espera la confirmaci\u00f3n de recepci\u00f3n, como se muestra en la figura 6-38(a). Dado que las confirmaciones de recepci\u00f3n pocas veces se retardan en la capa de enlace de datos (debido a la falta de congesti\u00f3n), la ausencia de una confirmaci\u00f3n de recepci\u00f3n en el momento esperado generalmente significa que la trama o la confirmaci\u00f3n de recepci\u00f3n se han perdido. El TCP enfrenta un entorno radicalmente distinto. La funci\u00f3n de densidad de probabilidad del tiempo que tarda en regresar una confirmaci\u00f3n de recepci\u00f3n TCP se parece m\u00e1s a la figura 6-38(b) que a la figura 6-38(a). Es complicada la determinaci\u00f3n del tiempo de ida y vuelta al destino. Aun\n551\nProbabilidad\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\nProbabilidad\nSEC. 6.5\nTiempo de ida y vuelta (mseg)\nTiempo de ida y vuelta (mseg)\n(a)\n(b)\nFigura 6-38. (a) Densidad de probabilidad de los tiempos de llegada de confirmaciones de recepci\u00f3n en la capa de enlace de datos. (b) Densidad de probabilidad de los tiempos de llegada de confirmaciones de recepci\u00f3n para el TCP.\ncuando se conoce, la selecci\u00f3n del intervalo de expiraci\u00f3n del temporizador tambi\u00e9n es dif\u00edcil. Si se hace demasiado corto, digamos T1 en la figura 6-38(b), ocurrir\u00e1n retransmisiones innecesarias, cargando la Internet con paquetes in\u00fatiles. Si se hace demasiado largo (por ejemplo, T2), el desempe\u00f1o sufrir\u00e1 debido al gran retardo de retransmisi\u00f3n de cada paquete perdido. Es m\u00e1s, la varianza y la media de la distribuci\u00f3n de llegadas de confirmaciones de recepci\u00f3n pueden variar con rapidez en unos cuantos segundos, a medida que se generan y se resuelven congestionamientos. La soluci\u00f3n es usar un algoritmo muy din\u00e1mico que ajuste constantemente el intervalo de expiraci\u00f3n del temporizador, con base en mediciones continuas del desempe\u00f1o de la red. El algoritmo que generalmente usa el TCP lo debemos a Jacobson (1988) y funciona como sigue. Por cada conexi\u00f3n, el TCP mantiene una variable, RTT (round-trip time), que es la mejor estimaci\u00f3n actual del tiempo de ida y vuelta al destino en cuesti\u00f3n. Al enviarse un segmento, se inicia un temporizador, tanto para ver el tiempo que tarda la confirmaci\u00f3n de recepci\u00f3n como para habilitar una retransmisi\u00f3n si se tarda demasiado. Si llega la confirmaci\u00f3n de recepci\u00f3n antes de expirar el temporizador, el TCP mide el tiempo que tard\u00f3 la confirmaci\u00f3n de recepci\u00f3n, digamos M. Entonces actualiza RTT de acuerdo con la f\u00f3rmula RTT = \u03b1RTT + (1 \u2212 \u03b1)M donde \u03b1 es un factor de amortiguamiento que determina el peso que se le da al valor anterior. Por lo com\u00fan, \u03b1 = 7/8. Aun dado un buen valor de RTT, la selecci\u00f3n de una expiraci\u00f3n adecuada del temporizador de retransmisi\u00f3n no es un asunto sencillo. Normalmente el TCP usa \u03b2RTT, pero el truco es seleccionar \u03b2. En las implementaciones iniciales, \u03b2 siempre era 2, pero la experiencia demostr\u00f3 que un valor constante era inflexible puesto que no respond\u00eda cuando sub\u00eda la variaci\u00f3n.\n552\nLA CAPA DE TRANSPORTE\nCAP. 6\nEn 1988, Jacobson propuso hacer que \u03b2 fuera aproximadamente proporcional a la desviaci\u00f3n est\u00e1ndar de la funci\u00f3n de densidad de probabilidad del tiempo de llegada de las confirmaciones de recepci\u00f3n, por lo que una variaci\u00f3n grande significa una \u03b2 grande, y viceversa. En particular, sugiri\u00f3 el uso de la desviaci\u00f3n media como una forma r\u00e1pida de estimar la desviaci\u00f3n est\u00e1ndar. Su algoritmo requiere mantener otra variable amortiguada, D, la desviaci\u00f3n. Al llegar una confirmaci\u00f3n de recepci\u00f3n, se calcula la diferencia entre el valor esperado y el observado, RTT \u2212 M . Un valor amortiguado de esta cifra se mantiene en D mediante la f\u00f3rmula D = \u03b1D + (1 \u2212 \u03b1) RTT \u2212 M donde \u03b1 puede ser o no el mismo valor usado para amortiguar RTT. Si bien D no es exactamente igual a la desviaci\u00f3n est\u00e1ndar, es bastante buena, y Jacobson demostr\u00f3 la manera de calcularla usando s\u00f3lo sumas, restas y desplazamientos de enteros, lo que es una gran ventaja. La mayor\u00eda de las implementaciones TCP usan ahora este algoritmo y establecen el intervalo de expiraci\u00f3n del temporizador en Expiraci\u00f3n del temporizador = RTT + 4 \u00d7 D La selecci\u00f3n del factor 4 es un tanto arbitraria, pero tiene dos ventajas. Primera, puede hacerse la multiplicaci\u00f3n por 4 con un solo desplazamiento. Segunda, reduce al m\u00ednimo las expiraciones de temporizador y las retransmisiones innecesarias porque menos del 1% de todos los paquetes llegan m\u00e1s de cuatro desviaciones est\u00e1ndar tarde. (En realidad, Jacobson sugiri\u00f3 inicialmente que se usaran 2, pero el trabajo posterior ha demostrado que 4 da un mejor desempe\u00f1o.) Un problema que ocurre con la estimaci\u00f3n din\u00e1mica de RTT es qu\u00e9 se debe hacer cuando expira el temporizador de un segmento y se env\u00eda de nuevo. Cuando llega la confirmaci\u00f3n de recepci\u00f3n, no es claro si \u00e9ste se refiere a la primera transmisi\u00f3n o a una posterior. Si se adivina mal se puede contaminar seriamente la estimaci\u00f3n de RTT. Phil Karn descubri\u00f3 este problema de la manera dif\u00edcil. \u00c9l es un radioaficionado interesado en la transmisi\u00f3n de paquetes TCP/IP a trav\u00e9s de la radio amateur, un medio notoriamente poco confiable (en un buen d\u00eda, pasar\u00e1n la mitad de los paquetes). Karn hizo una propuesta sencilla: no actualizar el RTT con ninguno de los segmentos retransmitidos. En cambio, se duplica la expiraci\u00f3n del temporizador con cada falla hasta que los segmentos pasan a la primera. Este sistema se llama algoritmo de Karn y lo usan la mayor\u00eda de las implementaciones TCP. El temporizador de retransmisiones no es el \u00fanico usado por el TCP. El segundo temporizador es el temporizador de persistencia, dise\u00f1ado para evitar el siguiente bloqueo irreversible. El receptor env\u00eda una confirmaci\u00f3n de recepci\u00f3n con un tama\u00f1o de ventana de 0, indicando al emisor que espere. Despu\u00e9s, el receptor actualiza la ventana, pero se pierde al paquete con la actualizaci\u00f3n. Ahora, tanto el emisor como el receptor est\u00e1n esperando que el otro haga algo. Cuando termina el temporizador de persistencia, el emisor env\u00eda un sondeo al receptor. La respuesta al sondeo da el tama\u00f1o de la ventana. Si a\u00fan es de cero, se inicia el temporizador de persistencia nuevamente y se repite el ciclo. Si es diferente de cero, pueden enviarse datos. Un tercer temporizador usado en algunas implementaciones es el temporizador de seguir con vida (keepalive timer). Cuando una conexi\u00f3n ha estado inactiva durante demasiado tiempo, el\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n553\ntemporizador de seguir con vida puede expirar, haciendo que un lado compruebe que el otro a\u00fan est\u00e1 ah\u00ed. Si no se recibe respuesta, se termina la conexi\u00f3n. Esta caracter\u00edstica es motivo de controversias porque agrega sobrecarga y puede terminar una conexi\u00f3n saludable debido a una partici\u00f3n temporal de la red. El \u00faltimo temporizador usado en cada conexi\u00f3n TCP es el que se usa en el estado TIMED WAIT durante el cierre; opera durante el doble del tiempo m\u00e1ximo de vida de paquete para asegurar que, al cerrarse una conexi\u00f3n, todos los paquetes creados por ella hayan desaparecido.\n6.5.11 TCP y UDP inal\u00e1mbricos En teor\u00eda, los protocolos de transporte deben ser independientes de la tecnolog\u00eda de la capa de red subyacente. En particular, el TCP no deber\u00eda preocuparse si el IP est\u00e1 operando por fibra o por radio. En la pr\u00e1ctica s\u00ed importa, puesto que la mayor\u00eda de las implementaciones de TCP han sido optimizadas cuidadosamente con base en supuestos que se cumplen en las redes al\u00e1mbricas, pero no en las inal\u00e1mbricas. Ignorar las propiedades de la transmisi\u00f3n inal\u00e1mbrica puede conducir a implementaciones del TCP correctas desde el punto de vista l\u00f3gico pero con un desempe\u00f1o horrendo. El problema principal es el algoritmo de control de congestionamientos. Hoy d\u00eda, casi todas las implementaciones de TCP suponen que las expiraciones del temporizador ocurren por congestionamientos, no por paquetes perdidos. En consecuencia, al expirar un temporizador, el TCP disminuye su velocidad y env\u00eda con menor \u00edmpetu (por ejemplo, el algoritmo de arranque lento de Jacobson). Lo que se pretende con este enfoque es reducir la carga de la red y aliviar as\u00ed la congesti\u00f3n. Desgraciadamente, los enlaces de transmisi\u00f3n inal\u00e1mbrica son muy poco confiables. Pierden paquetes todo el tiempo. El enfoque adecuado para el manejo de paquetes perdidos es enviarlos nuevamente, tan pronto como sea posible. La reducci\u00f3n de la velocidad simplemente empeora las cosas. Si, digamos, se pierde el 20% de todos los paquetes, entonces cuando el emisor env\u00eda 100 paquetes/seg, la velocidad real de transporte es de 80 paquetes/seg. Si el emisor reduce su velocidad a 50 paquetes/seg, la velocidad real de transporte cae a 40 paquetes/seg. En efecto, al perderse un paquete en una red al\u00e1mbrica, el emisor debe reducir la velocidad. Cuando se pierde uno en una red inal\u00e1mbrica, el emisor debe acelerar. Cuando el emisor no sabe de qu\u00e9 clase de red se trata, es dif\u00edcil tomar la decisi\u00f3n correcta. Con frecuencia, la trayectoria del emisor al receptor no es homog\u00e9nea. Los primeros 1000 km podr\u00edan ser a trav\u00e9s de una red al\u00e1mbrica, pero el \u00faltimo km podr\u00eda ser inal\u00e1mbrico. Ahora es m\u00e1s dif\u00edcil la decisi\u00f3n correcta en el caso de una expiraci\u00f3n del temporizador, ya que es importante saber d\u00f3nde ocurri\u00f3 el problema. Una soluci\u00f3n propuesta por Bakne y Badrinath (1995), el TCP indirecto, es la divisi\u00f3n de la conexi\u00f3n TCP en dos conexiones distintas, como se muestra en la figura 6-39. La primera va del emisor a la estaci\u00f3n base. La segunda va de la estaci\u00f3n base al receptor. La estaci\u00f3n base simplemente copia paquetes entre las conexiones en ambas direcciones. La ventaja de este esquema es que ahora ambas conexiones son homog\u00e9neas. Las expiraciones del temporizador en la primera conexi\u00f3n pueden reducir la velocidad del emisor, y las expiraciones del temporizador en la segunda pueden acelerarla. Tambi\u00e9n es posible ajustar otros par\u00e1metros\n554\nLA CAPA DE TRANSPORTE Emisor\nTCP # 1\nEstaci\u00f3n base\nCAP. 6\nTCP # 2\nHost m\u00f3vil Enrutador\nAntena\nFigura 6-39. Divisi\u00f3n de una conexi\u00f3n TCP en dos conexiones.\npor separado para cada conexi\u00f3n. La desventaja es que se viola por completo la sem\u00e1ntica del TCP. Dado que cada parte de la conexi\u00f3n es una conexi\u00f3n TCP completa, la estaci\u00f3n base confirma la recepci\u00f3n de cada segmento TCP de la manera normal, s\u00f3lo que ahora la recepci\u00f3n de una confirmaci\u00f3n en el emisor no significa que el receptor recibi\u00f3 el segmento, sino que la estaci\u00f3n base lo recibi\u00f3. Una soluci\u00f3n diferente, debido a Balakrishnan y cols. (1995), no quebranta la sem\u00e1ntica del TCP. Funciona haciendo varias modificaciones peque\u00f1as al c\u00f3digo de la capa de red de la estaci\u00f3n base. Uno de los cambios es la adici\u00f3n de un agente esp\u00eda que observa y almacena en cach\u00e9 los segmentos TCP que van al host m\u00f3vil y las confirmaciones de recepci\u00f3n que regresan de \u00e9l. Cuando el agente esp\u00eda ve un segmento TCP que sale al host m\u00f3vil, pero no ve el regreso de una confirmaci\u00f3n de recepci\u00f3n antes de que su temporizador (relativamente corto) expire, simplemente retransmite ese segmento, sin indicar al origen que lo est\u00e1 haciendo. El agente tambi\u00e9n genera una retransmisi\u00f3n cuando detecta confirmaciones de recepci\u00f3n duplicadas del host m\u00f3vil, lo que invariablemente significa que algo le ha fallado a este host. Las confirmaciones de recepci\u00f3n duplicadas se descartan en seguida, para evitar que el origen las malinterprete como una se\u00f1al de congestionamiento. Sin embargo, una desventaja de esta transparencia es que, si el enlace inal\u00e1mbrico tiene muchas p\u00e9rdidas, el temporizador del transmisor podr\u00eda expirar esperando una confirmaci\u00f3n de recepci\u00f3n e invocar el algoritmo de control de congesti\u00f3n. Con en TCP indirecto, el algoritmo de control de congesti\u00f3n nunca iniciar\u00e1 hasta que realmente haya congesti\u00f3n en la parte al\u00e1mbrica de la red. El documento de Balakrishnan y cols., tambi\u00e9n sugiere una soluci\u00f3n al problema de segmentos perdidos que se originan en el host m\u00f3vil. Al notar una estaci\u00f3n base un hueco en los n\u00fameros de secuencia de entrada, genera una solicitud de repetici\u00f3n selectiva de los bytes faltantes usando una opci\u00f3n TCP. Gracias a estos dos mecanismos, el enlace inal\u00e1mbrico se hace m\u00e1s confiable en ambas direcciones, sin que el origen lo sepa y sin cambiar la sem\u00e1ntica del TCP. Si bien el UDP no tiene los mismos problemas que el TCP, la comunicaci\u00f3n inal\u00e1mbrica tambi\u00e9n le produce dificultades. El problema principal es que los programas usan el UDP pensando que es altamente confiable. Saben que no hay garant\u00edas, pero aun as\u00ed esperan que sea casi perfecto. En un entorno inal\u00e1mbrico, UDP estar\u00e1 muy lejos de serlo. En aquellos programas capaces de recuperarse de la p\u00e9rdida de mensajes UDP, pasar repentinamente de un entorno en el que pueden\nSEC. 6.5\nLOS PROTOCOLOS DE TRANSPORTE DE INTERNET: TCP\n555\nperderse mensajes, pero rara vez ocurre, a uno en el que se pierden constantemente, puede dar pie a un desempe\u00f1o desastroso. La comunicaci\u00f3n inal\u00e1mbrica tambi\u00e9n afecta otras \u00e1reas, no s\u00f3lo el desempe\u00f1o. Por ejemplo, \u00bfc\u00f3mo encuentra un host m\u00f3vil una impresora local a la cual conectarse, en lugar de usar su impresora base? Algo parecido a esto es c\u00f3mo acceder a la p\u00e1gina WWW de la celda local, aun si no se conoce su nombre. Tambi\u00e9n, los dise\u00f1adores de p\u00e1ginas WWW tienden a suponer que hay mucho ancho de banda disponible. Un logotipo grande en cada p\u00e1gina se vuelve contraproducente si su transmisi\u00f3n tarda 10 seg en un enlace inal\u00e1mbrico lento cada vez que se hace referencia a la p\u00e1gina, irritando sobremanera a los usuarios. Conforme las redes inal\u00e1mbricas se vuelvan m\u00e1s comunes, los problemas de ejecutar TCP sobre ellas se volver\u00e1n m\u00e1s serios. En (Barakat y cols., 2000; Ghani y Dixit, 1999; Huston, 2001, y Xylomenos y cols., 2001), encontrar\u00e1 informaci\u00f3n adicional sobre esta \u00e1rea.\n6.5.12 TCP para Transacciones Al inicio de este cap\u00edtulo vimos las llamadas a procedimiento remoto como una forma de implementar sistemas cliente-servidor. Si tanto la solicitud como la respuesta son suficientemente peque\u00f1as para caber en paquetes sencillos y la operaci\u00f3n tiene la misma potencia, simplemente se puede utilizar UDP. Sin embargo, si estas condiciones no se cumplen, el uso de UDP no es tan conveniente. Por ejemplo, si la respuesta puede ser m\u00e1s grande, las piezas deben seguir una secuencia y se debe dise\u00f1ar un mecanismo para retransmitir las piezas perdidas. En efecto, la aplicaci\u00f3n tiene que remodelar el TCP. Es obvio que esto no resulta tan conveniente, pero tampoco lo es utilizar el TCP mismo. El problema es la eficiencia. En la figura 6-40(a) se muestra la secuencia normal de paquetes para realizar una RPC en TCP. En el mejor de los casos se necesitan los siguientes nueve paquetes. 1. El cliente env\u00eda un paquete SYN para establecer una conexi\u00f3n. 2. El servidor env\u00eda un paquete ACK para confirmar la recepci\u00f3n del paquete SYN. 3. El cliente completa el acuerdo de tres v\u00edas. 4. El cliente env\u00eda la solicitud real. 5. El cliente env\u00eda un paquete FIN para indicar que ha terminado el env\u00edo. 6. El servidor confirma la recepci\u00f3n de la solicitud y el paquete FIN. 7. El servidor env\u00eda la respuesta al cliente. 8. El servidor env\u00eda un paquete FIN para indicar que tambi\u00e9n ha terminado. 9. El cliente confirma la recepci\u00f3n del paquete FIN del servidor. Observe que \u00e9ste es el mejor de los casos. En el peor, la confirmaci\u00f3n de recepci\u00f3n de la solicitud del cliente y del paquete FIN se realiza por separado, al igual que la respuesta y el paquete FIN del servidor.\n556\nLA CAPA DE TRANSPORTE Cliente\nServidor\nCAP. 6\nCliente\nServidor SYN, solicitu d, FIN\nN), SYN, ACK(FI N FI a, st ue resp\nTiempo\nsolicitud\nTiempo\n+ FIN) ACK(solicitud respuesta\n(a)\n(b)\nFigura 6-40. (a) RPC mediante el TCP normal. (b) RPC mediante el T/TCP.\nCon esto surge r\u00e1pidamente la pregunta de si hay alguna forma para combinar la eficiencia de RPC utilizando UDP (s\u00f3lo dos mensajes) con la confiabilidad de TCP. La respuesta es: Casi. Puede hacerse con una variante TCP experimental llamada T/TCP (TCP para Transacciones), que se describe en los RFCs 1379 y 1644. La idea central es modificar ligeramente la secuencia est\u00e1ndar de configuraci\u00f3n de conexi\u00f3n para permitir la transferencia de datos durante la configuraci\u00f3n. En la figura 6-40(b) se ilustra el protocolo T/TCP. El primer paquete del cliente contiene el bit SYN, la solicitud misma y el paquete FIN. Lo que dice es: Deseo establecer una conexi\u00f3n, aqu\u00ed est\u00e1n los datos, y con esto termino. Cuando el servidor obtiene la solicitud, busca o calcula la respuesta y elige c\u00f3mo responder. Si la respuesta se ajusta en un paquete, da la respuesta de la figura 6-40(b), que dice: Confirmo la recepci\u00f3n de tu paquete FIN, aqu\u00ed est\u00e1 la respuesta, y con esto termino. A continuaci\u00f3n el cliente confirma la recepci\u00f3n del paquete FIN del servidor, y el protocolo termina en tres mensajes. Sin embargo, si el resultado es de m\u00e1s de un paquete, el servidor tambi\u00e9n tiene la opci\u00f3n de no encender el bit FIN, en cuyo caso puede enviar m\u00faltiples paquetes antes de cerrar su direcci\u00f3n. Probablemente valga la pena mencionar que T/TCP no es la \u00fanica mejora propuesta a TCP. Otra propuesta es SCTP (Protocolo de Transmisi\u00f3n de Control de Flujo). Sus caracter\u00edsticas incluyen preservaci\u00f3n de los l\u00edmites de mensajes, modos de entrega m\u00faltiples (por ejemplo, entrega en desorden), multihoming (destinos de respaldo) y confirmaciones de recepci\u00f3n selectivas (Stewart y Metz, 2001). Sin embargo, siempre que alguien propone cambiar algo que ha trabajado bien por alg\u00fan tiempo considerable, hay una gran batalla entre las siguientes posturas: \u201cLos usuarios est\u00e1n demandando m\u00e1s caracter\u00edsticas\u201d y \u201cSi no est\u00e1 roto, no lo arregles\u201d.\nSEC. 6.6\nASPECTOS DEL DESEMPE\u00d1O\n557\n6.6 ASPECTOS DEL DESEMPE\u00d1O Los asuntos relacionados con el desempe\u00f1o son muy importantes en las redes de c\u00f3mputo. Cuando hay cientos o miles de computadoras conectadas entre s\u00ed, son comunes las interacciones complejas, con consecuencias imprevisibles. Frecuentemente esta complejidad conduce a un desempe\u00f1o pobre, sin que nadie sepa por qu\u00e9. En las siguientes secciones examinaremos muchos temas relacionados con el desempe\u00f1o de las redes para ver los tipos de problemas que existen y lo que se puede hacer para resolverlos. Desgraciadamente, el entendimiento del desempe\u00f1o de las redes es m\u00e1s un arte que una ciencia. Muy poca de la teor\u00eda tiene en realidad alguna utilidad en la pr\u00e1ctica. Lo mejor que podemos hacer es dar reglas emp\u00edricas derivadas de los tropiezos y ejemplos actuales tomados del mundo real. Intencionalmente hemos postergado este an\u00e1lisis hasta despu\u00e9s de estudiar la capa de transporte en las redes TCP y ATM, a fin de poder se\u00f1alar los lugares en los que se han hecho bien o mal las cosas. La capa de transporte no es el \u00fanico lugar en el que surgen asuntos relacionados con el desempe\u00f1o. Vimos algunos de ellos en la capa de red, en el cap\u00edtulo anterior. No obstante, por lo general la capa de red est\u00e1 bastante ocupada con el enrutamiento y el control de congestionamientos. Los puntos m\u00e1s amplios, orientados al sistema, tienden a relacionarse con el transporte, por lo que este cap\u00edtulo es un lugar adecuado para examinarlos. En las siguientes cinco secciones estudiaremos cinco aspectos del desempe\u00f1o de las redes: 1. Problemas de desempe\u00f1o. 2. Medici\u00f3n del desempe\u00f1o de una red. 3. Dise\u00f1o de sistemas con mejor desempe\u00f1o. 4. Procesamiento r\u00e1pido de las TPDUs. 5. Protocolos para redes futuras de alto desempe\u00f1o. Como comentario, necesitamos un nombre para las unidades intercambiadas por las entidades de transporte. El t\u00e9rmino de TCP, segmento, es confuso en el mejor de los casos, y nunca se usa fuera del mundo TCP en este contexto. Los t\u00e9rminos CS-PDU, SAR-PDU y CPCS-PDU son espec\u00edficos de ATM. Los paquetes claramente se refieren a la capa de red y los mensajes pertenecen a la capa de aplicaci\u00f3n. A falta de un t\u00e9rmino est\u00e1ndar, volveremos a llamar TPDUs a las unidades intercambiadas por las entidades de transporte. Cuando deseemos referirnos tanto a TPDUs como a paquetes, usaremos paquete como t\u00e9rmino colectivo, como en \u201cla CPU debe ser lo bastante r\u00e1pida como para procesar los paquetes de entrada en tiempo real\u201d. Con esto nos referimos tanto al paquete de capa de red como a la TPDU encapsulada en \u00e9l.\n6.6.1 Problemas de desempe\u00f1o en las redes de c\u00f3mputo Algunos problemas de desempe\u00f1o, como la congesti\u00f3n, son causados por sobrecargas temporales de los recursos. Si repentinamente llega m\u00e1s tr\u00e1fico a un enrutador que el que puede manejar, surgir\u00e1 la congesti\u00f3n y el desempe\u00f1o bajar\u00e1. Ya estudiamos la congesti\u00f3n en detalle en el cap\u00edtulo anterior.\n558\nLA CAPA DE TRANSPORTE\nCAP. 6\nEl desempe\u00f1o tambi\u00e9n se degrada cuando hay un desequilibrio estructural de los recursos. Por ejemplo, si una l\u00ednea de comunicaci\u00f3n de gigabits est\u00e1 conectada a una PC de bajo rendimiento, la pobre CPU no ser\u00e1 capaz de procesar los paquetes de entrada a la velocidad suficiente, y se perder\u00e1n algunos. Estos paquetes se retransmitir\u00e1n tarde o temprano, agregando un retardo, desperdiciando ancho de banda y reduciendo en general el desempe\u00f1o. Las sobrecargas tambi\u00e9n pueden generarse sincr\u00f3nicamente. Por ejemplo, si una TPDU contiene un par\u00e1metro err\u00f3neo (por ejemplo, el puerto al que est\u00e1 destinada), en muchos casos el receptor cort\u00e9smente enviar\u00e1 una notificaci\u00f3n de error. Ahora considere lo que podr\u00eda ocurrir si se difundiera una TPDU err\u00f3nea a 10,000 m\u00e1quinas: cada una podr\u00eda devolver un mensaje de error. La tormenta de difusi\u00f3n resultante podr\u00eda paralizar la red. El UDP adoleci\u00f3 de este problema hasta que se cambi\u00f3 el protocolo para hacer que los hosts evitaran responder a errores en las TPDUs de UDP enviadas a direcciones de difusi\u00f3n. Un segundo ejemplo de sobrecarga s\u00edncrona es lo que ocurre tras una falla del suministro el\u00e9ctrico. Al regresar la energ\u00eda, todas las m\u00e1quinas saltan simult\u00e1neamente a sus ROMs para reiniciarse. Una secuencia de arranque com\u00fan podr\u00eda requerir acudir primero a alg\u00fan servidor (DHCP) para conocer la identidad verdadera de la m\u00e1quina, y luego a un servidor de archivos para obtener una copia del sistema operativo. Si cientos de m\u00e1quinas hacen todo esto al mismo tiempo, el servidor probablemente se vendr\u00eda abajo por la carga. Aun en ausencia de sobrecargas s\u00edncronas y con suficientes recursos disponibles, puede haber un bajo desempe\u00f1o debido a la falta de afinaci\u00f3n del sistema. Por ejemplo, si una m\u00e1quina tiene bastante potencia y memoria de CPU, pero no se ha asignado suficiente memoria como espacio de b\u00fafer, ocurrir\u00e1n desbordamientos y se perder\u00e1n varias TPDUs. De la misma manera, si el algoritmo de calendarizaci\u00f3n no tiene una prioridad bastante alta como para procesar las TPDUs de entrada, podr\u00e1n perderse algunas. Otro asunto relativo a la afinaci\u00f3n es el establecimiento correcto de los temporizadores. Cuando se env\u00eda una TPDU, normalmente se utiliza un temporizador para protegerse contra p\u00e9rdidas. Si se asigna un valor muy bajo al temporizador, ocurrir\u00e1n retransmisiones innecesarias, congestionando los alambres. Si el valor es demasiado alto, ocurrir\u00e1n retardos innecesarios tras la p\u00e9rdida de una TPDU. Otros par\u00e1metros afinables incluyen el tiempo de espera para incorporar datos a paquetes antes de enviar confirmaciones de recepci\u00f3n por separado, y la cantidad de retransmisiones antes de darse por vencido. Las redes de gigabits traen consigo nuevos problemas de desempe\u00f1o. Por ejemplo, considere el env\u00edo de una r\u00e1faga de datos de 64 KB de San Diego a Boston para llenar el b\u00fafer de 64 KB del receptor. Suponga que el enlace es de 1 Gbps y que el retardo de la luz en un sentido a trav\u00e9s de la fibra es de 20 mseg. Inicialmente, en t = 0, el canal est\u00e1 vac\u00edo, como se muestra en la figura 6-41(a). Apenas 500 \u03bcseg despu\u00e9s [figura 6-41(b)] todas las TPDUs est\u00e1n en la fibra. La TPDU a la cabeza ahora estar\u00e1 en alg\u00fan lugar del vecindario de Brawley, todav\u00eda al sur de California. Sin embargo, el emisor debe detenerse hasta recibir la actualizaci\u00f3n de ventana. Despu\u00e9s de 20 mseg, la TPDU puntera llega a Boston, como se muestra en la figura 6-41(c), y se env\u00eda una confirmaci\u00f3n de recepci\u00f3n. Por \u00faltimo, 40 mseg despu\u00e9s de comenzar, llega la primera confirmaci\u00f3n de recepci\u00f3n al emisor y puede transmitirse la segunda r\u00e1faga. Dado que la l\u00ednea de transmisi\u00f3n se us\u00f3 durante 0.5 mseg de un total de 40, la eficiencia es de aproximadamente 1.25%. Esta situaci\u00f3n es t\u00edpica de la operaci\u00f3n de protocolos antiguos sobre l\u00edneas de gigabits.\nSEC. 6.6\n559\nASPECTOS DEL DESEMPE\u00d1O\ns Dato\n(a)\n(b)\ni\u00f3n ecepc s de r e n io c ma Confir\n(c)\n(d)\nFigura 6-41. Estado de transmisi\u00f3n de un megabit de San Diego a Boston. (a) En t = 0. (b) Tras 500 \u03bcseg. (c) Tras 20 mseg. (d) Tras 40 mseg.\nUna cantidad que conviene recordar durante el an\u00e1lisis del desempe\u00f1o de redes es el producto ancho de banda-retardo que se obtiene al multiplicar el ancho de banda (en bits/seg) por el tiempo de retardo de ida y vuelta (en seg). El producto es la capacidad del canal desde el emisor al receptor y de regreso (en bits). Para el ejemplo de la figura 6-41, el producto ancho de banda-retardo es de 40 millones de bits. En otras palabras, el emisor tendr\u00eda que enviar una r\u00e1faga de 40 millones de bits para trabajar a toda la velocidad hasta la llegada de la primera confirmaci\u00f3n de recepci\u00f3n. Se requiere esta cantidad de bits para llenar el canal (en ambas direcciones). \u00c9sta es la raz\u00f3n por la que una r\u00e1faga de medio mill\u00f3n de bits s\u00f3lo logra una eficiencia del 1.25%: es s\u00f3lo el 1.25% de la capacidad del canal. La conclusi\u00f3n aqu\u00ed es que, para lograr un buen desempe\u00f1o, la ventana del receptor debe tener cuando menos el tama\u00f1o del producto ancho de banda-retardo, y de preferencia ser un poco m\u00e1s grande, puesto que el receptor podr\u00eda no responder instant\u00e1neamente. Para una l\u00ednea transcontinental de gigabits se requieren cuando menos 5 megabytes para cada conexi\u00f3n. Si la eficiencia es muy baja para el env\u00edo de un megabit, imagine lo que ser\u00e1 al enviar unos cuantos cientos de bytes de una breve solicitud. A menos que pueda encontrarse otro uso para la\n560\nLA CAPA DE TRANSPORTE\nCAP. 6\nl\u00ednea mientras el primer cliente espera una respuesta, una l\u00ednea de gigabits no es mejor que una l\u00ednea de megabits, s\u00f3lo m\u00e1s cara. Otro problema de desempe\u00f1o que ocurre con las aplicaciones de tiempo cr\u00edtico como audio y v\u00eddeo es la fluctuaci\u00f3n. Un tiempo medio de transmisi\u00f3n corto no es suficiente. Tambi\u00e9n se requiere una desviaci\u00f3n est\u00e1ndar peque\u00f1a. El logro de un tiempo medio de transmisi\u00f3n corto con una desviaci\u00f3n est\u00e1ndar peque\u00f1a requiere esfuerzos serios de ingenier\u00eda.\n6.6.2 Medici\u00f3n del desempe\u00f1o de las redes Cuando una red tiene un desempe\u00f1o pobre, sus usuarios frecuentemente se quejan con los operadores, exigiendo mejoras. Para mejorar el desempe\u00f1o, los operadores deben primero determinar exactamente lo que ocurre. Para saberlo, los operadores deben efectuar mediciones. En esta secci\u00f3n veremos las mediciones de desempe\u00f1o de las redes. El estudio siguiente se basa en el trabajo de Mogul (1993). El ciclo usado para mejorar el desempe\u00f1o de las redes contiene los siguientes pasos: 1. Medir los par\u00e1metros pertinentes y el desempe\u00f1o de la red. 2. Tratar de entender lo que ocurre. 3. Cambiar un par\u00e1metro. Estos pasos se repiten hasta que el desempe\u00f1o sea lo bastante bueno o que quede claro que se han agotado todas las mejoras posibles. Las mediciones pueden hacerse de muchas maneras y en muchos lugares (tanto f\u00edsicos como en la pila de protocolos). El tipo de medici\u00f3n m\u00e1s b\u00e1sico es arrancar un temporizador al iniciar una actividad y medir el tiempo que tarda la actividad. Por ejemplo, saber el tiempo que toma la confirmaci\u00f3n de recepci\u00f3n de una TPDU es una medici\u00f3n clave. Otras mediciones se hacen con contadores que registran la frecuencia con que ocurre un evento (por ejemplo, cantidad de TPDUs perdidas). Por \u00faltimo, con frecuencia nos interesa saber la cantidad de algo, como el n\u00famero de bytes procesados durante cierto intervalo de tiempo. La medici\u00f3n del desempe\u00f1o y los par\u00e1metros de una red tiene muchos escollos potenciales. A continuaci\u00f3n describimos algunos de ellos. Cualquier intento sistem\u00e1tico de medir el desempe\u00f1o de una red debe tener cuidado de evitarlos. Aseg\u00farese que el tama\u00f1o de la muestra es lo bastante grande No mida el tiempo de env\u00edo de una TPDU, sino repita la medici\u00f3n, digamos, un mill\u00f3n de veces y obtenga el promedio. Una muestra grande reducir\u00e1 la incertidumbre de la media y la desviaci\u00f3n est\u00e1ndar medidas. Esta incertidumbre puede calcularse usando f\u00f3rmulas estad\u00edsticas est\u00e1ndar.\nSEC. 6.6\nASPECTOS DEL DESEMPE\u00d1O\n561\nAseg\u00farese de que las muestras son representativas Idealmente, la secuencia total de un mill\u00f3n de mediciones deber\u00eda repetirse a horas del d\u00eda y de la semana diferentes para ver el efecto de diferentes cargas del sistema sobre la cantidad medida. Por ejemplo, las mediciones de congesti\u00f3n sirven de poco si se toman en un momento en el que no hay congesti\u00f3n. A veces los resultados pueden ser contraintuitivos inicialmente, como la presencia de congesti\u00f3n intensa a las 10, 11, 13 y 14 horas, pero sin congesti\u00f3n al mediod\u00eda (cuando todos los usuarios est\u00e1n en el refrigerio). Tenga cuidado al usar relojes de intervalos grandes Los relojes de computadora funcionan sumando uno a un contador a intervalos regulares. Por ejemplo, un temporizador de milisegundos suma uno al contador cada 1 mseg. El uso de tal temporizador para medir un evento que tarda menos de 1 mseg es posible, pero requiere cuidado. Por ejemplo, para medir el tiempo de env\u00edo de una TPDU, el reloj del sistema (digamos, en milisegundos) debe leerse al entrar en el c\u00f3digo de capa de transporte, y nuevamente al salir. Si el tiempo de env\u00edo real de la TPDU es de 300 \u03bcseg, la diferencia entre las dos lecturas ser\u00e1 0 o 1, ambas cifras equivocadas. Sin embargo, si la medici\u00f3n se repite un mill\u00f3n de veces y se suman todas las mediciones y se dividen entre un mill\u00f3n, el tiempo medio tendr\u00e1 una exactitud del orden de menos de 1 \u03bcseg. Aseg\u00farese de que no ocurre nada inesperado durante sus pruebas Realizar mediciones en un sistema universitario el d\u00eda en que tiene que entregarse un importante proyecto de laboratorio puede dar resultados diferentes a los que se podr\u00edan obtener el d\u00eda siguiente. Del mismo modo, si un investigador ha decidido difundir una videoconferencia por la red mientras usted hace sus pruebas, sus resultados podr\u00edan alterarse. Es mejor ejecutar las pruebas en un sistema inactivo y crear la carga completa usted mismo, pero aun este enfoque tiene algunos escollos. Usted podr\u00eda pensar que nadie usar\u00e1 la red a las 3 A.M., pero esa podr\u00eda ser precisamente la hora en la que el programa autom\u00e1tico de respaldos comienza a copiar todos los discos a videocinta. Es m\u00e1s, puede haber un tr\u00e1fico pesado hacia sus fant\u00e1sticas p\u00e1ginas del World Wide Web desde husos horarios distantes. El cach\u00e9 puede arruinar las mediciones Si quiere medir los tiempos de transferencia de archivos, la manera obvia de hacerlo es abrir un archivo grande, leerlo todo, cerrarlo y ver el tiempo que tarda. Luego se repetir\u00e1 la medici\u00f3n muchas veces m\u00e1s para obtener un buen promedio. El problema es que el sistema puede manejar el archivo en cach\u00e9, por lo que s\u00f3lo la primera medici\u00f3n realmente comprende tr\u00e1fico de red. Las dem\u00e1s son s\u00f3lo lecturas del cach\u00e9 local. Los resultados de tales mediciones son esencialmente inservibles (a menos que se desee medir el desempe\u00f1o del cach\u00e9). Con frecuencia puede evitarse el almacenamiento en cach\u00e9 simplemente desbordando el cach\u00e9. Por ejemplo, si el cach\u00e9 es de 10 MB, el ciclo de prueba podr\u00eda abrir, leer y cerrar dos archivos\n562\nLA CAPA DE TRANSPORTE\nCAP. 6\nde 10 MB en cada vuelta, en un intento por obligar a que la tasa de aciertos del cach\u00e9 sea de 0. Aun as\u00ed, se recomienda cuidado a menos que est\u00e9 completamente seguro de que entiende el algoritmo de almacenamiento en cach\u00e9. Los b\u00faferes pueden tener un efecto similar. Un programa de servicio de desempe\u00f1o del TCP/IP bastante com\u00fan ha llegado a informar que el UDP puede lograr un desempe\u00f1o sustancialmente mayor al permitido por la l\u00ednea f\u00edsica. \u00bfPor qu\u00e9 ocurre esto? Una llamada al UDP normalmente devuelve al control tan pronto como el kernel ha aceptado el mensaje y lo ha agregado a la cola de transmisi\u00f3n. Si hay suficiente espacio de b\u00fafer, cronometrar 1000 llamadas UDP no implica que todos los datos se han enviado. La mayor\u00eda de ellos podr\u00eda estar a\u00fan en el kernel, pero el programa de servicio de desempe\u00f1o piensa que se han transmitido todos. Entienda lo que est\u00e1 midiendo Al medir el tiempo de lectura de un archivo remoto, las mediciones dependen de la red, los sistemas operativos tanto en el cliente como en el servidor, las tarjetas de interfaz de hardware empleadas, sus controladores y otros factores. Si se tiene cuidado, finalmente se descubrir\u00e1 el tiempo de transferencia de archivos para la configuraci\u00f3n en uso. Si la meta es afinar esa configuraci\u00f3n en particular, tales mediciones son adecuadas. Sin embargo, si se est\u00e1n haciendo mediciones similares en tres sistemas diferentes a fin de seleccionar la tarjeta de interfaz de red a adquirir, sus resultados podr\u00edan desviarse por completo por el hecho de que uno de los controladores de la red realmente est\u00e1 mal y solamente est\u00e1 aprovechando el 10% del desempe\u00f1o de la tarjeta. Tenga cuidado con la extrapolaci\u00f3n de los resultados Suponga que hace mediciones con cargas de red simuladas que van desde 0 (en reposo) a 0.4 (40% de la capacidad), como lo indican los puntos de datos y la l\u00ednea continua que los atraviesa en la figura 6-42. Puede ser tentador extrapolar linealmente, como lo indica la l\u00ednea punteada. Sin embargo, muchos resultados de encolamiento comprenden un factor de 1/(1 \u2212 \u03c1), donde \u03c1 es la carga, por lo que los valores verdaderos pueden parecerse m\u00e1s a la l\u00ednea punteada, que se eleva m\u00e1s r\u00e1pido que linealmente.\n6.6.3 Dise\u00f1o de sistemas para un mejor desempe\u00f1o La medici\u00f3n y los ajustes pueden con frecuencia mejorar considerablemente el desempe\u00f1o, pero no pueden sustituir un buen dise\u00f1o original. Una red mal dise\u00f1ada puede mejorarse s\u00f3lo hasta un l\u00edmite. M\u00e1s all\u00e1, tiene que rehacerse desde el principio. En esta secci\u00f3n presentaremos algunas reglas emp\u00edricas basadas en la experiencia con muchas redes. Estas reglas se relacionan con el dise\u00f1o del sistema, no s\u00f3lo con el dise\u00f1o de la red, ya que el software y el sistema operativo con frecuencia son m\u00e1s importantes que los enrutadores y las tarjetas de interfaz. La mayor\u00eda de estas ideas han sido del conocimiento com\u00fan de los dise\u00f1adores\nASPECTOS DEL DESEMPE\u00d1O\n563\nTiempo de respuesta\nSEC. 6.6\nCarga\nFigura 6-42. Respuesta en funci\u00f3n de la carga.\nde redes durante a\u00f1os y se han pasado verbalmente de generaci\u00f3n en generaci\u00f3n. Mogul fue el primero en postularlas expl\u00edcitamente (1993); nuestro estudio sigue principalmente la secuencia del suyo. Otra fuente apropiada es (Metcalfe, 1993). Regla #1: La velocidad de la CPU es m\u00e1s importante que la velocidad de la red Una amplia experiencia ha demostrado que en casi todas las redes la sobrecarga de los sistemas operativos y protocolos domina el tiempo de utilizaci\u00f3n en el alambre. Por ejemplo, en teor\u00eda, el tiempo m\u00ednimo de una RPC en una red Ethernet es de 102 \u03bcseg, correspondiente a una solicitud m\u00ednima (64 bytes) seguida de una respuesta m\u00ednima (64 bytes). En la pr\u00e1ctica, reducir la sobrecarga de software y conseguir el tiempo de RPC m\u00e1s cercano a 102 \u03bcseg es un logro considerable. De la misma manera, el problema principal al operar a 1 Gbps es llevar los bits desde el b\u00fafer del usuario hasta la primera fibra a velocidad suficiente y lograr que la CPU receptora los procese tan r\u00e1pidamente como entran. En pocas palabras, si se duplica la velocidad de la CPU, con frecuencia casi se puede duplicar la velocidad real de transporte. La duplicaci\u00f3n de la capacidad de la red en muchos casos no tiene efecto, ya que el cuello de botella generalmente est\u00e1 en los hosts. Regla #2: Reducir el n\u00famero de paquetes para reducir la sobrecarga de software El procesamiento de una TPDU tiene cierta cantidad de sobrecarga por TPDU (por ejemplo, procesamiento de encabezados) y cierta cantidad de procesamiento por byte (por ejemplo, procesar la suma de verificaci\u00f3n). Al enviar 1 mill\u00f3n de bytes, la sobrecarga por byte es la misma sin\n564\nLA CAPA DE TRANSPORTE\nCAP. 6\nimportar el tama\u00f1o de la TPDU. Sin embargo, el uso de TPDUs de 128 bytes implica 32 veces m\u00e1s sobrecarga por TPDU que el uso de TPDUs de 4 KB. Esta sobrecarga crece con rapidez. Adem\u00e1s de la sobrecarga de las TPDUs, hay una sobrecarga en las capas inferiores que se debe considerar. Cada paquete que llega causa una interrupci\u00f3n. En un procesador moderno con canalizaci\u00f3n, cada interrupci\u00f3n rompe la canalizaci\u00f3n de la CPU, interfiere con el cach\u00e9, requiere un cambio en el contexto de administraci\u00f3n de la memoria y obliga al almacenamiento de una cantidad de registros de CPU importante. Una reducci\u00f3n de n veces en las TPDUs enviadas reduce la sobrecarga de la interrupci\u00f3n y de los paquetes en un factor de n. Esta observaci\u00f3n es un argumento a favor de la recolecci\u00f3n de una cantidad importante de datos antes de su transmisi\u00f3n, a fin de reducir las interrupciones en el otro lado. El algoritmo de Nagle y la soluci\u00f3n de Clark al s\u00edndrome de la ventana tonta son intentos por lograr precisamente esto. Regla #3: Reducir al m\u00ednimo las conmutaciones de contexto Las conmutaciones de contexto (por ejemplo, del modo de kernel al modo de usuario) son mortales; pueden tener los mismos inconvenientes que las interrupciones, siendo la peor una larga serie de fallas de cach\u00e9 iniciales. Las conmutaciones de contexto pueden reducirse haciendo que el procedimiento de biblioteca que env\u00eda los datos los guarde en un b\u00fafer interno hasta tener una buena cantidad de ellos. De la misma manera, en el lado receptor las TPDUs de entrada peque\u00f1as deben juntarse y pasarse al usuario como un bloque completo y no individualmente, para reducir al m\u00ednimo las conmutaciones de contexto. En el mejor caso, un paquete entrante causa una conmutaci\u00f3n de contexto del usuario actual al n\u00facleo, y luego una conmutaci\u00f3n al proceso receptor para darle los nuevos datos. Desgraciadamente, en muchos sistemas operativos ocurren conmutaciones de contexto adicionales. Por ejemplo, si el administrador de la red ejecuta un proceso especial en el espacio de usuario, un paquete entrante tender\u00e1 a causar una conmutaci\u00f3n de contexto del usuario actual al kernel, luego otra del kernel al administrador de red, seguida de otra de regreso al kernel y, por \u00faltimo, una de \u00e9ste al proceso receptor. Esta secuencia se muestra en la figura 6-43. Todas estas conmutaciones de contexto en cada paquete desperdician mucho tiempo de CPU y tienen un efecto devastador sobre el desempe\u00f1o de la red. Regla #4: Reducir al m\u00ednimo las copias Peores que las m\u00faltiples conmutaciones de contexto son las m\u00faltiples copias. No es inusitado que un paquete entrante se copie tres o cuatro veces antes de entregarse la TPDU que contiene. Despu\u00e9s de recibirse un paquete en la interfaz de la red en un b\u00fafer especial integrado a una tarjeta, es com\u00fan que se copie en un b\u00fafer del kernel. De ah\u00ed se copia en el b\u00fafer de capa de red, luego en el b\u00fafer de la capa de transporte y, por \u00faltimo, en el proceso de aplicaci\u00f3n receptor. Un sistema operativo ingenioso copiar\u00e1 una palabra a la vez, pero no es raro que se requieran unas cinco instrucciones por palabra (carga, almacenamiento, incremento de un registro de \u00edndice,\nSEC. 6.6 Proceso de usuario en ejecuci\u00f3n cuando llega el paquete\n565\nASPECTOS DEL DESEMPE\u00d1O Administrador de red\nProceso receptor\nEspacio de usuario\nEspacio de kernel\nFigura 6-43. Cuatro conmutaciones de contexto para manejar un paquete con un administrador de red de espacio de usuario.\nprueba de fin de datos y ramificaci\u00f3n condicional). La elaboraci\u00f3n de tres copias de cada paquete a cinco instrucciones por palabra de 32 bits copiada requiere 15/4 o cerca de cuatro instrucciones por byte copiado. En una CPU de 500 MIPS, una instrucci\u00f3n toma 2 nseg, de tal manera que cada byte necesita 8 nseg de tiempo de procesamiento o cerca de 1 nseg por bit, lo cual da una tasa m\u00e1xima de 1 Gbps. Si incluimos la sobrecarga del procesamiento del encabezado, el manejo de interrupciones y las conmutaciones de contexto, podr\u00edan lograrse 500 Mbps, sin considerar el procesamiento real de los datos. Queda claro que es imposible manejar a toda velocidad una l\u00ednea Ethernet de 10 Gbps. De hecho, es probable que tampoco se pueda manejar a toda velocidad una l\u00ednea de 500 Mbps. En el c\u00e1lculo anterior hemos supuesto que una m\u00e1quina de 500 MIPS puede ejecutar 500 millones de instrucciones por segundo. En realidad, las m\u00e1quinas s\u00f3lo pueden operar a tales velocidades si no hacen referencia a la memoria. Las operaciones de memoria con frecuencia son diez veces m\u00e1s lentas que las instrucciones registro a registro (es decir, 20 nseg/instrucci\u00f3n). Si en realidad 20 por ciento de las instrucciones hacen referencia a la memoria (es decir, son fallas de cach\u00e9), lo cual es probable cuando entran en contacto con los paquetes entrantes, el tiempo de ejecuci\u00f3n promedio de las instrucciones es de 5.6 nseg (0.8 \u00d7 2 + 0.2 \u00d7 20). Con cuatro instrucciones/byte, necesitamos 22.4 nseg/byte, o 2.8 nseg/bit), lo cual da cerca de 357 Mbps. Al factorizar 50 por ciento de sobrecarga da como resultado 178 Mbps. Observe que la asistencia de hardware no ayuda aqu\u00ed. El problema es que el sistema operativo est\u00e1 ejecutando demasiadas copias. Regla #5: Es posible comprar m\u00e1s ancho de banda, pero no un retardo menor Las tres reglas que siguen tienen que ver con la comunicaci\u00f3n, m\u00e1s que con el procesamiento del protocolo. La primera regla indica que, si se desea m\u00e1s ancho de banda, se puede comprar. La instalaci\u00f3n de una segunda fibra junto a la primera duplica el ancho de banda, pero no hace nada para reducir el retardo. Para que el retardo sea m\u00e1s corto es necesario mejorar el software del protocolo, el sistema operativo o la interfaz de red. Incluso si se mejoran las tres cosas, el retardo no se reducir\u00e1 si el cuello de botella es el tiempo de transmisi\u00f3n.\n566\nLA CAPA DE TRANSPORTE\nCAP. 6\nRegla #6: Evitar la congesti\u00f3n es mejor que recuperarse de ella La vieja m\u00e1xima de que m\u00e1s vale prevenir que lamentar ciertamente se aplica a la congesti\u00f3n en redes. Al congestionarse una red, se pierden paquetes, se desperdicia ancho de banda, se introducen retardos in\u00fatiles, y otras cosas. La recuperaci\u00f3n requiere tiempo y paciencia; es mejor no tener que llegar a este punto. Evitar la congesti\u00f3n es como recibir una vacuna: duele un poco en el momento, pero evita algo que ser\u00eda mucho m\u00e1s doloroso. Regla #7: Evitar expiraciones del temporizador Los temporizadores son necesarios en las redes, pero deben usarse con cuidado y deben reducirse al m\u00ednimo las expiraciones del temporizador. Al expirar un temporizador, lo com\u00fan es que se repita una acci\u00f3n. Si realmente es necesario repetir la acci\u00f3n, que as\u00ed sea, pero su repetici\u00f3n innecesaria es un desperdicio. La manera de evitar el trabajo extra es tener cuidado de que los intervalos del temporizador sean m\u00e1s bien conservadores. Un temporizador que tarda demasiado en expirar agrega una peque\u00f1a cantidad de retardo extra a una conexi\u00f3n en el caso (improbable) de la p\u00e9rdida de una TPDU. Un temporizador que expira cuando no deber\u00eda consume tiempo de CPU valioso, desperdicia ancho de banda e impone una sobrecarga tal vez a docenas de enrutadores sin raz\u00f3n alguna.\n6.6.4 Procesamiento r\u00e1pido de las TPDUs La moraleja de la historia anterior es que el obst\u00e1culo principal en las redes r\u00e1pidas es el software de los protocolos. En esta secci\u00f3n veremos algunas maneras de acelerar este software. Para mayor informaci\u00f3n, v\u00e9ase (Clark y cols., 1989, y Chase y cols., 2001). La sobrecarga de procesamiento de las TPDUs tiene dos componentes: la sobrecarga por TPDU y la sobrecarga por byte. Ambas deben combatirse. La clave para el procesamiento r\u00e1pido de las TPDUs es separar el caso normal (transferencia de datos de un solo sentido) y manejarlo como caso especial. Aunque se necesita una secuencia de TPDUs especiales para entrar en el estado ESTABLISHED, una vez ah\u00ed el procesamiento de las TPDUs es directo hasta que un lado cierra la conexi\u00f3n. Comencemos por examinar el lado emisor en el estado ESTABLISHED cuando hay datos por transmitir. Por claridad, supondremos que la entidad de transporte est\u00e1 en el kernel, aunque los mismos conceptos se aplican si es un proceso de espacio de usuario o una biblioteca en el proceso emisor. En la figura 6-44, el proceso emisor causa una interrupci\u00f3n en el kernel para ejecutar SEND. Lo primero que hace la entidad de transporte es probar si \u00e9ste es el caso normal: el estado es ESTABLISHED, ning\u00fan lado est\u00e1 tratando de cerrar la conexi\u00f3n, se est\u00e1 enviando una TPDU normal (es decir, no fuera de banda) completa, y hay suficiente espacio de ventana disponible en el receptor. Si se cumplen todas las condiciones, no se requieren pruebas adicionales y puede seguirse la trayectoria r\u00e1pida a trav\u00e9s de la entidad de transporte emisora. Por lo general, esta ruta se toma la mayor\u00eda de las veces.\nSEC. 6.6\n567\nASPECTOS DEL DESEMPE\u00d1O\nS\nProceso receptor\nProceso emisor\nS\nTPDU pasada al proceso receptor\nCausa una interrupci\u00f3n en el kernel para enviar TPDU Prueba\nPrueba\nRed\nFigura 6-44. La trayectoria r\u00e1pida del emisor al receptor se indica con una l\u00ednea gruesa. Los pasos de procesamiento de esta trayectoria se muestran sombreados.\nEn el caso normal, los encabezados de las TPDUs de datos consecutivas son casi iguales. Para aprovechar este hecho, se almacena un encabezado prototipo en la entidad de transporte. Al principio de la trayectoria r\u00e1pida, el encabezado se copia lo m\u00e1s r\u00e1pidamente posible en un b\u00fafer de trabajo, palabra por palabra. Los campos que cambian de una TPDU a otra se sobreescriben en el b\u00fafer. Con frecuencia, estos campos se deducen f\u00e1cilmente de las variables de estado, como el siguiente n\u00famero de secuencia. A continuaci\u00f3n se pasan a la capa de red un apuntador al encabezado completo de la TPDU m\u00e1s un apuntador a los datos de usuario. Aqu\u00ed puede seguirse la misma estrategia (no se muestra en la figura 6-44). Por \u00faltimo, la capa de red entrega el paquete resultante a la capa de enlace de datos para su transmisi\u00f3n. Como ejemplo del funcionamiento de este principio en la pr\u00e1ctica, consideremos el TCP/IP. En la figura 6-45(a) se muestra el encabezado TCP. Los campos que son iguales en varias TPDUs consecutivas durante un flujo en un solo sentido aparecen sombreados. Todo lo que tiene que hacer la entidad de transporte emisora es copiar las cinco palabras del encabezado prototipo en el b\u00fafer de salida, actualizar el n\u00famero de secuencia (copi\u00e1ndolo de una palabra en la memoria), calcular la suma de verificaci\u00f3n e incrementar el n\u00famero de secuencia en la memoria. Entonces puede entregar el encabezado y los datos a un procedimiento IP especial para enviar una TPDU normal m\u00e1xima. El IP entonces copia su encabezado prototipo de cinco palabras [v\u00e9ase la figura 6-45(b)] en el b\u00fafer, llena el campo de Identificaci\u00f3n y calcula su suma de verificaci\u00f3n. El paquete ya est\u00e1 listo para transmitirse. Veamos ahora el proceso de trayectoria r\u00e1pida del lado receptor de la figura 6-44. El paso 1 es localizar el registro de conexi\u00f3n de la TPDU entrante. En el TCP, el registro de conexi\u00f3n puede almacenarse en una tabla de hash en la que alguna funci\u00f3n sencilla de las dos direcciones IP y los dos puertos es la clave. Una vez localizado el registro de conexi\u00f3n, ambas direcciones y ambos puertos deben compararse para comprobar que se ha encontrado el registro correcto.\n568\nLA CAPA DE TRANSPORTE Puerto de origen\nPuerto de destino\nN\u00famero de secuencia N\u00famero de confirmaci\u00f3n de recepci\u00f3n Long Sin usar Suma de verificaci\u00f3n (a)\nVER.\nIHL\nCAP. 6 TOS\nLongitud total\nDesplazamiento de fragmento Suma de verificaci\u00f3n Protocolo del encabezado\nIdentificaci\u00f3n TTL\nTama\u00f1o de ventana\nDirecci\u00f3n de origen\nApuntador urgente\nDirecci\u00f3n de destino (b)\nFigura 6-45. (a) Encabezado TCP. (b) Encabezado IP. En ambos casos, los campos sombreados se toman sin cambios del prototipo.\nUna optimizaci\u00f3n que con frecuencia acelera a\u00fan m\u00e1s la b\u00fasqueda del registro de conexi\u00f3n es sencilla: mantener un apuntador al \u00faltimo registro usado y probar ese primero. Clark y cols. (1989) prob\u00f3 esto y observ\u00f3 una tasa de \u00e9xito mayor al 90%. Otras heur\u00edsticas de b\u00fasqueda se describen en (McKenney y Dove, 1992). A continuaci\u00f3n se revisa la TPDU para ver si es normal: el estado es ESTABLISHED, ninguno de los dos lados est\u00e1 tratando de cerrar la conexi\u00f3n, la TPDU es completa, no hay indicadores especiales encendidos y el n\u00famero de secuencia es el esperado. Estas pruebas se llevan apenas unas cuantas instrucciones. Si se cumplen todas las condiciones, se invoca un procedimiento TCP especial de trayectoria r\u00e1pida. La trayectoria r\u00e1pida actualiza el registro de la conexi\u00f3n y copia los datos en el espacio de usuario. Mientras copia, el procedimiento tambi\u00e9n calcula la suma de verificaci\u00f3n, eliminado una pasada extra por los datos. Si la suma de verificaci\u00f3n es correcta, se actualiza el registro de conexi\u00f3n y se devuelve una confirmaci\u00f3n de recepci\u00f3n. El esquema general de hacer primero una comprobaci\u00f3n r\u00e1pida para ver si el encabezado es el esperado y tener un procedimiento especial para manejar ese caso se llama predicci\u00f3n de encabezado. Muchas implementaciones del TCP lo usan. Cuando esta optimizaci\u00f3n y todas las dem\u00e1s estudiadas en este cap\u00edtulo se usan juntas, es posible conseguir que el TCP opere al 90% de la velocidad de una copia local de memoria a memoria, suponiendo que la red misma es lo bastante r\u00e1pida. Dos \u00e1reas en las que son posibles mejoras sustanciales del desempe\u00f1o son el manejo de b\u00faferes y la administraci\u00f3n de los temporizadores. El aspecto importante del manejo de b\u00faferes es evitar el copiado innecesario, como se explic\u00f3 antes. La administraci\u00f3n de los temporizadores es importante porque casi ninguno de los temporizadores expira; se ajustan para protegerse contra p\u00e9rdidas de TPDUs, pero la mayor\u00eda de las TPDUs llegan correctamente, y sus confirmaciones de recepci\u00f3n tambi\u00e9n. Por tanto, es importante optimizar el manejo de los temporizadores para que casi nunca expiren. Un esquema com\u00fan consiste en usar una lista enlazada de eventos del temporizador ordenada por hora de expiraci\u00f3n. La entrada inicial contiene un contador que indica la cantidad de pulsos de reloj que faltan para la expiraci\u00f3n. Cada entrada subsecuente contiene un contador que indica el rezago en pulsos despu\u00e9s de la entrada previa. Por tanto, si los temporizadores expiran a 3, 10 y 12 pulsos, respectivamente, los tres contadores son de 3, 7 y 2, respectivamente.\nSEC. 6.6\nASPECTOS DEL DESEMPE\u00d1O\n569\nDespu\u00e9s de cada pulso de reloj, se decrementa el contador del encabezado inicial. Cuando llega a cero, su evento se procesa y el siguiente elemento de la lista es ahora el inicial; su contador no necesita cambiarse. En este esquema, la inserci\u00f3n y eliminaci\u00f3n de temporizadores son operaciones costosas, con tiempos de ejecuci\u00f3n proporcionales a la longitud de la lista. Puede usarse un enfoque m\u00e1s eficiente si el intervalo m\u00e1ximo del temporizador est\u00e1 limitado y se conoce por adelantado. Aqu\u00ed puede utilizarse un arreglo llamado rueda de temporizaci\u00f3n, como se muestra en la figura 6-46. Cada ranura corresponde a un pulso de reloj. El tiempo actual en la figura es T = 4. Los temporizadores se programan para expirar 3, 10 y 12 pulsos m\u00e1s adelante. Si se establece un temporizador nuevo para expirar en siete pulsos, simplemente se crea una entrada en la ranura 11. Del mismo modo, si el temporizador establecido para T + 10 tiene que cancelarse, debe examinarse la lista que comienza en la ranura 14 para eliminar la entrada pertinente. Observe que el arreglo de la figura 6-46 no puede manejar temporizadores m\u00e1s all\u00e1 de T + 15. Ranura Apuntador a la lista de temporizadores para T + 12\nTiempo actual, T\nApuntador a la lista de temporizadores para T + 3\nApuntador a la lista de temporizadores para T + 10\nFigura 6-46. Rueda de temporizaci\u00f3n.\nCuando el reloj pulsa, el apuntador de tiempo actual avanza una ranura (circularmente). Si la entrada a la que ahora se apunta es diferente de cero, todos sus temporizadores se procesan. Se estudian muchas variaciones de la idea b\u00e1sica en (Varghese y Lauck, 1987).\n6.6.5 Protocolos para redes de gigabits Al inicio de la d\u00e9cada de 1990 comenzaron a aparecer las redes de gigabits. La primera reacci\u00f3n de la gente fue usar en ellas los viejos protocolos, pero pronto surgieron varios problemas. En esta secci\u00f3n estudiaremos algunos de estos problemas y las medidas que est\u00e1n tomando los protocolos nuevos para resolverlos conforme surgen redes todav\u00eda m\u00e1s r\u00e1pidas.\n570\nLA CAPA DE TRANSPORTE\nCAP. 6\nEl primer problema es que muchos protocolos usan n\u00fameros de secuencia de 32 bits. En los principios de Internet, las l\u00edneas entre enrutadores fueron en su mayor\u00eda l\u00edneas rentadas de 56 kbps, as\u00ed que un host transmitiendo a toda velocidad tomaba alrededor de una semana para dar vuelta a los n\u00fameros de secuencia. Para los dise\u00f1adores de TCP, 232 era una aproximaci\u00f3n muy buena al infinito porque hab\u00eda poco riesgo de que los paquetes viejos deambularan por la red una semana despu\u00e9s de su transmisi\u00f3n. Con la Ethernet de 10 Mpbs, el tiempo para dar vuelta a los n\u00fameros de secuencia se redujo a 57 minutos, mucho m\u00e1s corto pero a\u00fan manejable. Con una Ethernet de 1 Gbps sirviendo datos en Internet, el tiempo para dar vuelta a los n\u00fameros de secuencia es cercano a 34 segundos, bastante abajo de los 120 seg de tiempo de vida m\u00e1ximo de un paquete en Internet. De buenas a primeras, 232 ya no es una buena aproximaci\u00f3n al infinito porque un emisor puede recorrer el espacio de secuencia aunque los paquetes viejos a\u00fan existan en la red. No obstante, el RFC 1323 proporciona una ventana de escape. El origen de este problema es que muchos dise\u00f1adores de protocolos simplemente supusieron, t\u00e1citamente, que el tiempo requerido para consumir el espacio de secuencia completo exceder\u00eda por mucho el tiempo de vida m\u00e1ximo de los paquetes. En consecuencia, no hab\u00eda necesidad de preocuparse por el problema de que duplicados viejos sobrevivieran a\u00fan al dar vuelta a los n\u00fameros de secuencia. A velocidades de gigabits, falla ese supuesto impl\u00edcito. Un segundo problema es que las velocidades de comunicaci\u00f3n han mejorado con mucha mayor rapidez que las velocidades de c\u00f3mputo. (Nota a los ingenieros en computaci\u00f3n: \u00a1salgan a darles una paliza a los ingenieros en comunicaciones! Contamos con ustedes.) En los a\u00f1os 70, ARPANET operaba a 56 kbps y ten\u00eda computadoras que operaban a aproximadamente 1 MIPS. Los paquetes eran de 1008 bits, por lo que ARPANET era capaz de entregar unos 56 paquetes/seg. Con casi 18 mseg disponibles por paquete, un host pod\u00eda darse el lujo de gastar 18,000 instrucciones en el procesamiento de un paquete. Claro que hacerlo requer\u00eda todo el tiempo de CPU, pero pod\u00edan ejecutarse 9000 instrucciones por paquete y a\u00fan as\u00ed tener la mitad del tiempo de CPU libre para llevar a cabo tareas reales. Compare estas cantidades con las computadoras modernas de 1000 MIPS que intercambian paquetes de 1500 bytes por una l\u00ednea de gigabits. Los paquetes pueden entrar a una velocidad de m\u00e1s de 80,000 por segundo, por lo que el procesamiento de los paquetes debe completarse en 6.25 \u03bcseg si queremos reservar la mitad de la CPU para las aplicaciones. En 6.25 \u03bcseg, una computadora de 1000 MIPS puede ejecutar 6250 instrucciones, apenas 1/3 de lo que ten\u00edan disponibles los hosts de ARPANET. Es m\u00e1s, las instrucciones RISC modernas hacen menos por instrucci\u00f3n de lo que hac\u00edan las viejas instrucciones CISC, por lo que el problema es a\u00fan peor de lo que parece. En conclusi\u00f3n, hay menos tiempo disponible para el procesamiento de los protocolos del que hab\u00eda antes, por lo que los protocolos deben volverse m\u00e1s sencillos. Un tercer problema es que el protocolo de retroceso n se desempe\u00f1a mal en las l\u00edneas con un producto ancho de banda-retardo grande. Por ejemplo, considere una l\u00ednea de 4000 km que opera a 1 Gbps. El tiempo de transmisi\u00f3n de ida y vuelta es de 40 mseg, durante el cual un emisor puede enviar 5 megabytes. Si se detecta un error, pasar\u00e1n 40 mseg antes de que el emisor se entere. Si se usa el retroceso n, el emisor tendr\u00e1 que transmitir no s\u00f3lo el paquete err\u00f3neo, sino tambi\u00e9n los 5 megabytes de paquetes que llegaron despu\u00e9s. Evidentemente, \u00e9ste es un desperdicio masivo de recursos. Un cuarto problema es que las l\u00edneas de gigabits son fundamentalmente diferentes de las l\u00edneas de megabits en el sentido de que las l\u00edneas largas de gigabits est\u00e1n limitadas por el retardo en\nSEC. 6.6\nASPECTOS DEL DESEMPE\u00d1O\n571\nlugar del ancho de banda. En la figura 6-47 mostramos el tiempo que tarda la transferencia de un archivo de 1 megabit a 4000 km con varias velocidades de transmisi\u00f3n. A velocidades de hasta 1 Mbps, el tiempo de transmisi\u00f3n est\u00e1 dominado por la velocidad con que pueden enviarse los bits. A 1 Gbps, el retardo de ida y vuelta de 40 mseg domina al 1 mseg que se tarda la inserci\u00f3n de los bits en la fibra. Aumentos mayores del ancho de banda apenas tienen alg\u00fan efecto.\nTiempo de transferencia de archivos\n1000 seg 100 seg 10 seg 1 seg 100 mseg 10 mseg 1mseg\nTasa de datos (bps)\nFigura 6-47. Tiempo de transferencia y confirmaci\u00f3n de recepci\u00f3n de un archivo de 1 megabit a trav\u00e9s de una l\u00ednea de 4000 km.\nLa figura 6-47 tiene implicaciones desafortunadas para los protocolos de red; indica que los protocolos de parada y espera, como el RPC, tienen un l\u00edmite superior de desempe\u00f1o inherente. Este l\u00edmite lo establece la velocidad de la luz. Ning\u00fan progreso tecnol\u00f3gico en la \u00f3ptica mejorar\u00e1 la situaci\u00f3n (aunque ayudar\u00edan nuevas leyes de la f\u00edsica). Un quinto problema que vale la pena mencionar no es tecnol\u00f3gico ni de protocolo, como los otros, sino resultado de las aplicaciones nuevas. En pocas palabras, en muchas aplicaciones de gigabits, como las de multimedia, la variaci\u00f3n en los tiempos de llegada de los paquetes es tan importante como el retardo medio mismo. Una tasa de entrega lenta pero uniforme con frecuencia es preferible a una r\u00e1pida pero variable. Pasemos ahora de los problemas a las maneras de resolverlos. Primero haremos algunas observaciones generales, luego veremos los mecanismos de protocolos, la disposici\u00f3n de los paquetes y el software de los protocolos. El principio b\u00e1sico que deben aprender de memoria todos los dise\u00f1adores de redes de gigabits es: Dise\u00f1ar pensando en la velocidad, no en la optimizaci\u00f3n del ancho de banda. Los protocolos viejos con frecuencia se dise\u00f1aban tratando de reducir al m\u00ednimo la cantidad de bits en el alambre, com\u00fanmente usando campos peque\u00f1os y empac\u00e1ndolos en bytes y palabras.\n572\nLA CAPA DE TRANSPORTE\nCAP. 6\nHoy d\u00eda hay m\u00e1s que suficiente ancho de banda. El procesamiento del protocolo es el problema, por lo que los protocolos deber\u00edan dise\u00f1arse para reducirlo al m\u00ednimo. Los dise\u00f1adores del IPv6 entendieron claramente este principio. Una manera tentadora de acelerar el procedimiento es construir interfaces de red r\u00e1pidas en hardware. Lo malo de esta estrategia es que, a menos que el protocolo sea excesivamente sencillo, \u201chardware\u201d simplemente significa una tarjeta con una segunda CPU y su propio programa. Para asegurar que el coprocesador de la red sea m\u00e1s econ\u00f3mico que la CPU principal, con frecuencia se usa un chip m\u00e1s lento. La consecuencia de este dise\u00f1o es que una buena parte del tiempo la CPU principal (r\u00e1pida) queda en espera de que la segunda CPU (lenta) haga el trabajo cr\u00edtico. Es un mito pensar que la CPU principal tiene otras tareas que hacer mientras espera. Es m\u00e1s, cuando dos CPUs de prop\u00f3sito general se comunican, pueden ocurrir condiciones de competencia, por lo que se requieren protocolos complejos entre los dos procesadores para sincronizarlos correctamente. Por lo general, el mejor enfoque es hacer que los protocolos sean sencillos y dejar que la CPU principal realice el trabajo. Veamos ahora el asunto de la retroalimentaci\u00f3n en los protocolos de alta velocidad. Debido al ciclo de retardo (relativamente) largo, debe evitarse la retroalimentaci\u00f3n: la se\u00f1alizaci\u00f3n del receptor al emisor tarda demasiado. Un ejemplo de retroalimentaci\u00f3n es el control de la tasa de transmisi\u00f3n mediante un protocolo de ventana corrediza. Para evitar los retardos (largos) inherentes en el env\u00edo de actualizaciones de ventana del receptor al emisor, es mejor usar un protocolo basado en la tasa. En tal protocolo, el emisor puede enviar todo lo que quiera, siempre y cuando no env\u00ede a mayor velocidad que cierta tasa acordada de antemano entre el emisor y el receptor. Un segundo ejemplo de retroalimentaci\u00f3n es el algoritmo de arranque lento de Jacobson. Este algoritmo efect\u00faa m\u00faltiples sondeos para saber qu\u00e9 tanto puede manejar la red. Con las redes de alta velocidad, efectuar media docena de sondeos peque\u00f1os para ver la respuesta de la red es un desperdicio de ancho de banda enorme. Un esquema m\u00e1s eficiente es hacer que el emisor, el receptor y la red reserven los recursos necesarios en el momento de establecer la conexi\u00f3n. La reservaci\u00f3n de recursos por adelantado tambi\u00e9n tiene la ventaja de facilitar la reducci\u00f3n de la fluctuaci\u00f3n. En pocas palabras, la elevaci\u00f3n de las velocidades inevitablemente empuja el dise\u00f1o hacia la operaci\u00f3n orientada a la conexi\u00f3n, o a algo muy parecido. Por supuesto, si el ancho de banda se incrementa en el futuro en forma tal que a nadie le importe desperdiciarlo, las reglas de dise\u00f1o se tornar\u00e1n muy diferentes. La disposici\u00f3n de los paquetes es una consideraci\u00f3n importante en las redes de gigabits. El encabezado deber\u00eda contener la menor cantidad de campos posible, a fin de reducir el tiempo de procesamiento; estos campos deben ser lo bastante grandes como para cumplir su cometido, y estar alineados con los l\u00edmites de palabra para facilitar su procesamiento. En este contexto, \u201cbastante grandes\u201d significa que no ocurren problemas como n\u00fameros de secuencia que dan vuelta mientras existen a\u00fan paquetes viejos, receptores incapaces de anunciar suficiente espacio de ventana porque el campo de ventana es demasiado peque\u00f1o, etc\u00e9tera. El encabezado y los datos deben tener sumas de verificaci\u00f3n aparte, por dos razones. Primera, hacer posible la obtenci\u00f3n de la suma de verificaci\u00f3n del encabezado, pero no de los datos. Segunda, comprobar que el encabezado est\u00e9 correcto antes de comenzar a copiar los datos en el espacio de usuario. Es deseable calcular la suma de verificaci\u00f3n de los datos al mismo tiempo que\nSEC. 6.7\nRESUMEN\n573\nse copian los datos en el espacio de usuario, pero si el contenido del encabezado est\u00e1 equivocado, el copiado podr\u00eda hacerse a un proceso equivocado. Para evitar un copiado incorrecto pero permitir que se calcule la suma de verificaci\u00f3n de los datos durante el copiado, es esencial que las dos sumas de verificaci\u00f3n est\u00e9n separadas. El tama\u00f1o m\u00e1ximo de los datos debe ser lo bastante grande para permitir una operaci\u00f3n eficiente inclusive ante retardos largos. Tambi\u00e9n, cuanto mayor es el tama\u00f1o del bloque de datos, menor es la fracci\u00f3n del ancho de banda total dedicada a los encabezados. 1500 bytes es demasiado peque\u00f1o. Otra caracter\u00edstica valiosa es la capacidad de enviar una cantidad normal de datos junto con la solicitud de conexi\u00f3n. As\u00ed, puede ahorrarse el tiempo de un viaje de ida y vuelta. Por \u00faltimo, es importante decir algo sobre el software de los protocolos. Una idea clave es concentrarse en el caso exitoso. Muchos protocolos viejos tienden a remarcar lo que se debe hacer cuando algo falla (por ejemplo, cuando se pierde un paquete). Para lograr que los protocolos operen r\u00e1pidamente, el dise\u00f1ador deber\u00eda enfocarse en reducir al m\u00ednimo el tiempo de procesamiento cuando todo funciona bien. La reducci\u00f3n al m\u00ednimo del tiempo de procesamiento cuando ocurren errores es secundaria. Un segundo asunto relacionado con el software es la minimizaci\u00f3n del tiempo de copiado. Como vimos antes, el copiado de datos con frecuencia es la fuente principal de sobrecarga. Idealmente, el hardware debe poner en la memoria cada paquete entrante como un bloque contiguo de datos. El software entonces debe copiar este paquete en el b\u00fafer del usuario con un solo copiado de bloque. Dependiendo del modo de funcionamiento del cach\u00e9, inclusive puede ser deseable evitar un ciclo de copiado. En otras palabras, para copiar 1024 palabras, la manera m\u00e1s r\u00e1pida podr\u00eda ser la ejecuci\u00f3n de 1024 instrucciones MOVE una tras otra (o 1024 pares cargar-almacenar). La rutina de copiado es tan cr\u00edtica que debe desarrollarse cuidadosamente en c\u00f3digo ensamblador, a menos que haya una manera de lograr que el compilador produzca el c\u00f3digo \u00f3ptimo.\n6.7 RESUMEN La capa de transporte es la clave para entender los protocolos en capas. Esta capa proporciona varios servicios, siendo el m\u00e1s importante un flujo de bytes punto a punto, confiable y orientado a al conexi\u00f3n desde el emisor hasta el receptor. Se accede a ella a trav\u00e9s de primitivas de servicio que permiten establecer, usar y liberar conexiones. Una interfaz com\u00fan de la capa de transporte es la que proporcionan los sockets de Berkeley. Los protocolos de transporte deben ser capaces de administrar conexiones a trav\u00e9s de redes no confiables. El establecimiento de conexiones se complica por la existencia de paquetes duplicados retardados que pueden reaparecer en momentos inoportunos. Para manejarlos, se requieren acuerdos de tres v\u00edas para establecer las conexiones. La liberaci\u00f3n de una conexi\u00f3n es m\u00e1s sencilla que su establecimiento, pero aun as\u00ed no est\u00e1 exento de complejidad debido al problema de los dos ej\u00e9rcitos. Aun si la capa de red es completamente confiable, la capa de transporte tiene bastante trabajo: debe manejar todas las primitivas de servicio, administrar conexiones y temporizadores y asignar y usar cr\u00e9ditos.\n574\nLA CAPA DE TRANSPORTE\nCAP. 6\nInternet tiene dos protocolos de transporte principales: UDP y TCP. UDP es un protocolo no orientado a la conexi\u00f3n que es principalmente una envoltura para los paquetes IP con la caracter\u00edstica adicional de multiplexar y desmultiplexar diversos procesos utilizando una sola direcci\u00f3n IP. UDP puede emplearse para interacciones cliente-servidor, por ejemplo, utilizando RPC. Tambi\u00e9n puede emplearse para construir protocolos en tiempo real como RTP. El protocolo de transporte principal de Internet es TCP. Proporciona un flujo de bytes bidireccional y confiable. Utiliza un encabezado de 20 bytes en todos los segmentos. Los enrutadores de Internet pueden fragmentar los segmentos, por lo que los hosts deben estar preparados para reensamblarlos. Se ha invertido mucho trabajo en optimizar el desempe\u00f1o del TCP, mediante algoritmos de Nagle, Clark, Jacobson, Karn, entre otros. Los enlaces inal\u00e1mbricos agregan una variedad de complicaciones al TCP. El TCP para transacciones es una extensi\u00f3n del TCP que maneja las interacciones cliente-servidor con un n\u00famero reducido de paquetes. El desempe\u00f1o de las redes generalmente es dominado por la sobrecarga de procesamiento de los protocolos y las TPDUs, y esta situaci\u00f3n empeora a mayores velocidades. Los protocolos deber\u00edan dise\u00f1arse para reducir al m\u00ednimo la cantidad de TPDUs, de conmutaciones de contexto y de veces que se copia cada TPDU. En las redes de gigabits se requieren protocolos sencillos.\nPROBLEMAS 1. En nuestras primitivas de ejemplo de la figura 6-2, LISTEN es una llamada bloqueadora. \u00bfEs estrictamente necesario esto? De no serlo, explique c\u00f3mo debe usarse una primitiva no bloqueadora. \u00bfQu\u00e9 ventaja tendr\u00eda esto respecto al esquema descrito en el texto? 2. En el modelo de la figura 6-4, se supone que la capa de red puede perder paquetes y, por tanto, su recepci\u00f3n se debe confirmar individualmente. Suponga que la capa de red es 100% confiable y que nunca pierde paquetes. \u00bfQu\u00e9 cambios, si acaso, se necesitar\u00e1n en la figura 6-4? 3. En las dos partes de la figura 6-6 hay un comentario de que los valores de SERVER_PORT deben ser los mismos en el cliente y en el servidor. \u00bfPor qu\u00e9 es tan importante? 4. Suponga que el esquema operado por reloj para generar n\u00fameros de secuencia iniciales se usa con un contador de reloj de 15 bits de ancho. El reloj pulsa una vez cada 100 mseg, y el tiempo de vida m\u00e1ximo de un paquete es de 60 seg. \u00bfCon qu\u00e9 frecuencia ocurre la resincronizaci\u00f3n (a) en el peor caso? (b) cuando los datos consumen 240 n\u00fameros de secuencia/min? 5. \u00bfPor qu\u00e9 tiene que ser el tiempo de vida m\u00e1ximo de paquete, T, lo bastante grande para asegurar que han desaparecido no s\u00f3lo el paquete, sino tambi\u00e9n sus confirmaciones de recepci\u00f3n? 6. Imagine que se usa un acuerdo de dos v\u00edas en lugar de uno de tres v\u00edas para establecer las conexiones. En otras palabras, no se requiere el tercer mensaje. \u00bfSon posibles ahora los bloqueos irreversibles? D\u00e9 un ejemplo o demuestre que no pueden existir. 7. Imagine un problema de n-ej\u00e9rcitos generalizado, en el que el acuerdo de dos de los ej\u00e9rcitos azules es suficiente para la victoria. \u00bfExiste un protocolo que permita ganar a los azules?\nCAP. 6\nPROBLEMAS\n575\n8. Considere el problema de la recuperaci\u00f3n despu\u00e9s de una ca\u00edda del host (es decir, la figura 6-18). Si el intervalo entre la escritura y el env\u00edo de una confirmaci\u00f3n de recepci\u00f3n, o viceversa, puede hacerse relativamente peque\u00f1o, \u00bfcu\u00e1les son las mejores estrategias emisor-receptor para reducir al m\u00ednimo la posibilidad de una falla del protocolo? 9. \u00bfSon posibles los bloqueos irreversibles con la entidad de transporte descrita en el texto (figura 6-20)? 10. Por curiosidad, el implementador de la entidad de transporte de la figura 6-20 ha decidido incluir contadores en el procedimiento sleep para obtener estad\u00edsticas sobre el arreglo conn. Entre \u00e9stas est\u00e1n la cantidad de conexiones en cada uno de los siete estados posibles, ni (i = 1,..., 7). Tras escribir un enorme programa en FORTRAN para analizar los datos, nuestro implementador descubri\u00f3 que la relaci\u00f3n \u03a3ni = MAX_CONN parece ser verdadera siempre. \u00bfHay otras invariantes en las que intervengan s\u00f3lo estas siete variables? 11. \u00bfQu\u00e9 ocurre cuando el usuario de la entidad de transporte dada en la figura 6-20 env\u00eda un mensaje de longitud cero? Explique el significado de su respuesta. 12. Por cada evento que puede ocurrir en la entidad de transporte de la figura 6-20, indique si es legal o no cuando el usuario est\u00e1 durmiendo en el estado sending. 13. Explique las ventajas y desventajas de los cr\u00e9ditos en comparaci\u00f3n con los protocolos de ventana corrediza. 14. \u00bfPor qu\u00e9 existe el UDP? \u00bfNo habr\u00eda bastado con permitir que los procesos de usuario enviaran paquetes IP en bruto? 15. Considere un protocolo de nivel de aplicaci\u00f3n simple construido encima de UDP que permite a un cliente recuperar un archivo desde un servidor remoto que reside en una direcci\u00f3n bien conocida. El cliente primero env\u00eda una solicitud con el nombre del archivo, y el servidor responde con una secuencia de paquetes de datos que contienen diferentes partes del archivo solicitado. Para asegurar la confiabilidad y una entrega en secuencia, el cliente y el servidor utilizan un protocolo de parada y espera. Ignorando el aspecto de desempe\u00f1o obvio, \u00bfve usted un problema con este protocolo? Piense cuidadosamente en la posibilidad de la ca\u00edda de los procesos. 16. Un cliente env\u00eda una solicitud de 128 bytes a un servidor localizado a 100 km de distancia a trav\u00e9s de una fibra \u00f3ptica de 1 gigabit. \u00bfCu\u00e1l es la eficiencia de la l\u00ednea durante la llamada a procedimiento remoto? 17. Considere nuevamente la situaci\u00f3n del problema anterior. Calcule el tiempo de respuesta m\u00ednimo posible para la l\u00ednea de 1 Gbps y para una de 1 Mbps. \u00bfQu\u00e9 conclusi\u00f3n puede obtener? 18. Tanto UDP como TCP utilizan n\u00fameros de puerto para identificar la entidad de destino cuando entregan un paquete. D\u00e9 dos razones por las cuales estos protocolos inventaron un nuevo ID abstracto (n\u00fameros de puerto), en lugar de utilizar IDs de proceso, que ya exist\u00edan cuando se dise\u00f1aron estos protocolos. 19. \u00bfCu\u00e1l es el tama\u00f1o total de la MTU m\u00ednima de TCP, incluyendo la sobrecarga de TCP e IP pero no la de la capa de enlace de datos? 20. La fragmentaci\u00f3n y el reensamble de datagramas son manejados por IP y son transparentes para TCP. \u00bfEsto significa que TCP no tiene que preocuparse porque los datos lleguen en el orden equivocado?\n576\nLA CAPA DE TRANSPORTE\nCAP. 6\n21. RTP se utiliza para transmitir audio con calidad de CD, el cual crea un par de muestras de 16 bits, 44,100 veces/seg, una muestra por cada uno de los canales de est\u00e9reo. \u00bfCu\u00e1ntos paquetes por segundo debe transmitir RTP? 22. \u00bfSer\u00eda posible colocar el c\u00f3digo RTP en el kernel del sistema operativo junto con el c\u00f3digo UDP? Explique su respuesta. 23. Un proceso del host 1 se ha asignado al puerto p, y un proceso del host 2 se ha asignado al puerto q. \u00bfEs posible que haya dos o m\u00e1s conexiones TCP entre estos dos puertos al mismo tiempo? 24. En la figura 6-29 vimos que adem\u00e1s del campo Confirmaci\u00f3n de recepci\u00f3n de 32 bits, hay un bit ACK en la cuarta palabra. \u00bfEsto agrega realmente algo? \u00bfPor qu\u00e9 s\u00ed o por qu\u00e9 no? 25. La m\u00e1xima carga \u00fatil de un segmento TCP son 65,495 bytes. \u00bfPor qu\u00e9 se eligi\u00f3 ese extra\u00f1o n\u00famero? 26. Describa dos formas de entrar en el estado SYN RCVD de la figura 6-33. 27. Indique una desventaja potencial del uso del algoritmo de Nagle en una red muy congestionada. 28. Considere el efecto de usar arranque lento en una l\u00ednea con un tiempo de ida y vuelta de 10 mseg sin congestionamientos. La ventana receptora es de 24 KB y el tama\u00f1o m\u00e1ximo de segmento es de 2 KB. \u00bfCu\u00e1nto tiempo pasar\u00e1 antes de poder enviar la primera ventana completa? 29. Suponga que la ventana de congestionamiento del TCP est\u00e1 ajustada a 18 KB y que ocurre una expiraci\u00f3n del temporizador. \u00bfQu\u00e9 tan grande ser\u00e1 la ventana si las siguientes cuatro r\u00e1fagas de transmisiones tienen \u00e9xito? Suponga que el tama\u00f1o m\u00e1ximo de segmento es de 1 KB. 30. Si el tiempo de ida y vuelta del TCP, RTT, actualmente es de 30 mseg y las siguientes confirmaciones de recepci\u00f3n llegan despu\u00e9s de 26, 32 y 24 mseg, respectivamente, \u00bfcu\u00e1l es la nueva estimaci\u00f3n de RTT utilizando el algoritmo de Jacobson? Use \u03b1 = 0.9. 31. Una m\u00e1quina TCP env\u00eda ventanas de 65,535 bytes por un canal de 1 Gbps que tiene un retardo de 10 mseg en un solo sentido. \u00bfCu\u00e1l es la velocidad real de transporte m\u00e1xima que se puede lograr? \u00bfCu\u00e1l es la eficiencia de la l\u00ednea? 32. \u00bfCu\u00e1l es la velocidad m\u00e1xima de l\u00ednea a la que un host puede enviar cargas \u00fatiles TCP de 1500 bytes con un tiempo de vida m\u00e1ximo de paquete de 120 seg sin que los n\u00fameros de secuencia den vuelta? Tome en cuenta la sobrecarga TCP, IP y Ethernet. Suponga que las tramas Ethernet se pueden enviar de manera continua. 33. En una red que tiene un tama\u00f1o m\u00e1ximo de TPDU de 128 bytes, un tiempo de vida m\u00e1ximo de TPDU de 30 seg, y un n\u00famero de secuencia de 8 bits, \u00bfcu\u00e1l es la tasa m\u00e1xima de datos por conexi\u00f3n? 34. Suponga que usted est\u00e1 midiendo el tiempo para recibir una TPDU. Cuando ocurre una interrupci\u00f3n, lee el reloj del sistema en milisegundos. Cuando la TPDU se ha procesado por completo, lee nuevamente el reloj. Mide 0 mseg 270,000 veces y 1 mseg 730,000 veces. \u00bfCu\u00e1nto tarda en recibir una TPDU? 35. Una CPU ejecuta instrucciones a la tasa de 1000 MIPS. Los datos pueden copiarse 64 bits a la vez, y cada palabra toma diez instrucciones para copiarse. Si un paquete entrante tiene que copiarse cuatro veces, \u00bfpuede este sistema manejar una l\u00ednea de 1 Gbps? Por simplicidad, suponga que todas las instrucciones, incluso aquellas que leen o escriben en la memoria, se ejecutan a la tasa total de 1000 MIPS.\nCAP. 6\nPROBLEMAS\n577\n36. Para resolver el problema de los n\u00fameros de secuencia repetidos mientras que los paquetes anteriores a\u00fan existen, se podr\u00edan utilizar n\u00fameros de secuencia de 64 bits. Sin embargo, te\u00f3ricamente, una fibra \u00f3ptica puede ejecutarse a 75 Tbps. \u00bfCu\u00e1l es el tiempo de vida m\u00e1ximo de paquete que se requiere para asegurarse de que las futuras redes de 75 Tbps no tengan problemas de n\u00fameros de secuencia que den vuelta incluso con los n\u00fameros de secuencia de 64 bits? Suponga que cada byte tiene su propio n\u00famero de secuencia, al igual que TCP. 37. Mencione una ventaja de RPC sobre UDP en comparaci\u00f3n con el TCP para transacciones. Mencione una ventaja del T/TCP sobre RPC. 38. En la figura 6-40(a) vimos que para completar el RCP se necesitan 9 paquetes. \u00bfHay alguna circunstancia en la que se necesiten exactamente 10 paquetes? 39. En la secci\u00f3n 6.6.5 calculamos que una l\u00ednea de gigabits descarga 80,000 paquetes/seg en el host, y \u00e9ste dispone de s\u00f3lo 6250 instrucciones para procesarlos, lo que deja la mitad del tiempo de CPU para las aplicaciones. Para este c\u00e1lculo se tom\u00f3 un tama\u00f1o de paquete de 1500 bytes. Rehaga el c\u00e1lculo para un paquete de tama\u00f1o ARPANET (128 bytes). En ambos casos, suponga que los tama\u00f1os de paquete dados incluyen toda la sobrecarga. 40. Para una red de 1 Gbps que opera sobre 4000 km, el retardo es el factor limitante, no el ancho de banda. Considere una MAN con un promedio de 20 km entre el origen y el destino. \u00bfA qu\u00e9 tasa de datos el retardo de ida y vuelta debido a la velocidad de la luz iguala el retardo de transmisi\u00f3n para un paquete de 1 KB? 41. Calcule el producto de retardo de ancho de banda para las siguientes redes: (1) T1 (1.5 Mbps), (2) Ethernet (10 Mbps), (3) T3 (45 Mbps) y (4) STS-3 (155 Mbps). Suponga un RTT de 100 mseg. Recuerde que un encabezado TCP tiene 16 bits reservados para el tama\u00f1o de ventana. \u00bfCu\u00e1les son sus implicaciones a la luz de sus c\u00e1lculos? 42. \u00bfCu\u00e1l es el producto de retardo de ancho de banda para un canal de 50 Mbps en un sat\u00e9lite geoestacionario? Si todos los paquetes son de 1500 bytes (incluyendo la sobrecarga), \u00bfqu\u00e9 tan grande deber\u00eda ser la ventana en los paquetes? 43. El servidor de archivos de la figura 6-6 est\u00e1 muy lejos de ser perfecto y se le pueden hacer algunas mejoras. Realice las siguientes modificaciones. (a) D\u00e9 al cliente un tercer argumento que especifique un rango de bytes. (b) Agregue un indicador\u2013w al cliente que permita que el archivo se escriba en el servidor. 44. Modifique el programa de la figura 6-20 para que realice recuperaci\u00f3n de errores. Agregue un nuevo tipo de paquetes, reset, que pueda llegar despu\u00e9s de que los dos lados abran una conexi\u00f3n pero que ninguno la cierre. Este evento, que sucede de manera simult\u00e1nea en ambos lados de la conexi\u00f3n, significa que cualquier paquete que estuviera en tr\u00e1nsito se ha entregado o destruido, pero de cualquier modo ya no est\u00e1 en la subred. 45. Escriba un programa que simule manejo de b\u00fafer en una entidad de transporte, utilizando una ventana corrediza para el control de flujo en lugar del sistema de cr\u00e9ditos de la figura 6-20. Deje que los procesos de las capas superiores abran conexiones, env\u00eden datos y cierren las conexiones de manera aleatoria. Por sencillez, haga que los datos viajen s\u00f3lo de la m\u00e1quina A a la m\u00e1quina B. Experimente con estrategias de asignaci\u00f3n de b\u00fafer diferentes en B, como dedicar b\u00faferes a conexiones espec\u00edficas y establecer un grupo de b\u00faferes com\u00fan, y mida el rendimiento total alcanzado por cada estrategia.\n578\nLA CAPA DE TRANSPORTE\nCAP. 6\n46. Dise\u00f1e e implemente un sistema de salones de conversaci\u00f3n que permita conversar a m\u00faltiples grupos de usuarios. Un coordinador del sal\u00f3n reside en una direcci\u00f3n bien conocida de red, utiliza UDP para comunicarse con los clientes del sal\u00f3n, configura los servidores del sal\u00f3n para cada sesi\u00f3n de conversaci\u00f3n y mantiene un directorio de sesiones de conversaci\u00f3n. Hay un servidor de conversaci\u00f3n por sesi\u00f3n. Un servidor de este tipo utiliza TCP para comunicarse con los clientes. Un cliente de conversaci\u00f3n permite que los usuarios inicien, se unan y dejen una sesi\u00f3n de conversaci\u00f3n. Dise\u00f1e e implemente el c\u00f3digo del coordinador, del servidor y del cliente.\n7 LA CAPA DE APLICACI\u00d3N\nHabiendo concluido todos los preliminares, ahora llegamos a la capa de aplicaci\u00f3n, donde pueden encontrarse todas las aplicaciones interesantes. Las capas por debajo de la de aplicaci\u00f3n est\u00e1n ah\u00ed para proporcionar transporte confiable, pero no hacen ning\u00fan trabajo verdadero para los usuarios. En este cap\u00edtulo estudiaremos algunas aplicaciones de red reales. Sin embargo, aun en la capa de aplicaci\u00f3n se necesitan protocolos de apoyo que permitan el funcionamiento de las aplicaciones reales. De manera acorde, veremos uno de \u00e9stos antes de que comencemos con las aplicaciones mismas. El sujeto en cuesti\u00f3n es el DNS, que maneja la asignaci\u00f3n de nombres dentro de Internet. Despu\u00e9s examinaremos tres aplicaciones reales: correo electr\u00f3nico, World Wide Web y, finalmente, multimedia.\n7.1 DNS\u2014EL SISTEMA DE NOMBRES DE DOMINIO Aunque en teor\u00eda los programas pueden hacer referencia a hosts, buzones de correo y otros recursos mediante sus direcciones de red (por ejemplo, IP), a las personas se les dificulta recordar estas direcciones. Adem\u00e1s, enviar correo electr\u00f3nico a\n[[email protected]](/cdn-cgi/l/email-protection)\nsignifica que si el ISP u organizaci\u00f3n de Tana mueve el servidor de correo electr\u00f3nico a una m\u00e1quina diferente, la cual tiene una direcci\u00f3n IP diferente, la direcci\u00f3n de correo electr\u00f3nico de Tana tiene que cambiar. Debido a esto, se introdujeron los nombres ASCII, con el fin de separar los nombres de m\u00e1quina de las direcciones de m\u00e1quina. De esta manera, la direcci\u00f3n de Tana podr\u00eda ser algo como tana@art. ucsb.edu. Sin embargo, la red misma s\u00f3lo comprende direcciones num\u00e9ricas, por lo que se requieren algunos mecanismos para convertir las cadenas ASCII a direcciones de red. En las siguientes secciones analizaremos la forma en que se logra esta correspondencia en Internet. 579\n580\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nHace mucho, en los tiempos de ARPANET, s\u00f3lo hab\u00eda un archivo, hosts.txt, en el que se listaban todos los hosts y sus direcciones IP. Cada noche, todos los hosts obten\u00edan este archivo del sitio en el que se manten\u00eda. En una red conformada por unas cuantas m\u00e1quinas grandes de tiempo compartido, este m\u00e9todo funcionaba razonablemente bien. Sin embargo, cuando miles de estaciones de trabajo se conectaron a la red, todos se dieron cuenta de que este m\u00e9todo no podr\u00eda funcionar eternamente. Por una parte, el tama\u00f1o del archivo crecer\u00eda de manera considerable. Un problema a\u00fan m\u00e1s importante era que ocurrir\u00edan conflictos constantes con los nombres de los hosts a menos de que dichos nombres se administraran centralmente, algo impensable en una red internacional enorme. Para resolver estos problemas, se invent\u00f3 el DNS (Sistema de Nombres de Dominio). La esencia del DNS es la invenci\u00f3n de un esquema de nombres jer\u00e1rquico basado en dominios y un sistema de base de datos distribuido para implementar este esquema de nombres. El DNS se usa principalmente para relacionar los nombres de host y destinos de correo electr\u00f3nico con las direcciones IP, pero tambi\u00e9n puede usarse con otros fines. El DNS se define en los RFCs 1034 y 1035. Muy brevemente, la forma en que se utiliza el DNS es la siguiente. Para relacionar un nombre con una direcci\u00f3n IP, un programa de aplicaci\u00f3n llama a un procedimiento de biblioteca llamado resolvedor, y le pasa el nombre como par\u00e1metro. En la figura 6.6 vimos un ejemplo de un resolvedor, gethostbyname. El resolvedor env\u00eda un paquete UDP a un servidor DNS local, que despu\u00e9s busca el nombre y devuelve la direcci\u00f3n IP al resolvedor, que entonces lo devuelve al solicitante. Una vez que tiene la direcci\u00f3n IP, el programa puede establecer una conexi\u00f3n TCP con el destino, o enviarle paquetes UDP.\n7.1.1 El espacio de nombres del DNS La administraci\u00f3n de un grupo grande y continuamente cambiante de nombres es un problema nada sencillo. En el sistema postal, la administraci\u00f3n de nombres se hace requiriendo letras para especificar (impl\u00edcita o expl\u00edcitamente) el pa\u00eds, estado o provincia, ciudad y calle, y direcci\u00f3n del destinatario. Con este tipo de direccionamiento jer\u00e1rquico, no hay confusi\u00f3n entre el Marvin Anderson de Main St., en White Plains, N.Y. y el Marvin Anderson de Main St., en Austin, Texas. El DNS funciona de la misma manera. Conceptualmente, Internet se divide en 200 dominios de nivel superior, cada uno de los cuales abarca muchos hosts. Cada dominio se divide en subdominios, los cuales, a su vez, tambi\u00e9n se dividen, y as\u00ed sucesivamente. Todos estos dominios pueden representarse mediante un \u00e1rbol, como se muestra en la figura 7-1. Las hojas del \u00e1rbol representan los dominios que no tienen subdominios (pero que, por supuesto, contienen m\u00e1quinas). Un dominio de hoja puede contener un solo host, o puede representar a una compa\u00f1\u00eda y contener miles de hosts. Los dominios de nivel superior se dividen en dos categor\u00edas: gen\u00e9ricos y de pa\u00eds. Los dominios gen\u00e9ricos originales son com (comercial), edu (instituciones educativas), gov (el gobierno federal de Estados Unidos), int (ciertas organizaciones internacionales), mil (las fuerzas armadas de Estados Unidos), net (proveedores de red) y org (organizaciones no lucrativas). Los dominios de pa\u00eds incluyen una entrada para cada pa\u00eds, como se define en la ISO 3166.\nSEC. 7.1\nDNS\u2014EL SISTEMA DE NOMBRES DE DOMINIO Gen\u00e9rico\n581\nDe pa\u00eds\nFigura 7-1. Parte del espacio de nombres de dominio de Internet.\nEn noviembre de 2000, ICANN aprob\u00f3 cuatro nuevos dominios de nivel superior y prop\u00f3sito general: biz (negocios), info (informaci\u00f3n), name (nombres de personas) y pro (profesiones, como doctores y abogados). Adem\u00e1s, se introdujeron otros tres nombres de dominio especializados de nivel superior a solicitud de ciertas industrias. \u00c9stos son: aero (industria aeroespacial), coop (cooperativas) y museum (museos). En el futuro se agregar\u00e1n otros dominios de nivel superior. Como nota al margen, conforme Internet se vuelva m\u00e1s comercial, tambi\u00e9n se volver\u00e1 m\u00e1s contenciosa. Por ejemplo, considere a pro. Estaba destinado para los profesionales certificados, pero, \u00bfqui\u00e9n es un profesional? y, \u00bfcertificado por qui\u00e9n? Los doctores y abogados claramente son profesionales, pero, \u00bfqu\u00e9 pasa con los fot\u00f3grafos independientes, maestros de piano, magos, plomeros, barberos, exterminadores, artistas de tatuajes, soldados y prostitutas? \u00bfEstas ocupaciones son profesionales y, por lo tanto, candidatos a los dominios pro? De ser as\u00ed, \u00bfqui\u00e9n certifica a los practicantes individuales? En general, obtener un dominio de segundo nivel, como nombre-de-compa\u00f1\u00eda.com, es f\u00e1cil. Simplemente se necesita ir con el registrador del dominio de nivel superior correspondiente (com, en este caso) para ver si el nombre deseado est\u00e1 disponible y si no es la marca registrada de alguien m\u00e1s. Si no hay problemas, el solicitante paga una peque\u00f1a cuota anual y obtiene el nombre. En la actualidad, casi todas las palabras comunes (en ingl\u00e9s) ya se han tomado en el dominio com. Pruebe con art\u00edculos del hogar, animales, plantas, partes del cuerpo, etc\u00e9tera. Hay muy pocos disponibles. Cada dominio se nombra por la ruta hacia arriba desde \u00e9l a la ra\u00edz (sin nombre). Los componentes se separan con puntos. Por lo tanto, el departamento de ingenier\u00eda de Sun Microsystems podr\u00eda utilizar eng.sun.com., en lugar de un nombre tipo UNIX como /com/sun/eng. Observe que esta asignaci\u00f3n jer\u00e1rquica significa que eng.sun.com. no entra en conflicto con un uso potencial de eng \u2014por ejemplo, eng.yale.edu., que podr\u00eda usarse en el departamento de ingl\u00e9s de Yale. Los nombres de dominio pueden ser absolutos o relativos. Un nombre de dominio absoluto termina con un punto (por ejemplo, eng.sun.com.), y uno relativo no. Los nombres relativos tienen que interpretarse en alg\u00fan contexto para determinar de manera \u00fanica su significado verdadero. En\n582\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nambos casos, un dominio nombrado hace referencia a un nodo espec\u00edfico del \u00e1rbol y a todos los nodos por debajo de \u00e9l. Los nombres de dominio no hacen distinci\u00f3n entre may\u00fasculas y min\u00fasculas, por lo que edu, Edu y EDU significan lo mismo. Los nombres de componentes pueden ser de hasta 63 caracteres de longitud, y los de ruta completa de hasta 255 caracteres. En principio, los dominios pueden introducirse en el \u00e1rbol de dos maneras diferentes. Por ejemplo, cs.yale.edu tambi\u00e9n podr\u00eda estar listado bajo el dominio de pa\u00eds us como cs.yale.ct.us. Sin embargo, en la pr\u00e1ctica, casi todas las organizaciones de Estados Unidos est\u00e1n bajo un dominio gen\u00e9rico, y casi todas las de fuera de Estados Unidos est\u00e1n bajo el dominio de su pa\u00eds. No hay ninguna regla que impida registrarse bajo dos dominios de nivel superior, pero pocas organizaciones lo hacen, excepto las multinacionales (por ejemplo, sony.com y sony.nl). Cada dominio controla c\u00f3mo se asignan los dominios que est\u00e1n debajo de \u00e9l. Por ejemplo, Jap\u00f3n tiene los dominios ac.jp y co.jp que son espejos de edu y com. Los Pa\u00edses Bajos no hacen esta distinci\u00f3n y ponen a todas las organizaciones directamente bajo nl. Por lo tanto, los siguientes tres son departamentos universitarios de inform\u00e1tica: 1. cs.yale.edu (Universidad de Yale, en Estados Unidos) 2. cs.vu.nl (Vrije Universiteit, en los Pa\u00edses Bajos) 3. cs.keio.ac.jp (Universidad Keio, en Jap\u00f3n) Para crear un nuevo dominio, se requiere el permiso del dominio en el que se incluir\u00e1. Por ejemplo, si se inicia un grupo VLSI en Yale y quiere que se le conozca como vlsi.cs.yale.edu, requiere permiso de quien administra cs.yale.edu. De la misma manera, si se crea una universidad nueva, digamos la Universidad del Norte de Dakota del Sur, debe solicitar al administrador del dominio edu que le asigne unsd.edu. De esta manera se evitan los conflictos de nombres y cada dominio puede llevar el registro de todos sus subdominios. Una vez que se ha creado y registrado un nuevo dominio puede crear subdominios, como cs.unsd.edu, sin obtener el permiso de nadie m\u00e1s arriba en el \u00e1rbol. Los nombres reflejan los l\u00edmites organizacionales, no las redes f\u00edsicas. Por ejemplo, si los departamentos de inform\u00e1tica e ingenier\u00eda el\u00e9ctrica se ubican en el mismo edificio y comparten la misma LAN, de todas maneras pueden tener dominios diferentes. De manera similar, si el departamento de inform\u00e1tica est\u00e1 dividido entre el edificio Babbage y el edificio Turing, todos los hosts de ambos edificios pertenecer\u00e1n, normalmente, al mismo dominio.\n7.1.2 Registros de recursos Cada dominio, sea un host individual o un dominio de nivel superior, puede tener un grupo de registros de recursos asociados a \u00e9l. En un host individual, el registro de recursos m\u00e1s com\u00fan es simplemente su direcci\u00f3n IP, pero tambi\u00e9n existen muchos otros tipos de registros de recursos. Cuando un resolvedor da un nombre de dominio al DNS, lo que recibe son los registros de\nSEC. 7.1\nDNS\u2014EL SISTEMA DE NOMBRES DE DOMINIO\n583\nrecursos asociados a ese nombre. Por lo tanto, la funci\u00f3n real del DNS es relacionar los dominios de nombres con los registros de recursos. Un registro de recursos tiene cinco tuplas. Aunque \u00e9stas se codifican en binario por cuesti\u00f3n de eficiencia, en la mayor\u00eda de las presentaciones, los registros de recursos se dan como texto ASCII, una l\u00ednea por registro de recursos. El formato que usaremos es el siguiente: Nombre_dominio Tiempo_de_vida Clase Tipo Valor\nEl Nombre_dominio indica el dominio al que pertenece este registro. Por lo general, existen muchos registros por dominio y cada copia de la base de datos contiene informaci\u00f3n de muchos dominios. Por lo tanto, este campo es la clave primaria de b\u00fasqueda usada para atender las consultas. El orden de los registros de la base de datos no es significativo. El campo de Tiempo_de_vida es una indicaci\u00f3n de la estabilidad del registro. La informaci\u00f3n altamente estable recibe un valor grande, como 86,400 (la cantidad de segundos en un d\u00eda). La informaci\u00f3n altamente vol\u00e1til recibe un valor peque\u00f1o, como 60 (1 minuto). Regresaremos a este punto despu\u00e9s de haber estudiado el almacenamiento en cach\u00e9. El tercer campo de cada registro de recursos es Class. Para la informaci\u00f3n de Internet, siempre es IN. Para informaci\u00f3n que no es de Internet, se pueden utilizar otros c\u00f3digos, pero en la pr\u00e1ctica, \u00e9stos raramente se ven. El campo Tipo indica el tipo de registro de que se trata. En la figura 7-2 se listan los tipos m\u00e1s importantes. Tipo SOA\nSignificado\nValor\nInicio de autoridad\nPar\u00e1metros para esta zona\nA\nDirecci\u00f3n IP de un host\nEntero de 32 bits\nMX\nIntercambio de correo\nPrioridad, dominio dispuesto a aceptar correo electr\u00f3nico\nNS\nServidor de nombres\nNombre de un servidor para este dominio\nCNAME\nNombre can\u00f3nico\nNombre de dominio\nPTR\nApuntador\nAlias de una direcci\u00f3n IP\nHINFO\nDescripci\u00f3n del host\nCPU y SO en ASCII\nTXT\nTexto\nTexto ASCII no interpretado\nFigura 7-2. Principales tipos de registro de recursos DNS.\nUn registro SOA proporciona el nombre de la fuente primaria de informaci\u00f3n sobre la zona del servidor de nombres (que se describe m\u00e1s adelante), la direcci\u00f3n de correo electr\u00f3nico de su administrador, un n\u00famero de serie \u00fanico y varias banderas y temporizadores. El tipo de registro m\u00e1s importante es el registro A (direcci\u00f3n) que contiene una direcci\u00f3n IP de 32 bits de alg\u00fan host. Cada host de Internet debe tener cuando menos una direcci\u00f3n IP, para que otras m\u00e1quinas puedan comunicarse con \u00e9l. Algunos hosts tienen dos o m\u00e1s conexiones de red, en cuyo caso tendr\u00e1n un registro de recursos tipo A por cada conexi\u00f3n de red (y, por lo tanto, por\n584\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\ncada direcci\u00f3n IP). DNS se puede configurar para iterar a trav\u00e9s de \u00e9stos, regresando el primer registro en la primera solicitud, el segundo registro en la segunda solicitud, y as\u00ed sucesivamente. El siguiente tipo de registro m\u00e1s importante es MX, que especifica el nombre del dominio que est\u00e1 preparado para aceptar correo electr\u00f3nico del dominio especificado. Se utiliza porque no todas las m\u00e1quinas est\u00e1n preparadas para aceptar correo electr\u00f3nico. Si alguien desea enviar correo electr\u00f3nico a, por ejemplo,\n[[email protected]](/cdn-cgi/l/email-protection)\n, el host emisor necesita encontrar un servidor de correo en microsoft.com que est\u00e9 dispuesto a aceptar correo electr\u00f3nico. El registro MX puede proporcionar esta informaci\u00f3n. Los registros NS especifican servidores de nombres. Por ejemplo, cada base de datos DNS normalmente tiene un registro NS por cada dominio de nivel superior, de modo que el correo electr\u00f3nico pueda enviarse a partes alejadas del \u00e1rbol de nombres. Regresaremos a este punto m\u00e1s adelante. Los registros CNAME permiten la creaci\u00f3n de alias. Por ejemplo, una persona familiarizada con los nombres de Internet en general que quiere enviar un mensaje a alguien cuyo nombre de inicio de sesi\u00f3n es paul y que est\u00e1 en el departamento de inform\u00e1tica del M.I.T., podr\u00eda suponer que\n[[email protected]](/cdn-cgi/l/email-protection)\nfuncionar\u00e1. De hecho, esta direcci\u00f3n no funcionar\u00e1, puesto que el dominio del departamento de inform\u00e1tica del M.I.T. es lcs.mit.edu. Sin embargo, como servicio para la gente que no sabe esto, el M.I.T. podr\u00eda crear una entrada CNAME para encaminar a la gente y a los programas en la direcci\u00f3n correcta. La entrada podr\u00eda ser como la siguiente: cs.mit.edu 86400 IN CNAME lcs.mit.edu\nAl igual que CNAME, PTR apunta a otro nombre. Sin embargo, a diferencia de CNAME, que en realidad es s\u00f3lo una definici\u00f3n de macro, PTR es un tipo de datos DNS normal, cuya interpretaci\u00f3n depende del contexto en el que se encontr\u00f3. En la pr\u00e1ctica, PTR casi siempre se usa para asociar un nombre a una direcci\u00f3n IP a fin de permitir b\u00fasquedas de la direcci\u00f3n IP y devolver el nombre de la m\u00e1quina correspondiente. \u00c9stas se llaman b\u00fasquedas invertidas. Los registros HINFO permiten que la gente conozca el tipo de m\u00e1quina y sistema operativo al que corresponde un dominio. Por \u00faltimo, los registros TXT permiten a los dominios identificarse de modos arbitrarios. Ambos tipos de registro son para el provecho de los usuarios. Ninguno es obligatorio, por lo que los programas no pueden contar con que los recibir\u00e1n (y probablemente no puedan manejarlos si los obtienen). Por \u00faltimo, llegamos al campo Valor. Este campo puede ser un n\u00famero, un nombre de dominio o una cadena ASCII. La sem\u00e1ntica depende del tipo de registro. En la figura 7-2 se presenta una descripci\u00f3n corta de los campos de Valor para cada uno de los tipos principales de registro. Como ejemplo del tipo de informaci\u00f3n que podr\u00eda encontrarse en la base de datos DNS de un dominio, vea la figura 7-3. En \u00e9sta se ilustra una parte de una base de datos (semihipot\u00e9tica) correspondiente al dominio cs.vu.nl mostrado en la figura 7-1. La base de datos contiene siete tipos de registros de recursos. La primera l\u00ednea no de comentario de la figura 7-3 da un poco de informaci\u00f3n b\u00e1sica sobre el dominio, de lo que ya no nos ocuparemos. Las siguientes dos l\u00edneas dan informaci\u00f3n textual\nSEC. 7.1\nDNS\u2014EL SISTEMA DE NOMBRES DE DOMINIO\n585\n;Datos autorizados correspondientes a cs.vu.nl cs.vu.nl. 86400 IN SOA star boss (9527,7200,7200,241920,86400) cs.vu.nl. 86400 IN TXT \u201cDivisie Wiskunde en Informatica.\u201d cs.vu.nl. 86400 IN TXT \u201cVrije Universiteit Amsterdam.\u201d cs.vu.nl. 86400 IN MX 1 zephyr.cs.vu.nl. cs.vu.nl. 86400 IN MX 2 top.cs.vu.nl. flits.cs.vu.nl. flits.cs.vu.nl. flits.cs.vu.nl. flits.cs.vu.nl. flits.cs.vu.nl. flits.cs.vu.nl. www.cs.vu.nl. ftp.cs.vu.nl.\n86400 86400 86400 86400 86400 86400 86400 86400\nIN IN IN IN IN IN IN IN\nHINFO A A MX MX MX CNAME CNAME\nSun Unix 130.37.16.112 192.31.231.165 1 flits.cs.vu.nl. 2 zephyr.cs.vu.nl. 3 top.cs.vu.nl. star.cs.vu.nl zephyr.cs.vu.nl\nrowboat\nIN IN IN IN\nA MX MX HINFO\n130.37.56.201 1 rowboat 2 zephyr Sun Unix\nlittle-sister\nIN IN\nA HINFO\n130.37.62.23 Mac MacOS\nlaserjet\nIN IN\nA HINFO\n192.31.231.216 \u201cHP Laserjet IIISi\u201d Proprietary\nFigura 7-3. Parte de una posible base de datos DNS para cs.vu.nl.\nsobre la localizaci\u00f3n del dominio. Luego est\u00e1n dos entradas que dan el primer y segundo lugar a donde se intentar\u00e1 entregar correo electr\u00f3nico dirigido a\n[[email protected]](/cdn-cgi/l/email-protection)\n. Primero se intentar\u00e1 en la zephyr (una m\u00e1quina espec\u00edfica). Si falla, a continuaci\u00f3n se intentar\u00e1 en la top. Despu\u00e9s de la l\u00ednea en blanco, que se agreg\u00f3 para hacer m\u00e1s clara la lectura, siguen l\u00edneas que indican que la flits es una estaci\u00f3n de trabajo Sun que ejecuta UNIX, y dan sus dos direcciones IP. Despu\u00e9s se indican tres posibilidades para manejar el correo electr\u00f3nico enviado a flits.cs.vu.nl. La primera opci\u00f3n naturalmente es la flits misma, pero si est\u00e1 inactiva, la zephyr y la top son la segunda y tercera opciones, respectivamente. Luego viene un alias, www.cs.vu.nl, para que esta direcci\u00f3n pueda usarse sin designar una m\u00e1quina espec\u00edfica. La creaci\u00f3n de este alias permite a cs.vu.nl cambiar su servidor Web sin invalidar la direcci\u00f3n que la gente usa para llegar a \u00e9l. Un argumento similar es v\u00e1lido para ftp.cs.vu.nl. Las siguientes cuatro l\u00edneas contienen una entrada t\u00edpica de una estaci\u00f3n de trabajo, en este caso, rowboat.cs.vu.nl. La informaci\u00f3n proporcionada contiene la direcci\u00f3n IP, los destinos de correo primarios y secundarios, as\u00ed como informaci\u00f3n sobre la m\u00e1quina. Luego viene una entrada para un sistema no UNIX incapaz de recibir correo por s\u00ed mismo, seguida de una entrada para una impresora l\u00e1ser que est\u00e1 conectada a Internet.\n586\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nLo que no se muestra (y no est\u00e1 en este archivo) son las direcciones IP a usar para buscar los dominios de nivel superior. \u00c9stas son necesarias para buscar hosts distantes pero, dado que no son parte del dominio cs.vu.nl, no est\u00e1n en este archivo. Tales direcciones son suministradas por los servidores ra\u00edz, cuyas direcciones IP est\u00e1n presentes en un archivo de configuraci\u00f3n del sistema y se cargan en el cach\u00e9 del DNS cuando se arranca el servidor DNS. Hay aproximadamente una docena de servidores ra\u00edz esparcidos en todo el mundo, y cada uno conoce las direcciones IP de todos los servidores de dominio de nivel superior. Por lo tanto, si una m\u00e1quina conoce la direcci\u00f3n IP de por lo menos un servidor ra\u00edz, puede buscar cualquier nombre DNS.\n7.1.3 Servidores de nombres Cuando menos en teor\u00eda, un solo servidor de nombres podr\u00eda contener toda la base de datos DNS y responder a todas las consultas dirigidas a ella. En la pr\u00e1ctica, este servidor estar\u00eda tan sobrecargado que ser\u00eda inservible. M\u00e1s a\u00fan, si llegara a caerse, la Internet completa se vendr\u00eda abajo. Para evitar los problemas asociados a tener una sola fuente de informaci\u00f3n, el espacio de nombres DNS se divide en zonas no traslapantes. En la figura 7-4 se muestra una manera posible de dividir el espacio de nombres de la figura 7-1. Cada zona contiene una parte del \u00e1rbol y tambi\u00e9n contiene servidores de nombres que tienen la informaci\u00f3n de autorizaci\u00f3n correspondiente a esa zona. Por lo general, una zona tendr\u00e1 un servidor de nombres primario, que obtiene su informaci\u00f3n de un archivo en su disco, y uno o m\u00e1s servidores de nombres secundarios, que obtienen su informaci\u00f3n del primario. Para mejorar la confiabilidad, algunos servidores de cierta zona pueden situarse fuera de la zona.\nGen\u00e9rico\nDe pa\u00eds\nFigura 7-4. Parte del espacio de nombres DNS, donde se muestra la divisi\u00f3n en zonas.\nEl lugar donde se colocan los l\u00edmites de las zonas dentro de una zona es responsabilidad del administrador de esa zona. Esta decisi\u00f3n se toma en gran medida con base en la cantidad de servidores de nombres deseados y su ubicaci\u00f3n. Por ejemplo, en la figura 7-4, Yale tiene un servidor\nSEC. 7.1\n587\nDNS\u2014EL SISTEMA DE NOMBRES DE DOMINIO\npara yale.edu que maneja eng.yale.edu, pero no cs.yale.edu, que es una zona aparte con sus propios servidores de nombres. Tal decisi\u00f3n podr\u00eda tomarse cuando un departamento, como el de ingl\u00e9s, no desea operar su propio servidor de nombres, pero un departamento como el de inform\u00e1tica s\u00ed. En consecuencia, cs.yale.edu es una zona aparte, pero eng.yale.edu no. Cuando un resolvedor tiene una consulta referente a un nombre de dominio, la pasa a uno de los servidores de nombres locales. Si el dominio que se busca cae bajo la jurisdicci\u00f3n del servidor de nombres, como ai.cs.yale.edu, que cae bajo cs.yale.edu, devuelve los registros de recursos autorizados. Un registro autorizado es uno que proviene de la autoridad que administra el registro y, por lo tanto, siempre es correcto. Los registros autorizados contrastan con los registros en cach\u00e9, que podr\u00edan no estar actualizados. Por otro lado, si el dominio es remoto y no hay informaci\u00f3n disponible localmente sobre el dominio solicitado, el servidor de nombres env\u00eda un mensaje de consulta al servidor de nombres de nivel superior en el que le solicita dicho dominio. Para hacer m\u00e1s claro este proceso, considere el ejemplo de la figura 7-5. Aqu\u00ed, un resolvedor de flits.cs.vu.nl quiere saber la direcci\u00f3n IP del host linda.cs.yale.edu. En el paso 1, env\u00eda una consulta al servidor de nombres local, cs.vu.nl. Esta consulta contiene el nombre de dominio buscado, el tipo (A) y la clase (IN).\nOriginador\nServidor de nombres VU CS\nServidor de nombres Edu\nServidor de nombres Yale\nServidor de nombres Yale CS\nFigura 7-5. Manera en que un resolvedor busca un nombre remoto en ocho pasos.\nSupongamos que al servidor de nombres local nunca se le ha solicitado este dominio, por lo que no sabe nada sobre \u00e9l; puede preguntar a otros servidores de nombres cercanos, pero si ninguno de ellos sabe nada, enviar\u00e1 un paquete UDP al servidor de edu indicado en su base de datos (vea la figura 7-5), edu-server.net. Desde luego, es improbable que este servidor sepa la direcci\u00f3n de linda.cs.yale.edu, y probablemente tampoco sabe la de cs.yale.edu, pero debe conocer a todos sus hijos, por lo que reenv\u00eda la solicitud al servidor de nombres de yale.edu (paso 3). A su vez, \u00e9ste reenv\u00eda la solicitud a cs.yale.edu (paso 4), que debe tener los registros de recursos autorizados. Puesto que cada solicitud es de un cliente a un servidor, el registro de recursos solicitado regresa a trav\u00e9s de los pasos 5 a 8. Una vez que estos registros regresan al servidor de nombres cs.vu.nl, se almacenan en cach\u00e9, por si se necesitan posteriormente. Sin embargo, esta informaci\u00f3n no es autorizada, puesto que los cambios hechos en cs.yale.edu no se propagar\u00e1n a todos los cach\u00e9s del mundo que puedan saber sobre ella. Por esta raz\u00f3n, las entradas de cach\u00e9 no deben vivir demasiado tiempo. \u00c9sta es la raz\u00f3n por la cual el campo Tiempo_de_vida se incluye en cada registro de recursos; indica a los servidores de nombres remotos cu\u00e1nto tiempo deben mantener en cach\u00e9 los registros. Si cierta m\u00e1quina ha tenido la misma direcci\u00f3n IP durante a\u00f1os, puede ser seguro poner en cach\u00e9 esa informaci\u00f3n\n588\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\ndurante un d\u00eda. En el caso de informaci\u00f3n m\u00e1s vol\u00e1til, podr\u00eda ser m\u00e1s seguro purgar los registros tras unos cuantos segundos o un minuto. Vale la pena mencionar que el m\u00e9todo de consultas aqu\u00ed descrito se conoce como consulta recursiva, puesto que cada servidor que no tiene toda la informaci\u00f3n solicitada la busca en alg\u00fan otro lado y luego la proporciona. Es posible un procedimiento alternativo. En \u00e9l, cuando una consulta no puede satisfacerse localmente, \u00e9sta falla, pero se devuelve el nombre del siguiente servidor a intentar a lo largo de la l\u00ednea. Algunos servidores no implementan consultas recursivas y siempre devuelven el nombre del siguiente servidor a intentar. Tambi\u00e9n vale la pena indicar que cuando un cliente DNS no recibe una respuesta antes de que termine su temporizador, por lo general probar\u00e1 con otro servidor la siguiente vez. La suposici\u00f3n aqu\u00ed es que el servidor probablemente est\u00e1 inactivo, y no que la solicitud o la respuesta se perdieron. Si bien DNS es muy importante para el funcionamiento correcto de Internet, todo lo que hace realmente es relacionar nombres simb\u00f3licos de m\u00e1quinas con sus direcciones IP. No ayuda a localizar personas, recursos, servicios u objetos en general. Para localizar este tipo de cosas, se ha definido otro servicio de directorio, llamado LDAP (Protocolo Ligero de Acceso al Directorio). \u00c9ste es una versi\u00f3n simplificada del servicio de directorio OSI X.500 y se describe en el RFC 2251. Organiza informaci\u00f3n como un \u00e1rbol y permite b\u00fasquedas en componentes diferentes. Se puede considerar como un directorio telef\u00f3nico de \u201cp\u00e1ginas blancas\u201d. No lo analizaremos m\u00e1s en este libro, pero para mayor informaci\u00f3n, vea (Weltman y Dahbura, 2000).\n7.2 CORREO ELECTR\u00d3NICO El correo electr\u00f3nico, o e-mail, como lo conocen muchos aficionados, ha existido por m\u00e1s de dos d\u00e9cadas. Antes de 1990, se utilizaba principalmente en ambientes acad\u00e9micos. En la d\u00e9cada de 1990, se dio a conocer al p\u00fablico y creci\u00f3 en forma exponencial al punto que el n\u00famero de mensajes de correo electr\u00f3nico enviados por d\u00eda ahora es mayor que el n\u00famero de cartas por correo caracol (es decir, en papel). El correo electr\u00f3nico, como la mayor\u00eda de otras formas de comunicaci\u00f3n, tiene sus propias convenciones y estilos. En particular, es muy informal y tiene un umbral bajo de uso. Las personas que nunca hubieran so\u00f1ado con escribir una carta a un personaje importante, no dudar\u00edan un instante para enviarle un mensaje de correo electr\u00f3nico. El correo electr\u00f3nico est\u00e1 lleno de abreviaturas, como BTW (By The Way, por cierto), ROTFL (Rolling On The Floor Laughing, rodando por el suelo muerto de risa) e IMHO (In My Humble Opini\u00f3n, en mi humilde opini\u00f3n). Muchas personas tambi\u00e9n utilizan peque\u00f1os s\u00edmbolos ASCII llamados caritas o s\u00edmbolos de emociones en sus mensajes de correo electr\u00f3nico. Algunos de los m\u00e1s interesantes se listan en la figura 7-6. Para la mayor\u00eda, rote el libro 90 grados en direcci\u00f3n de las manecillas del reloj y se ver\u00e1n con mayor claridad. Un minilibro que presenta cerca de 650 caritas es (Sanderson y Dougherty, 1993). Los primeros sistemas de correo electr\u00f3nico simplemente consist\u00edan en protocolos de transferencia de archivos, con la convenci\u00f3n de que la primera l\u00ednea de cada mensaje (es decir, archivo)\nSEC. 7.2 Emoticono\n589\nCORREO ELECTR\u00d3NICO Significado\nEmoticono\nSignificado\nEmoticono\nSignificado\n:-)\nEstoy feliz\n=|:-)\nAbe Lincoln\n:+)\nNariz grande\n:-(\nEstoy triste/enojado\n=):-)\nT\u00edo Sam\n:-))\nRealmente feliz\n:-|\nEstoy ap\u00e1tico\n* Figura 7-34. Una p\u00e1gina HTML de ejemplo con PHP incrustado.\nPHP es especialmente bueno para manejar formularios y es m\u00e1s sencillo que utilizar una secuencia de comandos CGI. Como ejemplo de c\u00f3mo funciona con formularios, considere la figura 7-35(a). \u00c9sta contiene una p\u00e1gina normal HTML con un formulario en ella. Lo \u00fanico inusual es la primera l\u00ednea que especifica que se va a invocar el archivo action.php para manejar los par\u00e1metros despu\u00e9s de que el usuario ha llenado y emitido el formulario. La p\u00e1gina despliega dos cuadros de texto, uno que solicita un nombre y otro que solicita una edad. Una vez que se han llenado los cuadros de texto y se ha enviado el formulario, el servidor analiza la cadena de tipo regresada de la figura 7-30, colocando el nombre en la variable nombre y la edad en la variable edad. Despu\u00e9s comienza el procesamiento del archivo action.php, que se muestra como respuesta en la figura 7-35(b). Durante el procesamiento de este archivo, se ejecutan los comandos PHP. Si el usuario introdujo \u201cBarbara\u201d y \u201c24\u201d en los cuadros, el archivo HTML regresado ser\u00e1 el que se muestra en la figura 7-35(c). Por lo tanto, el manejo de formularios con PHP se vuelve muy sencillo. Aunque PHP es f\u00e1cil de utilizar, realmente es un lenguaje de programaci\u00f3n poderoso dise\u00f1ado para interactuar entre Web y una base de datos del servidor. Tiene variables, cadenas, arreglos y la mayor\u00eda de las estructuras de control que se encuentran en C, pero la E/S es mucho m\u00e1s poderosa que printf. PHP es c\u00f3digo open source y est\u00e1 disponible de manera gratuita.\n646\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nPor favor introduzca su nombre:\nPor favor introduzca su edad:\n(a)\nRespuesta Hola . Predicci\u00f3n: el siguiente a\u00f1o tendr\u00e1 (b)\nRespuesta: Hola Barbara. Predicci\u00f3n: el siguiente a\u00f1o tendr\u00e1 25 (c)\nFigura 7-35. (a) Una p\u00e1gina Web que contiene un formulario. (b) Una secuencia de comandos PHP para manejar la salida del formulario. (c) Salida de la secuencia de comandos PHP cuando las entradas son \u201cBarbara\u201d y 24, respectivamente.\nSe dise\u00f1\u00f3 espec\u00edficamente para trabajar bien con Apache, que tambi\u00e9n es c\u00f3digo abierto y es el servidor Web m\u00e1s ampliamente utilizado del mundo. Para mayor informaci\u00f3n sobre PHP, vea (Valade, 2002). Ya vimos dos formas diferentes para generar p\u00e1ginas HTML din\u00e1micas: las secuencias de comandos CGI y el PHP incrustado. Tambi\u00e9n hay una tercera t\u00e9cnica, llamada JSP (Java Server Pages), que es similar a PHP, excepto que la parte din\u00e1mica se escribe en el lenguaje de programaci\u00f3n Java en lugar de en PHP. Las p\u00e1ginas que utilizan esta t\u00e9cnica tienen la extensi\u00f3n de archivo jsp. Una cuarta t\u00e9cnica, ASP (Active Server Pages), es la versi\u00f3n de Microsoft de PHP y JavaServer Pages. Para generar el contenido din\u00e1mico utiliza el lenguaje de secuencias de comandos propietario de Microsoft, Visual Basic Script. Las p\u00e1ginas que utilizan esta t\u00e9cnica tienen la extensi\u00f3n asp. Por lo general, la selecci\u00f3n entre PHP, JSP y ASP tiene que ver m\u00e1s con pol\u00edticas\nSEC. 7.3\nWORLD WIDE WEB\n647\n(c\u00f3digo abierto contra Sun contra Microsoft) que con la tecnolog\u00eda, puesto que estos tres lenguajes son m\u00e1s o menos similares. La colecci\u00f3n de tecnolog\u00edas para generar contenido al vuelo algunas veces se llama HTML din\u00e1mico. Generaci\u00f3n de p\u00e1ginas Web din\u00e1micas en el cliente Las secuencias de comandos de CGI, PHP, JSP y ASP resuelven el problema de manejar formularios e interacciones con bases de datos en el servidor. Pueden aceptar informaci\u00f3n entrante de formularios, buscar informaci\u00f3n en una o m\u00e1s bases de datos y generar p\u00e1ginas HTML con los resultados. Lo que ninguno de ellos puede hacer es responder a los movimientos del rat\u00f3n o interactuar de manera directa con los usuarios. Para esto es necesario tener secuencias de comandos incrustadas en p\u00e1ginas HTML que se ejecuten en la m\u00e1quina cliente y no en el servidor. Comenzando con HTML 4.0, tales secuencias de comandos son posibles mediante la etiqueta . El lenguaje de secuencias de comandos m\u00e1s popular para el cliente es JavaScript, por lo que ahora le daremos un vistazo. JavaScript es un lenguaje de secuencias de comandos, inspirado por algunas ideas del lenguaje de programaci\u00f3n Java. Definitivamente \u00e9ste no es Java. Al igual que otros lenguajes de secuencias de comandos, es un lenguaje de muy alto nivel. Por ejemplo, en una sola l\u00ednea de JavaScript es posible desplegar un cuadro de di\u00e1logo, esperar entrada de texto y almacenar la cadena resultante en una variable. Las caracter\u00edsticas de alto nivel como \u00e9stas hacen que JavaScript sea ideal para dise\u00f1ar p\u00e1ginas Web interactivas. Por otro lado, el hecho de que no est\u00e1 estandarizado y de que tiene m\u00e1s mutaciones que una mosca de fruta atrapada en una m\u00e1quina de rayos X, hace extremadamente dif\u00edcil escribir programas de JavaScript que funcionen en todas las plataformas, pero tal vez alg\u00fan d\u00eda se estabilice. Como ejemplo de un programa de JavaScript, considere el de la figura 7-36. Al igual que el de la figura 7-35(a), despliega un formulario que pide un nombre y una edad, y despu\u00e9s calcula cu\u00e1ntos a\u00f1os tendr\u00e1 una persona el siguiente a\u00f1o. El cuerpo es casi el mismo que el del ejemplo de PHP, la diferencia principal es la declaraci\u00f3n del bot\u00f3n de env\u00edo y su instrucci\u00f3n de asignaci\u00f3n. \u00c9sta indica al navegador que invoque la secuencia de comandos response mediante un clic del bot\u00f3n y que la pase al formulario como un par\u00e1metro. Lo que es completamente nuevo aqu\u00ed es la declaraci\u00f3n de la funci\u00f3n response de JavaScript del encabezado del archivo HTML, un \u00e1rea que se reserva normalmente para t\u00edtulos, colores de fondo, etc\u00e9tera. Esta funci\u00f3n extrae el valor del campo name del formulario y lo almacena como una cadena en la variable person. Tambi\u00e9n extrae el valor del campo age, lo convierte en un entero mediante el uso de la funci\u00f3n eval, le agrega 1 y almacena el resultado en years. A continuaci\u00f3n abre un documento para salida, utiliza el m\u00e9todo writeln para realizar cuatro escrituras en dicho documento y, por \u00faltimo, lo cierra. Este documento es un archivo HTML, como puede advertirse a partir de las etiquetas HTML. A continuaci\u00f3n el navegador despliega el documento en la pantalla. Es muy importante hacer notar que si bien las figuras 7-35 y 7-36 son muy similares, se procesan de manera totalmente diferente. En la figura 7-35, despu\u00e9s de que el usuario hace clic en el bot\u00f3n de env\u00edo, el navegador colecta la informaci\u00f3n en una cadena larga como la de la figura 7-30\n648\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nfunction response(test_form) { var person = test_form.name.value; var years = eval(test_form.age.value) + 1; document.open(); document.writeln(\u201d \u201d); document.writeln(\u201dHola\u201d + person + \u201d.\u201d); document.writeln(\u201dPredicci\u00f3n: el siguiente a\u00f1o usted tendr\u00e1\u201d + a\u00f1os + \u201d.\u201d); document.writeln(\u201d \u201d); document.close(); } Por favor, introduzca su nombre:\nPor favor, introduzca su edad:\ninput type=\u201dbutton\u201d value=\u201dsubmit\u201d onclick=\u201dresponse(this.form)\u201d> Figura 7-36. Uso de JavaScript para procesar un formulario.\ny la regresa al servidor que envi\u00f3 la p\u00e1gina. \u00c9ste ve el nombre del archivo PHP y lo ejecuta. La secuencia de comandos de PHP produce una nueva p\u00e1gina HTML y \u00e9sta se regresa al navegador para que la despliegue. En la figura 7-36, cuando se hace clic en el bot\u00f3n de env\u00edo, el navegador interpreta una funci\u00f3n de JavaScript que est\u00e1 contenida en la p\u00e1gina. Todo el trabajo se lleva a cabo de manera local, dentro del navegador. No hay contacto con el servidor. Debido a esto, el resultado se despliega casi instant\u00e1neamente, mientras que con PHP, puede haber un retraso de algunos segundos antes de que el HTML resultante llegue al cliente. En la figura 7-37 se ilustra la diferencia entre las secuencias de comandos del servidor y las del cliente, adem\u00e1s de los pasos involucrados. En ambos casos, los pasos numerados comienzan despu\u00e9s de que se despliega el formulario. El paso 1 consiste en aceptar la entrada del usuario. A continuaci\u00f3n se realiza el procesamiento de la entrada, lo cual es diferente en los dos casos. Esta diferencia no significa que JavaScript sea mejor que PHP. Sus usos son completamente diferentes. PHP (y, por ende, JSP y ASP) se utiliza cuando es necesaria la interacci\u00f3n con una base de datos remota. JavaScript se utiliza cuando la interacci\u00f3n es con el usuario en la m\u00e1quina\nSEC. 7.3\n649\nWORLD WIDE WEB Navegador\nServidor\nNavegador\nServidor\nUsuario\nUsuario\nM\u00f3dulo PHP\nJavaScript\n(a)\n(b)\nFigura 7-37. (a) Secuencias de comandos en el servidor con PHP. (b) Secuencias de comandos en el cliente con JavaScript.\ncliente. Ciertamente es posible (y com\u00fan) tener p\u00e1ginas HTML que utilicen PHP y JavaScript, aunque \u00e9stas no pueden hacer el mismo trabajo ni poseer, por supuesto, el mismo bot\u00f3n. JavaScript es un lenguaje de programaci\u00f3n completo, con todo el poder de C o Java. Tiene variables, cadenas, arreglos, objetos, funciones y todas las estructuras de control comunes. Tambi\u00e9n tiene una gran cantidad de caracter\u00edsticas espec\u00edficas para p\u00e1ginas Web, entre las que se encuentran la capacidad para administrar ventanas y marcos, establecer y obtener cookies, manejar formularios e hiperv\u00ednculos. En la figura 7-38 se proporciona un programa JavaScript que utiliza una funci\u00f3n recursiva. function response(test_form) { function factorial(n) {if (n == 0) return 1; else return n * factorial (n \u2013 1);} var r = eval(test_form.number.value); // r = escribe un argumento document.myform.mytext.value = \u201cAqu\u00ed est\u00e1n los resultados.\\n\u201d; for (var i = 1; i log GET /rfc.html HTTP/1.1 Host: www.ietf.org close\nEsta secuencia de comandos inicia una conexi\u00f3n telnet (es decir, TCP) con el puerto 80 en el servidor Web de IETF, www.ietf.org. El resultado de la sesi\u00f3n se redirige a un archivo de registro para una inspecci\u00f3n posterior. A continuaci\u00f3n se encuentra el comando GET que nombra al archivo y al protocolo. La siguiente l\u00ednea es el encabezado Host obligatorio. La l\u00ednea en blanco tambi\u00e9n se requiere. Indica al servidor que ya no hay m\u00e1s encabezados de solicitud. El comando close indica al programa que termine la conexi\u00f3n. El registro puede inspeccionarse utilizando cualquier editor. Debe comenzar de manera similar al listado de la figura 7-44, a menos que IETF haya cambiado recientemente. Las primeras tres l\u00edneas se env\u00edan a la salida desde el programa telnet, no desde el sitio remoto. La l\u00ednea que comienza con HTTP/1.1 es la respuesta de IETF mediante la cual indica que est\u00e1 dispuesto a hablar HTTP/1.1 con usted. A continuaci\u00f3n se encuentran algunos encabezados y despu\u00e9s el contenido. Ya vimos todos los encabezados excepto ETag, que es un identificador de p\u00e1gina \u00fanico que se relaciona con el almacenamiento en cach\u00e9, y X-Pad, que es no est\u00e1ndar y que tal vez sea una soluci\u00f3n para alg\u00fan navegador con errores.\n7.3.5 Mejoras de desempe\u00f1o La popularidad de Web ha sido casi su destrucci\u00f3n. Los servidores, enrutadores y las l\u00edneas con frecuencia est\u00e1n sobrecargados. Muchas personas han comenzado a llamar a WWW World Wide Wait. Como consecuencia de estos retardos interminables, los investigadores han desarrollado varias t\u00e9cnicas para mejorar el desempe\u00f1o. A continuaci\u00f3n examinaremos tres de ellas: el almacenamiento en cach\u00e9, la replicaci\u00f3n del servidor y las redes de entrega de contenido.\nSEC. 7.3\nWORLD WIDE WEB\n657\nTrying 4.17.168.6... Connected to www.ietf.org. Escape character is \u2019\u02c6]\u2019. HTTP/1.1 200 OK Date: Wed, 08 May 2002 22:54:22 GMT Server: Apache/1.3.20 (Unix) mod_ssl/2.8.4 OpenSSL/0.9.5a Last-Modified: Mon, 11 Sep 2000 13:56:29 GMT ETag: \u201c2a79d-c8b-39bce48d\u201d Accept-Ranges: bytes Content-Length: 3211 Content-Type: text/html X-Pad: avoid browser bug P\u00e1gina IETF RFC function url() { var x = document.form1.number.value if (x.length == 1) {x = \u201c000\u201d + x } if (x.length == 2) {x = \u201c00\u201d + x } if (x.length == 3) {x = \u201c0\u201d + x } document.form1.action = \u201c/rfc/rfc\u201d + x + \u201c.txt\u201d document.form1.submit } Figura 7-44. El inicio de la salida de www.ietf.org/rfc.html.\nAlmacenamiento en cach\u00e9 Una forma muy sencilla de mejorar el desempe\u00f1o es guardar las p\u00e1ginas que han sido solicitadas en caso de que se utilicen nuevamente. Esta t\u00e9cnica es especialmente efectiva con p\u00e1ginas que se visitan mucho, como www.yahoo.com y www.cnn.com. La t\u00e9cnica de guardar p\u00e1ginas para uso posterior se conoce como almacenamiento en cach\u00e9. El procedimiento com\u00fan es que alg\u00fan proceso, llamado proxy, mantenga el cach\u00e9. Para utilizar el almacenamiento en cach\u00e9, un navegador puede configurarse para que todas las solicitudes de p\u00e1ginas se le hagan a un proxy en lugar de al servidor real de la p\u00e1gina. Si el proxy tiene la p\u00e1gina, la regresa de inmediato. De lo contrario, la obtiene del servidor, la agrega al cach\u00e9 para uso posterior y la env\u00eda al cliente que la solicit\u00f3.\n658\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nDos preguntas importantes relacionadas con el almacenamiento en cach\u00e9 son las siguientes: 1. \u00bfQui\u00e9n debe realizar el almacenamiento en cach\u00e9? 2. \u00bfPor cu\u00e1nto tiempo deben almacenarse en cach\u00e9 las p\u00e1ginas? Hay diversas respuestas para la primera pregunta. Las PCs individuales con frecuencia ejecutan los proxies a fin de que \u00e9stos puedan buscar con rapidez las p\u00e1ginas previamente visitadas. En una LAN de una compa\u00f1\u00eda, el proxy con frecuencia es una m\u00e1quina compartida por todas las m\u00e1quinas de la LAN, por lo que si un usuario busca cierta p\u00e1gina y luego otro usuario de la misma LAN desea la misma p\u00e1gina, \u00e9sta se puede obtener del cach\u00e9 del proxy. Muchos ISPs tambi\u00e9n ejecutan proxies, a fin de que todos sus clientes puedan tener un acceso m\u00e1s r\u00e1pido. Con frecuencia, todos estos cach\u00e9s funcionan al mismo tiempo, por lo que las solicitudes primero van al proxy local. Si \u00e9ste falla, consulta al proxy de la LAN. Si \u00e9ste tambi\u00e9n falla, prueba el proxy del ISP. Este \u00faltimo debe tener \u00e9xito, ya sea desde su cach\u00e9, un cach\u00e9 de nivel superior o desde el servidor mismo. Un esquema que involucra el acceso en secuencia de m\u00faltiples cach\u00e9s se conoce como almacenamiento en cach\u00e9 jer\u00e1rquico. En la figura 7-45 se ilustra una posible implementaci\u00f3n. Proxy\nM\u00e1quina cliente\nLAN del cliente\nInternet\nProxy\nLAN del ISP\nFigura 7-45. Almacenamiento en cach\u00e9 jer\u00e1rquico con tres proxies.\nDeterminar el tiempo que deben permanecer las p\u00e1ginas en cach\u00e9 es un poco dif\u00edcil. Algunas p\u00e1ginas no deber\u00edan almacenarse en cach\u00e9. Por ejemplo, una p\u00e1gina que contiene los precios de las 50 acciones m\u00e1s activas cambia cada segundo. Si se almacenara en cach\u00e9, un usuario que obtuviera una copia del cach\u00e9 obtendr\u00eda datos obsoletos. Por otro lado, una vez que el mercado de valores cierre, esa p\u00e1gina permanecer\u00e1 v\u00e1lida por algunas horas o d\u00edas, hasta que inicie la siguiente sesi\u00f3n del mercado. Por lo tanto, el almacenamiento en cach\u00e9 de una p\u00e1gina podr\u00eda variar con el tiempo. El elemento clave para determinar cu\u00e1ndo expulsar una p\u00e1gina del cach\u00e9 es qu\u00e9 tanta obsolescencia est\u00e1n dispuestos a aceptar los usuarios (debido a que las p\u00e1ginas en cach\u00e9 se almacenan en el disco, la cantidad de espacio consumido por lo general no es un problema). Si un proxy elimina p\u00e1ginas con rapidez, raramente regresar\u00e1 una p\u00e1gina obsoleta pero tampoco ser\u00e1 muy efectivo (es decir, tendr\u00e1 una tasa baja de coincidencias). Si mantiene las p\u00e1ginas por mucho tiempo, tal vez tendr\u00e1 una tasa alta de coincidencias pero a expensas de regresar con frecuencia p\u00e1ginas obsoletas. Hay dos m\u00e9todos para tratar este problema. El primero utiliza una heur\u00edstica para adivinar cu\u00e1nto tiempo se mantendr\u00e1 cada p\u00e1gina. Una com\u00fan es basar el tiempo de almacenamiento en el encabezado Last-Modified (vea la figura 7-43). Si una p\u00e1gina se modific\u00f3 hace una hora, se\nSEC. 7.3\nWORLD WIDE WEB\n659\nmantendr\u00e1 en cach\u00e9 por una hora. Si se modific\u00f3 hace un a\u00f1o, obviamente es una p\u00e1gina muy estable (por ejemplo, una lista de los dioses de las mitolog\u00edas griega y romana), por lo que se puede almacenar en cach\u00e9 por un a\u00f1o y esperar razonablemente que no cambie durante dicho tiempo. Si bien esta heur\u00edstica con frecuencia funciona bien en la pr\u00e1ctica, regresa p\u00e1ginas obsoletas de vez en cuando. El otro m\u00e9todo es m\u00e1s costoso, pero elimina la posibilidad de obtener p\u00e1ginas obsoletas debido a que utiliza caracter\u00edsticas especiales del RFC 2616 que tienen que ver con el manejo del cach\u00e9. Una de las caracter\u00edsticas m\u00e1s \u00fatiles es el encabezado de solicitud If-Modified-Since, que puede ser enviado por un proxy a un servidor. Especifica la p\u00e1gina que el proxy desea y la fecha en que \u00e9sta fue modificada por \u00faltima vez (a partir del encabezado Last-Modified ). Si la p\u00e1gina no se ha modificado desde entonces, el servidor regresa un mensaje corto Not Modified (el c\u00f3digo de estado 304 de la figura 7-42), el cual indica al proxy que utilice la p\u00e1gina en cach\u00e9. Si \u00e9sta ha sido modificada, se regresa la nueva p\u00e1gina. Aunque este m\u00e9todo siempre requiere un mensaje de solicitud y uno de respuesta, este \u00faltimo ser\u00e1 muy corto cuando la entrada en cach\u00e9 a\u00fan sea v\u00e1lida. Estos dos m\u00e9todos pueden combinarse con facilidad. Para la primera \u0394T despu\u00e9s de obtener la p\u00e1gina, el proxy simplemente la regresa a los clientes que la solicitan. Despu\u00e9s de que la p\u00e1gina ha existido por alg\u00fan tiempo, el proxy utiliza mensajes If-Modified-Since para verificar qu\u00e9 tan actualizada est\u00e1. Elegir \u0394T involucra invariablemente alg\u00fan tipo de heur\u00edstica, dependiendo de cu\u00e1ndo fue la \u00faltima modificaci\u00f3n de la p\u00e1gina. Las p\u00e1ginas Web con contenido din\u00e1mico (por ejemplo, generado por una secuencia de comandos PHP) nunca deben almacenarse en cach\u00e9 debido a que los par\u00e1metros pueden ser diferentes la siguiente vez. Para manejar \u00e9ste y otros casos, hay un mecanismo general para que un servidor instruya a todos los proxies de la ruta hacia el cliente que no utilicen otra vez la p\u00e1gina actual sin antes verificar si est\u00e1 actualizada. Este mecanismo tambi\u00e9n puede utilizarse para cualquier p\u00e1gina que se espera que cambie r\u00e1pidamente. En el RFC 2616 tambi\u00e9n se define una variedad de otros mecanismos de control de cach\u00e9. Otro enfoque para mejorar el desempe\u00f1o es el almacenamiento en cach\u00e9 proactivo. Cuando un proxy obtiene una p\u00e1gina de un servidor, puede inspeccionarla para ver si tiene hiperv\u00ednculos. De ser as\u00ed, puede emitir solicitudes a los servidores correspondientes para precargar el cach\u00e9 con las p\u00e1ginas a las que apuntan dichos hiperv\u00ednculos, en caso de que \u00e9stas se necesiten. Esta t\u00e9cnica puede reducir el tiempo de acceso en las solicitudes subsiguientes, pero tambi\u00e9n puede inundar las l\u00edneas de comunicaci\u00f3n con p\u00e1ginas que nunca se solicitan. Claramente, el almacenamiento en cach\u00e9 de Web es todo menos trivial. Se puede decir mucho m\u00e1s sobre \u00e9l. De hecho, se han escrito libros completos sobre \u00e9l, por ejemplo (Rabinovich y Spatscheck, 2002, y Wessels, 2001). Sin embargo, es tiempo de que pasemos al siguiente tema. Replicaci\u00f3n del servidor El almacenamiento en cach\u00e9 es una t\u00e9cnica en el cliente para mejorar el desempe\u00f1o, pero tambi\u00e9n existen t\u00e9cnicas en el servidor. El m\u00e9todo m\u00e1s com\u00fan que los servidores utilizan para mejorar el desempe\u00f1o es replicar su contenido en m\u00faltiples ubicaciones separadas considerablemente. Esta t\u00e9cnica a veces se conoce como espejeo (mirroring).\n660\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nUn uso t\u00edpico del espejeo es para que la p\u00e1gina principal de una compa\u00f1\u00eda contenga algunas im\u00e1genes e hiperv\u00ednculos para, digamos, los sitios Web regionales este, oeste, norte y sur de dicha compa\u00f1\u00eda. A continuaci\u00f3n el usuario hace clic en el m\u00e1s cercano para acceder a ese servidor. De ah\u00ed en adelante, todas las solicitudes van al servidor seleccionado. Los sitios espejo por lo general son est\u00e1ticos. La compa\u00f1\u00eda decide d\u00f3nde colocar los espejos, arregla un servidor en cada regi\u00f3n y coloca el contenido en cada ubicaci\u00f3n (posiblemente omitiendo los quitanieve del sitio de Miami, y las toallas de playa del sitio de Anchorage). La elecci\u00f3n de sitios por lo general permanece estable por meses o a\u00f1os. Desafortunadamente, Web tiene un fen\u00f3meno conocido como flash crowds (aglomeraci\u00f3n instant\u00e1nea) en el que un sitio Web que era un lugar alejado, desconocido y no visitado de repente se vuelve el centro del universo. Por ejemplo, hasta el 6 de noviembre de 2000, el sitio Web de la Secretar\u00eda del Estado de Florida, www.dos.state.fl.us, se encontraba tranquilamente proporcionando informaci\u00f3n sobre las reuniones del gabinete del Estado de Florida e instrucciones de c\u00f3mo convertirse en un notario en Florida. Pero el 7 de noviembre, cuando la presidencia de los Estados Unidos depend\u00eda repentinamente de unos cuantos miles de votos controvertidos en un pu\u00f1ado de condados de Florida, se convirti\u00f3 en uno de los cinco sitios m\u00e1s visitados del mundo. No es necesario decir que no pudo manejar la carga y casi muere en el intento. Lo que se necesita es una forma para que un sitio Web que de repente note un incremento masivo en el tr\u00e1fico, se clone autom\u00e1ticamente a s\u00ed mismo en tantas ubicaciones como sea necesario y mantenga funcionando a esos sitios hasta que pase la tormenta, en cuyo momento deber\u00e1 desactivar muchos o todos ellos. Para tener esta capacidad, un sitio necesita un acuerdo por adelantado con alguna compa\u00f1\u00eda que posea muchos sitios de hospedaje, que indique que puede crear r\u00e9plicas bajo demanda y que debe pagar por la capacidad que realmente utilice. Una estrategia a\u00fan m\u00e1s flexible es crear r\u00e9plicas din\u00e1micas por p\u00e1gina dependiendo de d\u00f3nde viene el tr\u00e1fico. Alguna investigaci\u00f3n sobre este tema se reporta en (Pierre y cols., 2001, y Pierre y cols., 2002). Redes de entrega de contenido La brillantez del capitalismo es que alguien ha descubierto c\u00f3mo hacer dinero con World Wide Wait. Funciona como se muestra a continuaci\u00f3n. Las compa\u00f1\u00edas llamadas CDNs (redes de entrega de contenido) hablan con proveedores de contenido (sitios de m\u00fasica, peri\u00f3dicos y otros que desean que su contenido est\u00e9 disponible r\u00e1pida y f\u00e1cilmente) y ofrecen entregar su contenido a los usuarios finales de manera eficiente a cambio de una cuota. Despu\u00e9s de que se firma el contrato, el due\u00f1o del contenido da a la CDN el contenido de su sitio Web para que lo preprocese (lo que se analizar\u00e1 m\u00e1s adelante) y despu\u00e9s lo distribuya. A continuaci\u00f3n la CDN habla con una gran cantidad de ISPs y ofrece pagarles bien a cambio de que le permitan colocar en sus LANs un servidor manejado de manera remota lleno de contenido valioso. \u00c9sta no es s\u00f3lo una fuente de ingresos, sino que tambi\u00e9n proporciona a los clientes de los ISPs excelente tiempo de respuesta para obtener el contenido de la CDN, lo que da al ISP una ventaja competitiva sobre otros ISPs que no han tomado dinero gratis de la CDN. Bajo estas condiciones, firmar con una CDN es una decisi\u00f3n que el ISP no necesita pensar. Como\nSEC. 7.3\nWORLD WIDE WEB\n661\nconsecuencia, las CDNs m\u00e1s grandes tienen m\u00e1s de 10,000 servidores distribuidos por todo el mundo. Con el contenido replicado en miles de sitios alrededor del mundo, hay claramente un gran potencial para mejorar el rendimiento. Sin embargo, para que esto funcione, debe haber una forma para redirigir la solicitud del cliente al servidor m\u00e1s cercano de la CDN, de preferencia uno colocado en el ISP del cliente. Adem\u00e1s, esta redirecci\u00f3n se debe hacer sin modificar el DNS o cualquier otra parte de la infraestructura est\u00e1ndar de Internet. A continuaci\u00f3n se da una descripci\u00f3n ligeramente simplificada de c\u00f3mo lo hace Akamai, la CDN m\u00e1s grande. Todo el proceso inicia cuando el proveedor de contenido entrega a la CDN su sitio Web. A continuaci\u00f3n la CDN ejecuta cada p\u00e1gina a trav\u00e9s de un preprocesador que reemplaza todos los URLs con URLs modificados. El modelo funcional detr\u00e1s de esta estrategia es que el sitio Web del proveedor de contenido conste de muchas p\u00e1ginas que sean peque\u00f1as (s\u00f3lo texto HTML), pero que \u00e9stas por lo general tengan v\u00ednculos a archivos m\u00e1s grandes, como im\u00e1genes, audio y v\u00eddeo. Las p\u00e1ginas HTML modificadas se almacenan en el servidor del proveedor de contenido y se obtienen de la forma com\u00fan; las im\u00e1genes, el audio y el v\u00eddeo se encuentran en los servidores de la CDN. Para ver c\u00f3mo funciona realmente este esquema, considere la p\u00e1gina Web de Furry Video que se muestra en la figura 7-46(a). Despu\u00e9s de que preprocesa, se transforma en la que se muestra en la figura 7-46(b) y se coloca en el servidor de Furry Video como www.furryvideo.com/index.html. Cuando el usuario teclea el URL www.furryvideo.com, el DNS regresa la direcci\u00f3n IP del sitio Web de Furry Video, permitiendo que la p\u00e1gina principal (HTML) se obtenga de la forma com\u00fan. Cuando se hace clic en alguno de los hiperv\u00ednculos, el navegador pide al DNS que busque cdn-server.com, lo cual hace. A continuaci\u00f3n, el navegador env\u00eda una solicitud HTTP a esta direcci\u00f3n IP, esperando obtener un archivo MPEG. Eso no sucede porque cdn-server.com no alberga ese contenido. En su lugar, es el servidor HTTP falso de la CDN. \u00c9ste examina el nombre del archivo y del servidor para averiguar cu\u00e1l p\u00e1gina de cu\u00e1l proveedor de contenido se necesita. Tambi\u00e9n examina la direcci\u00f3n IP de la solicitud entrante y la busca en su base de datos para determinar en d\u00f3nde es probable que est\u00e9 el usuario. Una vez que obtiene esta informaci\u00f3n determina cu\u00e1l de los servidores de contenido de la CDN puede dar el mejor servicio al usuario. Esta decisi\u00f3n es dif\u00edcil porque el que est\u00e9 m\u00e1s cerca geogr\u00e1ficamente puede no ser el que est\u00e9 m\u00e1s cerca en t\u00e9rminos de topolog\u00eda de red, y \u00e9ste puede estar muy ocupado en ese momento. Despu\u00e9s de tomar una decisi\u00f3n, cdn-server.com regresa una respuesta con el c\u00f3digo de estado 301 y un encabezado Location en el que se da el URL del archivo del servidor de contenido de la CDN que est\u00e9 m\u00e1s cerca del cliente. Para este ejemplo, asumamos que el URL es www.CDN-0420.com/furryvideo/osos.mpg. A continuaci\u00f3n el navegador procesa este URL de la forma usual para obtener el archivo MPEG real. La figura 7-47 ilustra los pasos involucrados. El primer paso busca a www.furryvideo.com para obtener su direcci\u00f3n IP. Despu\u00e9s de eso, la p\u00e1gina HTML se puede obtener y desplegar de la forma com\u00fan. La p\u00e1gina contiene tres hiperv\u00ednculos al cdn-server [vea la figura 7-46(b)]. Cuando se hace clic en el primero, su direcci\u00f3n DNS se busca (paso 5) y se regresa (paso 6). Cuando se env\u00eda a cdn-server un mensaje en el que se solicita osos.mpg (paso 7), se le indica al cliente que vaya a CDN-0420.com (paso 8). Cuando dicho cliente hace lo que se le indica (paso 9), se le da el archivo del cach\u00e9 del proxy (paso 10). La propiedad que hace que todo este mecanismo\n662\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nFurry Video Lista de productos de Furry Video\nHaga clic abajo para obtener muestras gratis.\nLos osos hoy Conejos graciosos Ratones simp\u00e1ticos (a)\nFurry Video Lista de productos de Furry Video\nHaga clic abajo para obtener muestras gratis.\nLos osos hoy Conejos graciosos Ratones simp\u00e1ticos (b)\nFigura 7-46. (a) P\u00e1gina Web original. (b) La misma p\u00e1gina despu\u00e9s de la transformaci\u00f3n.\nfuncione es el paso 8, el servidor HTTP falso que redirige al cliente a un proxy de la CDN que est\u00e1 cerca del cliente. El servidor de la CDN al que se redirige al cliente por lo general es un proxy con un cach\u00e9 grande precargado con el contenido m\u00e1s importante. Sin embargo, si alguien pide un archivo que no se encuentra en el cach\u00e9, se obtiene del servidor real y se coloca en el cach\u00e9 para uso posterior. Al hacer que el servidor de contenido sea un proxy en lugar de una r\u00e9plica, la CDN tiene la capacidad de negociar un tama\u00f1o de disco, tiempo de precarga y diversos par\u00e1metros de desempe\u00f1o. Para obtener mayor informaci\u00f3n sobre las redes de entrega de contenido, vea (Hull, 2002, y Rabinovich y Spatscheck, 2002).\n7.3.6 La Web inal\u00e1mbrica Hay un inter\u00e9s considerable en los dispositivos peque\u00f1os portables capaces de acceder a Web a trav\u00e9s de un enlace inal\u00e1mbrico. De hecho, ya se han tomado los primeros pasos tentativos en esa direcci\u00f3n. Sin duda habr\u00e1 muchos cambios en esta \u00e1rea en los a\u00f1os venideros, pero a\u00fan vale\nSEC. 7.3\nWORLD WIDE WEB Servidor DNS\nCliente\nServidor de la CDN (HTTP falso)\nCach\u00e9 en el disco Proxy\n663\n1. Se busca www.furryvideo.com 2. Se regresa la direcci\u00f3n IP de Furry 3. Se solicita la p\u00e1gina HTML desde Furry 4. Se regresa la p\u00e1gina HTML 5. Despu\u00e9s de hacer clic, se busca cdn-server.com 6. Se regresa la direcci\u00f3n IP del servidor de la CDN 7. Se pide al servidor de la CDN el archivo osos.mpg 8. Se le indica al cliente que redirija a CDN-0420.com 9. Se solicita el archivo osos.mpg 10. Se regresa el archivo en cach\u00e9 osos.mpg\nFigura 7-47. Pasos de la b\u00fasqueda de un URL cuando se utiliza una CDN.\nla pena examinar algunas de las ideas actuales relacionadas con la Web inal\u00e1mbrica para ver en d\u00f3nde estamos y hacia d\u00f3nde podr\u00edamos dirigirnos. Nos enfocaremos en los dos primeros sistemas Web inal\u00e1mbricos de \u00e1rea amplia: WAP e i-mode. WAP\u2014Protocolo de Aplicaciones Inal\u00e1mbricas Una vez que Internet y los tel\u00e9fonos m\u00f3viles se volvieron comunes en todos los lugares, no tom\u00f3 mucho tiempo para que alguien tuviera la idea de combinarlos en un tel\u00e9fono m\u00f3vil con una pantalla integrada para acceder de manera inal\u00e1mbrica al correo electr\u00f3nico y a Web. Ese \u201calguien\u201d en este caso fue un consorcio que inicialmente estaba encabezado por Nokia, Ericsson, Motorola y phone.com (anteriormente Unwired Planet) y que ahora tiene una gran cantidad de miembros. El sistema se llama WAP (Protocolo de Aplicaciones Inal\u00e1mbricas). Un dispositivo WAP puede ser un tel\u00e9fono m\u00f3vil mejorado, un PDA o una computadora notebook sin ninguna capacidad de voz. La especificaci\u00f3n acepta a todos ellos y a otros m\u00e1s. La idea b\u00e1sica es utilizar la infraestructura existente digital inal\u00e1mbrica. Los usuarios pueden literalmente llamar a una puerta de enlace WAP a trav\u00e9s del enlace inal\u00e1mbrico y enviarle solicitudes de p\u00e1ginas Web. A continuaci\u00f3n dicha puerta de enlace verifica su cach\u00e9 para ver si tiene la p\u00e1gina solicitada. Si la tiene, la env\u00eda; si no la tiene, la obtiene a trav\u00e9s de la Internet al\u00e1mbrica. En esencia, esto significa que WAP 1.0 es un sistema de conmutaci\u00f3n de circuitos con un cargo de conexi\u00f3n por minuto relativamente alto. En resumen, a las personas no les gust\u00f3 acceder a Internet en una peque\u00f1a pantalla y pagar por minuto, por lo que WAP fue un fracaso (aunque tambi\u00e9n hab\u00edan otros problemas). Sin embargo, parec\u00eda que WAP y su competidor, i-mode (que se analizar\u00e1 m\u00e1s adelante), converg\u00edan en una tecnolog\u00eda similar, por lo que WAP 2.0 s\u00ed podr\u00eda ser un \u00e9xito. Puesto que WAP 1.0 fue el primer intento de una Internet inal\u00e1mbrica, vale la pena describirla por lo menos brevemente.\n664\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nWAP es en esencia una pila de protocolos para acceder a Web, pero est\u00e1 optimizada para conexiones de ancho de banda bajo que utilizan dispositivos inal\u00e1mbricos que tienen una CPU lenta, poca memoria y una pantalla peque\u00f1a. Estos requerimientos son muy diferentes de aquellos del escenario de PC de escritorio est\u00e1ndar, lo que provoca algunas diferencias de protocolos. En la figura 7-48 se muestran las capas. Entorno de Aplicaciones Inal\u00e1mbricas (WAE) Protocolo de Sesi\u00f3n Inal\u00e1mbricas (WSP) Protocolo de Transacciones Inal\u00e1mbricas (WTP) Capa Inal\u00e1mbrica de Seguridad de Transporte (WTLS) Protocolo de Datagrama Inal\u00e1mbrico (WDP) Capa del portador (GSM, CDMA, D-AMPS, GPRS, etc\u00e9tera)\nFigura 7-48. La pila de protocolos WAP.\nLa capa inferior soporta todos los sistemas existentes de tel\u00e9fonos m\u00f3viles, incluyendo GSM, D-AMPS y CDMA. La tasa de datos de WAP 1.0 es de 9600 bps. Encima de esta capa se encuentra el protocolo de datagramas, WDP (Protocolo de Datagrama Inal\u00e1mbrico), que es esencialmente UDP. A continuaci\u00f3n se encuentra una capa para seguridad, obviamente necesaria en un sistema inal\u00e1mbrico. WTLS es un subgrupo de la SSL de Netscape, la cual veremos en el cap\u00edtulo 8. Arriba de la capa anterior se encuentra la capa de transacciones, la cual maneja de manera confiable o no confiable las solicitudes y respuestas. Esta capa reemplaza a TCP, que no se utiliza a trav\u00e9s del enlace de aire por razones de eficiencia. A continuaci\u00f3n se encuentra una capa de sesi\u00f3n, que es similar a HTTP/1.1 pero tiene algunas restricciones y extensiones para prop\u00f3sitos de optimizaci\u00f3n. En la parte superior se encuentra un micronavegador (WAE). Adem\u00e1s del costo, el otro aspecto que sin duda da\u00f1a la aceptaci\u00f3n de WAP es el hecho de que no utiliza HTML. En su lugar, la capa WAE utiliza un lenguaje de marcado llamado WML (Lenguaje de Marcado Inal\u00e1mbrico), que es una aplicaci\u00f3n de XML. Como consecuencia, en principio, un dispositivo WAP s\u00f3lo puede acceder aquellas p\u00e1ginas que se han convertido a WML. Sin embargo, debido a que esto restringe el valor de WAP, la arquitectura exige un filtro al vuelo de HTML a WML para incrementar el conjunto de p\u00e1ginas disponibles. Esta arquitectura se ilustra en la figura 7-49. Con toda justicia, WAP probablemente estaba adelantado a su \u00e9poca. Cuando se inici\u00f3 WAP por primera vez, XML ya era muy conocido fuera del W3C por lo que la prensa anunci\u00f3 su lanzamiento como WAP NO UTILIZA HTML. Un encabezado m\u00e1s preciso habr\u00eda sido: WAP YA UTILIZA EL NUEVO EST\u00c1NDAR HTML. Pero una vez hecho el da\u00f1o, fue dif\u00edcil repararlo y WAP 1.0 nunca tuvo popularidad. Analizaremos WAP despu\u00e9s de echar un vistazo a su mayor competidor.\nSEC. 7.3\n665\nWORLD WIDE WEB Servidor Web\nFiltro de HTML a WML HT M L\nW M L\nEstaci\u00f3n base\nWTP Internet WML Dispositivo WAP\nPuerta de enlace WAP\nFigura 7-49. La arquitectura de WAP.\nI-mode Mientras un consorcio de m\u00faltiples industrias de fabricantes de telecomunicaciones y compa\u00f1\u00edas de computadoras estaba ocupado elaborando con dificultad un est\u00e1ndar abierto utilizando la versi\u00f3n m\u00e1s avanzada disponible de HTML, en Jap\u00f3n se estaban realizando otros desarrollos. Una mujer japonesa, Mari Matsunaga, invent\u00f3 un m\u00e9todo diferente para la Web inal\u00e1mbrica llamado i-mode (information-mode). Mari convenci\u00f3 al subsidiario inal\u00e1mbrico del primer monopolio de telefon\u00eda japonesa de que su m\u00e9todo era correcto, y en febrero de 1999 NTT DoCoMo (literalmente: Japanese Telephone and Telegraph Company a donde quiera que vaya) lanz\u00f3 el servicio en Jap\u00f3n. En los siguientes tres a\u00f1os tuvo cerca de 35 millones de suscriptores japoneses, quienes pod\u00edan acceder aproximadamente 40,000 sitios Web de i-mode especiales. Tambi\u00e9n ten\u00eda la admiraci\u00f3n de las compa\u00f1\u00edas de telecomunicaciones por su \u00e9xito financiero, especialmente debido a que parec\u00eda que WAP no iba a ning\u00fan lado. A continuaci\u00f3n echaremos un vistazo a lo que es i-mode y c\u00f3mo funciona. El sistema i-mode tiene tres componentes principales: un nuevo sistema de transmisi\u00f3n, un nuevo microtel\u00e9fono y un nuevo lenguaje para el dise\u00f1o de p\u00e1ginas Web. El sistema de transmisi\u00f3n consiste en dos redes separadas: la red de tel\u00e9fonos m\u00f3viles de conmutaci\u00f3n de circuitos existente (un tanto similar a D-AMPS) y una nueva red de conmutaci\u00f3n de paquetes construida espec\u00edficamente para el servicio i-mode. El modo de voz utiliza la red de conmutaci\u00f3n de circuitos y se cobra por minuto de tiempo de conexi\u00f3n. i-mode utiliza la red de conmutaci\u00f3n de paquetes y siempre est\u00e1 activo (al igual que ADSL o el cable), por lo que no se cobra una tarifa por tiempo de conexi\u00f3n. En su lugar, se cobra por paquete enviado. En la actualidad no es posible utilizar las dos redes al mismo tiempo. Los microtel\u00e9fonos se parecen a los tel\u00e9fonos m\u00f3viles, pero adem\u00e1s tienen una pantalla peque\u00f1a. NTT DoCoMo promociona los dispositivos i-mode como tel\u00e9fonos m\u00f3viles mejorados y no como terminales Web inal\u00e1mbricas, aunque esto es precisamente lo que son. De hecho, probablemente la mayor\u00eda de los clientes no est\u00e1n concientes de que est\u00e1n en Internet. Consideran a sus\n666\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\ndispositivos i-mode como tel\u00e9fonos m\u00f3viles con servicios mejorados. Al apegarnos a la idea de que el modelo de i-mode es un servicio, los microtel\u00e9fonos no pueden ser programados por usuarios, aunque contienen el equivalente de una PC de 1995 y probablemente podr\u00edan ejecutar Windows 95 o UNIX. Cuando se hace la conmutaci\u00f3n del microtel\u00e9fono de i-mode, se presenta al usuario una lista de categor\u00edas de los servicios aprobados oficialmente. Hay cerca de 1000 servicios divididos en 20 categor\u00edas. Cada uno, que en realidad es un peque\u00f1o sitio Web i-mode, es ejecutado por una compa\u00f1\u00eda independiente. La categor\u00eda principal del men\u00fa oficial incluye correo electr\u00f3nico, noticias, clima, deportes, juegos, compras, mapas, hor\u00f3scopos, entretenimiento, viajes, gu\u00edas regionales, sonidos de tel\u00e9fono, recetas, casinos, sistema bancario dom\u00e9stico y valores de la bolsa. El servicio est\u00e1 dirigido a adolescentes y a personas en sus 20s, quienes tienden a amar los cosas electr\u00f3nicas, especialmente si vienen en colores de moda. El simple hecho de que cerca de 40 compa\u00f1\u00edas est\u00e9n vendiendo sonidos de tel\u00e9fono significa algo. La aplicaci\u00f3n m\u00e1s popular es el correo electr\u00f3nico, que permite mensajes de hasta 500 bytes y, por lo tanto, se considera como una gran mejora en comparaci\u00f3n con SMS (Servicio de Mensajes Cortos) que permite mensajes de hasta 160 bytes. Los juegos tambi\u00e9n son populares. Tambi\u00e9n hay cerca de 40,000 sitios Web i-mode, pero tienen que accederse escribiendo su URL, en lugar de seleccionarlos de un men\u00fa. En este sentido, la lista oficial es como un portal de Internet que permite que otros sitios Web se accedan haciendo clic en un hiperv\u00ednculo en lugar de escribir un URL. NTT DoCoMo controla en forma estricta los servicios oficiales. Para ser aceptado en la lista, un servicio debe cumplir varios criterios publicados. Por ejemplo, un servicio no debe ser una mala influencia para la sociedad, los diccionarios japon\u00e9s-ingl\u00e9s deben tener suficientes palabras, los servicios que proporcionan sonidos de tel\u00e9fono deben agregar con frecuencia nuevos sonidos y ning\u00fan sitio debe alentar el comportamiento anormal o decir algo malo de NTT DoCoMo (Frengle, 2002). Los 40,000 sitios de Internet pueden hacer lo que quieran. El modelo de negocios de i-mode es tan diferente del de la Internet convencional que vale la pena explicarlo. La cuota b\u00e1sica de suscripci\u00f3n a i-mode es de algunos d\u00f3lares mensuales. Puesto que hay un cargo por cada paquete recibido, la suscripci\u00f3n b\u00e1sica incluye un peque\u00f1o n\u00famero de paquetes. De manera alterna, el cliente puede elegir una suscripci\u00f3n con m\u00e1s paquetes gratis, en la que el cargo por paquete desciende bruscamente conforme avanza de 1 MB hasta 10 MB por mes. Si los paquetes gratis se acaban a la mitad del mes, es posible comprar paquetes adicionales en l\u00ednea. Para utilizar un servicio, debe suscribirse a \u00e9l, lo que se logra con s\u00f3lo hacer clic en \u00e9l e introduciendo su c\u00f3digo PIN. La mayor\u00eda de los servicios oficiales cuesta cerca de $1 a $2 mensuales. NTT DoCoMo agrega el cargo al recibo telef\u00f3nico y da el 91% de tal cargo al proveedor del servicio, y se queda con el 9%. Si un servicio no oficial tiene un mill\u00f3n de clientes, tiene que enviar mensualmente un mill\u00f3n de facturas de (aproximadamente) $1 cada una. Si ese servicio se vuelve oficial, NTT DoCoMo maneja la facturaci\u00f3n y s\u00f3lo transfiere $910,000 mensualmente a la cuenta bancaria del servicio. No tener que manejar la facturaci\u00f3n es un gran incentivo para que un proveedor de servicios se vuelva oficial, lo cual genera m\u00e1s ingresos para NTT DoCoMo. Adem\u00e1s, el hecho de ser oficial lo coloca en el men\u00fa inicial, que hace que su sitio sea m\u00e1s f\u00e1cil\nSEC. 7.3\nWORLD WIDE WEB\n667\nde encontrar. El recibo telef\u00f3nico del usuario incluye llamadas telef\u00f3nicas, cargos por suscripci\u00f3n a i-mode, cargos por suscripci\u00f3n a servicios y paquetes extra. A pesar de su gran \u00e9xito en Jap\u00f3n, a\u00fan no es claro si tendr\u00e1 \u00e9xito en Estados Unidos y en Europa. De alguna forma, las circunstancias japonesas son diferentes a las de Occidente. Primero, la mayor\u00eda de los clientes potenciales occidentales (por ejemplo, adolescentes, universitarios y personas de negocios) ya tienen en casa una PC con una gran pantalla y, seguramente, con una conexi\u00f3n a Internet con una velocidad de por lo menos 56 kbps, y con frecuencia mucho m\u00e1s. En Jap\u00f3n pocas personas tienen en casa una PC conectada a Internet, en parte debido a la falta de espacio, pero tambi\u00e9n debido a los exorbitantes cargos de NTT por los servicios locales telef\u00f3nicos (aproximadamente $700 por instalar una l\u00ednea y $1.50 la hora por llamadas locales). Para la mayor\u00eda de los usuarios, i-mode es la \u00fanica conexi\u00f3n a Internet. Segundo, las personas occidentales no est\u00e1n acostumbradas a pagar $1 mensual por acceder al sitio Web de CNN, $1 mensual por acceder al sitio Web de Yahoo, $1 mensual por acceder el sitio Web de Google, etc\u00e9tera, sin mencionar la cuota por MB descargados. En la actualidad la mayor\u00eda de los proveedores de Internet occidentales cobran una cuota mensual sin importar el uso real, principalmente como respuesta a las exigencias del cliente. Tercero, para muchos japoneses el horario de cuota normal es mientras se trasladan en tren o en el metro. En Europa se trasladan por tren menos personas que en Jap\u00f3n, y en Estados Unidos casi nadie lo hace. Usar i-mode en casa junto a la computadora con monitor de 17 pulgadas, conexi\u00f3n ADSL de 1 Mbps, y todos los megabytes que quiera gratis no tiene mucho sentido. Sin embargo, nadie predijo la inmensa popularidad de los tel\u00e9fonos m\u00f3viles, por lo que i-mode a\u00fan podr\u00eda encontrar un lugar en Occidente. Como mencionamos anteriormente, los microtel\u00e9fonos de i-mode utilizan la red de conmutaci\u00f3n de circuitos existente para voz y una nueva red de conmutaci\u00f3n de paquetes para datos. La red de datos se basa en CDMA y transmite paquetes de 128 bytes a 9600 bps. En la figura 7-50 se muestra un diagrama de la red. Los microtel\u00e9fonos hablan LTP (Protocolo de Transporte de Carga Ligera) a trav\u00e9s del enlace de aire hacia una puerta de enlace de conversi\u00f3n de protocolo. Dicha puerta de enlace tiene una conexi\u00f3n de fibra \u00f3ptica de banda ancha con el servidor i-mode, que est\u00e1 conectado a todos los servicios. Cuando el usuario selecciona un servicio del men\u00fa oficial, la solicitud se env\u00eda al servidor i-mode, que almacena en cach\u00e9 la mayor\u00eda de las p\u00e1ginas para mejorar el desempe\u00f1o. Las solicitudes a sitios que no est\u00e1n en el men\u00fa oficial ignoran el servidor i-mode y van directamente a trav\u00e9s de Internet. Los microtel\u00e9fonos actuales tienen CPUs que se ejecutan aproximadamente a 100 MHz, algunos megabytes de memoria ROM (flash ROM), tal vez 1 MB de RAM y una peque\u00f1a pantalla integrada. i-mode requiere que la pantalla sea de por lo menos 72 \u00d7 94 p\u00edxeles, pero algunos dispositivos de alta calidad pueden tener hasta 120 \u00d7 160 p\u00edxeles. Por lo general, las pantallas tienen colores de 8 bits, que permiten 256 colores. Esto no es suficiente para fotograf\u00edas pero es adecuado para dibujos de l\u00edneas y caricaturas sencillas. Puesto que no hay rat\u00f3n, la navegaci\u00f3n en pantalla se realiza con las teclas de flecha. En la figura 7-51 se muestra la estructura del software. La capa inferior consiste en un sistema operativo en tiempo real sencillo para controlar el hardware. Despu\u00e9s se encuentra el m\u00f3dulo para realizar la comunicaci\u00f3n de red, que utiliza el protocolo LTP propietario de NTT DoCoMo.\n668\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nEstaci\u00f3n base L\u00ednea rentada\nServidor i-mode\nProveedor de servicios\nP TC\nLTP LTP\nTCP Microtel\u00e9fono de i-mode\nServicios del men\u00fa oficial\nA red de voz\nPuerta de enlace de conversi\u00f3n de protocolos\nInternet\nConexi\u00f3n directa a Internet\nFigura 7-50. Estructura de la red de datos de i-mode que muestra los protocolos de transporte.\nArriba de eso se encuentra un administrador de ventanas sencillo que maneja texto y gr\u00e1ficos simples (archivos GIF). Debido a que las pantallas por lo mucho son de 120 \u00d7 160 p\u00edxeles, no hay mucho que manejar. M\u00f3dulo de interacci\u00f3n con el usuario Plug-ins\nInt\u00e9rprete cHTML\nJava\nAdministrador de ventanas sencillas Comunicaci\u00f3n de red Sistema operativo en tiempo real\nFigura 7-51. Estructura del software de i-mode.\nLa cuarta capa contiene el int\u00e9rprete de la p\u00e1gina Web (es decir, el navegador). i-mode no utiliza el HTML completo, sino un subconjunto de \u00e9l, llamado cHTML (compact HTML, HTML compacto), que se basa ligeramente en HTML 1.0. Esta capa tambi\u00e9n permite aplicaciones auxiliares y plug-ins, al igual que lo hacen los navegadores de las PCs. Una aplicaci\u00f3n auxiliar est\u00e1ndar es un int\u00e9rprete de una versi\u00f3n ligeramente modificada de JVM. En la parte superior se encuentra un m\u00f3dulo de interacci\u00f3n con el usuario, el cual maneja la comunicaci\u00f3n con el usuario. Ahora demos un vistazo m\u00e1s de cerca al cHTML. Como dijimos, es parecido a HTML 1.0, con algunas omisiones y algunas extensiones para utilizarlo en microtel\u00e9fonos m\u00f3viles. Se emiti\u00f3 al W3C para su estandarizaci\u00f3n, pero \u00e9ste mostr\u00f3 poco inter\u00e9s en \u00e9l, por lo que es probable que permanezca como un producto propietario.\nSEC. 7.3\n669\nWORLD WIDE WEB\nSe permite la mayor\u00eda de las etiquetas b\u00e1sicas HTML, entre ellas , , , , , ,\n, , ,\n- , ,\n, , , e . Las etiquetas e no est\u00e1n permitidas. La etiqueta se permite para enlazar p\u00e1ginas, pero con el esquema adicional tel para marcar n\u00fameros telef\u00f3nicos. En un sentido, tel es an\u00e1logo a mailto. Cuando se selecciona un hiperv\u00ednculo que utiliza mailto, el navegador despliega un formulario para enviar correo electr\u00f3nico al destino nombrado en el v\u00ednculo. Cuando se selecciona un hiperv\u00ednculo que utiliza el esquema tel, el navegador marca el n\u00famero telef\u00f3nico. Por ejemplo, una libreta de direcciones podr\u00eda tener fotos sencillas de varias personas. Cuando se seleccione una de ellas, el microtel\u00e9fono llamar\u00e1 a la persona correspondiente. El RFC 2806 analiza los URLs telef\u00f3nicos. El navegador cHTML est\u00e1 limitado de otras formas. No soporta JavaScript, tramas, hojas de estilo, colores de fondo o im\u00e1genes de fondo. Tampoco soporta im\u00e1genes JPEG debido a que tardan mucho en descomprimirse. Los subprogramas de Java est\u00e1n permitidos, pero est\u00e1n (actualmente) limitados a 10 KB debido a la velocidad lenta de transmisi\u00f3n a trav\u00e9s del enlace de aire. Aunque NTT DoCoMo elimin\u00f3 algunas etiquetas HTML, tambi\u00e9n agreg\u00f3 otras m\u00e1s. La etiqueta hace que el texto se encienda y se apague. Aunque parece inconsistente prohibir la etiqueta (sobre la base de que los sitios Web no deben manejar la apariencia) y despu\u00e9s agregar la etiqueta , que se refiere solamente a la apariencia, lo hicieron. es otra de las etiquetas nuevas; \u00e9sta desplaza el contenido en la pantalla de forma parecida a un teletipo. Otra caracter\u00edstica nueva es el atributo align de la etiqueta . Es necesario debido a que con una pantalla de, por lo general, 6 filas de 16 caracteres, hay un gran riesgo de que las palabras se partan a la mitad, como se muestra en la figura 7-52(a). Align ayuda a reducir este problema a fin de obtener algo muy parecido a lo que se muestra en la figura 7-52(b). Es interesante mencionar que los japoneses no tienen el problema de que sus palabras se dividan en diversas l\u00edneas. Para el texto kanji, la pantalla se divide en una cuadr\u00edcula rectangular de celdas de 9 \u00d7 10 p\u00edxeles o 12 \u00d7 12 p\u00edxeles, dependiendo de la fuente soportada. Cada celda puede contener exactamente un car\u00e1cter kanji, que es el equivalente de una palabra en ingl\u00e9s. En japon\u00e9s est\u00e1n permitidos los saltos de l\u00edneas entre palabras.\nThe time has com e the walrus sai d to talk of man y things. Of sho es and ships and sealing wax of c (a)\nThe time has come the walrus said to talk of many things. Of shoes and ships and sealing wax (b)\nFigura 7-52. Lewis Carroll conoce una pantalla de 16 \u00d7 6.\nAunque el lenguaje japon\u00e9s tiene decenas de miles de kanji, NTT DoCo-Mo invent\u00f3 otros 166, llamados emoji, pictogramas parecidos a las caritas que se muestran en la figura 7-6. Incluyen s\u00edmbolos para los signos astrol\u00f3gicos, cerveza, hamburguesa, parque de diversiones, cumplea\u00f1os, tel\u00e9fono\n670\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nm\u00f3vil, perro, gato, Navidad, coraz\u00f3n roto, beso, estado de \u00e1nimo, dormil\u00f3n y, claro, uno que significa bonito. Otro nuevo atributo es la capacidad de permitir que los usuarios seleccionen hiperv\u00ednculos mediante el teclado, una propiedad claramente importante en una computadora sin rat\u00f3n. En la figura 7-53 se muestra el archivo cHTML que contiene un ejemplo de c\u00f3mo se utiliza este atributo.\nSeleccione una opci\u00f3n Verifique el correo de voz Verifique el correo electr\u00f3nico Ejecute un juego Figura 7-53. Un ejemplo de un archivo cHTML.\nAuque el cliente est\u00e1 algo limitado, el servidor i-mode es una computadora completamente equipada, con todas las caracter\u00edsticas comunes. Soporta CGI, Perl, PHP, JSP, ASP y todo lo dem\u00e1s que normalmente soportan los servidores Web. En la figura7-54 se muestra una breve comparaci\u00f3n de c\u00f3mo est\u00e1n implementados WAP e i-mode en los sistemas de primera generaci\u00f3n. Aunque algunas de las diferencias parecen peque\u00f1as, por lo general son importantes. Por ejemplo, las personas de 15 a\u00f1os no tienen tarjetas de cr\u00e9dito, por lo que poder comprar productos a trav\u00e9s del comercio electr\u00f3nico y cargarlos al recibo telef\u00f3nico marcan una gran diferencia en su inter\u00e9s en el sistema. Para mayor informaci\u00f3n acerca de i-mode, vea (Frengle, 2002, y Vacca, 2002). Web inal\u00e1mbrica de segunda generaci\u00f3n Se supon\u00eda que WAP 1.0, basado en est\u00e1ndares internacionales reconocidos, ser\u00eda una herramienta seria para la gente de negocios en movimiento. Fracas\u00f3. I-mode era un juguete electr\u00f3nico para los adolescentes japoneses que utilizaban un todo propietario. Fue un gran \u00e9xito. \u00bfQu\u00e9 sucedi\u00f3 a continuaci\u00f3n? Cada lado aprendi\u00f3 algo de la primera generaci\u00f3n de la Web inal\u00e1mbrica. El consorcio WAP aprendi\u00f3 que el contenido importa. No tener un gran n\u00famero de sitios Web que hablan su lenguaje de marcado es fatal. NTT DoCoMo aprendi\u00f3 que un sistema propietario cerrado, estrechamente enlazado con microtel\u00e9fonos y con la cultura japonesa no es un buen producto de exportaci\u00f3n. La conclusi\u00f3n que ambos lados aprendieron es que para convencer a una gran cantidad de sitios Web para que coloquen su contenido en el formato de usted, es necesario tener un lenguaje de marcado estable y abierto que sea aceptado de manera universal. Las guerras de los formatos no son buenas para los negocios. Ambos servicios est\u00e1n cerca de entrar a la tecnolog\u00eda de la segunda generaci\u00f3n de la Web inal\u00e1mbrica. WAP 2.0 existi\u00f3 primero, por lo que lo utilizaremos para nuestro ejemplo. WAP 1.0\nSEC. 7.3\n671\nWORLD WIDE WEB Caracter\u00edstica\nWAP\nI-mode\nQu\u00e9 es\nPila de protocolos\nServicio\nDispositivo\nMicrotel\u00e9fono, PDA, notebook\nMicrotel\u00e9fono\nAcceso\nMarcado telef\u00f3nico\nSiempre activo\nRed subyacente\nConmutaci\u00f3n de circuitos\nDos: circuitos + paquetes\nTasa de datos\n9600 bps\n9600 bps\nPantalla\nMonocroma\nA color\nLenguaje de marcado\nWML (aplicaci\u00f3n XML)\ncHTML\nLenguaje de secuencia de comandos\nWMLscript\nNinguno\nCargos por uso\nPor minuto\nPor paquete\nPago por compras\nTarjeta de cr\u00e9dito\nRecibo telef\u00f3nico\nPictogramas\nNo\nS\u00ed\nEstandarizaci\u00f3n\nEst\u00e1ndar abierto del foro WAP\nPropietario NTT DoCoMo\nEn d\u00f3nde se utiliza\nEuropa, Jap\u00f3n\nJap\u00f3n\nUsuario t\u00edpico\nHombre de negocios\nPersonas j\u00f3venes\nFigura 7-54. Comparaci\u00f3n entre WAP de primera generaci\u00f3n e i-mode.\nobtuvo algunas cosas correctas, y \u00e9stas a\u00fan funcionan. Por ejemplo, WAP se puede transportar en una variedad de redes. La primera generaci\u00f3n utiliz\u00f3 las redes de conmutaci\u00f3n de circuitos, pero las redes de conmutaci\u00f3n de paquetes siempre fueron una opci\u00f3n y a\u00fan lo siguen siendo. Es posible que los sistemas de segunda generaci\u00f3n utilicen la conmutaci\u00f3n de paquetes, por ejemplo, GPRS. Adem\u00e1s, WAP estaba destinado inicialmente para soportar una amplia variedad de dispositivos, desde tel\u00e9fonos m\u00f3viles hasta poderosas computadoras, y todav\u00eda lo est\u00e1. WAP 2.0 tambi\u00e9n tiene algunas nuevas caracter\u00edsticas. Las m\u00e1s significativas son: 1. Modelo push (de actualizaci\u00f3n autom\u00e1tica) y modelo pull (de recepci\u00f3n autom\u00e1tica). 2. Soporte para integrar la telefon\u00eda en las aplicaciones. 3. Mensajer\u00eda multimedia. 4. Inclusi\u00f3n de 264 pictogramas. 5. Interacci\u00f3n con un dispositivo de almacenamiento. 6. Soporte en el navegador para plug-ins. El modelo pull es bien conocido: el cliente solicita una p\u00e1gina y la obtiene. El modelo push soporta el arribo de datos sin que se le solicite, como una retroalimentaci\u00f3n continua de la informaci\u00f3n de la bolsa o alertas de tr\u00e1fico. La voz y los datos est\u00e1n comenzando a combinarse, y WAP 2.0 los soporta en una variedad de formas. Vimos un ejemplo de esto anteriormente con la capacidad de i-mode de llamar a un\n672\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nn\u00famero telef\u00f3nico mediante un hiperv\u00ednculo de icono o fragmento de texto de la pantalla. Adem\u00e1s del correo electr\u00f3nico y la telefon\u00eda, se soporta la mensajer\u00eda multimedia. La gran popularidad del emoji de i-mode estimul\u00f3 al consorcio WAP a inventar 264 de sus propios emoji. Las categor\u00edas incluyen animales, aplicaciones, vestido, estados de \u00e1nimo, comida, cuerpo humano, g\u00e9nero, mapas, m\u00fasica, plantas, deportes, fechas, herramientas, veh\u00edculos, armas y clima. Es interesante que el est\u00e1ndar s\u00f3lo nombra cada pictograma; no proporciona el mapa de bits real, probablemente por miedo a que la representaci\u00f3n de \u201cadormilado\u201d o \u201cabrazo\u201d de algunas culturas podr\u00eda ser insultante para otras. I-mode no tuvo ese problema debido a que estaba destinado para un solo pa\u00eds. El hecho de proveer una interfaz para almacenamiento no significa que cada tel\u00e9fono WAP 2.0 tendr\u00e1 un disco duro grande. La memoria ROM tambi\u00e9n es un dispositivo de almacenamiento. Una c\u00e1mara inal\u00e1mbrica con capacidad WAP podr\u00eda utilizar la memoria ROM para almacenamiento temporal de im\u00e1genes antes de emitir la mejor imagen a Internet. Por \u00faltimo, los plug-ins pueden extender las capacidades del navegador. Tambi\u00e9n se proporciona un lenguaje de secuencias de comandos. En WAP 2.0 tambi\u00e9n hay diversas diferencias t\u00e9cnicas. Las dos m\u00e1s significativas tienen que ver con la pila de protocolos y con el lenguaje de marcado. WAP 2.0 contin\u00faa soportando la antigua pila de protocolos de la figura 7-48, pero tambi\u00e9n soporta la pila est\u00e1ndar de Internet con TCP y HTTP/1.1. Sin embargo, se realizaron cuatro peque\u00f1os (pero compatibles) cambios (para simplificar el c\u00f3digo) a TCP: (1) uso de una ventana fija de 64 KB, (2) inicio r\u00e1pido, (3) una MTU m\u00e1xima de 1500 byte y (4) un algoritmo de retransmisi\u00f3n ligeramente diferente. TLS es el protocolo de seguridad de la capa de transporte estandarizado por IETF; lo examinaremos en el cap\u00edtulo 8. Muchos dispositivos iniciales probablemente contendr\u00e1n ambas pilas, como se muestra en la figura 7-55. XHTML WSP\nHTTP\nWTP\nTLS\nWTLS\nTCP\nWDP\nIP\nCapa del portador\nCapa del portador\nPila de protocolos de WAP 1.0\nPila de protocolos de WAP 2.0\nFigura 7-55. WAP 2.0 soporta dos pilas de protocolos.\nLa otra diferencia t\u00e9cnica con respecto de WAP 1.0 es el lenguaje de marcado. WAP 2.0 soporta XHTML Basic, que est\u00e1 dise\u00f1ado para dispositivos inal\u00e1mbricos peque\u00f1os. Debido a que NTT DoCoMo tambi\u00e9n est\u00e1 de acuerdo en soportar este subconjunto, los dise\u00f1adores de sitios Web pueden utilizar este formato y saber que sus p\u00e1ginas funcionar\u00e1n en la Internet fija y en todos los dispositivos inal\u00e1mbricos. Estas decisiones terminar\u00e1n con las guerras de formatos de lenguaje de marcado que impiden el crecimiento de la industria de la Web inal\u00e1mbrica.\nSEC. 7.3\n673\nWORLD WIDE WEB\nTal vez sean necesarias unas palabras acerca de XHTML Basic. Est\u00e1 dise\u00f1ado para tel\u00e9fonos m\u00f3viles, televisiones, PDAs, m\u00e1quinas vendedoras (refrescos, golosinas), localizadores, carros, m\u00e1quinas tragamonedas y de juego e, incluso, relojes. Por esta raz\u00f3n, no soporta hojas de estilo, secuencias de comandos o tramas, pero s\u00ed soporta la mayor\u00eda de las etiquetas est\u00e1ndar. Est\u00e1n agrupadas en 11 m\u00f3dulos. Algunos son requeridos; algunos son opcionales. Todos est\u00e1n en XML. En la figura 7-56 se listan los m\u00f3dulos y algunas etiquetas de ejemplo. No explicaremos todas las etiquetas de ejemplo, pero puede encontrar mayor informaci\u00f3n en www.w3.org. M\u00f3dulo\n\u00bfRequerido?\nFunci\u00f3n\nEtiquetas de ejemplo\nEstructura\nS\u00ed\nEstructura de documentos\nbody, head, html, title\nTexto\nS\u00ed\nInformaci\u00f3n\nbr, code, dfn, em, hn, kbd, p, strong\nHipertexto\nS\u00ed\nHiperv\u00ednculos\na\nLista\nS\u00ed\nListas de elementos\ndl, dt, dd, ol, ul, li\nFormularios\nNo\nFormularios de relleno\nform, input, label, option, textarea\nTablas\nNo\nTablas rectangulares\ncaption, table, td, th, tr\nImagen\nNo\nIm\u00e1genes\nimg\nObjeto\nNo\nSubprogramas, mapas, etc\u00e9tera\nobject, param\nMetainformaci\u00f3n\nNo\nInformaci\u00f3n extra\nmeta\nV\u00ednculo\nNo\nSimilar a\nlink\nBase\nNo\nPunto de inicio de URL\nbase\nFigura 7-56. Los m\u00f3dulos y etiquetas de XHTML Basic.\nA pesar del acuerdo del uso de XHTML Basic, una amenaza asecha a WAP e i-mode: 802.11. Se supone que la Web inal\u00e1mbrica de segunda generaci\u00f3n se debe ejecutar a 384 kbps, una velocidad mucho mayor que los 9600 bps de la primera generaci\u00f3n, pero mucho menor que los 11 Mbps o 54 Mbps ofrecidos por 802.11. Por supuesto, 802.11 no est\u00e1 en todos lados, pero conforme m\u00e1s restaurantes, hoteles, tiendas, compa\u00f1\u00edas, aeropuertos, estaciones de autob\u00fas, museos, universidades, hospitales y otras organizaciones decidan instalar estaciones base para sus empleados y clientes, tal vez haya mayor cobertura en las \u00e1reas urbanas y las personas est\u00e9n dispuestas a caminar unas cuadras para sentarse en un restaurante de comida r\u00e1pida con capacidad de 802.11 para tomarse una tasa de caf\u00e9 y enviar correo electr\u00f3nico. Tal vez los negocios coloquen de manera rutinaria logos de 802.11 junto a los que muestran las tarjetas de cr\u00e9dito que dichos negocios aceptan, y por la misma raz\u00f3n: para atraer a los clientes. Los mapas de la ciudad (descargables, naturalmente) podr\u00edan mostrar con color verde las \u00e1reas cubiertas y en color rojo las \u00e1reas sin cobertura, de manera que las personas puedan vagar de estaci\u00f3n base a estaci\u00f3n base, al igual que los n\u00f3madas se trasladan de oasis a oasis en el desierto. Aunque los restaurantes de comida r\u00e1pida puedan instalar r\u00e1pidamente estaciones base 802.11, tal vez los granjeros no puedan hacerlo, por lo que la cobertura ser\u00e1 desigual y limitada a las \u00e1reas del centro de la ciudad, debido al rango limitado de 802.11 (unos cuantos cientos de metros por lo mucho). Esto podr\u00eda llevar a dispositivos inal\u00e1mbricos de modo dual que utilicen 802.11 si pueden captar una se\u00f1al y regresar a WAP si no pueden hacerlo.\n674\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\n7.4 MULTIMEDIA La Web inal\u00e1mbrica es un desarrollo nuevo y excitante, pero no es el \u00fanico. Para muchas personas, la multimedia es el Santo Grial de las redes. Cuando se menciona la palabra, los propeller heads y las demandas legales comienzan a babear como si vieran un gran banquete. El primero ve retos t\u00e9cnicos inmensos para proporcionar a cada casa v\u00eddeo (interactivo) bajo demanda. El \u00faltimo ve en ello ganancias inmensas. Debido a que la multimedia requiere un alto ancho de banda, hacer que funcione en conexiones fijas es dif\u00edcil. Incluso el v\u00eddeo de calidad VHS a trav\u00e9s de sistemas inal\u00e1mbricos est\u00e1 a algunos a\u00f1os de distancia, por lo que nos enfocaremos en los sistemas cableados. Literalmente, multimedia son dos o m\u00e1s medios. Si el editor de este libro quisiera unirse a la euforia actual por la multimedia, podr\u00eda anunciar que el libro usa tecnolog\u00eda multimedia. A fin de cuentas, contiene dos medios: texto y gr\u00e1ficos (las figuras). No obstante, cuando la mayor\u00eda de la gente habla de multimedia, por lo general se refiere a la combinaci\u00f3n de dos o m\u00e1s medios continuos, es decir, medios que tienen que ejecutarse durante cierto intervalo de tiempo bien definido, generalmente con alguna interacci\u00f3n con el usuario. En la pr\u00e1ctica, por lo com\u00fan los dos medios son audio y v\u00eddeo, es decir, sonido m\u00e1s im\u00e1genes en movimiento. Sin embargo, muchas personas con frecuencia tambi\u00e9n se refieren al audio puro, como la telefon\u00eda de Internet o la radio en Internet, como multimedia, pero no lo es. Realmente, un mejor t\u00e9rmino es medios de flujo continuo, pero tambi\u00e9n consideraremos el audio en tiempo real como multimedia. En las siguientes secciones analizaremos la forma en que las computadoras procesan el audio y el v\u00eddeo, c\u00f3mo est\u00e1n comprimidos y algunas aplicaciones de red de estas tecnolog\u00edas. Para un an\u00e1lisis (de tres vol\u00famenes) sobre la multimedia en red, vea (Steinmetz y Nahrstedt, 2002; Steinmetz y Nahrstedt, 2003a, y Steinmetz y Nahrstedt, 2003b).\n7.4.1 Introducci\u00f3n al audio digital Una onda de audio (sonido) es una onda ac\u00fastica (de presi\u00f3n) de una dimensi\u00f3n. Cuando una onda ac\u00fastica entra en el o\u00eddo, el t\u00edmpano vibra, causando que los peque\u00f1os huesos del o\u00eddo interno vibren con \u00e9l, enviando pulsos nerviosos al cerebro. El escucha percibe estos pulsos como sonido. De manera parecida, cuando una onda ac\u00fastica incide en un micr\u00f3fono, \u00e9ste genera una se\u00f1al el\u00e9ctrica, que representa la amplitud del sonido como una funci\u00f3n del tiempo. La representaci\u00f3n, procesamiento, almacenamiento y transmisi\u00f3n de tales se\u00f1ales de audio es una parte principal del estudio de los sistemas multimedia. La gama de frecuencias perceptibles por el o\u00eddo humano va de 20 Hz a 20,000 Hz, aunque algunos animales, principalmente los perros, pueden escuchar frecuencias m\u00e1s altas. El o\u00eddo escucha de manera logar\u00edtmica, por lo que la relaci\u00f3n entre dos sonidos de amplitudes A y B se expresa convencionalmente en dB (decibeles) de acuerdo con la f\u00f3rmula dB 10 log10 (A/B)\nSEC. 7.4\n675\nMULTIMEDIA\nSi definimos como 0 dB el l\u00edmite inferior de la audibilidad (una presi\u00f3n de unas 0.0003 dinas/cm2) para una onda senoidal de 1 kHz, una conversaci\u00f3n ordinaria es de unos 50 dB y el umbral del dolor es de 120 dB, lo que representa una gama din\u00e1mica de un factor de un mill\u00f3n. El o\u00eddo es sorprendentemente sensible a variaciones de sonido que duran apenas unos milisegundos. En cambio, el ojo no nota cambios en el nivel de luz que duran unos cuantos milisegundos. El resultado de esta observaci\u00f3n es que fluctuaciones de apenas unos cuantos milisegundos durante una transmisi\u00f3n multimedia afectan la calidad del sonido percibido m\u00e1s que a la calidad de la imagen percibida. Las ondas de audio pueden convertirse a una forma digital mediante un ADC (convertidor anal\u00f3gico a digital). Un ADC toma un voltaje el\u00e9ctrico como entrada y genera un n\u00famero binario como salida. En la figura 7-57(a) se muestra un ejemplo de onda senoidal. Para representar esta se\u00f1al de manera digital, simplemente la muestreamos cada \u0394T segundos, como lo muestra la altura de las barras de la figura 7-57(b). Si una onda de sonido no es una onda senoidal pura, sino una superposici\u00f3n de ondas senoidales en las que la componente de m\u00e1s alta frecuencia es f, entonces el teorema de Nyquist (vea el cap\u00edtulo 2) establece que es suficiente tomar muestras a una frecuencia 2f. Muestrear a una frecuencia mayor no tiene ning\u00fan valor, porque no est\u00e1n presentes las frecuencias mayores que ser\u00edan detectadas por dicho muestreo.\n(a)\n(b)\n(c)\nFigura 7-57. (a) Onda senoidal. (b) Muestreo de la onda senoidal. (c) Cuantizaci\u00f3n de las muestras a 4 bits.\nLas muestras digitales nunca son exactas. Las muestras de la figura 7-57(c) s\u00f3lo permiten nueve valores, de \u22121.00 a + 1.00 en incrementos de 0.25. Una muestra de 8 bits permitir\u00e1 256 valores diferentes. Una muestra de 16 bits permitir\u00e1 65,536 valores diferentes. El error introducido por la cantidad finita de bits por muestra se llama ruido de cuantizaci\u00f3n. Si \u00e9ste es demasiado grande, el o\u00eddo lo detecta. Dos ejemplos bien conocidos de sonido muestreado son el tel\u00e9fono y los discos compactos de audio. La modulaci\u00f3n de c\u00f3digo de pulso, como la usada en el sistema telef\u00f3nico, emplea muestras de 8 bits, 8000 veces por segundo. En Norteam\u00e9rica y Jap\u00f3n, 7 bits son para datos y 1 para control; en Europa, los 8 bits son para datos. Este sistema da una tasa de datos de 56,000 bps o 64,000 bps. Con s\u00f3lo 8000 muestras/seg, las frecuencias por arriba de 4 kHz se pierden.\n676\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nLos CDs de audio son digitales, con una tasa de muestreo de 44,100 muestras/seg, suficientes para capturar frecuencias de hasta 22,050 Hz, lo que es bueno para la gente, malo para los perros. Cada una de las muestras tiene 16 bits, y es lineal dentro de la gama de amplitudes. Observe que las muestras de 16 bits permiten s\u00f3lo 65,536 valores diferentes, aunque la gama din\u00e1mica del o\u00eddo es de aproximadamente 1 mill\u00f3n si se mide en pasos del tama\u00f1o del sonido audible m\u00e1s peque\u00f1o. Por lo tanto, el uso de s\u00f3lo 16 bits por muestra genera ruido de cuantizaci\u00f3n (aunque no se cubre la gama din\u00e1mica completa; se supone que los CDs no deben lastimar). Con 44,100 muestras/seg de 16 bits cada una, un CD de audio necesita un ancho de banda de 705.6 kbps para monof\u00f3nico y 1.411 Mbps para est\u00e9reo. Si bien esto es menos de lo que necesita el v\u00eddeo (vea m\u00e1s adelante), aun as\u00ed se requiere un canal T1 completo para transmitir en tiempo real sonido est\u00e9reo de calidad CD. Las computadoras pueden procesar con facilidad mediante software el sonido digital. Existen docenas de programas para que las computadoras personales permitan que los usuarios graben, desplieguen, editen, mezclen y almacenen ondas de sonido de m\u00faltiples fuentes. En la actualidad, casi toda la grabaci\u00f3n y edici\u00f3n profesional de sonido es digital. La m\u00fasica, por supuesto, es simplemente un caso especial del audio general, pero es importante. Otro caso especial muy importante es la voz. La voz humana tiende a estar en el rango de 600 a 6000 Hz. La voz se compone de vocales y consonantes, las cuales tienen propiedades diferentes. Las vocales se producen cuando el tracto vocal est\u00e1 libre, produciendo resonancias cuya frecuencia fundamental depende del tama\u00f1o y de la forma del sistema vocal y de la posici\u00f3n de la lengua y mand\u00edbula de quien habla. Estos sonidos son casi peri\u00f3dicos en intervalos de aproximadamente 30 mseg. Las consonantes se producen cuando el tracto vocal est\u00e1 bloqueado parcialmente. Estos sonidos son menos regulares que las vocales. Algunos sistemas de transmisi\u00f3n y generaci\u00f3n de voz utilizan modelos del sistema vocal para reducir la voz a unos cuantos par\u00e1metros (por ejemplo, los tama\u00f1os y las formas de diversas cavidades), en lugar de simplemente muestrear la forma de onda de la voz. Sin embargo, la forma en que funcionan estos codificadores de voz est\u00e1 m\u00e1s all\u00e1 del alcance de este libro.\n7.4.2 Compresi\u00f3n de audio El audio con calidad de CD requiere un ancho de banda de transmisi\u00f3n de 1.411 Mbps, como acabamos de ver. Claramente, la compresi\u00f3n sustancial se necesita para hacer que la transmisi\u00f3n a trav\u00e9s de Internet sea pr\u00e1ctica. Por esta raz\u00f3n, se han desarrollado varios algoritmos de compresi\u00f3n de audio. Tal vez el m\u00e1s popular es el audio MPEG, que tiene tres capas (variantes), de las cuales MP3 (capa de audio 3 de MPEG) es la m\u00e1s poderosa y mejor conocida. En Internet hay cantidades considerables de m\u00fasica en formato MP3, no todos legales, lo que ha resultado en varias demandas de los artistas y propietarios de derechos de autor. MP3 pertenece a la porci\u00f3n de audio del est\u00e1ndar de compresi\u00f3n de v\u00eddeo de MPEG. M\u00e1s adelante en este cap\u00edtulo analizaremos la compresi\u00f3n de v\u00eddeo; por ahora veremos la compresi\u00f3n de audio. La compresi\u00f3n de audio se puede realizar de una de dos formas. En la codificaci\u00f3n de forma de onda la se\u00f1al se transforma de manera matem\u00e1tica en sus componentes de frecuencia mediante\nSEC. 7.4\nMULTIMEDIA\n677\nuna transformaci\u00f3n de Fourier. La figura 2-1(a) muestra una funci\u00f3n de ejemplo de tiempo y sus amplitudes de Fourier. Por lo tanto, la amplitud de cada componente se codifica en una forma m\u00ednima. El objetivo es reproducir la forma de onda de manera precisa en el otro extremo utilizando los menos bits posibles. La otra forma, codificaci\u00f3n perceptual, aprovecha ciertas fallas del sistema auditivo humano para codificar una se\u00f1al a fin de que suene de la misma forma para un escucha, aunque dicha se\u00f1al luzca de manera diferente en un osciloscopio. La codificaci\u00f3n perceptual se basa en la ciencia de psicoac\u00fastica \u2014c\u00f3mo perciben las personas un sonido. MP3 se basa en la codificaci\u00f3n perceptual. La propiedad clave de la codificaci\u00f3n perceptual es que algunos sonidos pueden enmascarar otros sonidos. Imagine que est\u00e1 difundiendo un concierto de flauta en vivo en un d\u00eda caluroso de verano. De repente, un grupo de trabajadores que est\u00e1 cerca enciende sus martillos perforadores y comienza a romper la calle. Ya nadie puede escuchar la flauta. Sus sonidos han sido enmascarados por los de los martillos perforadores. Para prop\u00f3sitos de transmisi\u00f3n, ahora es suficiente con codificar s\u00f3lo la banda de frecuencia utilizada por los martillos perforadores, pues de cualquier forma las personas no pueden escuchar la flauta. A esto se le conoce como enmascaramiento de frecuencia \u2014la capacidad que tiene un sonido fuerte en una banda de frecuencia de ocultar un sonido m\u00e1s suave en otra banda de frecuencia, el cual podr\u00eda ser audible si el sonido fuerte no estuviera presente. De hecho, incluso despu\u00e9s de que los martillos perforadores pararan, la flauta no se escuchar\u00eda por un periodo corto debido a que el o\u00eddo reduce su ganancia cuando los martillos comienzan y toma un tiempo finito para aumentarlo nuevamente. Este efecto se conoce como enmascaramiento temporal. Para hacer que estos efectos sean m\u00e1s cuantitativos, imagine el experimento 1. Una persona en un sal\u00f3n silencioso se pone unos aud\u00edfonos que est\u00e1n conectados a la tarjeta de sonido de una computadora. \u00c9sta genera una onda senoidal pura a 100 Hz, pero incrementa la potencia de manera gradual. Se le indica a la persona que pulse una tecla cuando escuche el tono. La computadora graba el nivel de potencia actual y despu\u00e9s repite el experimento a 200 Hz, 300 Hz y dem\u00e1s frecuencias hasta el l\u00edmite del o\u00eddo humano. Cuando se calcula un promedio a partir de varias personas, un gr\u00e1fico de registro a registro de cu\u00e1nta potencia se necesita para que un tono sea audible luce como el que se muestra en la figura 7-58(a). Una consecuencia directa de esta curva es que nunca es necesario codificar ninguna frecuencia cuya potencia est\u00e9 por debajo del umbral de audibilidad. Por ejemplo, si la potencia de 100 Hz fuera 20 dB en la figura 7-58(a), se podr\u00eda omitir de la salida sin ninguna p\u00e9rdida perceptible de calidad debido a que 20 dB a 100 Hz est\u00e1n debajo del nivel de audibilidad. Ahora considere el experimento 2. La computadora realiza otra vez el experimento 1, pero esta vez con una onda senoidal de amplitud constante a, digamos, 150 Hz, superimpuesta en la frecuencia de prueba. Lo que descubrimos es que se incrementa el umbral de audibilidad para las frecuencias que est\u00e1n cerca de 150 Hz, como se muestra en la figura 7-58(b). La consecuencia de esta nueva observaci\u00f3n es que al mantener un registro de cu\u00e1les se\u00f1ales est\u00e1n siendo enmascaradas por se\u00f1ales m\u00e1s poderosas de bandas de frecuencia cercanas, podemos omitir m\u00e1s y m\u00e1s frecuencias en la se\u00f1al codificada, lo que ahorra bits. En la figura 7-58, la se\u00f1al a 125 Hz se puede omitir por completo de la salida y nadie notar\u00e1 la diferencia. Aunque una\n678\nLA CAPA DE APLICACI\u00d3N\nCAP. 7 Umbral de audibilidad\nUmbral de audibilidad\nFrecuencia (kHz)\nPotencia (dB)\nPotencia (dB)\nSe\u00f1al enmascarada\nEnmascaramiento de se\u00f1al a 150 Hz\nFrecuencia (kHz)\n(a)\n(b)\nFigura 7-58. (a) Umbral de audibilidad como una funci\u00f3n de frecuencia. (b) Efecto de enmascaramiento.\nse\u00f1al poderosa se detenga en alguna banda de frecuencia, si conocemos sus propiedades de enmascaramiento temporal, podemos continuar omitiendo las frecuencias enmascaradas por alg\u00fan intervalo de tiempo mientras el o\u00eddo se recupera. La esencia de MP3 es transformar mediante un an\u00e1lisis de Fourier el sonido para obtener la potencia de cada frecuencia y despu\u00e9s transmitir s\u00f3lo las frecuencias no enmascaradas, codificando \u00e9stas con los menos bits posibles. Con esta informaci\u00f3n como base, ahora podemos ver c\u00f3mo se realiza la codificaci\u00f3n. La compresi\u00f3n de audio se realiza muestreando la forma de onda a 32, 44.1 o 48 kHz. El muestreo puede realizarse en uno de dos canales, en cualquiera de cuatro configuraciones: 1. Monof\u00f3nica (un solo flujo de entrada). 2. Monof\u00f3nica dual (por ejemplo, una pista sonora en ingl\u00e9s y una en japon\u00e9s). 3. Est\u00e9reo separado (cada canal se comprime por separado). 4. Est\u00e9reo unido (redundancia intercanal completamente explotada). Primero se elige la tasa de bits de salida. MP3 puede comprimir un CD de est\u00e9reo de rock and roll a 96 kbps con una p\u00e9rdida de calidad apenas perceptible, incluso para los fan\u00e1ticos del rock and roll que no tienen p\u00e9rdida del o\u00eddo. Para un concierto de piano, se necesitan por lo menos 128 kbps. Esto difiere porque la relaci\u00f3n se\u00f1al a ruido para el rock and roll es m\u00e1s alta que la de un concierto de piano (en el sentido de la ingenier\u00eda). Tambi\u00e9n es posible elegir tasas de salida m\u00e1s bajas y aceptar alguna p\u00e9rdida en la calidad. Despu\u00e9s, las muestras se procesan en grupos de 1152 (aproximadamente 26 mseg). Cada grupo primero se pasa a trav\u00e9s de 32 filtros digitales para obtener 32 bandas de frecuencia. Al mismo tiempo, la entrada se coloca en un modelo psicoac\u00fastico para determinar las frecuencias enmascaradas. A continuaci\u00f3n, cada una de las 32 bandas de frecuencia se transforman a\u00fan m\u00e1s para proporcionar una resoluci\u00f3n espectral m\u00e1s fina. En la siguiente fase, los bits disponibles se dividen entre las bandas; la mayor\u00eda de los bits se asignan a las bandas con la mayor potencia espectral no enmascarada, a las bandas no enmascaradas con menos potencia espectral se les asignan muy pocos bits y a las bandas enmascaradas no se les\nSEC. 7.4\n679\nMULTIMEDIA\nasignan bits. Por \u00faltimo, los bits se codifican mediante la codificaci\u00f3n de Huffman, que asigna c\u00f3digos cortos a n\u00fameros que aparecen frecuentemente, y c\u00f3digos largos a aquellos que no ocurren con frecuencia. En realidad hay mucho m\u00e1s que decir. Tambi\u00e9n se utilizan varias t\u00e9cnicas para la reducci\u00f3n del ruido, el suavizado y la explotaci\u00f3n de la redundancia de intercanal, si es posible, pero \u00e9stas est\u00e1n m\u00e1s all\u00e1 del alcance de este libro. Una introducci\u00f3n matem\u00e1tica a este proceso se proporciona en (Pan, 1995).\n7.4.3 Audio de flujo continuo Ahora mov\u00e1monos de la tecnolog\u00eda del audio digital a tres de sus aplicaciones de red. La primera es el audio de flujo continuo, es decir, escuchar el sonido a trav\u00e9s de Internet. A esto tambi\u00e9n se le conoce como m\u00fasica bajo demanda. En las siguientes dos veremos la radio en Internet y la voz sobre IP, respectivamente. Internet est\u00e1 lleno de sitios Web de m\u00fasica, muchos de los cuales listan t\u00edtulos de canciones en los que los usuarios pueden hacer clic para reproducir esas canciones. Algunos de \u00e9stos son sitios gratuitos (por ejemplo, las nuevas bandas que buscan publicidad); otros requieren un pago a cambio de la m\u00fasica, aunque \u00e9stos con frecuencia tambi\u00e9n ofrecen algunas muestras gratis (por ejemplo, los primeros 15 seg de una canci\u00f3n). En la figura 7-59 se muestra la forma m\u00e1s directa para hacer que se reproduzca la m\u00fasica. M\u00e1quina cliente\nM\u00e1quina servidora\n1. Establece la conexi\u00f3n TCP 2. Env\u00eda la solicitud GET de HTTP\nReproductor de medios\nNavegador\n3. El servidor obtiene el archivo del disco\nServidor Web\n4. El archivo se regresa 5. El navegador escribe el archivo en el disco 6. El reproductor de medios obtiene el archivo bloque por bloque y lo ejecuta\nDisco\nDisco\nFigura 7-59. Una forma directa de implementar en una p\u00e1gina Web m\u00fasica en la que se pueda hacer clic.\nEl proceso inicia cuando el usuario hace clic en una canci\u00f3n. A continuaci\u00f3n el navegador entra en acci\u00f3n. El paso 1 consiste en que \u00e9ste establezca una conexi\u00f3n TCP con el servidor Web con el que la canci\u00f3n est\u00e1 vinculada. El paso 2 consiste en enviar una solicitud GET en HTTP para pedir la canci\u00f3n. A continuaci\u00f3n (pasos 3 y 4), el servidor obtiene la canci\u00f3n (que es simplemente un archivo en MP3 o en alg\u00fan otro formato) del disco y la regresa al navegador. Si el archivo es m\u00e1s grande que la memoria del servidor, tal vez obtenga y env\u00ede la m\u00fasica un bloque a la vez. El navegador investiga, mediante el tipo MIME, por ejemplo, audio/mp3 (o la extensi\u00f3n de archivo), c\u00f3mo se supone que debe desplegar el archivo. Por lo general, habr\u00e1 una aplicaci\u00f3n auxiliar, como RealOne Player, el Reproductor de Windows Media o Winamp, asociado con este tipo de archivos. Debido a que la forma usual de que el navegador se comunique con una aplicaci\u00f3n\n680\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nauxiliar es escribir el contenido en un archivo de trabajo, primero guardar\u00e1 en el disco todo el archivo de m\u00fasica como un archivo de trabajo (paso 5). Despu\u00e9s iniciar\u00e1 el reproductor de medios y pasar\u00e1 el nombre del archivo de trabajo. En el paso 6, el reproductor de medios comienza a obtener y a reproducir la m\u00fasica bloque por bloque. Al principio, este enfoque es correcto y reproducir\u00e1 la m\u00fasica. El \u00fanico problema es que la canci\u00f3n completa debe transmitirse a trav\u00e9s de la red antes de que comience la m\u00fasica. Si la canci\u00f3n mide 4 MB (un tama\u00f1o t\u00edpico para una canci\u00f3n MP3) y el m\u00f3dem es de 56 kbps, el usuario obtendr\u00e1 casi 10 minutos de silencio mientras la canci\u00f3n se descarga. No a todos los amantes de la m\u00fasica les gusta esta idea. Especialmente debido a que la siguiente canci\u00f3n tambi\u00e9n iniciar\u00e1 despu\u00e9s de 10 minutos de descarga, y as\u00ed sucesivamente. Para resolver este problema sin cambiar la forma en que funciona el navegador, los sitios de m\u00fasica han adoptado el siguiente esquema. El archivo vinculado al t\u00edtulo de la canci\u00f3n no es el archivo de m\u00fasica real. En su lugar, es lo que se llama un metaarchivo, que es un archivo muy peque\u00f1o que s\u00f3lo nombra a la m\u00fasica. Un metaarchivo t\u00edpico podr\u00eda ser una sola l\u00ednea de texto ASCII y podr\u00eda lucir como lo siguiente: rtsp://joes-audio-server/song-0025.mp3\nCuando el navegador obtiene el archivo de una l\u00ednea, lo escribe en el disco en un archivo de trabajo, inicia el reproductor de medios como una aplicaci\u00f3n auxiliar, y le entrega el nombre del archivo de trabajo, como es usual. A continuaci\u00f3n el reproductor de medios lee dicho archivo y ve que contiene un URL. Enseguida contacta al servidor joes-audio-server y le pide la canci\u00f3n. Observe que el navegador ya no est\u00e1 en el ciclo. En muchos casos, el servidor nombrado en el metaarchivo no es el mismo que el servidor Web. De hecho, por lo general ni siquiera es un servidor HTTP, sino un servidor de medios especializado. En este ejemplo, el servidor de medios utiliza RTSP (Protocolo de Transmisi\u00f3n en Tiempo Real), como se indica en el nombre de esquema rtsp. \u00c9ste se describe en el RFC 2326. El reproductor de medios tiene cuatro trabajos principales: 1. Administrar la interfaz de usuario. 2. Manejar los errores de transmisi\u00f3n. 3. Descomprimir la m\u00fasica. 4. Eliminar la fluctuaci\u00f3n. En la actualidad, la mayor\u00eda de los reproductores de medios tienen una interfaz de usuario brillante que algunas veces simula una unidad de est\u00e9reo, con botones, palancas, barras deslizantes y despliegues visuales. Por lo general hay paneles frontales intercambiables, llamados m\u00e1scaras (skins), que el usuario puede colocar en el reproductor. El reproductor de medios tiene que manejar todo esto e interactuar con el usuario. Su segundo trabajo es tratar con los errores. La transmisi\u00f3n de m\u00fasica en tiempo real raramente utiliza TCP porque un error y una retransmisi\u00f3n podr\u00edan introducir un hueco demasiado grande en la m\u00fasica. En su lugar, la transmisi\u00f3n real por lo com\u00fan se realiza con un protocolo como RTP,\nSEC. 7.4\n681\nMULTIMEDIA\nel cual estudiamos en el cap\u00edtulo 6. Al igual que la mayor\u00eda de los protocolos en tiempo real, la capa de RTP se encuentra encima de UDP, por lo que los paquetes pueden perderse. El reproductor es quien tiene que tratar esto. En algunos casos, la m\u00fasica se intercala para facilitar el manejo de errores. Por ejemplo, un paquete podr\u00eda contener 220 muestras de est\u00e9reo, cada una con un par de n\u00fameros de 16 bits, lo que normalmente est\u00e1 bien para 5 mseg de m\u00fasica. Pero tal vez el protocolo env\u00ede todas las muestras impares en un intervalo de 10 mseg en un paquete, y todas las muestras pares en el siguiente. Por lo tanto, un paquete perdido no representa un hueco de 5 mseg en la m\u00fasica, sino la p\u00e9rdida de cualquier otra muestra durante 10 mseg. Esta p\u00e9rdida puede manejarse f\u00e1cilmente haciendo que el reproductor de medios realice una interpolaci\u00f3n mediante las muestras anterior y posterior para estimar el valor faltante. En la figura 7-60 se ilustra el uso de intercalaci\u00f3n para la recuperaci\u00f3n de errores. Cada paquete contiene las muestras de tiempo alternadas durante un intervalo de 10 mseg. En consecuencia, perder el paquete 3, como se muestra, no crea un hueco en la m\u00fasica, s\u00f3lo reduce la resoluci\u00f3n temporal por alg\u00fan tiempo. Los valores faltantes pueden interpolarse para proporcionar m\u00fasica continua. Este esquema particular s\u00f3lo funciona con el muestreo sin comprimir, pero muestra la forma en que un c\u00f3digo adecuado puede hacer que un paquete perdido signifique menos calidad en lugar de un hueco de tiempo. Sin embargo, el RFC 3119 proporciona un esquema que funciona con el audio comprimido. Este paquete contiene 220 muestras de tiempo par\nEste paquete contiene 220 muestras de tiempo impar\n(a)\nP\u00e9rdida\nPaquete\nLeyenda Muestra de tiempo par Muestra de tiempo impar\n(b)\nTiempo (mseg)\nFigura 7-60. Cuando los paquetes transportan muestras alternas, la p\u00e9rdida de un paquete reduce la resoluci\u00f3n temporal en lugar de crear un hueco en el tiempo.\nEl tercer trabajo del reproductor de medios es descomprimir la m\u00fasica. Aunque esta tarea es intensa para la computadora, es muy directa. El cuarto trabajo es eliminar la fluctuaci\u00f3n, el veneno de todos los sistemas en tiempo real. Todos los sistemas de audio de flujo continuo inician almacenando en el b\u00fafer aproximadamente de 10 a 15 seg de m\u00fasica antes de comenzar a reproducir, como se muestra en la figura 7-61. Idealmente, el servidor continuar\u00e1 llenando el b\u00fafer a la tasa exacta a la que el reproductor de medios lo vac\u00eda, aunque en realidad esto no podr\u00eda suceder, por lo que la retroalimentaci\u00f3n en el ciclo podr\u00eda ser \u00fatil.\n682\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nM\u00e1quina servidora\nM\u00e1quina cliente B\u00fafer\nReproductor de medios\nReproductor de medios Marca de agua baja\nMarca de agua alta\nFigura 7-61. El reproductor de medios almacena en el b\u00fafer la entrada del servidor de medios y reproduce desde el servidor en lugar de hacerlo directamente desde la red.\nSe pueden utilizar dos m\u00e9todos para mantener lleno el b\u00fafer. Con un servidor pull (de recepci\u00f3n autom\u00e1tica), siempre y cuando haya espacio en el b\u00fafer para otro bloque, el reproductor de medios simplemente sigue enviando al servidor mensajes en los que le solicita un bloque adicional. Su objetivo es mantener el b\u00fafer lo m\u00e1s lleno posible. La desventaja de un servidor pull son todas las solicitudes de datos innecesarias. El servidor sabe que ha enviado el archivo completo, de modo que, \u00bfpor qu\u00e9 el reproductor sigue enviando solicitudes? Por esta raz\u00f3n, raramente se utiliza. Con un servidor push (de actualizaci\u00f3n autom\u00e1tica), el reproductor de medios env\u00eda una solicitud PLAY y el servidor simplemente contin\u00faa envi\u00e1ndole datos. Aqu\u00ed hay dos posibilidades: el servidor de medios se ejecuta a la velocidad normal de reproducci\u00f3n o se ejecuta m\u00e1s r\u00e1pido. En ambos casos, algunos datos se almacenan en el b\u00fafer antes de que inicie la reproducci\u00f3n. Si el servidor se ejecuta a la velocidad normal de reproducci\u00f3n, los datos que provengan de \u00e9l se agregan al final del b\u00fafer y el reproductor elimina los datos del frente del b\u00fafer para reproducirlos. Siempre y cuando todo funcione a la perfecci\u00f3n, la cantidad de datos en el b\u00fafer permanece constante. Este esquema es sencillo debido a que no se necesitan mensajes de control en ninguna direcci\u00f3n. El otro m\u00e9todo push es hacer que el servidor env\u00ede datos a una velocidad mayor que la necesaria. La ventaja aqu\u00ed es que si no se puede garantizar que el servidor se ejecute a una tasa regular, tiene la oportunidad de reponerse si se queda atr\u00e1s. Sin embargo, un problema aqu\u00ed son los desbordamientos de b\u00fafer potenciales si el servidor puede enviar datos con m\u00e1s rapidez que con la que se consumen (y debe poder hacer esto para evitar los huecos). La soluci\u00f3n es que el reproductor de medios defina una marca de agua baja y una marca de agua alta en el b\u00fafer. B\u00e1sicamente, el servidor s\u00f3lo env\u00eda datos hasta que el b\u00fafer llega a la marca de agua alta. A continuaci\u00f3n el reproductor de medios le indica que haga una pausa. Puesto que los datos continuar\u00e1n llegando hasta que el servidor obtenga la solicitud de pausa, la distancia entre la marca de agua alta y el final del b\u00fafer tiene que ser mayor que el producto del retardo de ancho de banda de la red. Despu\u00e9s de que el servidor se detenga, el b\u00fafer comenzar\u00e1 a vaciarse. Cuando llegue a la marca de agua baja, el reproductor de medios indicar\u00e1 al servidor de medios que comience de nuevo. La marca de agua baja tiene que colocarse de manera que la subutilizaci\u00f3n de b\u00fafer no ocurra. Para operar un servidor push, el reproductor de medios necesita un control remoto para \u00e9l. RTSP, que se define en el RFC 2326, proporciona el mecanismo para que el reproductor controle al servidor. No proporciona el flujo de datos, que por lo general es RTP. En la figura 7-62 se listan los principales comandos que proporciona RTSP.\nSEC. 7.4\nMULTIMEDIA Comando\n683\nAcci\u00f3n del servidor\nDESCRIBE\nLista los par\u00e1metros de los medios\nSETUP\nEstablece un canal l\u00f3gico entre el reproductor y el servidor\nPLAY\nComienza a enviar los datos al cliente\nRECORD\nComienza a aceptar los datos del cliente\nPAUSE\nDetiene de manera temporal el env\u00edo de datos\nTEARDOWN\nLibera el canal l\u00f3gico\nFigura 7-62. Los comandos RTSP del reproductor al servidor.\n7.4.4 Radio en Internet Una vez que pudo ser posible difundir audio a trav\u00e9s de Internet, las estaciones de radio comerciales tuvieron la idea de transmitir su contenido a trav\u00e9s de Internet, as\u00ed como a trav\u00e9s de aire. No mucho tiempo despu\u00e9s, las estaciones de radio universitarias comenzaron a colocar su se\u00f1al en Internet. Despu\u00e9s, los estudiantes comenzaron sus propias estaciones de radio. Con la tecnolog\u00eda actual, casi cualquier persona puede iniciar una estaci\u00f3n de radio. El \u00e1rea de la radio de Internet es muy nueva y se encuentra en un proceso de cambio, pero vale la pena decir un poco m\u00e1s. Hay dos m\u00e9todos generales para la radio en Internet. En el primero, los programas se graban con anterioridad y se almacenan en disco. Los escuchas pueden conectarse a los archivos de la estaci\u00f3n de radio y obtener y descargar cualquier programa para escucharlo. De hecho, esto es exactamente lo mismo que el audio de flujo continuo que acabamos de analizar. Tambi\u00e9n es posible almacenar cada programa justo despu\u00e9s de que se transmite en vivo, por lo que el archivo s\u00f3lo est\u00e1 atrasado, digamos, media hora, o menos con respecto de la transmisi\u00f3n en vivo. Este m\u00e9todo tiene las ventajas de que es f\u00e1cil de llevar a cabo, de que las dem\u00e1s t\u00e9cnicas que hemos visto hasta aqu\u00ed tambi\u00e9n lo son y de que los escuchas pueden elegir de entre todos los programas del archivo. El otro m\u00e9todo es difundir el contenido en vivo a trav\u00e9s de Internet. Algunas estaciones transmiten a trav\u00e9s de aire y a trav\u00e9s de Internet de manera simult\u00e1nea, pero cada vez hay m\u00e1s estaciones de radio que s\u00f3lo transmiten a trav\u00e9s de Internet. Algunas de las t\u00e9cnicas que se aplican al audio de flujo continuo tambi\u00e9n se aplican a la radio en vivo por Internet, pero tambi\u00e9n hay algunas diferencias clave. Un punto que es el mismo es la necesidad de almacenar en el b\u00fafer del usuario para disminuir la fluctuaci\u00f3n. Al colectar 10 o 15 segundos de radio antes de comenzar la reproducci\u00f3n, el audio puede escucharse bien, aunque suceda fluctuaci\u00f3n sustancial a trav\u00e9s de la red. En tanto todos los paquetes lleguen antes de que se necesiten, no importa cu\u00e1ndo lleguen. Una diferencia clave es que el audio de flujo continuo puede enviarse a una tasa mayor que la de reproducci\u00f3n, puesto que el receptor puede detenerla cuando se llegue a la marca de agua alta. Potencialmente, esto le da el tiempo para retransmitir los paquetes perdidos, aunque esta estrategia no es muy com\u00fan. En contraste, la radio en vivo siempre se difunde a la tasa exacta a la que se genera y a la que se reproduce.\n684\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nOtra diferencia es que una estaci\u00f3n de radio por lo general tiene cientos o miles de escuchas simult\u00e1neos mientras que el audio de flujo continuo es de punto a punto. Bajo estas circunstancias, la radio en Internet deber\u00eda utilizar multidifusi\u00f3n con los protocolos RTP/RTSP. \u00c9sta es claramente la forma m\u00e1s eficiente de operar. En la actualidad, la radio en Internet no funciona as\u00ed. Lo que sucede realmente es que el usuario establece una conexi\u00f3n TCP con la estaci\u00f3n y la alimentaci\u00f3n se env\u00eda a trav\u00e9s de una conexi\u00f3n TCP. Por supuesto, esto crea varios problemas, como que el flujo se detenga cuando la ventana est\u00e9 llena, que los paquetes perdidos expiren y se retransmitan, etc\u00e9tera. Hay tres razones por las que se utiliza la unidifusi\u00f3n TCP en lugar de la multidifusi\u00f3n RTP. La primera es que pocos ISPs soportan la multidifusi\u00f3n, por lo que no es una opci\u00f3n pr\u00e1ctica. La segunda es que RTP es menos conocido que TCP y las estaciones de radio por lo general son peque\u00f1as y tienen poca experiencia en computaci\u00f3n, por lo que es m\u00e1s f\u00e1cil que utilicen un protocolo que conocen bien y que es soportado por todos los paquetes de software. La tercera es que muchas personas escuchan la radio en Internet en su trabajo, lo que en la pr\u00e1ctica significa detr\u00e1s de un firewall. La mayor\u00eda de los administradores de sistemas configura su firewall para proteger su LAN contra visitantes no bienvenidos. Por lo general, tales administradores permiten conexiones TCP del puerto remoto 25 (SMTP para correo electr\u00f3nico), paquetes UDP del puerto remoto 53 (DNS) y conexiones TCP del puerto remoto 80 (HTTP para Web). Casi todo lo dem\u00e1s podr\u00eda bloquearse, incluyendo RTP. Por lo tanto, la \u00fanica forma de obtener la se\u00f1al de radio a trav\u00e9s del firewall es que el sitio Web pretenda ser un servidor HTTP, por lo menos ante el firewall, y que utilice servidores HTTP, los cuales hablan TCP. Aunque estas medidas severas proporcionan un m\u00ednimo de seguridad, por lo general obligan a las aplicaciones multimedia a que utilicen modos de operaci\u00f3n dr\u00e1sticamente menos eficientes. Puesto que la radio en Internet es un medio nuevo, las guerras de los formatos est\u00e1n en su apogeo. RealAudio, Windows Media Audio y MP3 est\u00e1n compitiendo de manera agresiva en este mercado para ser el formato dominante para la radio en Internet. Un reci\u00e9n llegado es Vorbis, que t\u00e9cnicamente es similar a MP3 pero es c\u00f3digo abierto y tiene las diferencias suficientes como para no utilizar las patentes en la que se basa MP3. Una estaci\u00f3n de radio t\u00edpica de Internet tiene una p\u00e1gina Web que lista su agenda, informaci\u00f3n sobre sus DJs y anunciadores, y muchos anuncios. Tambi\u00e9n hay varios iconos que listan los formatos de audio que la estaci\u00f3n soporta (o simplemente ESCUCHAR AHORA si s\u00f3lo soporta un formato). Estos iconos o ESCUCHAR AHORA est\u00e1n vinculados con metaarchivos del tipo que analizamos anteriormente. Cuando un usuario hace clic en uno de estos iconos, se env\u00eda el peque\u00f1o metaarchivo. El navegador utiliza su tipo MIME o extensi\u00f3n de archivo para determinar la aplicaci\u00f3n auxiliar apropiada (es decir, el reproductor de medios) para el metaarchivo. A continuaci\u00f3n escribe el metaarchivo en un archivo de trabajo en disco, inicia el reproductor de medios y le entrega el nombre del archivo de trabajo. El reproductor de medios lee dicho archivo, ve el URL que contiene (por lo general, con un esquema http en lugar de rtsp para solucionar el problema del firewall y porque algunas aplicaciones populares de multimedia funcionan de esa manera), contacta al servidor y comienza a actuar como un radio. Adem\u00e1s, el audio s\u00f3lo tiene un flujo, por lo que http funciona, pero para el v\u00eddeo, que por lo menos tiene dos flujos, http no funciona y lo que realmente se necesita es algo como rtsp.\nSEC. 7.4\n685\nMULTIMEDIA\nOtro desarrollo interesante en el \u00e1rea de la radio en Internet es un arreglo en el que cualquiera, incluso un estudiante, puede establecer y operar una estaci\u00f3n de radio. Los componentes principales se ilustran en la figura 7-63. La base de la estaci\u00f3n es una PC ordinaria con una tarjeta de sonido y un micr\u00f3fono. El software consiste en un reproductor de medios, como Winamp o Freeamp, con un plug-in para la captura de audio y un codec para el formato de salida seleccionado, por ejemplo, MP3 o Vorbis. Micr\u00f3fono\nPlug-in Reproductor de captura de medios Plug-in de audio de codec\nInternet\nPC del estudiante\nServidor de medios\nConexiones TCP con los escuchas\nFigura 7-63. Una estaci\u00f3n de radio estudiantil.\nA continuaci\u00f3n el flujo de audio generado por la estaci\u00f3n se alimenta a trav\u00e9s de Internet hacia un servidor grande, el cual lo distribuye a una gran cantidad de conexiones TCP. Por lo general, el servidor soporta muchas estaciones peque\u00f1as. Tambi\u00e9n mantiene un directorio de las estaciones que tiene y de lo que est\u00e1 actualmente en el aire en cada una. Los escuchas potenciales van al servidor, seleccionan una estaci\u00f3n y obtienen una alimentaci\u00f3n TCP. Hay paquetes de software comercial para manejar todas las piezas y paquetes de c\u00f3digo abierto, como icecast. Tambi\u00e9n hay servidores que est\u00e1n dispuestos a manejar la distribuci\u00f3n a cambio de una cuota.\n7.4.5 Voz sobre IP En sus inicios, el sistema telef\u00f3nico conmutado p\u00fablico se utilizaba principalmente para el tr\u00e1fico de voz con un poco de tr\u00e1fico de datos por aqu\u00ed y por all\u00e1. Pero el tr\u00e1fico de datos creci\u00f3 y creci\u00f3, y aproximadamente en 1999, la cantidad de bits de datos movidos igual\u00f3 a la de bits de voz (debido a que la voz est\u00e1 en PCM en las troncales, puede medirse en bits/seg). En el 2002, el volumen del tr\u00e1fico de datos era mayor que el volumen del tr\u00e1fico de voz y contin\u00faa creciendo de manera exponencial, mientras que el crecimiento del tr\u00e1fico de voz casi era plano (con un crecimiento anual de 5%). Como consecuencia de estas cifras, muchos operadores de redes de conmutaci\u00f3n de paquetes de repente se interesaron en transportar voz a trav\u00e9s de sus redes de datos. La cantidad de ancho de banda adicional requerida para voz es min\u00fascula debido a que las redes de paquetes est\u00e1n dimensionadas para el tr\u00e1fico de datos. Sin embargo, probablemente el recibo telef\u00f3nico de la persona promedio sea m\u00e1s grande que su cuenta de Internet, por lo que los operadores de redes de datos\n686\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nvieron la telefon\u00eda de Internet como una forma de ganar una gran cantidad de dinero adicional sin tener que colocar una nueva fibra en el piso. De esta forma naci\u00f3 la telefon\u00eda de Internet (tambi\u00e9n conocida como voz sobre IP). H.323 Lo que a todos les qued\u00f3 claro desde el principio fue que si cada fabricante dise\u00f1aba su propia pila de protocolos, tal vez el sistema nunca funcionar\u00eda. Para evitar este problema, un grupo de personas interesadas se unieron bajo la protecci\u00f3n de la ITU para trabajar en est\u00e1ndares. En 1996 la ITU emiti\u00f3 la recomendaci\u00f3n H.323 titulada \u201cSistemas Telef\u00f3nicos Visuales y Equipo para Redes de \u00c1rea Local que Proporcionan una Calidad de Servicio No Garantizada\u201d. S\u00f3lo la industria telef\u00f3nica podr\u00eda pensar en tal nombre. La recomendaci\u00f3n se revis\u00f3 en 1998, y esta H.323 revisada fue la base de los primeros sistemas de telefon\u00eda de Internet ampliamente difundidos. H.323 es m\u00e1s una revisi\u00f3n arquitect\u00f3nica de la telefon\u00eda de Internet que un protocolo espec\u00edfico. Hace referencia a una gran cantidad de protocolos espec\u00edficos para codificaci\u00f3n de voz, establecimiento de llamadas, se\u00f1alizaci\u00f3n, transporte de datos y otras \u00e1reas, en lugar de especificar estas cosas en s\u00ed. El modelo general se ilustra en la figura 7-64. En el centro se encuentra una puerta de enlace que conecta Internet con la red telef\u00f3nica. Dicha puerta de enlace habla los protocolos H.323 en el lado de Internet y los protocolos PSTN en el lado del tel\u00e9fono. Los dispositivos de comunicaci\u00f3n se llaman terminales. Una LAN podr\u00eda tener un gatekeeper, el cual controla los puntos finales bajo su jurisdicci\u00f3n, llamados zona.\nZona\nPuerta de enlace\nTerminal\nGatekeeper Internet\nRed de telefon\u00eda\nFigura 7-64. El modelo arquitect\u00f3nico H.323 de la telefon\u00eda de Internet.\nUna red telef\u00f3nica necesita una cantidad de protocolos. Para empezar, hay un protocolo para codificar y decodificar voz. El sistema PCM que estudiamos en el cap\u00edtulo 2 est\u00e1 definido en la recomendaci\u00f3n G.711 de la ITU. Codifica un solo canal de voz muestreando 8000 veces por segundo con una muestra de 8 bits para proporcionar voz descomprimida a 64 kbps. Todos los sistemas H.323 deben soportar G.711. Sin embargo, tambi\u00e9n se permiten otros protocolos de compresi\u00f3n de voz (aunque no son requeridos). Utilizan diferentes algoritmos de compresi\u00f3n y realizan diferentes intercambios entre calidad y ancho de banda. Por ejemplo, G.723.1 toma un\nSEC. 7.4\n687\nMULTIMEDIA\nbloque de 240 muestras (30 mseg de voz) y utiliza la codificaci\u00f3n predictiva para reducirlo ya sea a 24 o a 20 bytes. Este algoritmo proporciona una tasa de salida ya sea de 6.4 o 5.3 kbps (factores de compresi\u00f3n de 10 y 12), respectivamente, con poca p\u00e9rdida en la calidad percibida. Tambi\u00e9n se permiten otros codecs. Puesto que est\u00e1n permitidos m\u00faltiples algoritmos de compresi\u00f3n, se necesita un protocolo para permitir que las terminales negocien cu\u00e1l van a utilizar. Este protocolo se llama H.245. Tambi\u00e9n negocia otros aspectos de la conexi\u00f3n, como la tasa de bits. RTCP es necesario para el control de los canales RTP. Tambi\u00e9n se necesita un protocolo para establecer y liberar conexiones, proporcionar tonos de marcado, emitir sonidos de marcado y el resto de la telefon\u00eda est\u00e1ndar. Aqu\u00ed se utiliza Q.931 de la ITU. Las terminales necesitan un protocolo para hablar con el gatekeeper (si est\u00e1 presente). Para este prop\u00f3sito se utiliza H.225. El canal PC a gatekeeper manejado por este protocolo se conoce como canal RAS (Registro/Admisi\u00f3n/Estado). Este canal permite terminales para unirse y dejar la zona, solicitar y regresar ancho de banda, y proporcionar actualizaciones de estado, entre otras cosas. Por \u00faltimo, se necesita un protocolo para la transmisi\u00f3n real de datos. RTP se utiliza para este prop\u00f3sito. Es manejado por RTCP, como es usual. La posici\u00f3n de todos estos protocolos se muestra en la figura 7-65.\nVoz G.7xx\nControl RTCP\nH.225 (RAS)\nRTP\nQ.931 (Se\u00f1alamiento de llamadas)\nUDP\nH.245 (Control de llamadas)\nTCP IP\nProtocolo de enlace de datos Protocolo de la capa f\u00edsica\nFigura 7-65. La pila de protocolos H.323.\nPara ver c\u00f3mo se ajustan estos protocolos, considere el caso de una terminal de PC en una LAN (con un gatekeeper) que llama a un tel\u00e9fono remoto. La PC primero tiene que descubrir al gatekeeper, por lo que difunde un paquete UDP de descubrimiento de gatekeeper al puerto 1718. Cuando el gatekeeper responde, la PC se aprende la direcci\u00f3n IP de \u00e9ste. Ahora la PC se registra con el gatekeeper envi\u00e1ndole un mensaje RAS en un paquete UDP. Despu\u00e9s de que es aceptada, la PC env\u00eda al gatekeeper un mensaje de admisi\u00f3n RAS solicitando ancho de banda. S\u00f3lo despu\u00e9s de que se ha proporcionado el ancho de banda, se puede establecer la llamada. La idea de solicitar ancho de banda con anticipaci\u00f3n es permitir que el gatekeeper limite el n\u00famero de llamadas para evitar sobrescribir la l\u00ednea saliente para ayudar a proporcionar la calidad de servicio necesaria.\n688\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nLa PC ahora establece una conexi\u00f3n TCP con el gatekeeper para comenzar el establecimiento de la llamada. Este establecimiento utiliza los protocolos de red telef\u00f3nicos existentes, que est\u00e1n orientados a la conexi\u00f3n, por lo que se necesita TCP. En contraste, el sistema telef\u00f3nico no tiene nada parecido a RAS para permitir que los tel\u00e9fonos anuncien su presencia, por lo que los dise\u00f1adores de H.323 eran libres de utilizar UDP o TCP para RAS, y eligieron el UDP que genera menor informaci\u00f3n adicional. Ahora que tiene asignado ancho de banda, la PC puede enviar un mensaje SETUP de Q.931 a trav\u00e9s de la conexi\u00f3n TCP. Este mensaje especifica el n\u00famero del tel\u00e9fono al que se est\u00e1 llamando (o la direcci\u00f3n IP y el puerto, si se est\u00e1 llamando a una computadora). El gatekeeper responde con un mensaje CALL PROCEEDING de Q.931 para confirmar la recepci\u00f3n de la solicitud. Enseguida el gatekeeper reenv\u00eda un mensaje SETUP a la puerta de enlace. A continuaci\u00f3n, la puerta de enlace, que es mitad computadora y mitad conmutador de tel\u00e9fono, realiza una llamada telef\u00f3nica ordinaria al tel\u00e9fono deseado (ordinario). La oficina central a la que est\u00e1 anexado el tel\u00e9fono hace que suene el tel\u00e9fono al que se hace la llamada y tambi\u00e9n regresa un mensaje ALERT de Q.931 para indicar a la PC invocadora que ya se ha emitido el sonido. Cuando la persona en el otro extremo levanta el tel\u00e9fono, la oficina central regresa un mensaje CONNECT de Q.931 para indicar a la PC que tiene una conexi\u00f3n. Una vez que se ha establecido la conexi\u00f3n, el gatekeeper ya no est\u00e1 en el ciclo, aunque la puerta de enlace s\u00ed lo est\u00e1, por supuesto. Los paquetes subsiguientes ignoran al gatekeeper y van directo a la direcci\u00f3n IP de la puerta de enlace. En este punto, simplemente tenemos un tubo que se ejecuta entre los dos lados. \u00c9sta es tan s\u00f3lo una conexi\u00f3n de capa f\u00edsica para mover bits, nada m\u00e1s. Ninguno de los lados sabe nada del otro. A continuaci\u00f3n se utiliza el protocolo H.245 para negociar los par\u00e1metros de la llamada. Utiliza el canal de control H.245, que siempre est\u00e1 abierto. Cada lado inicia anunciando sus capacidades, por ejemplo, si puede manejar v\u00eddeo (H.323 puede manejar v\u00eddeo) o llamadas de conferencia, qu\u00e9 codecs soporta, etc\u00e9tera. Una vez que cada lado sabe lo que el otro puede manejar, se establecen dos canales de datos unidireccionales y a cada uno se le asigna un codec y otros par\u00e1metros. Puesto que cada lado puede tener equipo diferente, es posible que los codecs en los canales hacia adelante e inverso sean diferentes. Una vez que se terminan todas las negociaciones, puede comenzar el flujo de datos utilizando RTP. Tal flujo se maneja mediante RTCP, que juega un papel en el control de congestionamiento. Si el v\u00eddeo est\u00e1 presente, RTCP maneja la sincronizaci\u00f3n de audio/v\u00eddeo. En la figura 7-66 se muestran los diversos canales. Cuando cualquiera de las dos partes cuelga, se utiliza el canal de se\u00f1alizaci\u00f3n de llamada de Q.931 para terminar la conexi\u00f3n. Cuando se termina la llamada, la PC invocadora contacta al gatekeeper nuevamente con un mensaje RAS para liberar el ancho de banda que se ha asignado. De manera alterna, puede realizar otra llamada. No hemos mencionado nada sobre la calidad del servicio, aunque \u00e9sta es esencial para que la voz sobre IP sea un \u00e9xito. La raz\u00f3n es que la QoS est\u00e1 m\u00e1s all\u00e1 del alcance de H.323. Si la red subyacente es capaz de producir una conexi\u00f3n estable, libre de fluctuaci\u00f3n de la PC invocadora (por ejemplo, utilizando las t\u00e9cnicas que analizamos en el cap\u00edtulo 5) a la puerta de enlace, entonces la QoS de la llamada ser\u00e1 buena; de lo contrario, no lo ser\u00e1. La parte del tel\u00e9fono utiliza PCM y siempre est\u00e1 libre de fluctuaci\u00f3n.\nSEC. 7.4\n689\nMULTIMEDIA Canal de se\u00f1alamiento de llamada (Q.931) Canal de control de llamada (H.245) Canal hacia adelante de datos (RTP) Invocador\nInvocado Canal inverso de datos (RTP) Canal de control de datos (RTCP)\nFigura 7-66. Canales l\u00f3gicos entre el invocador y el invocado durante una llamada.\nSIP\u2014Protocolo de Inicio de Sesi\u00f3n H.323 fue dise\u00f1ado por la ITU. Muchas personas de la comunidad de Internet lo vieron como un producto t\u00edpico telco: grande, complejo e inflexible. En consecuencia, la IETF estableci\u00f3 un comit\u00e9 para dise\u00f1ar una forma m\u00e1s simple y modular para transmitir voz sobre IP. El resultado principal hasta la fecha es el SIP (Protocolo de Inicio de Sesi\u00f3n), que se describe en el RFC 3261. Este protocolo describe c\u00f3mo establecer llamadas telef\u00f3nicas a Internet, videoconferencias y otras conexiones multimedia. A diferencia de H.323, que es un conjunto completo de protocolos, SIP est\u00e1 compuesto de un solo m\u00f3dulo, pero se ha dise\u00f1ado para que interact\u00fae bien con las aplicaciones de Internet existentes. Por ejemplo, define los n\u00fameros telef\u00f3nicos como URLs, a fin de que las p\u00e1ginas Web puedan contenerlos, lo que permite hacer clic en un v\u00ednculo para iniciar una llamada telef\u00f3nica (de la misma forma en que un esquema mailto permite hacer clic en un v\u00ednculo que despliega un programa para enviar un mensaje de correo electr\u00f3nico). SIP puede establecer sesiones de dos partes (llamadas de tel\u00e9fono ordinarias), de m\u00faltiples partes (en donde todos pueden o\u00edr y hablar) y de multidifusi\u00f3n (un emisor, muchos receptores). Las sesiones pueden contener audio, v\u00eddeo o datos; las de multidifusi\u00f3n son \u00fatiles para juegos de m\u00faltiples jugadores, por ejemplo. SIP s\u00f3lo maneja establecimiento, manejo y terminaci\u00f3n de sesiones. Para el transporte de datos, se utilizan otros protocolos, como RTP/RTCP. SIP es un protocolo de capa de aplicaci\u00f3n y puede ejecutarse sobre UDP o TCP. SIP soporta una variedad de servicios, como localizar al invocado (quien tal vez no est\u00e9 en su m\u00e1quina dom\u00e9stica) y determinar las capacidades de \u00e9ste, as\u00ed como manejar los mecanismos del establecimiento y la terminaci\u00f3n de la llamada. En el caso m\u00e1s simple, SIP establece una sesi\u00f3n de la computadora del invocador a la del invocado, por lo que primero analizaremos ese caso. Los n\u00fameros telef\u00f3nicos de SIP se representan como URLs que utilizan el esquema sip, por ejemplo, sip:\n[[email protected]](/cdn-cgi/l/email-protection) para un usuario de nombre Ilse en el host especificado por el nombre DNS cs.university.edu. Los URLs de SIP tambi\u00e9n pueden contener direcciones IPv4, IPv6 o n\u00fameros telef\u00f3nicos reales.\n690\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nEl protocolo SIP se basa en texto y est\u00e1 modelado en HTTP. Una parte env\u00eda un mensaje en texto ASCII que consiste en un nombre de m\u00e9todo en la primera l\u00ednea, seguido por l\u00edneas adicionales que contienen encabezados para pasar los par\u00e1metros. Muchos de estos encabezados se toman de MIME para permitir que SIP interact\u00fae con las aplicaciones de Internet existentes. En la figura 7-67 se listan los seis m\u00e9todos definidos por la especificaci\u00f3n central.\nM\u00e9todo\nDescripci\u00f3n\nINVITE\nSolicita el inicio de una sesi\u00f3n\nACK\nConfirma que se ha iniciado una sesi\u00f3n\nBYE\nSolicita la terminaci\u00f3n de una sesi\u00f3n\nOPTIONS\nConsulta a un host sobre sus capacidades\nCANCEL\nCancela una solicitud pendiente\nREGISTER\nInforma a un servidor de redireccionamiento sobre la ubicaci\u00f3n actual del usuario\nFigura 7-67. Los m\u00e9todos SIP definidos en la especificaci\u00f3n central.\nPara establecer una sesi\u00f3n, el invocador crea una conexi\u00f3n TCP con el invocado y env\u00eda un mensaje INVITE a trav\u00e9s de ella o lo env\u00eda en un paquete UDP. En ambos casos, los encabezados de la segunda l\u00ednea y de las subsiguientes describen la estructura del cuerpo del mensaje, el cual contiene las capacidades, los tipos de medios y los formatos del invocador. Si el invocado acepta la llamada, responde con un c\u00f3digo de respuesta tipo HTTP (un n\u00famero de tres d\u00edgitos que utiliza los grupos de la figura 7-42, 200 para aceptaci\u00f3n). El invocado tambi\u00e9n puede proporcionar informaci\u00f3n sobre sus capacidades, tipos de medios y formatos, despu\u00e9s de la l\u00ednea de c\u00f3digo de respuesta. La conexi\u00f3n se realiza utilizando un acuerdo de tres v\u00edas, de modo que el invocador responde con un mensaje ACK para terminar el protocolo y confirmar la recepci\u00f3n del mensaje 200. Cualquiera de las dos partes puede solicitar la terminaci\u00f3n de una sesi\u00f3n enviando un mensaje que contiene el m\u00e9todo BYE. Cuando el otro lado confirma su recepci\u00f3n, se termina la sesi\u00f3n. El m\u00e9todo OPTIONS se utiliza para consultar a una m\u00e1quina sobre sus propias capacidades. Por lo general, se utiliza antes de que se inicie una sesi\u00f3n a fin de averiguar si esa m\u00e1quina tiene la capacidad de transmitir voz sobre IP o el tipo de sesi\u00f3n que se ha contemplado. El m\u00e9todo REGISTER se relaciona con la capacidad de SIP de rastrear y conectarse con un usuario que est\u00e9 lejos de casa. Este mensaje se env\u00eda a un servidor de ubicaci\u00f3n SIP que mantiene la pista de qui\u00e9n est\u00e1 en qu\u00e9 lugar. Ese servidor se puede consultar posteriormente para encontrar la ubicaci\u00f3n actual del usuario. En la figura 7-68 se ilustra la operaci\u00f3n de redirecci\u00f3n. Aqu\u00ed el invocador env\u00eda el mensaje INVITE a un servidor proxy para ocultar la posible redirecci\u00f3n. A continuaci\u00f3n el proxy investiga en d\u00f3nde est\u00e1 el usuario y env\u00eda el mensaje INVITE ah\u00ed. Despu\u00e9s act\u00faa como un regulador para los mensajes subsecuentes en el acuerdo de tres v\u00edas. Los mensajes LOOKUP y REPLY no son parte de SIP; se puede utilizar cualquier protocolo conveniente, dependiendo del tipo de servidor de ubicaci\u00f3n que se est\u00e9 utilizando.\nSEC. 7.4\n691\nMULTIMEDIA\n1 INVITE\n3 REPLY\nInvocador\n2 LOOKUP\nServidor de ubicaci\u00f3n\nProxy\nInvocado\n4 INVITE 5 OK 8 ACK\n6 OK 7 ACK 9 Datos\nFigura 7-68. Uso de servidores proxy y de redirecci\u00f3n con SIP.\nSIP tiene una variedad de otras caracter\u00edsticas que no describiremos aqu\u00ed, entre ellas la espera de llamadas, bloque de llamada, codificaci\u00f3n y autenticaci\u00f3n. Tambi\u00e9n tiene la capacidad de colocar llamadas de una computadora en un tel\u00e9fono ordinario, si est\u00e1 disponible una puerta de enlace entre Internet y el sistema telef\u00f3nico. Comparaci\u00f3n entre H.323 y SIP H.323 y SIP tienen muchas similitudes pero tambi\u00e9n algunas diferencias. Ambos permiten llamadas de dos partes y m\u00faltiples partes utilizando las computadoras y los tel\u00e9fonos como puntos finales. Ambos soportan negociaci\u00f3n de par\u00e1metros, codificaci\u00f3n y los protocolos RTP/RTCP. En la figura 7-69 se muestra un resumen de las similitudes y diferencias. Aunque los conjuntos de caracter\u00edsticas son similares, los dos protocolos difieren ampliamente en la filosof\u00eda. H.323 es un est\u00e1ndar t\u00edpico de peso completo de la industria de la telefon\u00eda, que especifica toda la pila de protocolos y que define de manera precisa lo que est\u00e1 permitido y lo que est\u00e1 prohibido. Este enfoque produce protocolos bien definidos en cada capa, lo que facilita la tarea de interoperabilidad. El precio pagado es un est\u00e1ndar grande, complejo y r\u00edgido que es dif\u00edcil de adaptar a aplicaciones futuras. En contraste, SIP es un protocolo de Internet t\u00edpico que funciona intercambiando l\u00edneas cortas de texto ASCII. Es un m\u00f3dulo de carga ligera que interact\u00faa bien con otros protocolos de Internet pero no tan bien con los de se\u00f1alizaci\u00f3n de sistemas telef\u00f3nicos. Debido a que el modelo IETF de voz sobre IP es altamente modular, es flexible y se puede adaptar con facilidad a las nuevas aplicaciones. La desventaja son problemas potenciales de interoperabilidad, aunque \u00e9stos se solucionan realizando reuniones frecuentes en las que los diferentes implementadores se re\u00fanen para probar sus sistemas. La voz sobre IP es un tema prometedor. En consecuencia, hay varios libros sobre \u00e9l. Algunos ejemplos son (Collins, 2001; Davidson y Peters, 2000; Kumar y cols., 2001, y Wright, 2001). La edici\u00f3n de mayo/junio de 2002 de Internet Computing tiene varios art\u00edculos sobre este tema.\n692\nLA CAPA DE APLICACI\u00d3N Elemento\nH.323\nCAP. 7 SIP\nDise\u00f1ado por\nITU\nIETF\nCompatibilidad con PSTN\nS\u00ed\nAmpliamente\nCompatibilidad con Internet\nNo\nS\u00ed\nArquitectura\nMonol\u00edtica\nModular\nIntegridad\nPila de protocolos completa\nSIP s\u00f3lo maneja el establecimiento\nNegociaci\u00f3n de par\u00e1metros\nS\u00ed\nS\u00ed\nSe\u00f1alamiento de llamadas\nQ.931 sobre TCP\nSIP sobre TCP o UDP\nFormato de mensajes\nBinario\nASCII\nTransporte de medios\nRTP/RTCP\nRTP/RTCP\nLlamadas de m\u00faltiples partes\nS\u00ed\nS\u00ed\nConferencias multimedia\nS\u00ed\nNo\nDireccionamiento\nHost o n\u00famero telef\u00f3nico\nURL\nTerminaci\u00f3n de llamadas\nExpl\u00edcita o liberaci\u00f3n de TCP\nExpl\u00edcita o terminaci\u00f3n de temporizador\nMensajes instant\u00e1neos\nNo\nS\u00ed\nEncriptaci\u00f3n\nS\u00ed\nS\u00ed\nTama\u00f1o de los est\u00e1ndares\n1400 p\u00e1ginas\n250 p\u00e1ginas\nImplementaci\u00f3n\nGrande y compleja\nModerada\nEstado\nDistribuido ampliamente\nPrometedor\nFigura 7-69. Comparaci\u00f3n entre H.323 y SIP.\n7.4.6 Introducci\u00f3n al v\u00eddeo Ya analizamos el o\u00eddo hasta ahora; es tiempo de que analicemos el ojo (no, a esta secci\u00f3n no le sigue una sobre la nariz). El ojo humano tiene la propiedad de que, cuando una imagen incide en la retina, se retiene durante algunos milisegundos antes de desaparecer. Si una secuencia de im\u00e1genes incide a 50 o m\u00e1s im\u00e1genes/seg, el ojo no nota que est\u00e1 viendo im\u00e1genes discretas. Todos los sistemas de v\u00eddeo (es decir, televisi\u00f3n) aprovechan este principio para producir im\u00e1genes en movimiento. Sistemas anal\u00f3gicos Para entender los sistemas de v\u00eddeo, es mejor comenzar por la anticuada y sencilla televisi\u00f3n en blanco y negro. Para representar la imagen bidimensional que est\u00e1 frente a ella como un voltaje unidimensional en funci\u00f3n del tiempo, la c\u00e1mara barre r\u00e1pidamente un haz de electrones a lo ancho de la imagen y lentamente hacia abajo, registrando la intensidad de la luz a su paso. Al final del barrido, llamado trama, el haz hace un retrazado. Esta intensidad como funci\u00f3n de tiempo se difunde, y los receptores repiten el proceso de barrido para reconstruir la imagen. En la figura 7-70 se muestra el patr\u00f3n de barrido que usan tanto la c\u00e1mara como el receptor. (Como nota,\nSEC. 7.4\n693\nMULTIMEDIA\nlas c\u00e1maras CCD integran en lugar de barrer, pero algunas c\u00e1maras y todos los monitores hacen un barrido.) El siguiente campo inicia aqu\u00ed\nL\u00ednea de barrido dibujada en la pantalla\nTiempo\nL\u00ednea de barrido\nRetrazado horizontal\nRetrazado vertical\nFigura 7-70. Patr\u00f3n de barrido usado para el v\u00eddeo y la televisi\u00f3n NTSC.\nLos par\u00e1metros de barrido exactos var\u00edan de pa\u00eds en pa\u00eds. El sistema usado en Norte y Sudam\u00e9rica y en Jap\u00f3n tiene 525 l\u00edneas de barrido, una relaci\u00f3n de aspecto horizontal a vertical de 4:3 y 30 tramas/seg. El sistema europeo tiene 625 l\u00edneas de barrido, la misma relaci\u00f3n 4:3 y 25 tramas/seg. En ambos sistemas, no se presentan unas cuantas l\u00edneas de arriba y abajo (para aproximar una imagen rectangular a los CRTs originales, que eran redondos). S\u00f3lo se presentan 483 de las 525 l\u00edneas NTSC (y 576 de las 625 l\u00edneas de barrido PAL/SECAM). El haz se apaga durante el retrazado vertical, por lo que muchas estaciones (especialmente en Europa) usan este intervalo para difundir TeleTexto (p\u00e1ginas de texto que contienen noticias, informes meteorol\u00f3gicos, deportes, precios de acciones, etc\u00e9tera). Aunque 25 tramas/seg es suficiente para capturar una imagen continua, con esa tasa de tramas mucha gente, especialmente las personas mayores, percibe un parpadeo en la imagen (porque las im\u00e1genes viejas se desvanecen de la retina antes de la aparici\u00f3n de las nuevas). En lugar de aumentar la tasa de tramas, lo que requerir\u00eda usar m\u00e1s del escaso ancho de banda, se emplea un enfoque diferente. En lugar de presentar las l\u00edneas de barrido en orden, primero se despliegan las l\u00edneas de barrido nones, y luego las l\u00edneas de barrido pares. Cada una de estas medias tramas se llama campo. Hay experimentos que muestran que, aunque la gente nota el parpadeo a 25 tramas/seg, no lo nota a 50 campos/seg. Esta t\u00e9cnica se llama entrelazado. Se dice que la televisi\u00f3n (o v\u00eddeo) no entrelazada es progresiva. Observe que las pel\u00edculas se ejecutan a 24 fps, pero cada trama es completamente visible durante 1/24 seg.\n694\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nEl v\u00eddeo de color usa el mismo patr\u00f3n de barrido que el monocrom\u00e1tico (blanco y negro), excepto que, en lugar de desplegar la imagen mediante un solo haz en movimiento, se usan tres haces que se mueven al un\u00edsono. Se usa un haz para cada uno de los colores primarios aditivos: rojo, verde y azul (RGB). Esta t\u00e9cnica funciona porque puede construirse cualquier color a partir de la superposici\u00f3n lineal de rojo, verde y azul con las intensidades apropiadas. Sin embargo, para la transmisi\u00f3n por un solo canal, las tres se\u00f1ales de color deben combinarse en una sola se\u00f1al compuesta. Cuando se invent\u00f3 la televisi\u00f3n a color, eran t\u00e9cnicamente posibles varios m\u00e9todos para desplegar colores, as\u00ed que varios pa\u00edses tomaron decisiones diferentes, lo que condujo a sistemas que a\u00fan son incompatibles. (Es importante mencionar que estas decisiones no tienen nada que ver con VHS contra Betamax contra P2000, que son m\u00e9todos de grabaci\u00f3n.) En todos los pa\u00edses, un requisito pol\u00edtico fue que todos los programas que se transmitieran a color ten\u00edan que poder recibirse en los televisores existentes de blanco y negro. En consecuencia, no era aceptable el esquema m\u00e1s sencillo, codificar por separado las se\u00f1ales RGB. Sin embargo, RGB tampoco es el esquema m\u00e1s eficiente. El primer sistema de color fue estandarizado en Estados Unidos por el Comit\u00e9 Nacional de Est\u00e1ndares de Televisi\u00f3n, que present\u00f3 sus siglas al est\u00e1ndar: NTSC. La televisi\u00f3n a color se introdujo en Europa varios a\u00f1os despu\u00e9s, y para entonces la tecnolog\u00eda hab\u00eda mejorado de manera significativa, conduciendo a sistemas con mejor inmunidad contra el ruido y mejores colores. \u00c9stos se llaman SECAM (color secuencial con memoria), que se usa en Francia y Europa Oriental, y PAL (l\u00ednea de fases alternas), usado en el resto de Europa. La diferencia en la calidad del color entre NTSC y PAL/SECAM ha producido una broma de la industria que sugiere que NTSC significa en realidad Nunca Tendr\u00e1s Semejanza en los Colores. Para que las transmisiones puedan verse en receptores de blanco y negro, los tres sistemas combinan linealmente las se\u00f1ales RGB en una se\u00f1al de luminancia (brillo) y dos de crominancia (color), aunque usan diferentes coeficientes para construir estas se\u00f1ales a partir de las se\u00f1ales RGB. Resulta interesante que el ojo es mucho m\u00e1s sensible a la se\u00f1al de luminancia que a las de crominancia, por lo que estas \u00faltimas no necesitan transmitirse con tanta precisi\u00f3n. En consecuencia, la se\u00f1al de luminancia puede difundirse a la misma frecuencia que la vieja se\u00f1al de blanco y negro, y puede recibirse en los televisores de blanco y negro. Las dos se\u00f1ales de crominancia se difunden en bandas angostas a frecuencias mayores. Algunos aparatos de televisi\u00f3n tienen controles etiquetados brillo, matiz y saturaci\u00f3n (o brillo, tinte y color) para controlar estas tres se\u00f1ales por separado. Es necesario el entendimiento de la luminancia y la crominancia para comprender el funcionamiento de la compresi\u00f3n de v\u00eddeo. En los \u00faltimos a\u00f1os ha habido un inter\u00e9s considerable en la HDTV (televisi\u00f3n de alta definici\u00f3n), que produce im\u00e1genes m\u00e1s n\u00edtidas al duplicar (aproximadamente) la cantidad de l\u00edneas de barrido. Estados Unidos, Europa y Jap\u00f3n han desarrollado sistemas HDTV, todos diferentes y todos mutuamente incompatibles. \u00bfUsted esperaba otra cosa? Los principios b\u00e1sicos de la HDTV en t\u00e9rminos de barrido, luminancia, crominancia, etc\u00e9tera, son semejantes a los sistemas actuales. Sin embargo, los tres formatos tienen una relaci\u00f3n de aspecto com\u00fan de 16:9 en lugar 4:3 para lograr una correspondencia mejor con el formato usado para el cine (que se graba en pel\u00edcula de 35 mm, y tiene una relaci\u00f3n de aspecto de 3:2).\nSEC. 7.4\nMULTIMEDIA\n695\nSistemas digitales La representaci\u00f3n m\u00e1s sencilla del v\u00eddeo digital es una secuencia de tramas, cada una de las cuales consiste en una malla rectangular de elementos de imagen, o p\u00edxeles. Cada p\u00edxel puede ser un solo bit, para representar blanco o negro. La calidad de tal sistema es parecida a la que se obtiene al enviar una fotograf\u00eda a color por fax: espantosa. (Int\u00e9ntelo si puede; de lo contrario, fotocopie una fotograf\u00eda a color en una m\u00e1quina copiadora que no maneje tonos.) El siguiente paso es usar ocho bits por p\u00edxel para representar 256 niveles de gris. Este esquema da v\u00eddeo en blanco y negro de alta calidad. Para v\u00eddeo a color, los sistemas buenos usan 8 bits por cada uno de los colores RGB, aunque casi todos los sistemas los mezclan en v\u00eddeo compuesto para su transmisi\u00f3n. Aunque el uso de 24 bits por p\u00edxel limita la cantidad de colores a unos 16 millones, el ojo humano no puede diferenciar tantos colores. Las im\u00e1genes digitales de color se producen usando tres haces de barrido, uno por color. La geometr\u00eda es la misma que en el sistema anal\u00f3gico de la figura 7-70, excepto que las l\u00edneas continuas de barrido ahora se reemplazan por elegantes filas de p\u00edxeles discretos. Para producir una imagen uniforme, el v\u00eddeo digital, al igual que el v\u00eddeo anal\u00f3gico, debe presentar cuando menos 25 tramas/seg. Sin embargo, dado que los monitores de computadora de alta calidad con frecuencia barren la pantalla a partir de las im\u00e1genes almacenadas en memoria a raz\u00f3n de 75 veces por segundo o m\u00e1s, no se requiere entrelazado y, en consecuencia, normalmente no se usa. Basta con repintar (es decir, redibujar) la misma trama tres veces consecutivas para eliminar el parpadeo. En otras palabras, la uniformidad de movimiento es determinada por la cantidad de im\u00e1genes diferentes por segundo, mientras que el parpadeo es determinado por la cantidad de veces por segundo que se pinta la trama. Estos dos par\u00e1metros son diferentes. Una imagen fija pintada a 20 tramas/seg no mostrar\u00e1 un movimiento inestable, pero parpadear\u00e1 porque una trama se desvanecer\u00e1 de la retina antes de que aparezca la siguiente. Una pel\u00edcula con 20 tramas diferentes por segundo, cada una pintada cuatro veces seguidas, no parpadear\u00e1, pero el movimiento parecer\u00e1 no uniforme. El significado de estos dos par\u00e1metros se aclara cuando consideramos el ancho de banda necesario para transmitir v\u00eddeo digital a trav\u00e9s de una red. Todos los monitores de computadora actuales usan la relaci\u00f3n de aspecto 4:3 para poder usar tubos de rayos cat\u00f3dicos econ\u00f3micos de producci\u00f3n en masa dise\u00f1ados para el mercado de televisi\u00f3n de consumidor. Las configuraciones comunes son 1024 \u00d7 768, 1280 \u00d7 960 y 1600 \u00d7 1200. Incluso la m\u00e1s peque\u00f1a de \u00e9stas con 24 bits por p\u00edxel y 25 tramas/seg necesita alimentarse a 472 Mbps. Una portadora OC-12 de SONET tendr\u00eda que manejar esta situaci\u00f3n, y la ejecuci\u00f3n de este tipo de portadora en la casa de todas las personas a\u00fan no es posible. La duplicaci\u00f3n de esta tasa para evitar el parpadeo es a\u00fan menos atractiva. Una mejor soluci\u00f3n es transmitir 25 tramas/seg y hacer que la computadora almacene cada una y la pinte dos veces. La televisi\u00f3n difundida no usa esta estrategia porque las televisiones no tienen memoria y, aunque la tuvieran, para almacenarse en RAM, las se\u00f1ales anal\u00f3gicas primero se tendr\u00edan que convertir a un formato digital, lo que requerir\u00eda hardware extra. Como consecuencia, se necesita el entrelazado para la televisi\u00f3n difundida, pero no para el v\u00eddeo digital.\n696\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\n7.4.7 Compresi\u00f3n de v\u00eddeo A estas alturas debe ser obvio que la transmisi\u00f3n de v\u00eddeo sin comprimir es impensable. La \u00fanica esperanza es que sea posible la compresi\u00f3n masiva. Por fortuna, durante las \u00faltimas d\u00e9cadas un gran n\u00famero de investigaciones ha conducido a muchas t\u00e9cnicas y algoritmos de compresi\u00f3n que hacen factible la transmisi\u00f3n de v\u00eddeo. En esta secci\u00f3n estudiaremos c\u00f3mo se consigue la compresi\u00f3n de v\u00eddeo. Todos los sistemas de compresi\u00f3n requieren dos algoritmos: uno para la compresi\u00f3n de los datos en el origen y otro para la descompresi\u00f3n en el destino. En la literatura, estos algoritmos se conocen como algoritmos de codificaci\u00f3n y decodificaci\u00f3n, respectivamente. Tambi\u00e9n usaremos esta terminolog\u00eda aqu\u00ed. Estos algoritmos tienen ciertas asimetr\u00edas y es importante comprenderlas. Primero, en muchas aplicaciones un documento multimedia, digamos una pel\u00edcula, s\u00f3lo se codificar\u00e1 una vez (cuando se almacene en el servidor multimedia), pero se decodificar\u00e1 miles de veces (cuando los clientes lo vean). Esta asimetr\u00eda significa que es aceptable que el algoritmo de codificaci\u00f3n sea lento y requiera hardware costoso, siempre y cuando el algoritmo de decodificaci\u00f3n sea r\u00e1pido y no requiera hardware costoso. A fin de cuentas, el operador de un servidor multimedia podr\u00eda esta dispuesto a rentar una supercomputadora paralela durante algunas semanas para codificar su biblioteca de v\u00eddeo completa, pero requerir que los consumidores renten una supercomputadora durante dos horas para ver un v\u00eddeo seguramente no tendr\u00e1 mucho \u00e9xito. Muchos sistemas de compresi\u00f3n pr\u00e1cticos llegan a extremos considerables para lograr que la decodificaci\u00f3n sea r\u00e1pida y sencilla, aun al precio de hacer lenta y complicada la codificaci\u00f3n. Por otra parte, para la multimedia en tiempo real, como las videoconferencias, la codificaci\u00f3n lenta es inaceptable. La codificaci\u00f3n debe ocurrir al momento, en tiempo real. En consecuencia, la multimedia en tiempo real usa algoritmos o par\u00e1metros diferentes que el almacenamiento de v\u00eddeos en disco, lo que con frecuencia resulta en una compresi\u00f3n significativamente menor. Una segunda asimetr\u00eda es que no es necesaria la capacidad de invertir el proceso de codificaci\u00f3n/decodificaci\u00f3n. Es decir, al comprimir, transmitir y descomprimir un archivo de datos, el usuario espera recibir el original, correcto hasta el \u00faltimo bit. En multimedia este requisito no existe. Por lo general, es aceptable que la se\u00f1al de v\u00eddeo despu\u00e9s de codificar y decodificar sea ligeramente diferente de la original. Cuando la salida decodificada no es exactamente igual a la entrada original, se dice que el sistema es con p\u00e9rdida (lossy). Si la entrada y la salida son id\u00e9nticas, el sistema es sin p\u00e9rdida (lossless). Los sistemas con p\u00e9rdida son importantes porque aceptar una peque\u00f1a p\u00e9rdida de informaci\u00f3n puede ofrecer ventajas enormes en t\u00e9rminos de la posible relaci\u00f3n de compresi\u00f3n. Est\u00e1ndar JPEG Un v\u00eddeo es s\u00f3lo una secuencia de im\u00e1genes (m\u00e1s sonido). Si pudi\u00e9ramos encontrar un buen algoritmo para codificar una sola imagen, tal algoritmo podr\u00eda aplicarse a cada imagen en sucesi\u00f3n para alcanzar la compresi\u00f3n de v\u00eddeo. Existen algoritmos buenos de compresi\u00f3n de im\u00e1genes fijas, por lo que comenzaremos ah\u00ed nuestro estudio de la compresi\u00f3n de v\u00eddeo. El est\u00e1ndar JPEG\nSEC. 7.4\n697\nMULTIMEDIA\n(Grupo Unido de Expertos en Fotograf\u00eda) para la compresi\u00f3n de im\u00e1genes fijas de tono continuo (por ejemplo, fotograf\u00edas) fue desarrollado por expertos en fotograf\u00eda que trabajaban bajo la tutela de la ITU, la ISO y el IEC, otro grupo de est\u00e1ndares. Es importante para la multimedia porque, a primera vista, el est\u00e1ndar multimedia para im\u00e1genes en movimiento, MPEG, es simplemente la codificaci\u00f3n JPEG por separado de cada trama, m\u00e1s otras caracter\u00edsticas extra para la compresi\u00f3n entre tramas y la detecci\u00f3n de movimiento. El JPEG se define en el Est\u00e1ndar Internacional 10918. JPEG tiene cuatro modos y muchas opciones; se parece m\u00e1s a una lista de compras que a un algoritmo. No obstante, para nuestros fines s\u00f3lo es relevante el modo secuencial con p\u00e9rdida, y \u00e9ste se ilustra en la figura 7-71. Adem\u00e1s, nos concentraremos en la manera en que el JPEG se usa normalmente para codificar im\u00e1genes de v\u00eddeo RGB de 24 bits y dejaremos fuera algunos de los detalles menores por cuestiones de sencillez.\nEntrada\nPreparaci\u00f3n de bloques\nTransformaci\u00f3n por coseno discreto\nCuantizaci\u00f3n\nCuantizaci\u00f3n diferencial\nCodificaci\u00f3n por longitud de serie\nCodificaci\u00f3n estad\u00edstica de salida\nSalida\nFigura 7-71. Operaci\u00f3n de JPEG en el modo secuencial con p\u00e9rdida.\nEl paso 1 de la codificaci\u00f3n de una imagen con JPEG es la preparaci\u00f3n del bloque. Para ser espec\u00edficos, supongamos que la entrada JPEG es una imagen RGB de 640 \u00d7 480 con 24 bits/p\u00edxel, como se muestra en la figura 7-72(a). Puesto que el uso de luminancia y crominancia da una mejor compresi\u00f3n, primero calcularemos la luminancia, Y, y las dos crominancias, I y Q (para NTSC), de acuerdo con las siguientes f\u00f3rmulas: Y = 0.30R + 0.59G + 0.11B I = 0.60R \u2212 0.28G \u2212 0.32B Q = 0.21R \u2212 0.52G + 0.31B En PAL, las crominancias se llaman U y V, y los coeficientes son diferentes, pero la idea es la misma. SECAM es diferente tanto de NTSC como de PAL. Se construyen matrices separadas para Y, I y Q, cada una con elementos en el intervalo de 0 a 255. A continuaci\u00f3n se promedian tramas de cuatro p\u00edxeles en las matrices I y Q para reducirlos a 320 \u00d7 240. Esta reducci\u00f3n tiene p\u00e9rdidas, pero el ojo apenas lo nota, ya que responde a la luminancia m\u00e1s que a la crominancia; no obstante, comprime los datos en un factor de dos. Ahora se resta 128 a cada elemento de las tres matrices para poner el 0 a la mitad de la gama. Por \u00faltimo,\n698\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nP\u00edxel de 8 bits 1 bloque\n(a)\nP\u00edxel de 24 bits\nBloque 4799 (b)\nFigura 7-72. (a) Datos de entrada RGB. (b) Tras la preparaci\u00f3n de bloques.\nAmplitud Y/I/Q\ncada matriz se divide en bloques de 8 \u00d7 8. La matriz Y tiene 4800 bloques; las otras dos tienen 1200 bloques cada una, como se muestra en la figura 7-72(b). El paso 2 de JPEG es aplicar de manera individual una DCT (transformaci\u00f3n por coseno discreto) a cada uno de los 7200 bloques. La salida de cada DCT es una matriz de 8 \u00d7 8 de coeficientes DCT. El elemento DCT (0, 0) es el valor promedio del bloque. Los otros elementos indican la cantidad de potencia espectral que hay en cada frecuencia espacial. En teor\u00eda, una DCT no tiene p\u00e9rdidas pero, en la pr\u00e1ctica, el uso de n\u00fameros de punto flotante y funciones trascendentales siempre introducen alg\u00fan error de redondeo que resulta en una peque\u00f1a p\u00e9rdida de informaci\u00f3n. Estos elementos normalmente decaen con rapidez al alejarse del origen (0, 0), como se sugiere en la figura 7-73.\nx\nFx\nFigura 7-73. (a) Un bloque de la matriz Y. (b) Coeficientes DCT.\nUna vez que la DCT est\u00e1 completa, el JPEG sigue con el paso 3, llamado cuantizaci\u00f3n, en el que se eliminan los coeficientes DCT menos importantes. Esta transformaci\u00f3n (con p\u00e9rdida) se hace dividiendo cada uno de los coeficientes de la matriz DCT de 8 \u00d7 8 entre un peso tomado de\nSEC. 7.4\n699\nMULTIMEDIA\nuna tabla. Si todos los pesos son 1, la transformaci\u00f3n no hace nada. Sin embargo, si los pesos aumentan de manera considerable desde el origen, las frecuencias espaciales m\u00e1s altas se descartar\u00e1n con rapidez. En la figura 7-74 se da un ejemplo de este paso. Aqu\u00ed vemos la matriz DCT inicial, la tabla de cuantizaci\u00f3n y el resultado obtenido al dividir cada elemento DCT entre el elemento correspondiente de la tabla de cuantizaci\u00f3n. Los valores de \u00e9sta no son parte del est\u00e1ndar JPEG. Cada aplicaci\u00f3n debe proporcionar sus propios valores, lo que le permite controlar el equilibrio p\u00e9rdida-compresi\u00f3n.\nCoeficientes DCT 150 92 52 12 4 2 1 0\n80 40 14 4 75 36 10 6 38 26 8 7 8 6 4 2 3 2 0 0 2 1 1 0 1 0 0 0 0 0 0 0\n2 1 4 1 0 0 0 0\n1 0 0 0 0 0 0 0\nTabla de cuantizaci\u00f3n 0 0 0 0 0 0 0 0\n1 1 2 4 8 16 32 1 1 2 4 8 16 32 2 2 2 4 8 16 32 4 4 4 4 8 16 32 8 8 8 8 8 16 32 16 16 16 16 16 16 32 32 32 32 32 32 32 32 64 64 64 64 64 64 64\nCoeficientes cuantizados 64 64 64 64 64 64 64 64\n150 92 26 3 1 0 0 0\n80 20 75 18 19 13 2 2 0 0 0 0 0 0 0 0\n4 3 2 1 0 0 0 0\n1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\nFigura 7-74. C\u00e1lculo de los coeficientes DCT cuantizados.\nEl paso 4 reduce el valor (0, 0) de cada bloque (el de la esquina superior izquierda) reemplaz\u00e1ndolo por el valor de su diferencia respecto al elemento correspondiente del bloque previo. Puesto que estos elementos son las medias de sus respectivos bloques, deben cambiar lentamente, por lo que al tomarse sus valores diferenciales se debe reducir la mayor\u00eda de ellos a valores peque\u00f1os. No se calculan diferenciales de los otros valores. Los valores (0, 0) se conocen como componentes de CD; los otros valores son los componentes de CA. El paso 5 hace lineales los 64 elementos y aplica codificaci\u00f3n por longitud de serie a la lista. Barrer el bloque de izquierda a derecha y luego de arriba abajo no concentra los ceros, por lo que se usa un patr\u00f3n de barrido de zigzag, como se muestra en la figura 7-75. En este ejemplo, el patr\u00f3n de zigzag produce 38 ceros consecutivos al final de la matriz. Esta cadena puede reducirse a una sola cuenta diciendo que hay 38 ceros, una t\u00e9cnica conocida como codificaci\u00f3n por longitud de serie. Ahora tenemos una lista de n\u00fameros que representan la imagen (en espacio de transformaci\u00f3n). El paso 6 aplica codificaci\u00f3n de Huffman a los n\u00fameros para su almacenamiento o transmisi\u00f3n, asignando c\u00f3digos m\u00e1s cortos de n\u00fameros comunes que de no comunes. JPEG puede parecer complicado, pero eso es porque es complicado. Aun as\u00ed se usa ampliamente, debido a que con frecuencia produce una compresi\u00f3n de 20:1 o mejor. La decodificaci\u00f3n de una imagen JPEG requiere la ejecuci\u00f3n hacia atr\u00e1s del algoritmo. JEPG es m\u00e1s o menos sim\u00e9trico: la decodificaci\u00f3n tarda tanto como la codificaci\u00f3n. Esta propiedad no se aplica a todos los algoritmos de compresi\u00f3n, como veremos a continuaci\u00f3n.\n700\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nFigura 7-75. Orden en que se transmiten los valores cuantizados.\nEst\u00e1ndar MPEG Por \u00faltimo, llegamos al coraz\u00f3n del asunto: los est\u00e1ndares MPEG (Grupo de Expertos en Im\u00e1genes en Movimiento). \u00c9stos son los algoritmos principales usados para comprimir v\u00eddeo y han sido est\u00e1ndares internacionales desde 1993. Puesto que las pel\u00edculas contienen im\u00e1genes y sonido, MPEG puede comprimir tanto audio como v\u00eddeo. Ya examinamos la compresi\u00f3n de audio y la de im\u00e1genes, por lo que ahora nos enfocaremos principalmente en la compresi\u00f3n de v\u00eddeo. El primer est\u00e1ndar terminado fue el MPEG-1 (Est\u00e1ndar Internacional 11172); su meta fue producir salida con calidad de videograbadora (352 \u00d7 240 para NTSC) usando una tasa de bits de 1.2 Mbps. Una imagen de 352 \u00d7 240 con 24 bits/p\u00edxeles y 25 tramas/seg requiere 50.7 Mbps, por lo que reducirla a 1.2 Mbps no es nada f\u00e1cil. Se necesita un factor de compresi\u00f3n 40. MPEG-1 puede transmitirse sobre l\u00edneas de transmisi\u00f3n de par trenzado a distancias modestas. MPEG-1 tambi\u00e9n se usa para almacenar pel\u00edculas en CD-ROM. El siguiente est\u00e1ndar de la familia MPEG fue MPEG-2 (Est\u00e1ndar Internacional 13818), que originalmente se dise\u00f1\u00f3 para comprimir v\u00eddeo con calidad de difusi\u00f3n a 4 o 6 Mbps, a fin de que se ajustara en un canal de difusi\u00f3n NTSC o PAL. Posteriormente, MPEG-2 se extendi\u00f3 para soportar resoluciones mayores, entre ellas HDTV. En la actualidad es muy com\u00fan y forma la base para el DVD y la televisi\u00f3n por sat\u00e9lite digital. Los principios b\u00e1sicos de MPEG-1 y MPEG-2 son parecidos, pero los detalles son diferentes. A primera vista, MPEG-2 es un supergrupo del MPEG-1, con caracter\u00edsticas adicionales, formatos de trama y opciones de codificaci\u00f3n. Estudiaremos MPEG-1 primero y MPEG-2 despu\u00e9s. MPEG-1 tiene tres partes: audio, v\u00eddeo y sistema, que integra los otros dos, como se muestra en la figura 7-76. Los codificadores de audio y v\u00eddeo funcionan en forma independiente, lo que hace surgir la cuesti\u00f3n de c\u00f3mo se sincronizan los dos flujos en el receptor. Este problema se resuelve teniendo un reloj de sistema de 90 kHz que proporciona el valor de tiempo actual a ambos codificadores. Estos valores son de 33 bits, para permitir que las pel\u00edculas duren 24 horas sin que\nSEC. 7.4\nMULTIMEDIA\n701\nden la vuelta. Estas marcas de tiempo se incluyen en la salida codificada y se propagan hasta el receptor, que puede usarlas para sincronizar los flujos de audio y v\u00eddeo. Ahora consideremos la compresi\u00f3n del v\u00eddeo MPEG-1. Existen dos clases de redundancia en las pel\u00edculas: espacial y temporal. MPEG-1 aprovecha ambas. La redundancia espacial puede utilizarse simplemente codificando por separado cada trama mediante JPEG. Este enfoque se usa en forma ocasional, sobre todo cuando se requiere acceso aleatorio a cada trama, como en la edici\u00f3n de producciones de v\u00eddeo. En este modo, se puede lograr un ancho de banda comprimido en el rango de 8 a 10 Mbps.\nSe\u00f1al de audio Codificador de audio\nReloj\nMultiplexor Salida MPEG-1 del sistema\nSe\u00f1al de v\u00eddeo Codificador de v\u00eddeo\nFigura 7-76. Sincronizaci\u00f3n de los flujos de audio y v\u00eddeo en MPEG-1.\nPuede lograrse compresi\u00f3n adicional aprovechando el hecho de que las tramas consecutivas a menudo son casi id\u00e9nticas. Este efecto es menor de lo que podr\u00eda pensarse, puesto que muchos cineastas hacen cortes entre escenas cada 3 o 4 segundos (tome el tiempo de una pel\u00edcula y cuente las escenas). No obstante, incluso una serie de 75 tramas muy parecidas ofrece una reducci\u00f3n importante que simplemente codificar cada trama por separado mediante JPEG. En escenas en las que la c\u00e1mara y el fondo son estacionarios y uno o dos actores se mueven con lentitud, casi todos los p\u00edxeles ser\u00e1n id\u00e9nticos de una trama a otra. Aqu\u00ed bastar\u00e1 con restar cada trama de la anterior y con aplicar JPEG a la diferencia. Sin embargo, esto no es muy bueno en las escenas en las que la c\u00e1mara hace una panor\u00e1mica o un acercamiento. Lo que se necesita es una forma para compensar este movimiento. Esto es precisamente lo que hace MPEG, y es la diferencia principal entre MPEG y JPEG. La salida de MPEG-1 consiste en cuatro tipos de trama: 1. Tramas I (intracodificadas): im\u00e1genes fijas autocontenidas codificadas en JPEG. 2. Tramas P (predictivas): diferencia de bloque por bloque con la trama anterior. 3. Tramas B (bidireccionales): diferencias entre la trama anterior y la siguiente. 4. Tramas D (codificaci\u00f3n CD): promedios de bloque usados para avance r\u00e1pido.\n702\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nLas tramas I son s\u00f3lo im\u00e1genes fijas codificadas con una variante de JPEG, y tambi\u00e9n con luminancia de definici\u00f3n completa y crominancia de definici\u00f3n media sobre cada eje. Es necesario hacer que las tramas I aparezcan en forma peri\u00f3dica en el flujo de salida por tres razones. Primera, MPEG-1 puede usarse para transmisi\u00f3n de multidifusi\u00f3n, en la que los usuarios pueden realizar la sintonizaci\u00f3n a voluntad. Si todas las tramas dependieran de sus antecesores remont\u00e1ndose a la primera trama, cualquiera que no recibiera la primera trama nunca podr\u00eda decodificar las tramas subsiguientes. Segunda, si una trama se recibiera con error, no ser\u00eda posible ninguna decodificaci\u00f3n posterior. Tercera, sin tramas I, al hacer un avance o retroceso r\u00e1pido, el decodificador tendr\u00eda que calcular cada trama por la que pasa para conocer el valor completo de aquella en la que se detiene. Por estas tres razones, se insertan tramas I en la salida una o dos veces por segundo. En contraste, las tramas P codifican las diferencias entre tramas; se basan en la idea de los macrobloques, que cubren 16 \u00d7 16 p\u00edxeles de espacio de luminancia y 8 \u00d7 8 p\u00edxeles de espacio de crominancia. Un macrobloque se codifica buscando en la trama previa algo igual a \u00e9l o ligeramente diferente de \u00e9l. En la figura 7-77 se muestra un caso en el que ser\u00edan \u00fatiles las tramas P. Aqu\u00ed vemos tres tramas consecutivas que tienen el mismo fondo, pero en las que cambia la posici\u00f3n de una persona. Los macrobloques que contienen el fondo ser\u00e1n exactamente iguales, pero los macrobloques que contienen la persona estar\u00e1n desfasados en alguna cantidad desconocida y tendr\u00e1n que rastrearse.\nFigura 7-77. Tres tramas consecutivas.\nEl est\u00e1ndar MPEG-1 no especifica c\u00f3mo efectuar la b\u00fasqueda, ni qu\u00e9 tan profunda o buena debe ser. \u00c9stas son decisiones que dependen de cada implementaci\u00f3n. Por ejemplo, una implementaci\u00f3n podr\u00eda buscar un macrobloque en la posici\u00f3n actual, pero de la trama anterior, y con todas las dem\u00e1s posiciones desplazadas \u00b1\u0394x en la direcci\u00f3n x y \u00b1\u0394y en la direcci\u00f3n y. Para cada posici\u00f3n, podr\u00eda calcularse la cantidad de equivalencias en la matriz de luminancia. La posici\u00f3n con el puntaje m\u00e1s alto se declarar\u00eda ganadora, siempre y cuando estuviera por encima de un umbral predefinido. En caso contrario, se dir\u00eda que falta el macrobloque. Por supuesto, pueden usarse algoritmos mucho m\u00e1s refinados. Si se encuentra un macrobloque, se codifica tomando la diferencia respecto a su valor en la trama previa (para la luminancia y ambas crominancias). Estas matrices de diferencias son el objeto de la transformaci\u00f3n por coseno discreto, cuantizaci\u00f3n, codificaci\u00f3n por longitud de serie y\nSEC. 7.4\nMULTIMEDIA\n703\ncodificaci\u00f3n Huffman, al igual que en el JPEG. El valor del macrobloque en el flujo de salida es entonces el vector de movimiento (la distancia que se movi\u00f3 el macrobloque de su posici\u00f3n previa en cada sentido), seguido de la lista de codificaci\u00f3n Huffman de los n\u00fameros. Si el macrobloque no se encuentra en la trama previa, se codifica el valor actual con JPEG, igual que en una trama I. Es claro que este algoritmo es altamente asim\u00e9trico. Una implementaci\u00f3n es libre de intentar todas las posiciones de la trama previa si lo desea, en un intento desesperado por localizar todos los macrobloques previos. Este m\u00e9todo reducir\u00e1 al m\u00ednimo el flujo MPEG-1 codificado al costo de una codificaci\u00f3n muy lenta. Este m\u00e9todo podr\u00eda estar bien para la codificaci\u00f3n de una sola vez de una cineteca, pero ser\u00eda terrible para las videoconferencias en tiempo real. De la misma manera, cada implementaci\u00f3n puede decidir lo que constituye un macrobloque \u201cencontrado\u201d. Esto permite que los implementadores compitan seg\u00fan la calidad y velocidad de sus algoritmos, pero siempre produce MPEG-1 que se apega. Sea cual sea el algoritmo de b\u00fasqueda usado, la salida final es la codificaci\u00f3n JPEG del macrobloque actual, o la codificaci\u00f3n JPEG de la diferencia entre el macrobloque actual y el de la trama previa, con un desplazamiento especificado respecto a la trama actual. Hasta ahora, la decodificaci\u00f3n de MPEG-1 es directa. La decodificaci\u00f3n de tramas I es igual a la de las im\u00e1genes JPEG. La decodificaci\u00f3n de tramas P requiere que el decodificador almacene en el b\u00fafer la trama previa, y luego construya la nueva en un segundo b\u00fafer con base en macrobloques completamente codificados y en macrobloques que contienen diferencias respecto a la trama previa. La nueva trama se ensambla macrobloque por macrobloque. Las tramas B son parecidas a las P, excepto que permiten que el macrobloque de referencia est\u00e9 en una trama previa o en una trama posterior. Esta libertad adicional permite mejorar la compensaci\u00f3n del movimiento y tambi\u00e9n es \u00fatil cuando pasan objetos por delante o detr\u00e1s de otros objetos. Para ejecutar la codificaci\u00f3n de tramas B, el codificador necesita tener a la vez tres tramas decodificadas en la memoria: la anterior, la actual y la siguiente. Aunque las tramas B producen la mejor compresi\u00f3n, no todas las implementaciones las soportan. Las tramas D s\u00f3lo se usan para visualizar una imagen de baja definici\u00f3n cuando se realiza un rebobinado o un avance r\u00e1pido. Hacer la decodificaci\u00f3n MPEG-1 normal en tiempo real ya es bastante dif\u00edcil. Esperar que el decodificador lo haga mientras trabaja a diez veces su velocidad normal es pedir demasiado. En su lugar, las tramas D se utilizan para producir im\u00e1genes de baja resoluci\u00f3n. Cada entrada de trama D simplemente es el valor promedio de un bloque, sin mayor codificaci\u00f3n, lo que simplifica la presentaci\u00f3n en tiempo real. Este mecanismo es importante para permitir que la gente barra un v\u00eddeo a alta velocidad en busca de una escena en particular. Por lo general, las tramas D se colocan justo antes de las tramas I correspondientes, por lo que si se detiene el avance r\u00e1pido, ser\u00e1 posible ver nuevamente a una velocidad normal. Una vez terminado nuestro tratamiento de MPEG-1, pasemos al de MPEG-2. La codificaci\u00f3n MPEG-2 es parecida en lo fundamental a la codificaci\u00f3n MPEG-1, con tramas I, tramas P y tramas B. Sin embargo, no se soportan las tramas D. Adem\u00e1s, la transformaci\u00f3n por coseno discreto es de 10 \u00d7 10 en lugar de 8 \u00d7 8, lo que da 50% m\u00e1s de coeficientes y, por lo tanto, mayor calidad. Puesto que\n704\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nMPEG-2 est\u00e1 dirigido a la televisi\u00f3n difundida al igual que al DVD, reconoce im\u00e1genes tanto progresivas como entrelazadas, mientras que MPEG-1 reconoce s\u00f3lo las im\u00e1genes progresivas. Tambi\u00e9n son diferentes otros detalles menores entre los dos est\u00e1ndares. En lugar de soportar s\u00f3lo un nivel de resoluci\u00f3n, MPEG-2 soporta cuatro: bajo (352 \u00d7 240), medio (720 \u00d7 480), alto 1440 (1440 \u00d7 1152) y alto (1920 \u00d7 1080). La resoluci\u00f3n baja es para las VCRs y por compatibilidad hacia atr\u00e1s con MPEG-1. La resoluci\u00f3n media es la normal para la difusi\u00f3n NTSC. Las otras dos son para HDTV. Para una salida de alta calidad, MPEG-2 por lo general se ejecuta de 4 a 8 Mbps.\n7.4.8 V\u00eddeo bajo demanda El v\u00eddeo bajo demanda a veces se compara con una tienda de renta de v\u00eddeos. El usuario (cliente) selecciona cualquiera de los v\u00eddeos disponibles y se lo lleva a casa para verlo. Con el v\u00eddeo bajo demanda, la selecci\u00f3n se realiza en casa utilizando el control remoto de la televisi\u00f3n y el v\u00eddeo comienza de inmediato. No se necesita ning\u00fan viaje a la tienda. Sobra decir que la implementaci\u00f3n del v\u00eddeo bajo demanda es un tanto m\u00e1s complicada que su descripci\u00f3n. En esta secci\u00f3n daremos un repaso general de los conceptos b\u00e1sicos y de su implementaci\u00f3n. \u00bfEl v\u00eddeo bajo demanda es en realidad como rentar un v\u00eddeo, o se parece m\u00e1s a seleccionar una pel\u00edcula de un sistema de cable de 500 canales? La respuesta tiene implicaciones t\u00e9cnicas importantes. En particular, los usuarios que rentan v\u00eddeos est\u00e1n acostumbrados a la idea de poder detener el v\u00eddeo, hacer un viaje r\u00e1pido a la cocina o al ba\u00f1o, y luego continuar a partir de donde detuvieron el v\u00eddeo. Los televidentes no esperan tener la capacidad de poner en pausa los programas. Si el v\u00eddeo bajo demanda va a competir con \u00e9xito contra las tiendas de renta de v\u00eddeos, podr\u00eda ser necesario dar a los usuarios la capacidad de detener, iniciar y rebobinar los v\u00eddeos a voluntad. Para ello, el proveedor de v\u00eddeos tendr\u00e1 que transmitir una copia individual a cada quien. Por otra parte, si el v\u00eddeo bajo demanda se considera m\u00e1s como una televisi\u00f3n avanzada, entonces puede ser suficiente hacer que el proveedor de v\u00eddeo inicie cada v\u00eddeo popular, digamos, cada 10 minutos, y luego lo exhiba sin parar. Un usuario que desee ver un v\u00eddeo popular podr\u00eda tener que esperar hasta 10 minutos para que comience. Aunque no es posible la pausa/reinicio aqu\u00ed, un televidente que regrese a la sala tras una interrupci\u00f3n corta puede pasar a otro canal que muestre el mismo v\u00eddeo, pero con 10 minutos de retraso. Una parte del material se repetir\u00e1, pero no se perder\u00e1 nada. Este esquema se llama casi v\u00eddeo bajo demanda, y ofrece la posibilidad de un costo mucho menor, puesto que la misma alimentaci\u00f3n del servidor de v\u00eddeo puede llegar a muchos usuarios al mismo tiempo. La diferencia entre v\u00eddeo bajo demanda y casi v\u00eddeo bajo demanda es parecida a la diferencia entre manejar su propio auto y tomar el autob\u00fas. Ver pel\u00edculas (casi) bajo demanda es un servicio de una gran grama de nuevos servicios que podr\u00edan hacerse realidad una vez que est\u00e9n disponibles las redes de banda amplia. En la figura 7-78 se muestra el modelo general utilizado por mucha gente. Aqu\u00ed vemos una red dorsal de \u00e1rea\nSEC. 7.4\n705\nMULTIMEDIA\namplia (nacional o internacional) de alto ancho de banda como centro del sistema. Conectadas a ella hay miles de redes de distribuci\u00f3n locales, como TV por cable o sistemas de distribuci\u00f3n de compa\u00f1\u00edas telef\u00f3nicas. Los sistemas de distribuci\u00f3n locales llegan hasta las casas de la gente, donde terminan en cajas de control, que de hecho son potentes computadoras personales especializadas.\nServidor de v\u00eddeo\nConmutador\nCasa del cliente\nFibra\nRed dorsal ATM o SONET\nServidor de audio\nServidor de spool local\nRed de distribuci\u00f3n local\nFigura 7-78. Esquema general de un sistema de v\u00eddeo bajo demanda.\nHay miles de proveedores de informaci\u00f3n conectados a la red dorsal mediante fibras \u00f3pticas de alto ancho de banda. Algunos de \u00e9stos ofrecer\u00e1n v\u00eddeo o audio de pago por evento. Otros ofrecer\u00e1n servicios especializados, como compras desde casa (en los que se permite que el televidente gire una lata de sopa y haga un acercamiento a la lista de ingredientes que aparece en la etiqueta de dicha lata, o que vea un fragmento de v\u00eddeo que trata sobre c\u00f3mo manejar una podadora que utiliza gasolina). Sin duda, pronto habr\u00e1 la disponibilidad de deportes, noticias, cap\u00edtulos viejos del \u201cChapul\u00edn Colorado\u201d, acceso a WWW y otras innumerables posibilidades. En el sistema tambi\u00e9n se incluyen servidores de spool de E/S locales que permitir\u00e1n acercar los v\u00eddeos al usuario, a fin de ahorrar ancho de banda durante las horas pico. La manera en que encajar\u00e1n estas partes y qui\u00e9n ser\u00e1 el due\u00f1o de qu\u00e9 son temas de intenso debate en la industria. A continuaci\u00f3n examinaremos el dise\u00f1o de las partes principales del sistema: los servidores de v\u00eddeo y la red de distribuci\u00f3n.\n706\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nServidores de v\u00eddeo Para tener (casi) v\u00eddeo bajo demanda, necesitamos servidores de v\u00eddeo capaces de almacenar y sacar una gran cantidad de pel\u00edculas de manera simult\u00e1nea. La cantidad total de pel\u00edculas que se han filmado se estima en 65,000 (Minoli, 1995). Cuando se comprime con MPEG-2, una pel\u00edcula normal ocupa unos 4 GB, por lo que 65,000 de ellas requerir\u00e1n unos 260 terabytes. Sume a todo esto todos los programas de televisi\u00f3n, filmaciones de deportes, noticieros, cat\u00e1logos parlantes de compras, etc\u00e9tera, y queda claro que tenemos en nuestras manos un problema de almacenamiento de proporciones may\u00fasculas. La manera m\u00e1s sencilla de almacenar vol\u00famenes grandes de informaci\u00f3n es en cinta magn\u00e9tica. Siempre ha sido el caso y probablemente seguir\u00e1 si\u00e9ndolo. Una cinta Ultrium puede almacenar 200 GB (50 pel\u00edculas) a un costo de aproximadamente 1-2 d\u00f3lares/pel\u00edcula. En el mercado hay servidores mec\u00e1nicos grandes que almacenan miles de cintas y tienen un brazo de robot para traer cualquier cinta e introducirla en la unidad de cinta. El problema de estos sistemas es el tiempo de acceso (especialmente para la pel\u00edcula 50 de una cinta), la tasa de transferencia y la cantidad limitada de unidades de cinta (para proporcionar n pel\u00edculas a la vez, se requieren n unidades). Por fortuna, la experiencia de las tiendas de renta de v\u00eddeos, bibliotecas p\u00fablicas y otras organizaciones similares demuestra que no todos los productos tienen la misma popularidad. Experimentalmente, cuando hay N pel\u00edculas disponibles, la fracci\u00f3n de todas las solicitudes que pide el elemento n\u00famero k en popularidad es de aproximadamente C/k. Aqu\u00ed, C se calcula para normalizar la suma a 1, es decir C 1/(1 1/2 1/3 1/4 1/5 \u2026 1/N ) Por lo tanto, la pel\u00edcula m\u00e1s vista es siete veces m\u00e1s popular que la pel\u00edcula n\u00famero siete. Este resultado se conoce como ley de Zipf (Zipf, 1949). El hecho de que algunas pel\u00edculas sean mucho m\u00e1s populares que otras sugiere una soluci\u00f3n posible en forma de jerarqu\u00eda de almacenamiento, como se muestra en la figura 7-79. Aqu\u00ed, el desempe\u00f1o aumenta a medida que se sube en la jerarqu\u00eda. RAM Disco magn\u00e9tico DVD Cinta\nFigura 7-79. Jerarqu\u00eda de almacenamiento de un servidor de v\u00eddeo.\nUna alternativa a la cinta es el almacenamiento \u00f3ptico. Los DVDs actuales almacenan 4.7 GB, que sirve para una pel\u00edcula, pero la siguiente generaci\u00f3n podr\u00e1 almacenar dos pel\u00edculas. Aunque los tiempos de b\u00fasqueda son lentos en comparaci\u00f3n con los discos magn\u00e9ticos (50 mseg contra\nSEC. 7.4\n707\nMULTIMEDIA\n5 mseg), su bajo costo y alta confiabilidad hace que los tocadiscos \u00f3pticos que contienen miles de DVDs sean una buena alternativa a la cinta para las pel\u00edculas de mayor uso. A continuaci\u00f3n est\u00e1n los discos magn\u00e9ticos. \u00c9stos tienen tiempos de acceso cortos (5 mseg), tasas de transferencia altas (320 MB/seg para SCSI 320) y capacidades sustanciales (> 100 GB), lo que los hace adecuados para guardar pel\u00edculas que en realidad se est\u00e1n transmitiendo (a diferencia de simplemente estar almacenadas en caso de que alguien quiera verlas). Su desventaja principal es el alto costo de almacenar pel\u00edculas a las que pocas veces se accede. En la parte superior de la pir\u00e1mide de la figura 7-79 est\u00e1 la RAM. \u00c9sta es el medio de almacenamiento m\u00e1s r\u00e1pido, pero tambi\u00e9n el m\u00e1s costoso. Cuando los precios de la RAM bajen a $50/GB, la RAM de una pel\u00edcula de 4 GB costar\u00e1 $200, por lo que la RAM de 100 pel\u00edculas costar\u00e1 $20,000, debido a que \u00e9stas ocupar\u00e1n 400 GB. Sin embargo, se est\u00e1 volviendo algo factible el que un servidor de v\u00eddeo que almacene 100 pel\u00edculas pueda mantenerlas a todas en la RAM. Y si dicho servidor tiene 100 clientes, pero \u00e9stos ven colectivamente s\u00f3lo 20 pel\u00edculas diferentes, no s\u00f3lo es algo factible sino un buen dise\u00f1o. Debido a que un servidor de v\u00eddeo en realidad es un dispositivo masivo de E/S en tiempo real, necesita una arquitectura de hardware y software diferente de la de una PC o una estaci\u00f3n de trabajo UNIX. En la figura 7-80 se ilustra la arquitectura del hardware de un servidor de v\u00eddeo t\u00edpico. El servidor tiene una o m\u00e1s CPUs de alto desempe\u00f1o, cada una con un poco de memoria local, una memoria principal compartida, un cach\u00e9 de RAM masivo para pel\u00edculas populares, una variedad de dispositivos de almacenamiento para guardar las pel\u00edculas, y alg\u00fan hardware de red, normalmente una interfaz \u00f3ptica con una red dorsal ATM (o SONET) a OC-12 o mayor. Estos subsistemas se conectan mediante un bus de velocidad extremadamente alta (cuando menos 1 GB/seg).\nCPU\nRAM local\nCPU\nRAM local\nCach\u00e9 de pel\u00edculas (RAM)\nRAM principal\nBus de alta velocidad\nControlador de cinta\nControlador de disco \u00f3ptico\nControlador de disco magn\u00e9tico\nInterfaz de red\nA la red dorsal\nArchivos en cinta\nTocadiscos \u00f3ptico\nRAID\nFigura 7-80. Arquitectura del hardware de un servidor de v\u00eddeo t\u00edpico.\nAhora veamos brevemente el software de un servidor de v\u00eddeo. Las CPUs se usan para aceptar solicitudes de los usuarios, localizar pel\u00edculas, mover datos entre dispositivos, facturar al cliente\n708\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\ny muchas funciones m\u00e1s. Algunas de \u00e9stas no son de sincronizaci\u00f3n cr\u00edtica, pero muchas otras s\u00ed, por lo que algunas de las CPUs, si no es que todas, tendr\u00e1n que ejecutar un sistema operativo en tiempo real, como un micron\u00facleo en tiempo real. Por lo general, estos sistemas dividen el trabajo en tareas peque\u00f1as, con un plazo de terminaci\u00f3n conocido. Despu\u00e9s el planificador puede ejecutar un algoritmo del tipo del siguiente plazo de terminaci\u00f3n m\u00e1s cercano o el algoritmo de tasa monot\u00f3nica (Liu y Layland, 1973). El software de la CPU tambi\u00e9n define la naturaleza de la interfaz que el servidor presenta a los clientes (servidores de spool o cajas de control colocadas sobre el televisor). Son comunes dos dise\u00f1os. El primero es un sistema tradicional de archivos, en el que los clientes pueden abrir, leer, escribir y cerrar archivos. Aparte de las complicaciones generadas por la jerarqu\u00eda de almacenamiento y las consideraciones en tiempo real, uno de tales servidores puede tener un sistema de archivos modelado seg\u00fan el de UNIX. El segundo tipo de interfaz se basa en el modelo de la videograbadora. Los comandos le piden al servidor que abra, ejecute, haga pausa, avance r\u00e1pido y rebobine archivos. La diferencia con el modelo UNIX es que, una vez que se ha emitido un comando PLAY, el servidor simplemente sigue sacando datos a velocidad constante, sin que se requieran comandos nuevos. El coraz\u00f3n del software del servidor de v\u00eddeo es el software de administraci\u00f3n de disco, que tiene dos tareas principales: colocar pel\u00edculas en el disco magn\u00e9tico cuando tienen que traerse de almacenamiento \u00f3ptico o cinta, y manejar solicitudes de disco para los muchos flujos de salida. La colocaci\u00f3n de las pel\u00edculas es importante, puesto que puede afectar en gran medida el desempe\u00f1o. Dos maneras posibles de organizar el almacenamiento en disco son la granja de discos y el arreglo de discos. En la granja de discos, cada unidad contiene algunas pel\u00edculas completas. Por cuestiones de desempe\u00f1o y confiabilidad, cada pel\u00edcula debe estar presente en cuando menos dos unidades, tal vez m\u00e1s. La otra organizaci\u00f3n del almacenamiento es el arreglo de discos o RAID (arreglo redundante de discos baratos), en el que cada pel\u00edcula se divide entre varias unidades, por ejemplo, el bloque 0 en la unidad 0, el bloque 1 en la unidad 1, etc\u00e9tera, con el bloque n \u2212 1 en la unidad n \u2212 1. Despu\u00e9s de eso, el ciclo se repite, con el bloque n en la unidad 0, etc\u00e9tera. Esta organizaci\u00f3n se llama divisi\u00f3n (striping). Un arreglo de discos con divisi\u00f3n tiene varias ventajas respecto a una granja de discos. Primero, las n unidades pueden operar en paralelo, aumentando el desempe\u00f1o en un factor de n. Segundo, el arreglo puede hacerse redundante agregando una unidad extra a cada grupo de n, donde la unidad redundante contiene el OR exclusivo bloque por bloque de las otras unidades, a fin de permitir la recuperaci\u00f3n completa de datos en caso de que una unidad falle. Por \u00faltimo, se resuelve el problema del equilibrio de la carga (no se requiere colocaci\u00f3n manual para evitar que todas las pel\u00edculas populares se encuentren en la misma unidad). Por otra parte, la organizaci\u00f3n por arreglo de discos es m\u00e1s complicada que la granja de discos y es altamente sensible a diversas fallas; tambi\u00e9n es poco adecuada para operaciones de videograbadora, por ejemplo, para el rebobinado y avance r\u00e1pido de una pel\u00edcula. La otra tarea del software del disco es dar servicio a todos los flujos de salida en tiempo real y cumplir sus restricciones de temporizaci\u00f3n. Hace apenas algunos a\u00f1os, esto requer\u00eda algoritmos\nSEC. 7.4\nMULTIMEDIA\n709\nde programaci\u00f3n de disco complejos, pero ahora que los precios de la memoria est\u00e1n tan bajos, es posible un m\u00e9todo mucho m\u00e1s simple. Por cada flujo servido, se almacena en RAM un b\u00fafer de, digamos, 10 seg de v\u00eddeo (5 MB). Se llena mediante un proceso de disco y se vac\u00eda mediante un proceso de red. Con 500 MB de RAM se pueden alimentar 100 flujos directamente de la RAM. Por supuesto, el subsistema de disco debe tener una tasa de datos sostenida de 50 MB/seg para mantener los b\u00faferes llenos, pero un RAID construido a partir de discos SCSI de alta calidad puede manejar f\u00e1cilmente este requerimiento. La red de distribuci\u00f3n La red de distribuci\u00f3n es el grupo de conmutadores y l\u00edneas entre el origen y el destino. Como vimos en la figura 7-78, esta red consiste en una red dorsal conectada a la red local de distribuci\u00f3n. Generalmente, la red dorsal es conmutada y la red de distribuci\u00f3n local no lo es. El requisito principal impuesto en la red dorsal es un ancho de banda alto. Una fluctuaci\u00f3n baja tambi\u00e9n era un requisito, pero ahora ya no lo es, incluso ni en las PCs actuales m\u00e1s peque\u00f1as, las cuales tienen la capacidad de almacenar en el b\u00fafer 10 seg de v\u00eddeo MPEG-2 de alta calidad. La distribuci\u00f3n local es ca\u00f3tica, pues las diferentes compa\u00f1\u00edas usan redes distintas en diferentes regiones. Las compa\u00f1\u00edas telef\u00f3nicas, las de televisi\u00f3n por cable y los nuevos participantes, como las compa\u00f1\u00edas de electricidad, est\u00e1n convencidos de que el que llegue primero ser\u00e1 el gran ganador, por lo que ahora vemos una proliferaci\u00f3n en la instalaci\u00f3n de nuevas tecnolog\u00edas. En Jap\u00f3n, algunas compa\u00f1\u00edas de alcantarillado est\u00e1n en el negocio de Internet, argumentando que ellas tienen el canal m\u00e1s grande en la casa de todos (ejecutan una fibra \u00f3ptica a trav\u00e9s de \u00e9l, pero deben ser muy cuidadosas sobre en qu\u00e9 lugar emerge). Los cuatro esquemas principales de distribuci\u00f3n local de v\u00eddeo bajo demanda tienen las siglas ADSL, FTTC, FTTH y HFC. Ahora los explicaremos. ADSL (L\u00ednea Digital de Suscriptor Asim\u00e9trica) fue el primer competidor de la industria telef\u00f3nica por el premio de la distribuci\u00f3n local. La idea es que en pr\u00e1cticamente cada casa de Estados Unidos, Europa y Jap\u00f3n ya tiene un par trenzado de cobre (para el servicio telef\u00f3nico anal\u00f3gico). Si estos cables pudieran usarse para el v\u00eddeo bajo demanda, las compa\u00f1\u00edas telef\u00f3nicas podr\u00edan ganar. Por supuesto, el problema es que estos cables no pueden manejar ni siquiera MPEG-1 a trav\u00e9s de su recorrido normal de 10 km, y ni mencionar MPEG-2. El v\u00eddeo de movimiento y color completos, y de alta calidad necesita de 4 a 8 Mbps, dependiendo de la calidad deseada. ADSL realmente no es tan r\u00e1pida, excepto para los ciclos locales muy cortos. El segundo dise\u00f1o de las compa\u00f1\u00edas telef\u00f3nicas es el FTTC (Fibra Hasta la Acera). En FTTC, la compa\u00f1\u00eda telef\u00f3nica tiende fibra \u00f3ptica de la oficina central a cada barrio residencial, terminando en un dispositivo llamado ONU (Unidad de Red \u00d3ptica). En una ONU pueden terminar hasta 16 circuitos locales de cobre. Estos circuitos son lo bastante cortos para operar T1 o T2 de d\u00faplex total en ellos, permitiendo pel\u00edculas MPEG-1 y MPEG-2, respectivamente. Adem\u00e1s,\n710\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nson posibles videoconferencias para trabajadores remotos y negocios peque\u00f1os, pues el FTTC es sim\u00e9trico. La tercera soluci\u00f3n de las compa\u00f1\u00edas telef\u00f3nicas es tender fibra en todas las casas. Este sistema se llama FTTH (Fibra Hasta la Casa). En \u00e9l, todo mundo puede tener una portadora OC-1, OC-3 o inclusive mayor, si se requiere. La FTTH es muy costosa y tardar\u00e1 a\u00f1os en hacerse realidad, pero ciertamente abrir\u00e1 una vasta gama de nuevas posibilidades cuando finalmente ocurra. En la figura 7-63 vimos la forma en que cualquier persona puede operar su propia estaci\u00f3n de radio. \u00bfQu\u00e9 pensar\u00eda de que cada miembro de la familia opere su propia estaci\u00f3n de televisi\u00f3n? ADSL, FTTC y FTTH son redes de distribuci\u00f3n local de punto a punto, lo cual no es sorprendente debido a la forma en que est\u00e1 organizado el sistema telef\u00f3nico actual. Un enfoque completamente diferente es el HFC (H\u00edbrido Fibra/Coaxial), la soluci\u00f3n preferida que est\u00e1n instalando los proveedores de TV por cable y que se ilustra en la figura 2-47(a). La propuesta es la siguiente. Los cables coaxiales actuales de 300 a 450 MHz ser\u00e1n sustituidos por cables coaxiales de 750 MHz, elevando la capacidad de 50 a 75 canales de 6 MHz a 125 canales de 6 MHz. Setenta y cinco de los 125 canales se usar\u00e1n para la transmisi\u00f3n de televisi\u00f3n anal\u00f3gica. Los 50 canales nuevos se modular\u00e1n de manera individual usando QAM-526, que proporciona unos 40 Mbps por canal, lo que da un total de 2 Gbps de ancho de banda nuevo. Los amplificadores head-end se mover\u00e1n m\u00e1s hacia el interior de los vecindarios, de modo que cada cable pase por s\u00f3lo 500 casas. Una divisi\u00f3n sencilla indica que es posible asignar a cada casa un canal dedicado de 4 Mbps, que puede manejar una pel\u00edcula MPEG-2. Aunque esto suena maravilloso, requiere que los proveedores de cable reemplacen todos los cables existentes con coaxial de 750 MHz, instalen nuevos amplificadores head-end y eliminen todos los amplificadores de una v\u00eda; en pocas palabras, que reemplacen todo el sistema de TV por cable. En consecuencia, la cantidad de infraestructura nueva es comparable con la que necesitan las compa\u00f1\u00edas telef\u00f3nicas para FTTC. En ambos casos, el proveedor local de la red debe tender fibra en los barrios residenciales. Nuevamente, en ambos casos, la fibra termina en un convertidor optoel\u00e9ctrico. En FTTC, el segmento final es un circuito local punto a punto que usa cable de par trenzado. En HFC, el segmento final es cable coaxial compartido. T\u00e9cnicamente, estos sistemas no son tan diferentes, como suelen asegurar sus patrocinadores. No obstante, hay una diferencia real que es importante indicar. HFC usa un medio compartido sin conmutaci\u00f3n ni enrutamiento. Cualquier informaci\u00f3n que se ponga en el cable puede ser retirada por cualquier suscriptor sin mayores tr\u00e1mites. FTTC, que es completamente conmutado, no tiene esta propiedad. Como resultado, los operadores HFC quieren que los servidores de v\u00eddeo transmitan flujos cifrados, de modo que los clientes que no hayan pagado una pel\u00edcula no puedan verla. A los operadores FTTC no les interesa la encriptaci\u00f3n, puesto que agrega complejidad, disminuye el desempe\u00f1o y no proporciona seguridad adicional a su sistema. Desde el punto de vista de la compa\u00f1\u00eda que opera un servidor de v\u00eddeo, \u00bfes buena idea encriptar? Un servidor operado por una compa\u00f1\u00eda telef\u00f3nica o una de sus subsidiarias o socios podr\u00eda decidir de manera intencional no encriptar sus v\u00eddeos, e indicar como raz\u00f3n la eficiencia, pero en realidad lo hace para provocar p\u00e9rdidas a sus competidores HFC.\nSEC. 7.4\nMULTIMEDIA\n711\nCon todas estas redes locales de distribuci\u00f3n es probable que se equipe a cada vecindario con uno o m\u00e1s servidores de spool. \u00c9stos son, de hecho, simplemente versiones m\u00e1s peque\u00f1as de los servidores de v\u00eddeo que estudiamos antes. La gran ventaja de estos servidores locales es que eliminan algo de la carga de la red dorsal. Dichos servidores locales pueden recargarse con pel\u00edculas por reservaci\u00f3n. Si las personas indican con suficiente anticipaci\u00f3n al proveedor qu\u00e9 pel\u00edculas desean ver, \u00e9stas pueden bajarse al servidor local en horas no pico, con lo que se obtienen a\u00fan m\u00e1s ahorros. Probablemente esta observaci\u00f3n llevar\u00e1 a los operadores de red a despedir a los ejecutivos de aviaci\u00f3n que dise\u00f1an sus tarifas. De esta manera puede planearse un descuento en las tarifas de las pel\u00edculas ordenadas con 24 a 72 horas de anticipaci\u00f3n que vayan a verse un martes o jueves por la tarde, antes de las 6 p.m. o despu\u00e9s de las 11 p.m. Las pel\u00edculas ordenadas el primer domingo del mes antes de las 8 a.m. para verse un mi\u00e9rcoles por la tarde de un d\u00eda cuya fecha sea un n\u00famero primo tendr\u00e1n 43% de descuento, y as\u00ed sucesivamente.\n7.4.9 Mbone\u2014Red dorsal de multidifusi\u00f3n Mientras todas estas industrias hacen grandes (y muy publicitados) planes para el v\u00eddeo digital (inter)nacional bajo demanda, la comunidad de Internet ha estado implementando calladamente su propio sistema digital de multimedia, MBone (Red Dorsal de Multidifusi\u00f3n). En esta secci\u00f3n daremos un panorama de lo que es y c\u00f3mo funciona. Puede pensar en MBone como una radio y televisi\u00f3n de Internet. A diferencia del v\u00eddeo bajo demanda, donde lo m\u00e1s importante es solicitar y ver pel\u00edculas precomprimidas almacenadas en un servidor, MBone se usa para difundir audio y v\u00eddeo en vivo de forma digital por todo el mundo a trav\u00e9s de Internet. MBone ha estado en operaci\u00f3n desde comienzos de 1992. Se han difundido muchas conferencias cient\u00edficas, especialmente las reuniones del IETF, as\u00ed como eventos cient\u00edficos de importancia noticiosa, como varios lanzamientos del trasbordador espacial. Alguna vez se difundi\u00f3 un concierto de los Rolling Stones por MBone, al igual que algunas partes del Festival de Cine de Canes. El hecho de que este suceso se califique como un hecho cient\u00edfico notable es discutible. Desde el aspecto t\u00e9cnico, MBone es una red virtual sobrepuesta a Internet. Mbone consiste en islas capaces de multidifundir, conectadas mediante t\u00faneles, como se muestra en la figura 7-81. En esta figura, la MBone consiste en seis islas, A a F, conectadas mediante siete t\u00faneles. Cada isla (por lo com\u00fan, una LAN o grupo de LANs interconectadas) soporta la multidifusi\u00f3n por hardware a sus hosts. Los t\u00faneles propagan paquetes MBone entre las islas. En el futuro, cuando todos los enrutadores sean capaces de manejar en forma directa tr\u00e1fico de multidifusi\u00f3n, dejar\u00e1 de necesitarse esta superestructura, pero por el momento lleva a cabo el trabajo. Cada isla contiene uno o m\u00e1s enrutadores especiales, llamados enrutadores m o mrouters (enrutadores de multidifusi\u00f3n). Algunos de \u00e9stos son en realidad enrutadores normales, pero otros sencillamente son estaciones de trabajo UNIX que ejecutan software especial de nivel de usuario (pero como la ra\u00edz). Los enrutadores m se conectan de manera l\u00f3gica mediante t\u00faneles.\n712\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nEnrutador m C\nB\nEstaci\u00f3n de trabajo A\nIsla de multidifusi\u00f3n\nD\nLAN G\nE\nF\nFigura 7-81. MBone consiste en islas de multidifusi\u00f3n conectadas mediante t\u00faneles.\nLos paquetes MBone se encapsulan en paquetes IP y se env\u00edan como paquetes de unidifusi\u00f3n normales a la direcci\u00f3n IP del enrutador m de destino. Los t\u00faneles se configuran de manera manual. Por lo general, un t\u00fanel corre por una ruta para la que existe una conexi\u00f3n f\u00edsica, pero esto no es un requisito. Si por accidente se cae la ruta f\u00edsica subyacente de un t\u00fanel, los enrutadores m que usan el t\u00fanel ni siquiera lo notar\u00e1n, puesto que la Internet reenrutar\u00e1 autom\u00e1ticamente todo el tr\u00e1fico IP entre ellos por otras l\u00edneas. Cuando aparece una isla nueva que desea unirse a la MBone, como en el caso de G de la figura 7-81, su administrador env\u00eda un mensaje que indica su existencia a la lista de correo de MBone. Los administradores de los sitios cercanos se ponen en contacto con ella para acordar el establecimiento de t\u00faneles. A veces los t\u00faneles existentes se reordenan para aprovechar la nueva isla y optimizar la topolog\u00eda. A fin de cuentas, los t\u00faneles no existen f\u00edsicamente, se definen mediante tablas en los enrutadores m y pueden agregarse, eliminarse o moverse con s\u00f3lo cambiar estas tablas. Por lo general, cada pa\u00eds en la MBone tiene una red dorsal con islas regionales conectadas a ella. Normalmente, la MBone se configura con uno o dos t\u00faneles que cruzan el Oc\u00e9ano Atl\u00e1ntico y el Pac\u00edfico, lo que hace que la MBone sea de escala global. Por lo tanto, en cualquier momento la MBone consiste en una topolog\u00eda espec\u00edfica de t\u00faneles e islas, independiente de la cantidad de direcciones de multidifusi\u00f3n en uso en el momento y de qui\u00e9nes las est\u00e9n escuchando u observando. Esta situaci\u00f3n es muy parecida a una subred normal (f\u00edsica), por lo que se aplican los mismos algoritmos de enrutamiento. En consecuencia, la MBone inicialmente usaba un algoritmo de enrutamiento, el DVMRP (Protocolo de Enrutamiento Multidifusi\u00f3n de Vector de Distancia), que se basa en el algoritmo de vector de distancia Bellman-Ford. Por ejemplo, en la figura 7-81, la isla C puede enrutar a A v\u00eda B o E (o tal vez v\u00eda D). C lo decide tomando los valores que le dan los nodos sobre sus respectivas distancias a A, y sumando despu\u00e9s su distancia a ellos. De esta manera, cada isla determina la mejor ruta a todas las dem\u00e1s islas. Sin embargo, las rutas en realidad no se usan de esta manera, como veremos en breve.\nSEC. 7.4\nMULTIMEDIA\n713\nConsideremos ahora la manera en que ocurre la multidifusi\u00f3n. Para multidifundir un programa de audio o v\u00eddeo, una fuente primero debe adquirir una direcci\u00f3n de multidifusi\u00f3n clase D, que act\u00faa como la frecuencia o el n\u00famero de canal de una estaci\u00f3n. Las direcciones clase D se reservan usando un programa que busca direcciones de multidifusi\u00f3n libres en una base de datos. Pueden ocurrir simult\u00e1neamente muchas multidifusiones, y un host puede \u201csintonizarse\u201d con aquellas en la que est\u00e1 interesado si escucha en la direcci\u00f3n de multidifusi\u00f3n adecuada. Peri\u00f3dicamente, cada enrutador m env\u00eda un paquete de difusi\u00f3n IGMP limitando a su isla, preguntando qui\u00e9n est\u00e1 interesado en qu\u00e9 canal. Los hosts que desean (continuar) recibiendo uno o m\u00e1s canales env\u00edan como respuesta otro paquete IGMP. Estas respuestas se reparten en el tiempo, para evitar sobrecargar la LAN local. Cada enrutador m mantiene una tabla de los canales que debe poner en sus LANs, para evitar el desperdicio de ancho de banda al multidifundir canales que nadie quiere. Las multidifusiones se propagan por la MBone como se explica a continuaci\u00f3n. Cuando una fuente de audio o v\u00eddeo genera un paquete nuevo, lo multidifunde a su isla local usando el recurso de multidifusi\u00f3n del hardware. El enrutador m local recoge este paquete, y despu\u00e9s lo copia en todos los t\u00faneles a los que est\u00e1 conectado. Cada enrutador m que recibe uno de tales paquetes por medio de un t\u00fanel lo revisa para ver si lleg\u00f3 por la mejor ruta, es decir, la ruta que, seg\u00fan su tabla, debe usarse para llegar al origen (como si fuera el destino). Si el paquete lleg\u00f3 por la mejor ruta, el enrutador m copia el paquete en todos sus otros t\u00faneles. Si el paquete lleg\u00f3 por una ruta sub\u00f3ptima, se descarta. Por ejemplo, en la figura 7-81, si las tablas de C le indican que use B para llegar a A, entonces cuando un paquete de multidifusi\u00f3n de A a C llega v\u00eda B, se copia de ah\u00ed a D y a E. Sin embargo, cuando un paquete de multidifusi\u00f3n de A a C llega v\u00eda E (que no es la mejor ruta), simplemente se descarta. Este algoritmo s\u00f3lo es el reenv\u00edo por ruta invertida que vimos en el cap\u00edtulo 5; aunque no es perfecto, es bastante bueno y muy sencillo de implementar. Adem\u00e1s de usar reenv\u00edo por ruta invertida para evitar inundar la Internet, tambi\u00e9n se usa el campo Tiempo de vida del IP para limitar el alcance de la multidifusi\u00f3n. Cada paquete comienza con alg\u00fan valor (determinado por el origen). A cada t\u00fanel se le asigna un peso. Un paquete s\u00f3lo pasa a trav\u00e9s de un t\u00fanel si tiene suficiente peso; de otra manera, se descarta. Por ejemplo, los t\u00faneles transoce\u00e1nicos se configuran normalmente con un peso de 128, por lo que los paquetes pueden limitarse al continente de origen d\u00e1ndoles un Tiempo de vida inicial de 127 o menos. Tras pasar por el t\u00fanel, al campo de Tiempo de vida se le resta el peso del t\u00fanel. Aunque el algoritmo de enrutamiento de la MBone funciona, se han realizado muchas investigaciones para mejorarlo. Una propuesta mantiene la idea del enrutamiento por vector de distancia, pero hace jer\u00e1rquico el algoritmo, agrupando en regiones las instalaciones de la MBone y enrutando primero hacia ellas (Thyagarajan y Deering, 1995). Otra propuesta es usar una forma modificada del enrutamiento por estado de enlace en lugar del enrutamiento por vector de distancia. En particular, un grupo de trabajo del IETF est\u00e1 modificando el OSPF para adecuarlo a la multidifusi\u00f3n en un solo sistema aut\u00f3nomo. El OSPF de multidifusi\u00f3n resultante se llama MOSPF (Moy, 1994). Lo que hacen las modificaciones es que el mapa completo construido por el MOSPF lleva el registro de las islas y t\u00faneles de multidifusi\u00f3n, adem\u00e1s de la informaci\u00f3n normal de enrutamiento. Si se conoce la topolog\u00eda completa, es directo\n714\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nel c\u00e1lculo de la mejor ruta desde cualquier isla a cualquier otra usando los t\u00faneles. Por ejemplo, puede usarse el algoritmo de Dijkstra. Una segunda \u00e1rea de investigaci\u00f3n es el enrutamiento entre los AS. Aqu\u00ed, otro grupo de trabajo del IETF est\u00e1 desarrollando un algoritmo llamado PIM (Multidifusi\u00f3n Independiente del Protocolo). El PIM viene en dos versiones, dependiendo de si las islas son densas (casi todos quieren ver) o dispersas (casi nadie quiere ver). Ambas versiones usan las tablas de enrutamiento de unidifusi\u00f3n est\u00e1ndar, en lugar de crear una topolog\u00eda superpuesta como lo hacen DVMRP y MOSPF. En el PIM-DM (modo denso), la idea es recortar las rutas in\u00fatiles. El recortado funciona como sigue. Cuando llega un paquete de multidifusi\u00f3n por el t\u00fanel \u201cequivocado\u201d, se devuelve un paquete de recorte por dicho t\u00fanel, indicando al transmisor que cese el env\u00edo de paquetes desde la fuente en cuesti\u00f3n. Cuando un paquete llega por el t\u00fanel \u201ccorrecto\u201d, se copia en todos los dem\u00e1s t\u00faneles que no han sido previamente recortados. Si todos los dem\u00e1s t\u00faneles se han recortado y no hay inter\u00e9s por el canal en la isla local, el enrutador m devuelve un mensaje de recorte por el canal \u201ccorrecto\u201d. De esta manera, la multidifusi\u00f3n se adapta en forma autom\u00e1tica y s\u00f3lo va a donde se necesita. El PIM-SM (modo disperso), que se describe en el RFC 2362, funciona de manera diferente. Aqu\u00ed la idea es evitar la saturaci\u00f3n de Internet porque tres personas de Berkeley quieren realizar una llamada en conferencia por una direcci\u00f3n clase D. El PIM-SM opera estableciendo puntos de reuni\u00f3n. Cada una de las fuentes de un grupo de multidifusi\u00f3n PIM disperso env\u00eda sus paquetes a los puntos de reuni\u00f3n. Cualquier sitio interesado en unirse solicita a uno de los puntos de reuni\u00f3n que establezca un t\u00fanel a \u00e9l. De esta manera, todo el tr\u00e1fico PIM-SM transporta por unidifusi\u00f3n en lugar de multidifusi\u00f3n. PIM-SM se est\u00e1 volviendo m\u00e1s popular, y MBone est\u00e1 migrando a su uso. A medida que el uso de PIM-SM se est\u00e1 volviendo m\u00e1s com\u00fan, el de MOSPF est\u00e1 desapareciendo gradualmente. Por otro lado, la MBone misma parece algo est\u00e1tica y probablemente nunca se vuelva muy popular. Sin embargo, la multimedia en red a\u00fan es un campo emocionante y en r\u00e1pido movimiento, aunque MBone no sea un gran \u00e9xito. Las nuevas tecnolog\u00edas y aplicaciones se anuncian a diario. La multidifusi\u00f3n y la calidad del servicio cada vez est\u00e1n m\u00e1s unidas, como se discute en (Striegel y Manimaran, 2002). Otro tema interesante es la multidifusi\u00f3n inal\u00e1mbrica (Gossain y cols., 2002). Es probable que en los pr\u00f3ximos a\u00f1os toda el \u00e1rea de la multidifusi\u00f3n y todo lo relacionado con ella siga siendo importante.\n7.5 RESUMEN Los nombres de Internet utilizan un esquema jer\u00e1rquico llamado DNS. En el nivel superior se encuentran los dominios gen\u00e9ricos bien conocidos, entre ellos com y edu, as\u00ed como cerca de 200 dominios de pa\u00edses. DNS est\u00e1 implementado como un sistema de base de datos distribuido con servidores en todo el mundo. DNS mantiene registros con direcciones IP, registros de correo y otra informaci\u00f3n. Al consultar un servidor DNS, un proceso puede asignar un nombre de dominio de Internet a la direcci\u00f3n IP utilizada para comunicarse con el dominio.\nCAP. 7\nPROBLEMAS\n715\nEl correo electr\u00f3nico es una de las dos aplicaciones principales para Internet. Todo mundo, desde ni\u00f1os peque\u00f1os hasta los abuelos, lo utiliza. La mayor\u00eda de los sistemas de correo electr\u00f3nico en el mundo utiliza el sistema de correo definido en los RFCs 2821 y 2822. Los mensajes enviados en este sistema utilizan encabezados ASCII de sistema para definir propiedades de mensajes. MIME se puede utilizar para enviar mucho contenido de diversos tipos. Los mensajes se env\u00edan utilizando SMTP, que funciona al establecer una conexi\u00f3n TCP del host de origen al de destino y entregando de manera directa el correo electr\u00f3nico a trav\u00e9s de la conexi\u00f3n TCP. La otra aplicaci\u00f3n principal de Internet es World Wide Web. Web es un sistema para vincular documentos de hipertexto. Originalmente, cada documento era una p\u00e1gina escrita en HTML con hiperv\u00ednculos a otros documentos. Hoy en d\u00eda, XML est\u00e1 comenzando gradualmente a tomar ventaja sobre HTML. Adem\u00e1s, una gran cantidad de contenido se genera en forma din\u00e1mica utilizando secuencias de comandos en el servidor (PHP, JSP y ASP), as\u00ed como secuencias de comandos en el cliente (principalmente JavaScript). Un navegador puede desplegar un documento estableciendo una conexi\u00f3n TCP con su servidor, solicitando el documento y despu\u00e9s cerrando la conexi\u00f3n. Estos mensajes de solicitud contienen una variedad de encabezados para proporcionar informaci\u00f3n adicional. El almacenamiento en cach\u00e9, la replicaci\u00f3n y las redes de entrega de contenido se utilizan ampliamente para mejorar el desempe\u00f1o de Web. La Web inal\u00e1mbrica apenas est\u00e1 comenzando. Los primeros sistemas son WAP e i-mode, cada uno con pantallas peque\u00f1as y ancho de banda limitado, pero la siguiente generaci\u00f3n ser\u00e1 m\u00e1s poderosa. La multimedia tambi\u00e9n es una estrella en ascenso en el firmamento de las redes. Permite que el audio y el v\u00eddeo sean digitalizados y transportados de manera electr\u00f3nica para su despliegue. El audio requiere menos ancho de banda. El audio de flujo continuo, la radio en Internet y la voz sobre IP ahora son una realidad, y continuamente surgen nuevas aplicaciones. El v\u00eddeo bajo demanda es un \u00e1rea prometedora en la que hay un gran inter\u00e9s. Por \u00faltimo, la MBone es un servicio experimental de televisi\u00f3n digital mundial que se env\u00eda a trav\u00e9s de Internet.\nPROBLEMAS 1. Muchas computadoras de negocios tienen tres identificadores \u00fanicos en todo el mundo. \u00bfCu\u00e1les son? 2. De acuerdo con la informaci\u00f3n que se dio en la figura 7-3, \u00bflittle-sister.cs.vu.nl corresponde a una red A, B o C? 3. En la figura 7-3, \u00bfhay un punto despu\u00e9s de rowboat? \u00bfPor qu\u00e9 no? 4. Adivine qu\u00e9 significa :-X (algunas veces se escribe como :-#).\n716\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\n5. DNS utiliza UDP en lugar de TCP. Si se pierde un paquete DNS, no hay recuperaci\u00f3n autom\u00e1tica. \u00bfEsto causa un problema, y si es as\u00ed, c\u00f3mo se resuelve? 6. Adem\u00e1s de ser propensos a perderse, los paquetes UDP tienen una longitud m\u00e1xima, potencialmente tan baja como 576 bytes. \u00bfQu\u00e9 pasa cuando un nombre DNS que se va a buscar excede esta longitud? \u00bfSe puede enviar en dos paquetes? 7. \u00bfUna m\u00e1quina con un solo nombre DNS puede tener m\u00faltiples direcciones IP? \u00bfC\u00f3mo puede ocurrir esto? 8. \u00bfUna computadora puede tener dos nombres DNS que pertenecen a dominios de nivel superior diferentes? De ser as\u00ed, d\u00e9 un ejemplo razonable. De lo contrario, explique por qu\u00e9 no. 9. El n\u00famero de compa\u00f1\u00edas con un sitio Web ha crecido de manera explosiva en los a\u00f1os recientes. Como resultado, miles de compa\u00f1\u00edas est\u00e1n registradas con el dominio com, lo que causa una carga pesada en el servidor de nivel superior de este dominio. Sugiera una manera de aliviar este problema sin cambiar el esquema de nombres (es decir, sin introducir nuevos nombres de dominio de nivel superior). Es v\u00e1lido que su soluci\u00f3n requiera cambios al c\u00f3digo cliente. 10. Algunos sistemas de correo electr\u00f3nico soportan un campo de encabezado Content Return:. Especifique si el cuerpo de un mensaje se va a regresar en caso de que no se entregue. \u00bfEste campo pertenece al sobre o al encabezado? 11. Los sistemas de correo electr\u00f3nico necesitan directorios a fin de que se puedan buscar las direcciones de correo electr\u00f3nico de las personas. Para construir tales directorios y para que la b\u00fasqueda sea posible, los nombres deben dividirse en componentes est\u00e1ndar (por ejemplo, nombre, apellido). Mencione algunos problemas que deben resolverse a fin de que un est\u00e1ndar mundial sea aceptable. 12. La direcci\u00f3n de correo electr\u00f3nico de una persona es su nombre de inicio de sesi\u00f3n + @ + el nombre de un dominio DNS con un registro MX. Los nombres de inicio de sesi\u00f3n pueden ser nombres de pila, apellidos, iniciales y todos los tipos de nombres. Suponga que una compa\u00f1\u00eda grande decidi\u00f3 que se estaba perdiendo mucho correo debido a que las personas no sab\u00edan el nombre de inicio de sesi\u00f3n del receptor. \u00bfHay alguna forma de que dicha compa\u00f1\u00eda arregle este problema sin cambiar el DNS? De ser as\u00ed, d\u00e9 una propuesta y explique c\u00f3mo funciona. De lo contrario, explique por qu\u00e9 no es posible. 13. Un archivo binario tiene una longitud de 3072 bytes. \u00bfQu\u00e9 longitud tendr\u00e1 si se codifica mediante base64, y se inserta un par CR+LF despu\u00e9s de cada 80 bytes enviados y al final? 14. Considere el esquema de codificaci\u00f3n MIME entrecomillado-imprimible. Mencione un problema que no se analiza en el texto y proponga una soluci\u00f3n. 15. Nombre cinco tipos MIME que no se listan en este libro. Puede verificar su navegador o Internet para obtener informaci\u00f3n. 16. Suponga que desea enviar un archivo MP3 a un amigo, pero el ISP de \u00e9ste limita a 1 MB la cantidad de correo entrante y el archivo MP3 es de 4 MB. \u00bfHay alguna forma para manejar esta situaci\u00f3n utilizando el RFC 822 y MIME? 17. Suponga que alguien establece un demonio de vacaciones y que despu\u00e9s env\u00eda un mensaje justo antes de terminar su sesi\u00f3n. Desgraciadamente, el receptor ha estado de vacaciones una semana y tambi\u00e9n tiene un demonio de vacaciones en su lugar. \u00bfQu\u00e9 sucede a continuaci\u00f3n? Las respuestas grabadas se enviar\u00e1n y regresar\u00e1n hasta que alguien regrese?\nCAP. 7\nPROBLEMAS\n717\n18. En cualquier est\u00e1ndar, como el RFC 822, se necesita una gram\u00e1tica precisa de lo que est\u00e1 permitido de manera que diferentes implementaciones puedan interactuar. Incluso los elementos simples se tienen que definir con cuidado. Los encabezados SMTP permiten espacios en blanco entre los tokens. D\u00e9 dos definiciones de alternativas razonables de espacios en blanco entre los tokens. 19. \u00bfEl demonio de vacaciones es parte del agente de usuario o del agente de transferencia de mensajes? Por supuesto, se establece con el agente de usuario, pero \u00bf\u00e9ste env\u00eda realmente las respuestas? Explique. 20. POP3 permite que los usuarios obtengan y bajen correo electr\u00f3nico de un buz\u00f3n remoto. \u00bfEsto significa que el formato interno de los buzones debe estandarizarse para que cualquier programa POP3 en el cliente pueda leer el buz\u00f3n en cualquier servidor de correo? Explique su respuesta. 21. Desde el punto de vista de un ISP, POP3 e IMAP tienen diferencias importantes. Por lo general, los usuarios de POP3 vac\u00edan sus buzones todos los d\u00edas. Los usuarios de IMAP mantienen su correo electr\u00f3nico en el servidor de manera indefinida. Imagine que se le pide a usted que aconseje a un ISP sobre cu\u00e1les protocolos debe soportar. \u00bfQu\u00e9 aspectos tomar\u00eda en cuenta? 22. \u00bfWebmail utiliza POP3, IMAP o ninguno? Si utiliza alguno de \u00e9stos, \u00bfpor qu\u00e9 se eligi\u00f3? Si no se utiliza ninguno, \u00bfcu\u00e1l est\u00e1 m\u00e1s cerca de ser usado? 23. Cuando se env\u00edan las p\u00e1ginas Web, se les anteponen encabezados MIME. \u00bfPor qu\u00e9? 24. \u00bfCu\u00e1ndo son necesarios los visores externos? \u00bfC\u00f3mo sabe un navegador cu\u00e1l utilizar? 25. \u00bfEs posible que cuando un usuario haga clic en un v\u00ednculo con Netscape se inicie una aplicaci\u00f3n auxiliar en particular, y que cuando haga clic en el mismo v\u00ednculo en Internet Explorer se inicie una aplicaci\u00f3n auxiliar completamente diferente, aunque el tipo MIME regresado en ambos casos sea id\u00e9ntico? Explique su respuesta. 26. Un servidor Web de m\u00faltiples subprocesos est\u00e1 organizado como se muestra en la figura 7-21. Tarda 500 \u00b5seg en aceptar una solicitud y verificar el cach\u00e9. La mitad del tiempo es para encontrar el archivo en el cach\u00e9 y para regresarlo de inmediato. En la otra mitad del tiempo, el m\u00f3dulo tiene que bloquearse por 9 mseg mientras su solicitud de disco se coloca en la cola y se procesa. \u00bfCu\u00e1ntos m\u00f3dulos debe tener el servidor para mantener ocupada todo el tiempo a la CPU (suponiendo que el disco no es un cuello de botella)? 27. El URL http est\u00e1ndar da por hecho que el servidor Web est\u00e1 escuchando en el puerto 80. Sin embargo, es posible que un servidor Web escuche en otro puerto. Dise\u00f1e una sintaxis razonable para que un URL acceda a un archivo en un puerto no est\u00e1ndar. 28. Aunque no se mencion\u00f3 en el texto, una forma alternativa de un URL es utilizar una direcci\u00f3n IP en lugar de su nombre DNS. Un ejemplo del uso de una direcci\u00f3n IP es http://192.31.231.66/index.html. \u00bfC\u00f3mo sabe el navegador si el nombre que sigue al esquema es un nombre DNS o una direcci\u00f3n IP? 29. Imagine que alguien del Departamento de Computaci\u00f3n de Stanford acaba de escribir un nuevo programa que desea distribuir mediante FTP. Esa persona coloca el programa en el directorio ftp/pub/freebies/newprog.c de FTP. \u00bfCu\u00e1l ser\u00e1 el URL m\u00e1s probable de este programa? 30. En la figura 7-25, www.aportal.com mantiene un registro de las preferencias del usuario en una cookie. Una desventaja de este esquema es que las cookies est\u00e1n limitadas a s\u00f3lo 4 KB, de manera que si las preferencias son grandes \u2014por ejemplo, muchas acciones, equipos de deportes, tipos de noticias, el clima\n718\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\nde varias ciudades, ediciones especiales de varias categor\u00edas de productos, etc\u00e9tera\u2014 puede alcanzarse el l\u00edmite de 4 KB. Dise\u00f1e una forma alternativa para mantener el registro de las preferencias que no tengan este problema. 31. El Banco Sloth desea que sus clientes flojos puedan utilizar con facilidad su banca en l\u00ednea, por lo que despu\u00e9s de que un cliente firma y se autentica mediante una contrase\u00f1a, el banco regresa una cookie que contiene un n\u00famero de ID del cliente. De esta forma, el cliente no tiene que identificarse a s\u00ed mismo o escribir una contrase\u00f1a en visitas futuras a la banca en l\u00ednea. \u00bfQu\u00e9 opina de esta idea? \u00bfFuncionar\u00e1? \u00bfEs una buena idea? 32. En la figura 7-26, el par\u00e1metro ALT se establece en la etiqueta . \u00bfBajo qu\u00e9 condiciones lo utiliza el navegador, y c\u00f3mo? 33. \u00bfC\u00f3mo utiliza HTML a fin de que se pueda hacer clic en una imagen? D\u00e9 un ejemplo. 34. Muestre la etiqueta que se necesita para hacer que la cadena \u201cACM\u201d sea un hiperv\u00ednculo a http://www.acm.org. 35. Dise\u00f1e un formulario para que la nueva compa\u00f1\u00eda Interburger permita ordenar hamburguesas a trav\u00e9s de Internet. Dicho formulario debe incluir el nombre, la direcci\u00f3n y la ciudad del cliente, as\u00ed como opciones que permitan seleccionar el tama\u00f1o (gigante o inmensa) y si llevar\u00e1 queso. Las hamburguesas se pagar\u00e1n en efectivo a la entrega por lo que no se necesita informaci\u00f3n de tarjeta de cr\u00e9dito. 36. Dise\u00f1e un formulario que pida al usuario que teclee dos n\u00fameros. Cuando el usuario haga clic en el bot\u00f3n de env\u00edo, el servidor regresar\u00e1 la suma de dichos n\u00fameros. Escriba el servidor como una secuencia de comandos PHP. 37. Para cada una de las siguientes aplicaciones, indique si ser\u00eda (1) posible y (2) mejor utilizar una secuencia de comandos PHP o una JavaScript y por qu\u00e9. (a) Desplegar un calendario por cada mes solicitado desde septiembre de 1752. (b) Desplegar la agenda de vuelos de \u00c1msterdam a Nueva York. (c) Graficar un polinomio a partir de coeficientes proporcionados por el usuario. 38. Escriba un programa en JavaScript que acepte un entero mayor que 2 e indique si es un n\u00famero primo. Observe que JavaScript tiene instrucciones if y while con la misma sintaxis que C y Java. El operador de m\u00f3dulo es %. Si necesita la ra\u00edz cuadrada de x, utilice Math.sqrt (x). 39. Una p\u00e1gina HTML es como sigue: Haga clic aqu\u00ed para obtener informaci\u00f3n\nSi el usuario hace clic en el hiperv\u00ednculo, se abre una conexi\u00f3n TCP y se env\u00eda una serie de l\u00edneas al servidor. Liste todas las l\u00edneas enviadas. 40. Es posible utilizar el encabezado If-Modified-Since para verificar si una p\u00e1gina almacenada en cach\u00e9 a\u00fan es v\u00e1lida. Las solicitudes pueden realizarse para obtener p\u00e1ginas que contengan im\u00e1genes, sonido, v\u00eddeo, HTML, etc\u00e9tera. \u00bfCree que la efectividad de esta t\u00e9cnica es mejor o peor para im\u00e1genes JPEG en comparaci\u00f3n con HTML? Piense con cuidado sobre lo que significa \u201cefectividad\u201d y explique su respuesta. 41. El d\u00eda en que se celebra un evento deportivo importante, como el juego de campeonato de la NFL, muchas personas visitan el sitio Web oficial. \u00bfEs \u00e9sta una aglomeraci\u00f3n instant\u00e1nea en el mismo sentido que con las elecciones en Florida del 2000? \u00bfPor qu\u00e9 s\u00ed o por qu\u00e9 no?\nCAP. 7\nPROBLEMAS\n719\n42. \u00bfTiene sentido que un solo ISP funcione como una CDN? De ser as\u00ed, \u00bfc\u00f3mo funcionar\u00eda? De lo contrario, \u00bfqu\u00e9 est\u00e1 mal con esa idea? 43. \u00bfBajo qu\u00e9 condiciones es una mala idea utilizar una CDN? 44. Las terminales de los sistemas inal\u00e1mbricos Web tienen un ancho de banda bajo, lo cual provoca que la codificaci\u00f3n eficiente sea importante. Dise\u00f1e un esquema para transmitir texto en ingl\u00e9s de manera eficiente a trav\u00e9s de un enlace inal\u00e1mbrico a un dispositivo WAP. Puede asumir que la terminal tiene algunos megabytes de ROM y una CPU con potencia moderada. Sugerencia: piense en transmitir japon\u00e9s, en el que cada s\u00edmbolo es una palabra. 45. Un disco compacto contiene 650 MB de datos. \u00bfLa compresi\u00f3n se utiliza para CDs de audio? Explique su respuesta. 46. En la figura 7-57(c) el ruido de cuantizaci\u00f3n ocurre debido al uso de muestras de 4 bits para representar nueve valores de se\u00f1al. La primera muestra, en 0, es exacta, pero las siguientes no lo son. \u00bfCu\u00e1l es el porcentaje de error para las muestras en 1/32, 2/32 y 3/32 del periodo? 47. \u00bfEs posible utilizar un modelo psicoac\u00fastico para reducir el ancho de banda necesario para la telefon\u00eda de Internet? De ser as\u00ed, \u00bfcu\u00e1les condiciones, si las hay, se tendr\u00edan que cumplir para que funcionara? De lo contrario, \u00bfpor qu\u00e9 no es posible? 48. Un servidor de flujo continuo de audio tiene una distancia de una sola v\u00eda de 50 mseg con un reproductor de medios. Tiene una salida de 1 Mbps. Si el reproductor de medios tiene un b\u00fafer de 1 MB, \u00bfqu\u00e9 puede decir acerca de la posici\u00f3n de la marca de agua baja y de la alta? 49. El algoritmo de entrelazado de la figura 7-60 tiene la ventaja de que puede resolver la p\u00e9rdida de un paquete ocasional sin introducir un hueco en la reproducci\u00f3n. Sin embargo, cuando se utiliza para la telefon\u00eda de Internet, tambi\u00e9n tiene una peque\u00f1a desventaja. \u00bfCu\u00e1l es? 50. \u00bfLa voz sobre IP tiene los mismos problemas con los servidores de seguridad que el audio de flujo continuo? Explique su respuesta. 51. \u00bfCu\u00e1l es la tasa de bits para transmitir tramas de color sin comprimir de 800 \u00d7 600 p\u00edxeles con 8 bits/p\u00edxel a 40 tramas/seg? 52. \u00bfUn error de 1 bit en una trama MPEG puede da\u00f1ar m\u00e1s que la trama en la que ocurri\u00f3 el error? Explique su respuesta. 53. Considere un servidor de v\u00eddeo de 100,000 clientes, en donde cada cliente ve dos pel\u00edculas por mes. La mitad de las pel\u00edculas se proporcionan a las 8 p.m. \u00bfCu\u00e1ntas pel\u00edculas tiene que transmitir a la vez el servidor durante este periodo? Si cada pel\u00edcula requiere 4 Mbps, \u00bfcu\u00e1ntas conexiones OC-12 necesita el servidor para la red? 54. Suponga que la ley de Zipf se cumple para acceder un servidor de v\u00eddeo con 10,000 pel\u00edculas. Si el servidor mantiene las 1000 pel\u00edculas m\u00e1s populares en un disco magn\u00e9tico y las restantes 9000 en un disco \u00f3ptico, d\u00e9 una expresi\u00f3n para la fracci\u00f3n de todas las referencias que estar\u00e1n en un disco magn\u00e9tico. Escriba un peque\u00f1o programa para evaluar esta expresi\u00f3n de manera num\u00e9rica. 55. Algunos cibernautas han registrado nombres de dominio que son muy parecidos a algunos sitios corporativos, por ejemplo, www.microsfot.com, con algunas diferencias en la ortograf\u00eda. Haga una lista de por lo menos cinco dominios de este tipo.\n720\nLA CAPA DE APLICACI\u00d3N\nCAP. 7\n56. Muchas personas han registrado nombres DNS que consisten en www.palabra.com donde palabra es una palabra com\u00fan. Para cada una de las siguientes categor\u00edas, liste cinco sitios Web y resuma brevemente lo que es (por ejemplo, www.estomago.com es un gastroenter\u00f3logo de Long Island). Las categor\u00edas son: animales, comidas, objetos dom\u00e9sticos y partes del cuerpo. Para la \u00faltima categor\u00eda, por favor ap\u00e9guese a las partes del cuerpo que se encuentran arriba de la cintura. 57. Dise\u00f1e sus propios emoji utilizando un mapa de bits de 12 \u00d7 12. Incluya novio, novia, profesor y pol\u00edtico. 58. Escriba un servidor POP3 que acepte los siguientes comandos: USER, PASS, LIST, RETR, DELE y QUIT. 59. Rescriba el servidor de la figura 6-6 como un servidor real Web utilizando el comando GET para HTTP 1.1. Tambi\u00e9n debe aceptar el mensaje Host. El servidor debe mantener un cach\u00e9 de archivos recientemente obtenidos del disco y atender solicitudes del cach\u00e9 cuando sea posible.\n8 SEGURIDAD EN REDES\nDurante las primeras d\u00e9cadas de su existencia, las redes de computadoras fueron usadas principalmente por investigadores universitarios para el env\u00edo de correo electr\u00f3nico, y por empleados corporativos para compartir impresoras. En estas condiciones, la seguridad no recibi\u00f3 mucha atenci\u00f3n. Pero ahora, cuando millones de ciudadanos comunes usan redes para sus transacciones bancarias, compras y declaraciones de impuestos, la seguridad de las redes aparece en el horizonte como un problema potencial de grandes proporciones. En las siguientes secciones estudiaremos la seguridad de las redes desde varios \u00e1ngulos, se\u00f1alaremos muchos peligros y estudiaremos varios algoritmos y protocolos para hacer m\u00e1s seguras las redes. La seguridad es un tema amplio que cubre una multitud de pecados. En su forma m\u00e1s sencilla, la seguridad se ocupa de garantizar que los curiosos no puedan leer, o peor a\u00fan, modificar mensajes dirigidos a otros destinatarios. Tiene que ver con la gente que intenta acceder a servicios remotos no autorizados. Tambi\u00e9n se ocupa de mecanismos para verificar que el mensaje supuestamente enviado por la autoridad fiscal que indica: \u201cPague el viernes o at\u00e9ngase a las consecuencias\u201d realmente venga de ella y no de la mafia. La seguridad tambi\u00e9n se ocupa del problema de la captura y reproducci\u00f3n de mensajes leg\u00edtimos, y de la gente que intenta negar el env\u00edo de mensajes. La mayor\u00eda de los problemas de seguridad son causados intencionalmente por gente maliciosa que intenta ganar algo o hacerle da\u00f1o a alguien. En la figura 8-1 se muestran algunos de los tipos de transgresores m\u00e1s comunes. Debe quedar claro por esta lista que hacer segura una red comprende mucho m\u00e1s que simplemente mantener los programas libres de errores de programaci\u00f3n. Implica ser m\u00e1s listo que adversarios a menudo inteligentes, dedicados y a veces bien financiados. Debe quedar claro tambi\u00e9n que las medidas para detener a los adversarios casuales tendr\u00e1n poca eficacia 721\n722\nSEGURIDAD EN REDES\nCAP. 8\ncontra los adversarios serios. Los registros policiales muestran que la mayor\u00eda de los ataques no son cometidos por intrusos que interfieren una l\u00ednea telef\u00f3nica sino por miembros internos con resentimientos. En consecuencia, los sistemas de seguridad deben dise\u00f1arse tomando en cuenta este hecho. Adversario\nObjetivo\nEstudiante\nDivertirse husmeando el correo de la gente\nCracker\nProbar el sistema de seguridad de alguien; robar datos\nRepresentante de ventas\nIndicar que representa a toda Europa, no s\u00f3lo a Andorra\nHombre de negocios\nDescubrir el plan estrat\u00e9gico de marketing de un competidor\nEx empleado\nVengarse por haber sido despedido\nContador\nEstafar dinero a una compa\u00f1\u00eda\nCorredor de bolsa\nNegar una promesa hecha a un cliente por correo electr\u00f3nico\nTimador\nRobar n\u00fameros de tarjeta de cr\u00e9dito\nEsp\u00eda\nConocer la fuerza militar o los secretos industriales de un enemigo\nTerrorista\nRobar secretos de guerra bacteriol\u00f3gica\nFigura 8-1. Algunos tipos de personas que causan problemas de seguridad, y por qu\u00e9.\nLos problemas de seguridad de las redes pueden dividirse en t\u00e9rminos generales en cuatro \u00e1reas interrelacionadas: confidencialidad, autenticaci\u00f3n, no repudio y control de integridad. La confidencialidad consiste en mantener la informaci\u00f3n fuera de las manos de usuarios no autorizados. Esto es lo que normalmente viene a la mente cuando la gente piensa en la seguridad de las redes. La autenticaci\u00f3n se encarga de determinar con qui\u00e9n se est\u00e1 hablando antes de revelar informaci\u00f3n delicada o hacer un trato de negocios. El no repudio se encarga de las firmas: \u00bfc\u00f3mo comprobar que su cliente realmente hizo un pedido electr\u00f3nico por 10 millones de utensilios para zurdos a 89 centavos cada uno cuando \u00e9l luego aduce que el precio era de 69 centavos? O tal vez argumente que \u00e9l nunca realiz\u00f3 ning\u00fan pedido. Por \u00faltimo, \u00bfc\u00f3mo puede asegurarse de que un mensaje recibido realmente fue enviado, y no algo que un adversario malicioso modific\u00f3 en el camino o cocin\u00f3 por su propia cuenta? Todos estos temas (confidencialidad, autenticaci\u00f3n, no repudio y control de integridad) son pertinentes tambi\u00e9n en los sistemas tradicionales, pero con algunas diferencias importantes. La confidencialidad y la integridad se logran usando correo certificado y poniendo bajo llave los documentos. El robo del tren del correo es m\u00e1s dif\u00edcil de lo que era en los tiempos de Jesse James. Tambi\u00e9n, la gente puede por lo general distinguir entre un documento original en papel y una fotocopia, y con frecuencia esto es importante. Como prueba, haga una fotocopia de un cheque v\u00e1lido. Trate de cobrar el cheque original en su banco el lunes. Ahora trate de cobrar la fotocopia del cheque el martes. Observe la diferencia de comportamiento del banco. Con los cheques electr\u00f3nicos, el original y la copia son id\u00e9nticos. Es posible que los bancos tarden un poco en acostumbrarse a esto.\nSEGURIDAD EN REDES\n723\nLa gente autentica la identidad de otras personas al reconocer sus caras, voces y letra. Las pruebas de firmas se manejan mediante firmas en papel, sellos, etc. Generalmente puede detectarse la alteraci\u00f3n de documentos con el auxilio de expertos en escritura, papel y tinta. Ninguna de estas opciones est\u00e1 disponible electr\u00f3nicamente. Es obvio que se requieren otras soluciones. Antes de adentrarnos en las soluciones, vale la pena dedicar un instante a considerar el lugar que corresponde a la seguridad de las redes en la pila de protocolos. Probablemente no es un solo lugar. Cada capa tiene algo que contribuir. En la capa f\u00edsica podemos protegernos contra la intervenci\u00f3n de las l\u00edneas de transmisi\u00f3n encerrando \u00e9stas en tubos sellados que contengan gas a alta presi\u00f3n. Cualquier intento de hacer un agujero en el tubo liberar\u00e1 un poco de gas, con lo cual la presi\u00f3n disminuir\u00e1 y se disparar\u00e1 una alarma. Algunos sistemas militares usan esta t\u00e9cnica. En la capa de enlace de datos, los paquetes de una l\u00ednea punto a punto pueden encriptarse cuando se env\u00eden desde una m\u00e1quina y desencriptarse cuando lleguen a otra. Los detalles pueden manejarse en la capa de enlace de datos, sin necesidad de que las capas superiores se enteren de ello. Sin embargo, esta soluci\u00f3n se viene abajo cuando los paquetes tienen que atravesar varios enrutadores, puesto que los paquetes tienen que desencriptarse en cada enrutador, dentro del cual son vulnerables a posibles ataques. Adem\u00e1s, no se contempla que algunas sesiones est\u00e9n protegidas (por ejemplo, aquellas que comprenden compras en l\u00ednea mediante tarjeta de cr\u00e9dito) y otras no. No obstante, la encriptaci\u00f3n de enlace (link encryption), como se llama a este m\u00e9todo, puede agregarse f\u00e1cilmente a cualquier red y con frecuencia es \u00fatil. En la capa de red pueden instalarse firewalls para mantener adentro (o afuera) a los paquetes. La seguridad de IP tambi\u00e9n funciona en esta capa. En la capa de transporte pueden encriptarse conexiones enteras, de extremo a extremo, es decir, proceso a proceso. Para lograr una m\u00e1xima seguridad, se requiere seguridad de extremo a extremo. Por \u00faltimo, los asuntos como la autenticaci\u00f3n de usuario y el no repudio s\u00f3lo pueden manejarse en la capa de aplicaci\u00f3n. Puesto que la seguridad no encaja por completo en ninguna capa, no pod\u00eda integrarse en ning\u00fan cap\u00edtulo de este libro. Por lo tanto, merece su propio cap\u00edtulo. Si bien este cap\u00edtulo es largo, t\u00e9cnico y esencial, por el momento tambi\u00e9n es casi irrelevante. Por ejemplo, est\u00e1 bien documentado que la mayor\u00eda de las fallas de seguridad en los bancos se debe a empleados incompetentes, procedimientos de seguridad deficientes o a fraudes internos, m\u00e1s que a delincuentes inteligentes que intervienen l\u00edneas telef\u00f3nicas y decodifican los mensajes encriptados. Si una persona entrara a un banco con una tarjeta de cajero autom\u00e1tico que hubiera encontrado en la calle y solicitara un nuevo PIN argumentando haber olvidado el suyo, y \u00e9ste se le proporcionara en el acto (en aras de las buenas relaciones con el cliente), toda la criptograf\u00eda del mundo no podr\u00eda evitar el abuso. A este respecto, el libro de Ross Anderson es una verdadera revelaci\u00f3n, debido a que documenta cientos de ejemplos de fallas de seguridad en numerosas industrias, casi todas ellas debidas a lo que cort\u00e9smente podr\u00eda llamarse pr\u00e1cticas de negocios descuidadas o falta de atenci\u00f3n a la seguridad (Anderson, 2001). Sin embargo, pensamos con optimismo que a medida que el comercio electr\u00f3nico se difunda con mayor amplitud, en alg\u00fan momento las compa\u00f1\u00edas depurar\u00e1n sus procedimientos operativos, eliminando estos vac\u00edos y d\u00e1ndole la importancia debida a los aspectos t\u00e9cnicos de seguridad.\n724\nSEGURIDAD EN REDES\nCAP. 8\nCasi toda la seguridad se basa en principios de criptograf\u00eda, a excepci\u00f3n de la seguridad en la capa f\u00edsica. Por esta raz\u00f3n, comenzaremos nuestro estudio de la seguridad examinando con detalle la criptograf\u00eda. En la secci\u00f3n 8.1 veremos algunos de los principios b\u00e1sicos. En las secciones 8-2 a 8-5 examinaremos algunos de los algoritmos y estructuras de datos fundamentales que se utilizan en criptograf\u00eda. A continuaci\u00f3n examinaremos con detalle la forma en que pueden utilizarse estos conceptos para lograr la seguridad en la red. Finalizaremos con algunas ideas acerca de la tecnolog\u00eda y la sociedad. Antes de comenzar, una \u00faltima aclaraci\u00f3n: qu\u00e9 es lo que no se cubre. Hemos tratado de enfocarnos en los aspectos de conectividad m\u00e1s que en los de sistema operativo o de aplicaci\u00f3n, aunque la l\u00ednea es muy sutil de distinguir. Por ejemplo, no hay nada aqu\u00ed sobre la autenticaci\u00f3n de usuario que utilice biom\u00e9trica, seguridad mediante contrase\u00f1a, ataques de sobreflujo de b\u00fafer, caballos de Troya, falsificaci\u00f3n de inicio de sesi\u00f3n, bombas l\u00f3gicas, virus, gusanos y cosas por el estilo. Todos estos temas se cubren con detalle en el cap\u00edtulo 9 del libro Sistemas Operativos Modernos (Tanenbaum, 2003). El lector interesado en los aspectos de seguridad debe leer ese libro. Ahora comencemos nuestro viaje.\n8.1 CRIPTOGRAF\u00cdA Criptograf\u00eda viene del griego y significa \u201cescritura secreta\u201d. Tiene una larga y colorida historia que se remonta a miles de a\u00f1os. En esta secci\u00f3n s\u00f3lo delinearemos algunos de los puntos de inter\u00e9s, como antecedentes de lo que sigue. Si desea la historia completa de la criptograf\u00eda, le recomiendo que lea el libro de Kahn (1995). Para un tratamiento m\u00e1s completo de los avances en lo que se refiere a los algoritmos de seguridad y criptograf\u00eda, a los protocolos y a las aplicaciones, vea (Kaufman y cols., 2002). Para un enfoque m\u00e1s matem\u00e1tico, vea (Stinson, 2002). Para un enfoque menos matem\u00e1tico, vea (Burnett y Paine, 2001). Los profesionales hacen una distinci\u00f3n entre cifrados y c\u00f3digos. Un cifrado es una transformaci\u00f3n car\u00e1cter por car\u00e1cter o bit por bit, sin importar la estructura ling\u00fc\u00edstica del mensaje. En contraste, un c\u00f3digo reemplaza una palabra con otra palabra o s\u00edmbolo. Los c\u00f3digos ya no se utilizan, aunque tienen una historia gloriosa. El c\u00f3digo con mayor \u00e9xito fue el de las fuerzas armadas de Estados Unidos durante la Segunda Guerra Mundial en el Pac\u00edfico. Ten\u00edan indios navajos hablando entre s\u00ed, utilizando palabras espec\u00edficas en navajo correspondientes a t\u00e9rminos militares; por ejemplo, chay-da-gahi-nail-tsaidi (literalmente: asesino de tortugas) quiere decir arma antitanque. El lenguaje navajo es altamente tonal, extremadamente complejo y no tiene forma escrita. Ninguna persona en Jap\u00f3n sab\u00eda algo sobre \u00e9l. En septiembre de 1945, el San Diego Union describi\u00f3 el c\u00f3digo diciendo \u201cDurante tres a\u00f1os, en cualquier lugar donde los soldados de la Marina desembarcaban, los japoneses escuchaban una combinaci\u00f3n de extra\u00f1os gorjeos entremezclados con otros ruidos que se asemejaban al canto de un monje tibetano y al sonido de una botella de agua caliente al vaciarse\u201d. Los japoneses nunca descifraron el c\u00f3digo y muchos de los soldados que utilizaban las claves navajo fueron premiados\nSEC. 8.1\n725\nCRIPTOGRAF\u00cdA\ncon altos honores militares por su extraordinario servicio y valor. El hecho de que Estados Unidos descifrara el c\u00f3digo japon\u00e9s y que Jap\u00f3n no haya podido descifrar el navajo tuvo un papel importante en las victorias estadounidenses en el Pac\u00edfico.\n8.1.1 Introducci\u00f3n a la criptograf\u00eda Hist\u00f3ricamente, cuatros grupos de personas han utilizado y contribuido al arte de la criptograf\u00eda: los militares, el cuerpo diplom\u00e1tico, los redactores de los peri\u00f3dicos y los amantes. De \u00e9stos, la milicia ha tenido el papel m\u00e1s importante y ha moldeado el campo a trav\u00e9s de los siglos. Dentro de las organizaciones militares, los mensajes por encriptar se han entregado tradicionalmente a empleados mal pagados para su codificaci\u00f3n y transmisi\u00f3n. El inmenso volumen de los mensajes ha impedido asignar esta labor a unos cuantos especialistas. Hasta la llegada de las computadoras, una de las principales restricciones de la criptograf\u00eda hab\u00eda sido la capacidad del empleado encargado de la codificaci\u00f3n para realizar las transformaciones necesarias, con frecuencia en un campo de batalla con poco equipo. Una restricci\u00f3n adicional ha sido la dificultad de cambiar r\u00e1pidamente de un m\u00e9todo de criptograf\u00eda a otro, debido a que esto implica volver a capacitar a una gran cantidad de personas. Sin embargo, el peligro de que un empleado fuera capturado por el enemigo ha hecho indispensable la capacidad de cambiar el m\u00e9todo de criptograf\u00eda de manera instant\u00e1nea, de ser necesario. Estos requerimientos en conflicto han dado lugar al modelo de la figura 8-2.\nEl intruso pasivo simplemente escucha\nTexto llano, P\nIntruso\nM\u00e9todo de encriptaci\u00f3n, E\nEl intruso activo puede alterar mensajes\nM\u00e9todo de desencriptaci\u00f3n, D\nTexto llano, P\nTexto cifrado, C = EK(P) Clave de encriptaci\u00f3n, K\nClave de desencriptaci\u00f3n, K\nFigura 8-2. El modelo de encriptaci\u00f3n (para un cifrado de clave sim\u00e9trica).\nLos mensajes por encriptar, conocidos como texto llano, son transformados por una funci\u00f3n parametrizada por una clave. El resultado del proceso de encriptaci\u00f3n, conocido como texto cifrado, se transmite a continuaci\u00f3n, muchas veces por mensajero o radio. Suponemos que el enemigo, o intruso, escucha y copia con exactitud todo el texto cifrado. Sin embargo, a diferencia del destinatario original, el intruso no conoce la clave de desencriptaci\u00f3n y no puede desencriptar con\n726\nSEGURIDAD EN REDES\nCAP. 8\nfacilidad el texto cifrado. En ocasiones el intruso no s\u00f3lo escucha el canal de comunicaci\u00f3n (intruso pasivo) sino tambi\u00e9n puede registrar mensajes y reproducirlos posteriormente, inyectar sus propios mensajes y modificar los mensajes leg\u00edtimos antes de que lleguen al destinatario (intruso activo). El arte de descifrar los mensajes (criptoan\u00e1lisis) y el arte de crear los cifrados (criptograf\u00eda), se conocen en conjunto como criptolog\u00eda. A menudo resulta \u00fatil tener una notaci\u00f3n para relacionar el texto llano, el texto cifrado y las claves. Utilizaremos C = EK (P) para indicar que la encriptaci\u00f3n del texto llano P usando la clave K produce el texto cifrado C. Del mismo modo, P = DK (C) representa la desencriptaci\u00f3n de C para obtener el texto llano nuevamente. Por lo tanto, DK (EK (P)) P Esta notaci\u00f3n sugiere que E y D son s\u00f3lo funciones matem\u00e1ticas, lo cual es cierto. El \u00fanico truco es que ambas son funciones de dos par\u00e1metros, y hemos escrito uno de los par\u00e1metros (la clave) como sub\u00edndice, en lugar de como argumento, para distinguirlo del mensaje. Una regla fundamental de la criptograf\u00eda es que se debe suponer que el criptoanalista conoce el m\u00e9todo general de encriptaci\u00f3n y desencriptaci\u00f3n usado. En otras palabras, el criptoanalista sabe con detalle c\u00f3mo funciona el m\u00e9todo de encriptaci\u00f3n, E, y desencriptaci\u00f3n, D, de la figura 8-2. La cantidad de esfuerzo necesario para inventar, probar e instalar un nuevo algoritmo cada vez que el m\u00e9todo antiguo est\u00e1 en peligro, o se piensa que lo est\u00e1, siempre ha hecho impr\u00e1ctico mantener en secreto el algoritmo de encriptaci\u00f3n. Adem\u00e1s, pensar que dicho algoritmo es secreto cuando no lo es, hace m\u00e1s da\u00f1o que bien. Aqu\u00ed es donde entra la clave. \u00c9sta consiste en una cadena corta (relativamente) que selecciona una de muchas encriptaciones potenciales. En contraste con el m\u00e9todo general, que tal vez se cambie cada cierto n\u00famero de a\u00f1os, la clave puede cambiarse con la frecuencia requerida. Por lo tanto, nuestro modelo b\u00e1sico es un m\u00e9todo general estable y conocido p\u00fablicamente pero parametrizado por una clave secreta y que puede cambiarse con facilidad. La idea de que el criptoanalista conozca los algoritmos y que la naturaleza secreta se base principalmente en las claves se conoce como principio de Kerckhoff, que debe su nombre al cript\u00f3grafo militar holand\u00e9s Auguste Kerckhoff, que lo estableci\u00f3 en 1883 (Kerckhoff, 1883). Por lo tanto, tenemos: Principio de Kerckhoff: Todos los algoritmos deben ser p\u00fablicos; s\u00f3lo las claves deben ser secretas La naturaleza no secreta del algoritmo no puede remarcarse lo suficiente. Tratar de mantener secreto el algoritmo, lo que se conoce como seguridad por desconocimiento, nunca funciona. Adem\u00e1s, al hacer p\u00fablico el algoritmo, el cript\u00f3grafo recibe asesor\u00eda gratuita de una gran cantidad de cript\u00f3logos acad\u00e9micos ansiosos por descifrar el sistema con el prop\u00f3sito de publicar trabajos que demuestren su inteligencia. Si muchos expertos han tratado de descifrar el algoritmo durante cinco a\u00f1os despu\u00e9s de su publicaci\u00f3n y nadie lo ha logrado, probablemente es bastante s\u00f3lido. Puesto que la parte secreta debe ser la clave, la longitud de \u00e9sta es un aspecto importante del dise\u00f1o. Considere una cerradura de combinaci\u00f3n. El principio general es que se introducen d\u00edgitos\nSEC. 8.1\nCRIPTOGRAF\u00cdA\n727\nen secuencia. Todo el mundo lo sabe, pero la clave es secreta. Una longitud de clave de dos d\u00edgitos significa que hay 100 posibilidades. Una clave de tres d\u00edgitos significa que hay 1000 posibilidades y una clave de seis d\u00edgitos de longitud significa un mill\u00f3n. Cuanto m\u00e1s grande sea la clave, mayor ser\u00e1 el factor de trabajo que tendr\u00e1 que enfrentar el criptoanalista. El factor de trabajo para descifrar el sistema mediante una b\u00fasqueda exhaustiva del espacio de clave crece exponencialmente con la longitud de la clave. El secreto radica en tener un algoritmo robusto (pero p\u00fablico) y una clave larga. Para evitar que su hermano menor lea su correo electr\u00f3nico, las claves de 64 bits son suficientes. Para el uso comercial com\u00fan, se requieren por lo menos 128 bits. Para mantener a raya a gobiernos poderosos se requieren claves de al menos 256 bits, y de preferencia mayores. Desde el punto de vista del criptoanalista, el problema del criptoan\u00e1lisis presenta tres variaciones principales. Cuando el criptoanalista cuenta con cierta cantidad de texto cifrado pero no tiene texto llano, enfrenta el problema de s\u00f3lo texto cifrado. Los criptogramas que aparecen en la secci\u00f3n de acertijos de los diarios presentan este tipo de problema. Cuando el criptoanalista cuenta con texto cifrado y el texto llano correspondiente, se enfrenta al problema del texto llano conocido. Por \u00faltimo, cuando el criptoanalista tiene la capacidad de encriptar textos normales que \u00e9l escoge, enfrenta el problema del texto llano seleccionado. Los criptogramas de los peri\u00f3dicos podr\u00edan descifrarse con facilidad si el criptoanalista pudiera hacer preguntas como: \u00bfcu\u00e1l es la encriptaci\u00f3n de ABCDEFGHIJKL? Los principiantes en el campo de la criptograf\u00eda con frecuencia suponen que, si un cifrado puede resistir el ataque de s\u00f3lo texto cifrado, entonces es seguro. Esta suposici\u00f3n es muy ingenua. En muchos casos, el criptoanalista puede hacer una buena estimaci\u00f3n de partes de texto llano. Por ejemplo, lo primero que muchas computadoras dicen cuando se les llama es \u201cIndique su clave:\u201d. Equipado con algunos pares concordantes de texto llano-texto cifrado, el trabajo del criptoanalista se vuelve mucho m\u00e1s f\u00e1cil. Para lograr seguridad, el cript\u00f3grafo debe ser conservador y asegurarse de que el sistema sea inviolable aun si su oponente puede encriptar cantidades arbitrarias de texto llano seleccionado. Los m\u00e9todos de encriptaci\u00f3n han sido divididos hist\u00f3ricamente en dos categor\u00edas: cifrados por sustituci\u00f3n y cifrados por transposici\u00f3n. A continuaci\u00f3n rese\u00f1aremos cada uno de \u00e9stos como antecedente para la criptograf\u00eda moderna.\n8.1.2 Cifrados por sustituci\u00f3n En un cifrado por sustituci\u00f3n, cada letra o grupo de letras se reemplazan por otra letra o grupo de letras para disfrazarla. Uno de los cifrados m\u00e1s viejos conocidos es el cifrado de C\u00e9sar, atribuido a Julio C\u00e9sar. En este m\u00e9todo, a se vuelve D, b se vuelve E, c se vuelve F, ... , y z se vuelve C. Por ejemplo, ataque se vuelve DWDTXH. En los ejemplos, el texto llano se presentar\u00e1 en min\u00fasculas y el texto cifrado en may\u00fasculas. Una peque\u00f1a generalizaci\u00f3n del cifrado de C\u00e9sar permite que el alfabeto de texto cifrado se desplace k letras, en lugar de siempre 3. En este caso, k se convierte en una clave del m\u00e9todo general de alfabetos desplazados circularmente. El cifrado de C\u00e9sar posiblemente enga\u00f1\u00f3 a Pompeyo, pero no ha enga\u00f1ado a nadie desde entonces.\n728\nSEGURIDAD EN REDES\nCAP. 8\nLa siguiente mejora es hacer que cada uno de los s\u00edmbolos del texto llano, digamos las 26 letras del abecedario (no incluimos la \u00f1) ingl\u00e9s, tengan una correspondencia con alguna otra letra. Por ejemplo, texto llano: a b c d e f g h i j k l m n o p q r s t u v w x y z texto cifrado: Q W E R T Y U I O P A S D F G H J K L Z X C V B N M El sistema general de sustituci\u00f3n de s\u00edmbolo por s\u00edmbolo se llama sustituci\u00f3n monoalfab\u00e9tica, siendo la clave la cadena de 26 letras correspondiente al alfabeto completo. Para la clave anterior, el texto llano ataque se transformar\u00eda en el texto cifrado QZQJXT. A primera vista, esto podr\u00eda parecer un sistema seguro, porque, aunque el criptoanalista conoce el sistema general (sustituci\u00f3n letra por letra), no sabe cu\u00e1l de las 26! \u2248 4 \u00d7 1026 claves posibles se est\u00e1 usando. En contraste con el cifrado de C\u00e9sar, intentarlas todas no es una estrategia muy alentadora. Aun a 1 nseg por soluci\u00f3n, una computadora tardar\u00eda 1010 a\u00f1os en probar todas las claves. No obstante, si se cuenta con una cantidad aun peque\u00f1a de texto cifrado, puede descifrarse f\u00e1cilmente. El ataque b\u00e1sico aprovecha las propiedades estad\u00edsticas de los lenguajes naturales. En ingl\u00e9s, por ejemplo, la e es la letra m\u00e1s com\u00fan, seguida de t, o, a, n, i, etc. Las combinaciones de dos letras m\u00e1s comunes, o digramas, son th, in, er, re y an. Las combinaciones de tres letras m\u00e1s comunes, o trigramas, son the, ing, and e ion. Un criptoanalista que intenta descifrar un cifrado monoalfab\u00e9tico comenzar\u00eda por contar la frecuencia relativa de todas las letras del texto cifrado. Entonces podr\u00eda asignar tentativamente la m\u00e1s com\u00fan a la letra e y la siguiente m\u00e1s com\u00fan a la letra t. Ver\u00eda entonces los trigramas para encontrar uno com\u00fan de la forma tXe, lo que sugerir\u00e1 fuertemente que X es h. De la misma manera, si el patr\u00f3n thYt ocurre con frecuencia, Y probablemente representa a. Con esta informaci\u00f3n se puede buscar un trigrama frecuente de la forma aZW, que con mucha probabilidad es and. Adivinando las palabras comunes, digramas y trigramas, y conociendo los patrones probables de las vocales y consonantes, el criptoanalista construye un texto llano tentativo, letra por letra. Otra estrategia es adivinar una palabra o frase probable. Por ejemplo, considere el siguiente texto cifrado de una compa\u00f1\u00eda contable (en bloques de cinco caracteres): CTBMN BYCTC BTJDS QXBNS GSTJC BTSWX CTQTZ CQVUJ QJSGS TJQZZ MNQJS VLNSX VSZJU JDSTS JQUUS JUBXJ DSKSU JSNTK BGAQJ ZBGYQ TLCTZ BNYBN QJSW\nUna palabra muy probable en un mensaje de una compa\u00f1\u00eda contable de un pa\u00eds de habla inglesa es financial. Usando nuestro conocimiento de que financial tiene una letra repetida (i), con cuatro letras intermedias entre su aparici\u00f3n, buscamos letras repetidas en el texto cifrado con este espaciado. Encontramos 12 casos, en las posiciones 6, 15, 27, 31, 42, 48, 56, 66, 70, 71, 76 y 82. Sin embargo, s\u00f3lo dos de \u00e9stos, el 31 y 42, tienen la siguiente letra (correspondiente a n en el texto llano) repetida en el lugar adecuado. De estos dos, s\u00f3lo el 31 tiene tambi\u00e9n la a en la posici\u00f3n\nSEC. 8.1\nCRIPTOGRAF\u00cdA\n729\ncorrecta, por lo que sabemos que financial comienza en la posici\u00f3n 30. A partir de aqu\u00ed, la deducci\u00f3n de la clave es f\u00e1cil usando las estad\u00edsticas de frecuencia del texto en ingl\u00e9s.\n8.1.3 Cifrados por transposici\u00f3n Los cifrados por sustituci\u00f3n conservan el orden de los s\u00edmbolos de texto llano, pero los disfrazan. Los cifrados por transposici\u00f3n, en contraste, reordenan las letras pero no las disfrazan. En la figura 8-3 se presenta un cifrado de transposici\u00f3n com\u00fan, la transposici\u00f3n columnar. La clave del cifrado es una palabra o frase que no contiene letras repetidas. En este ejemplo, la clave es MEGABUCK. El prop\u00f3sito de la clave es numerar las columnas, estando la columna 1 bajo la letra clave m\u00e1s cercana al inicio del alfabeto, y as\u00ed sucesivamente. El texto llano se escribe horizontalmente, en filas, las cuales se rellenan para completar la matriz si es necesario. El texto cifrado se lee por columnas, comenzando por la columna cuya letra clave es la m\u00e1s baja.\nM\nE G\nA\nB\nU\nC K\n7\n4\n5\n1\n2\n8\n3\n6\np\nl\ne\na\ns\ne\nt\nr\na\nn\ns\nf\ne\nr\no\nn\ne\nm i\nl\nl\ni\no\nn\nd\no\nl\nl\na\nr\ns\nt\no\nm y\ns\nw\ni\ns\ns\nb\na\nn\nk\na\nc\nc\no\nu\nn\nt\ns\ni\nx\nt\nw\no\nt\nw\no\na\nb\nc\nd\nTexto llano pleasetransferonemilliondollarsto myswissbankaccountsixtwotwo Texto cifrado\nAFLLSKSOSELAWAIATOOSSCTCLNMOMANT ESILYNTWRNNTSOWDPAEDOBUOERIRICXB\nFigura 8-3. Cifrado por transposici\u00f3n.\nPara descifrar un cifrado por transposici\u00f3n, el criptoanalista debe primero estar consciente de que est\u00e1 tratando con un cifrado de este tipo. Observando la frecuencia de E, T, A, O, I, N, etc., es f\u00e1cil ver si se ajustan al patr\u00f3n usual del texto llano. De ser as\u00ed, es evidente que se trata de un cifrado por transposici\u00f3n, pues en tal cifrado cada letra se representa a s\u00ed misma y la distribuci\u00f3n de frecuencia permanece intacta. El siguiente paso es adivinar la cantidad de columnas. En muchos casos, puede adivinarse una palabra o frase probable por el contexto del mensaje. Por ejemplo, sup\u00f3ngase que nuestro criptoanalista sospecha que la frase de texto llano milliondollars aparece en alg\u00fan lugar del mensaje. Observe que los digramas MO, IL, LL, LA, IR y OS aparecen en el texto cifrado como resultado de la envoltura de la frase. La letra de texto cifrado O sigue a la letra de texto cifrado M (es decir, son\n730\nSEGURIDAD EN REDES\nCAP. 8\nadyacentes verticalmente en la columna 4) puesto que est\u00e1n separados en la frase probable por una distancia igual a la longitud de la clave. Si se hubiera usado una clave de longitud siete, habr\u00edan aparecido los digramas MD, IO, LL, LL, IA, OR y NS. De hecho, para cada longitud de clave, se produce un grupo diferente de digramas en el texto cifrado. Buscando las diferentes posibilidades, el criptoanalista con frecuencia puede determinar f\u00e1cilmente la longitud de la clave. El paso restante es ordenar las columnas. Cuando la cantidad de columnas, k, es peque\u00f1a, puede examinarse cada uno de los pares de columnas k (k \u2212 1) para ver si la frecuencia de sus digramas es igual a la del texto llano. El par con la mejor concordancia se supone correctamente ubicado. Ahora cada columna restante se prueba tentativamente como sucesora de este par. La columna cuyas frecuencias de digramas y trigramas produce la mejor concordancia se toma tentativamente como correcta. La columna antecesora se encuentra de la misma manera. El proceso completo se repite hasta encontrar un orden potencial. Es probable que en este punto se pueda reconocer texto llano (por ejemplo, si aparece milloin, quedar\u00e1 claro en d\u00f3nde est\u00e1 el error). Algunos cifrados por transposici\u00f3n aceptan un bloque de longitud fija como entrada y producen un bloque de longitud fija como salida. Estos cifrados pueden describirse por completo con s\u00f3lo dar una lista que indique el orden en el que deben salir los caracteres. Por ejemplo, el cifrado de la figura 8-3 puede verse como un cifrado de bloque de 64 caracteres. Su salida es 4, 12, 20, 28, 36, 44, 52, 60, 5, 13, . . . , 62. En otras palabras, el cuarto car\u00e1cter de entrada, a, es el primero en salir, seguido del decimosegundo, f, etc\u00e9tera.\n8.1.4 Rellenos de una sola vez La construcci\u00f3n de un cifrado inviolable en realidad es bastante sencilla; la t\u00e9cnica se conoce desde hace d\u00e9cadas. Primero se escoge una cadena de bits al azar como clave. Luego se convierte el texto llano en una cadena de bits, por ejemplo usando su representaci\u00f3n ASCII. Por \u00faltimo, se calcula el OR EXCLUSIVO de estas dos cadenas, bit por bit. El texto cifrado resultante no puede descifrarse, porque en una muestra suficientemente grande de texto cifrado cada letra aparecer\u00e1 con la misma frecuencia, lo mismo que cada digrama y trigrama, y as\u00ed sucesivamente. Este m\u00e9todo, conocido como relleno de una sola vez, es inmune a todos los ataques actuales y futuros sin importar cu\u00e1nta potencia computacional tenga el intruso. La raz\u00f3n se deriva de una teor\u00eda de la informaci\u00f3n: simplemente no hay informaci\u00f3n en el mensaje debido a que todos los textos llanos posibles de una longitud dada son parecidos. En la figura 8-4 se muestra un ejemplo de c\u00f3mo se utilizan los rellenos de una sola vez. Primero, el mensaje 1, \u201cI love you.\u201d se convierte a ASCII de 7 bits. A continuaci\u00f3n se elige el relleno de una sola vez, relleno 1, y se efect\u00faa un XOR con el mensaje para obtener el texto cifrado. Un criptoanalista podr\u00eda probar todos los rellenos de una sola vez posibles para ver qu\u00e9 texto llano proviene de cada uno. Por ejemplo, podr\u00eda probarse el relleno 2 de la figura, lo que resultar\u00eda en el texto llano 2, \u201cElvis lives\u201d, lo cual podr\u00eda ser o no veros\u00edmil (un tema que est\u00e1 fuera del alcance de este libro). De hecho, para cada texto llano ASCII de 11 caracteres hay un relleno de una sola vez que lo genera. Eso es lo que queremos dar a entender cuando decimos que no hay\nSEC. 8.1\nCRIPTOGRAF\u00cdA\n731\ninformaci\u00f3n en el texto cifrado: es posible obtener cualquier mensaje con la longitud correcta a partir de \u00e9l. Mensaje 1:\n1001001 0100000 1101100 1101111 1110110 1100101 0100000 1111001 1101111 1110101 0101110\nRelleno 1:\n1010010 1001011 1110010 1010101 1010010 1100011 0001011 0101010 1010111 1100110 0101011\nTexto cifrado:\n0011011 1101011 0011110 0111010 0100100 0000110 0101011 1010011 0111000 0010011 0000101\nRelleno 2:\n1011110 0000111 1101000 1010011 1010111 0100110 1000111 0111010 1001110 1110110 1110110\nTexto llano 2:\n1000101 1101100 1110110 1101001 1110011 0100000 1101100 1101001 1110110 1100101 1110011\nFigura 8-4. El uso de un relleno de una sola vez para cifrado y la posibilidad de obtener cualquier texto llano posible a partir del texto cifrado mediante el uso de un relleno diferente.\nEn teor\u00eda, los rellenos de una sola vez son excelentes, pero en la pr\u00e1ctica tienen varias desventajas. Para comenzar, la clave no se puede memorizar, por lo que tanto el emisor como el receptor deben cargar una copia escrita con ellos. Si cualquiera de ellos corre el peligro de ser capturado, es obvio que las claves escritas no son una buena idea. Adem\u00e1s, la cantidad total de datos que se pueden transmitir est\u00e1 limitada por la cantidad de claves disponibles. Si el esp\u00eda tiene suerte y descubre una gran cantidad de datos, quiz\u00e1 no los pueda transmitir al cuartel general debido a que la clave se ha agotado. Otro problema es la sensibilidad del m\u00e9todo a los caracteres perdidos o insertados. Si el emisor y el receptor pierden la sincronizaci\u00f3n, de ah\u00ed en adelante todos los datos aparecer\u00e1n distorsionados. Con la aparici\u00f3n de las computadoras, el relleno de una sola vez podr\u00eda volverse pr\u00e1ctico para algunas aplicaciones. El origen de la clave podr\u00eda ser un DVD especial que contenga varios gigabytes de informaci\u00f3n y si se transporta en una caja de pel\u00edcula para DVD y se antecede con algunos minutos de v\u00eddeo, no ser\u00eda sospechoso. Por supuesto, a velocidades de red de gigabit, tener que insertar un nuevo DVD cada 30 seg podr\u00eda volverse tedioso. Y los DVDs deben transportarse personalmente desde el emisor hasta el receptor antes de que cualquier mensaje pueda ser enviado, lo que reduce en gran medida su utilidad pr\u00e1ctica Criptograf\u00eda cu\u00e1ntica Podr\u00eda haber una soluci\u00f3n al problema de la transmisi\u00f3n del relleno de una sola vez a trav\u00e9s de la red, y proviene de un origen muy inveros\u00edmil: la mec\u00e1nica cu\u00e1ntica. Esta \u00e1rea a\u00fan es experimental, pero las pruebas iniciales son alentadoras. Si pudiera perfeccionarse y fuera eficiente, con el tiempo casi toda la criptograf\u00eda se realizar\u00e1 utilizando rellenos de una sola vez debido a su seguridad. A continuaci\u00f3n explicaremos brevemente c\u00f3mo funciona el m\u00e9todo de la criptograf\u00eda cu\u00e1ntica. En particular, describiremos un protocolo llamado BB84 que debe su nombre a sus autores y a su a\u00f1o de publicaci\u00f3n (Bennet y Brassard, 1984). Un usuario, Alice, desea establecer un relleno de una sola vez con un segundo usuario, Bob. Alice y Bob son los personajes principales. Por ejemplo, Bob es un banquero con quien Alice quiere hacer negocios. En la d\u00e9cada pasada, los nombres \u201cAlice\u201d y \u201cBob\u201d se utilizaron como\n732\nSEGURIDAD EN REDES\nCAP. 8\npersonajes principales en casi todo lo escrito sobre criptograf\u00eda. Los cript\u00f3grafos aman la tradici\u00f3n. Si utiliz\u00e1ramos \u201cAndy\u201d y \u201cBarbara\u201d como personajes principales, nadie creer\u00eda nada de lo que se dice en este cap\u00edtulo. Por lo tanto, dej\u00e9moslo as\u00ed. Si Alice y Bob pudieran establecer un relleno de una sola vez, podr\u00edan utilizarlo para comunicarse de manera segura. La pregunta es: \u00bfC\u00f3mo pueden establecerlo sin intercambiar antes DVDs? Podemos asumir que Alice y Bob se encuentran en extremos opuestos de un cable de fibra \u00f3ptica a trav\u00e9s del cual pueden enviar y recibir pulsos de luz. Sin embargo, un intruso intr\u00e9pido, Trudy, puede cortar la fibra para establecer una derivaci\u00f3n activa. Trudy puede leer todos los bits en ambas direcciones. Tambi\u00e9n puede enviar mensajes falsos en ambas direcciones. Para Alice y Bob la situaci\u00f3n podr\u00eda parecer irremediable, pero la criptograf\u00eda cu\u00e1ntica puede arrojarle un poco de luz. La criptograf\u00eda cu\u00e1ntica se basa en el hecho de que la luz viene en peque\u00f1os paquetes llamados fotones, los cuales tienen algunas propiedades peculiares. Adem\u00e1s, la luz puede polarizarse al pasarla a trav\u00e9s de un filtro de polarizaci\u00f3n, un hecho bien conocido por quienes utilizan anteojos oscuros y por los fot\u00f3grafos. Si se pasa un haz de luz (es decir, un flujo de fotones) a trav\u00e9s de un filtro polarizador, todos los fotones que emerjan de \u00e9l se polarizar\u00e1n en la direcci\u00f3n del eje del filtro (por ejemplo, el vertical). Si a continuaci\u00f3n el haz se pasa a trav\u00e9s de un segundo filtro polarizador, la intensidad de la luz que emerja del segundo filtro es proporcional al cuadrado del coseno del \u00e1ngulo entre los ejes. Si los dos ejes son perpendiculares, no pasa ning\u00fan fot\u00f3n. La orientaci\u00f3n absoluta de los dos filtros no importa; s\u00f3lo cuenta el \u00e1ngulo entre sus ejes. Para generar un relleno de una sola vez, Alice necesita dos conjuntos de filtros polarizados. El primer conjunto consiste en un filtro vertical y en uno horizontal. Esta opci\u00f3n se conoce como base rectil\u00ednea. Una base es simplemente un sistema de coordenadas. El segundo conjunto de filtros consiste en lo mismo, excepto que se gira 45 grados, de forma que un filtro va del extremo inferior izquierdo al extremo superior derecho y el otro va del extremo superior izquierdo al extremo inferior derecho. Esta opci\u00f3n se conoce como base diagonal. Por lo tanto, Alice tiene dos bases, las cuales puede insertar a voluntad y r\u00e1pidamente en su haz. En la realidad, Alice no tiene cuatro filtros separados, sino un cristal cuya polarizaci\u00f3n puede cambiarse de manera el\u00e9ctrica y a gran velocidad a cualquiera de las cuatro direcciones permitidas. Bob tiene el mismo equipo que Alice. El hecho de que Alice y Bob dispongan de dos bases cada uno es esencial para la criptograf\u00eda cu\u00e1ntica. Ahora Alice asigna una direcci\u00f3n como 0 y la otra como 1 para cada base. En el ejemplo siguiente suponemos que elige 0 para vertical y 1 para horizontal. De manera independiente, tambi\u00e9n elige 0 para la direcci\u00f3n del extremo inferior izquierdo al superior derecho y 1 para la direcci\u00f3n del extremo superior izquierdo al inferior derecho. Alice env\u00eda estas opciones a Bob como texto llano. Ahora Alice elige un relleno de una sola vez, por ejemplo, con base en un generador de n\u00fameros aleatorios (un tema complejo por s\u00ed mismo). Lo transmite bit por bit a Bob, eligiendo de manera aleatoria una de sus dos bases para cada bit. Para enviar un bit, su pistola de fotones emite un fot\u00f3n polarizado apropiado para la base que est\u00e1 utilizando para ese bit. Por ejemplo, podr\u00eda elegir bases diagonal, rectil\u00ednea, rectil\u00ednea, diagonal, rectil\u00ednea, etc\u00e9tera. Para enviarle un relleno de una sola vez de 1001110010100110 con estas bases, Alice deber\u00eda enviar los fotones que se muestran en la figura 8-5(a). Dados el relleno de una sola vez y la secuencia de bases, la polarizaci\u00f3n\nSEC. 8.1\n733\nCRIPTOGRAF\u00cdA\npor utilizar para cada bit se determina de manera \u00fanica. Los bits enviados un fot\u00f3n a la vez se conocen como qubits. N\u00famero de bit Datos\nLo que Alice env\u00eda Bases de Bob Lo que obtiene Bob No\nS\u00ed\nNo\nS\u00ed\nNo\nNo\nNo\nS\u00ed\nS\u00ed\nNo\nS\u00ed\nS\u00ed\nS\u00ed\nNo\nS\u00ed\nNo\n\u00bfBase correcta? Relleno de una sola vez Bases de Trudy Relleno de Trudy\nFigura 8-5. Ejemplo de criptograf\u00eda cu\u00e1ntica.\nBob no sabe cu\u00e1les bases utilizar, por lo que elige una al azar para cada fot\u00f3n entrante y simplemente la usa, como se muestra en la figura 8-5(b). Si elige la base correcta, obtiene el bit correcto. Si elige la base incorrecta, obtiene un bit aleatorio debido a que si un fot\u00f3n choca con un filtro que est\u00e1 polarizado a 45 grados de su propia polarizaci\u00f3n, salta de manera aleatoria a la polarizaci\u00f3n del filtro o a una polarizaci\u00f3n perpendicular al filtro con igual probabilidad. Esta propiedad de los fotones es fundamental para la mec\u00e1nica cu\u00e1ntica. Por lo tanto, algunos de los bits son correctos y algunos son aleatorios, pero Bob no sabe cu\u00e1l es cu\u00e1l. Los resultados de Bob se muestran en la figura 8-5(c). \u00bfC\u00f3mo sabe Bob cu\u00e1les de las bases que obtuvo son correctas y cu\u00e1les err\u00f3neas? Simplemente indica a Alice, mediante texto llano, cu\u00e1l base utiliz\u00f3 para cada bit y ella le indica a \u00e9l, tambi\u00e9n en texto llano, cu\u00e1les son correctas y cu\u00e1les err\u00f3neas, como se muestra en la figura 8-5(d). A partir de esta informaci\u00f3n los dos pueden construir una cadena de bits tomando en cuenta los aciertos, como se muestra en la figura 8-5(e). En promedio, esta cadena de bits tendr\u00e1 la mitad del tama\u00f1o de la cadena de bits original, pero debido a que las dos partes lo saben, ambas pueden utilizarla como un relleno de una sola vez. Todo lo que Alice tiene que hacer es transmitir una cadena de bits un poco mayor que el doble de la longitud deseada y ella y Bob tendr\u00e1n un relleno de una sola vez con la longitud deseada. Problema resuelto.\n734\nSEGURIDAD EN REDES\nCAP. 8\nPero espere un momento. Nos olvidamos de Trudy. Suponga que ella tiene curiosidad por saber lo que dir\u00e1 Alice y corta la fibra, insertando sus propios detector y transmisor. Desgraciadamente para ella, tampoco sabe cu\u00e1l base utilizar para cada fot\u00f3n. Lo mejor que puede hacer es elegir una al azar para cada fot\u00f3n, tal como lo hace Bob. En la figura 8-5(f ) se muestra un ejemplo de sus elecciones. Cuando m\u00e1s tarde Bob informa (en texto llano) cu\u00e1les bases utiliz\u00f3 y Alice le indica (en texto llano) cu\u00e1les son correctas, Trudy sabe cu\u00e1ndo acert\u00f3 y cu\u00e1ndo no. En la figura 8-5 acert\u00f3 en los bits 0, 1, 2, 3, 4, 6, 8, 12 y 13. Pero sabe a partir de la respuesta de Alice en la figura 8-5(d) que s\u00f3lo los bits 1, 3, 7, 8, 10, 11, 12 y 14 son parte del relleno de una sola vez. Acert\u00f3 en cuatro de estos bits (1, 3, 8 y 12). En los otros cuatro (7, 10, 11 y 14) no coincidi\u00f3 y no conoce el bit transmitido. Por lo tanto, a partir de la figura 8-5(e), Bob sabe que el relleno de una sola vez inicia con 01011001, pero todo lo que Trudy tiene es 01?1??0?, tomando en cuenta la figura 8-5(g). Por supuesto, Alice y Bob est\u00e1n conscientes de que tal vez Trudy haya capturado parte de su relleno de una sola vez, por lo que les gustar\u00eda reducir la informaci\u00f3n que Trudy tiene. Esto lo pueden conseguir realizando una transformaci\u00f3n sobre el relleno. Por ejemplo, pueden dividir el relleno de una sola vez en bloques de 1024 bits y elevar al cuadrado cada uno de ellos para formar un n\u00famero de 2048 bits y utilizar la concatenaci\u00f3n de estos n\u00fameros de 2048 bits como el relleno de una sola vez. Con su conocimiento parcial de la cadena de bits transmitida, Trudy no tiene forma de elevar al cuadrado y, por lo tanto, no tiene nada. La transformaci\u00f3n del relleno original de una sola vez a uno diferente que reduce el conocimiento de Trudy se conoce como amplificaci\u00f3n de privacidad. En la pr\u00e1ctica, en lugar de las elevaciones al cuadrado se utilizan transformaciones complejas en las que cada bit de salida depende de cada bit de entrada. Pobre Trudy. No s\u00f3lo no tiene idea de cu\u00e1l es el relleno de una sola vez, sino que su presencia tampoco es un secreto. Despu\u00e9s de todo, debe transmitir cada bit recibido a Bob para hacerle creer que est\u00e1 hablando con Alice. El problema es que lo mejor que puede hacer es transmitir el qubit que recibi\u00f3, utilizando la polarizaci\u00f3n que utiliz\u00f3 para recibirlo, y casi la mitad del tiempo estar\u00e1 mal, causando muchos errores en el relleno de una sola vez de Bob. Cuando Alice finalmente comienza a enviar datos, los codifica mediante un pesado c\u00f3digo de correcci\u00f3n de errores hacia adelante. Desde el punto de vista de Bob, un error de un 1 bit en el relleno de una sola vez es lo mismo que un error de transmisi\u00f3n de 1 bit. De cualquier forma, obtiene el bit incorrecto. Si hay suficiente correcci\u00f3n de errores hacia adelante, puede recuperar el mensaje original a pesar de todos los errores, y puede contar f\u00e1cilmente cu\u00e1ntos errores fueron corregidos. Si este n\u00famero es mayor que la tasa de errores esperada del equipo, \u00e9l sabe que Trudy ha intervenido la l\u00ednea y puede actuar en consecuencia (por ejemplo, decirle a Alice que cambie a un canal de radio, que llame a la polic\u00eda, etc\u00e9tera). Si Trudy tuviera alguna forma de clonar un fot\u00f3n a fin de contar con un fot\u00f3n para inspeccionar y uno id\u00e9ntico para enviar a Bob, podr\u00eda evitar la detecci\u00f3n, pero en la actualidad no se conoce ninguna forma de clonar perfectamente un fot\u00f3n. Sin embargo, aunque Trudy pudiera clonar fotones, no se podr\u00eda reducir el valor de la criptograf\u00eda cu\u00e1ntica para establecer rellenos de una sola vez. Aunque se ha mostrado que la criptograf\u00eda cu\u00e1ntica puede operar a trav\u00e9s de distancias de 60 km de fibra, el equipo es complejo y costoso. Aun as\u00ed, la idea es prometedora. Para obtener mayor informaci\u00f3n sobre la criptograf\u00eda cu\u00e1ntica, vea (Mullins, 2002).\nSEC. 8.1\nCRIPTOGRAF\u00cdA\n735\n8.1.5 Dos principios criptogr\u00e1ficos fundamentales Aunque estudiaremos muchos sistemas criptogr\u00e1ficos diferentes en las siguientes p\u00e1ginas, hay dos principios que los sostienen a todos y que es importante entender. Redundancia El primer principio es que todos los mensajes encriptados deben contener redundancia, es decir, informaci\u00f3n no necesaria para entender el mensaje. Un ejemplo puede dejar en claro la necesidad de esto. Considere una compa\u00f1\u00eda de compras por correo, El Perezoso (EP), que tiene 60,000 productos. Pensando que son muy eficientes, los programadores de EP deciden que los mensajes de pedidos deben consistir en un nombre de cliente de 16 bytes seguido de un campo de datos de 3 bytes (1 byte para la cantidad y 2 para el n\u00famero de producto). Los \u00faltimos 3 bytes deben encriptarse usando una clave muy grande conocida s\u00f3lo por el cliente y EP. En un principio, esto podr\u00eda parecer seguro, y en cierto sentido lo es, puesto que los intrusos pasivos no pueden descifrar los mensajes. Desgraciadamente, el sistema tambi\u00e9n tiene una falla mortal que lo vuelve in\u00fatil. Supongamos que un empleado recientemente despedido quiere vengarse de EP por haberlo cesado. Antes de irse, se lleva con \u00e9l (parte de) la lista de clientes; entonces trabaja toda la noche escribiendo un programa para generar pedidos ficticios usando nombres reales de los clientes. Dado que no tiene la lista de claves, simplemente pone n\u00fameros aleatorios en los \u00faltimos 3 bytes y env\u00eda cientos de pedidos a EP. Al llegar estos mensajes, la computadora de EP usa el nombre del cliente para localizar la clave y descifrar el mensaje. Para mala suerte de EP, casi cada mensaje de 3 bytes es v\u00e1lido, por lo que la computadora comienza a imprimir instrucciones de embarque. Aunque podr\u00eda parecer extra\u00f1o que un cliente ordene 837 juegos de columpios para ni\u00f1os, o 540 cajas de arena, en lo que a la computadora concierne el cliente bien podr\u00eda estar planeando abrir una cadena de franquicias con juegos infantiles. De esta manera, un intruso activo (el ex empleado) puede causar much\u00edsimos problemas, aun cuando no pueda entender los mensajes que genera su computadora. Este problema puede resolverse agregando redundancia a todos los mensajes. Por ejemplo, si se extienden los mensajes de pedido a 12 bytes, de los cuales los primeros 9 deben ser ceros, entonces este ataque ya no funciona, porque el ex empleado ya no puede generar una cadena grande de mensajes v\u00e1lidos. La moraleja de esta historia es que todos los mensajes deben contener una cantidad considerable de redundancia para que los intrusos activos no puedan enviar basura al azar y lograr que se interprete como mensajes v\u00e1lidos. Sin embargo, la adici\u00f3n de redundancia tambi\u00e9n simplifica a los criptoanalistas el descifrado de los mensajes. Supongamos que el negocio de pedidos por correo es altamente competido, y que la competencia principal de El Perezoso, El Bols\u00f3n, estar\u00eda encantado de conocer la cantidad de cajas de arena que EP vende. Para ello, ha intervenido la l\u00ednea telef\u00f3nica de EP. En el esquema original con mensajes de 3 bytes, el criptoan\u00e1lisis era pr\u00e1cticamente imposible puesto que, tras adivinar una clave, el criptoanalista no ten\u00eda manera de saber si hab\u00eda adivinado correctamente. A fin de cuentas, casi cualquier mensaje era t\u00e9cnicamente legal. Con el nuevo esquema de 12 bytes,\n736\nSEGURIDAD EN REDES\nCAP. 8\nes f\u00e1cil para el criptoanalista distinguir un mensaje v\u00e1lido de uno no v\u00e1lido. Por lo tanto, tenemos: Principio criptogr\u00e1fico 1: Los mensajes deben contener alguna redundancia En otras palabras, al desencriptar un mensaje, el destinatario debe tener la capacidad de saber si es v\u00e1lido con s\u00f3lo inspeccionarlo y tal vez realizando un c\u00e1lculo simple. Esta redundancia es necesaria para evitar que intrusos activos env\u00eden basura y enga\u00f1en al receptor para que descifre la basura y realice algo con el \u201ctexto llano\u201d. Sin embargo, esta misma redundancia simplifica en gran medida la violaci\u00f3n del sistema por parte de los intrusos pasivos, por lo que aqu\u00ed hay un poco de preocupaci\u00f3n. M\u00e1s a\u00fan, la redundancia nunca debe estar en la forma de n ceros al principio o al final del mensaje, debido a que al ejecutar tales mensajes a trav\u00e9s de algunos algoritmos criptogr\u00e1ficos los resultados son m\u00e1s predecibles, lo que facilita el trabajo del criptoanalista. Un polinomio CRC es mejor que una serie de 0s puesto que el receptor puede verificarlo f\u00e1cilmente, pero implica m\u00e1s trabajo para el criptoanalista. Un m\u00e9todo a\u00fan mejor es utilizar un hash criptogr\u00e1fico, concepto que exploraremos m\u00e1s adelante. Regresando a la criptograf\u00eda cu\u00e1ntica por un momento, tambi\u00e9n podemos ver que la redundancia juega un papel ah\u00ed. Debido a que Trudy intercept\u00f3 los fotones, algunos bits en el relleno de una sola vez de Bob ser\u00e1n incorrectos. Bob necesita algo de redundancia en los mensajes entrantes para determinar que se presentaron errores. Una forma muy burda de redundancia es repetir dos veces el mensaje. Si ambas copias no son id\u00e9nticas, Bob sabe que o la fibra tiene mucho ruido o que alguien est\u00e1 interviniendo la transmisi\u00f3n. Por supuesto, enviar todo dos veces es excesivo; los c\u00f3digos de Hamming o de Reed-Solomon constituyen formas m\u00e1s eficientes para realizar la detecci\u00f3n y correcci\u00f3n de errores. Pero debe quedar claro que para distinguir un mensaje v\u00e1lido de uno inv\u00e1lido, especialmente en el caso de que haya un intruso activo, es necesaria cierta cantidad de redundancia. Actualizaci\u00f3n El segundo principio criptogr\u00e1fico es que se deben tomar medidas para asegurar que cada mensaje recibido se verifique a fin de saber si est\u00e1 actualizado, es decir, que se haya enviado muy recientemente. Esta medida es necesaria para evitar que intrusos activos reproduzcan mensajes antiguos. Si no se tomaran tales medidas, el ex empleado podr\u00eda intervenir la l\u00ednea telef\u00f3nica de EP y simplemente continuar repitiendo los mensajes v\u00e1lidos enviados previamente. En otras palabras, tenemos: Principio criptogr\u00e1fico 2: Es necesario alg\u00fan m\u00e9todo para frustrar los ataques de repetici\u00f3n Una de tales medidas es incluir en cada mensaje una marca de tiempo v\u00e1lida durante, digamos, 10 segundos. El receptor puede entonces guardar los mensajes unos 10 segundos, para compararlos con los mensajes nuevos que lleguen y filtrar los duplicados. Los mensajes con una antig\u00fcedad mayor a 10 segundos pueden descartarse, dado que todas las repeticiones enviadas m\u00e1s de 10 segundos despu\u00e9s tambi\u00e9n se rechazar\u00e1n como demasiado viejas. M\u00e1s adelante estudiaremos algunas medidas diferentes a las marcas de tiempo.\nSEC. 8.2\nALGORITMOS DE CLAVE SIM\u00c9TRICA\n737\n8.2 ALGORITMOS DE CLAVE SIM\u00c9TRICA La criptograf\u00eda moderna usa las mismas ideas b\u00e1sicas que la criptograf\u00eda tradicional (la transposici\u00f3n y la sustituci\u00f3n), pero su orientaci\u00f3n es distinta. Tradicionalmente, los cript\u00f3grafos han usado algoritmos. Hoy d\u00eda se hace lo opuesto: el objetivo es hacer el algoritmo de encriptaci\u00f3n tan complicado y rebuscado que incluso si el criptoanalista obtiene cantidades enormes de texto cifrado a su gusto, no ser\u00e1 capaz de entender nada sin la clave. La primera clase de algoritmos de encriptaci\u00f3n que analizaremos en este cap\u00edtulo se conocen como algoritmos de clave sim\u00e9trica porque utilizan la misma clave para encriptar y desencriptar. La figura 8-2 ilustra el uso de un algoritmo de clave sim\u00e9trica. En particular, nos enfocaremos en los cifrados en bloques, que toman un bloque de n bits de texto llano como entrada y lo transforman utilizando la clave en un bloque de n bits de texto cifrado. Los algoritmos criptogr\u00e1ficos pueden implementarse ya sea en hardware (para velocidad) o en software (para flexibilidad). Aunque la mayor\u00eda de nuestro tratamiento tiene que ver con algoritmos y protocolos, que son independientes de la implementaci\u00f3n real, no est\u00e1n de m\u00e1s unas cuantas palabras acerca de la construcci\u00f3n de hardware criptogr\u00e1fico. Las transposiciones y las sustituciones pueden implementarse mediante circuitos el\u00e9ctricos sencillos. En la figura 8-6(a) se muestra un dispositivo, conocido como caja P (la P significa permutaci\u00f3n), que se utiliza para efectuar una transposici\u00f3n de una entrada de 8 bits. Si los 8 bits se designan de arriba hacia abajo como 01234567, la salida de esta caja P en particular es 36071245. Mediante el cableado interno adecuado, puede hacerse que una caja P efect\u00fae cualquier transposici\u00f3n pr\u00e1cticamente a la velocidad de la luz, pues no se requiere ning\u00fan c\u00e1lculo, s\u00f3lo propagaci\u00f3n de la se\u00f1al. Este dise\u00f1o sigue el principio de Kerckhoff: el atacante sabe que el m\u00e9todo general est\u00e1 permutando los bits. Lo que no sabe es qu\u00e9 bit va en qu\u00e9 lugar, y esto es la clave.\n(a)\nCifrado de producto Codificador: 8 a 3\nCaja S Decodificador: 3 a 8\nCaja P\n(b)\n(c)\nFigura 8-6. Elementos b\u00e1sicos del cifrado de producto. (a) Caja P. (b) Caja S. (c) Producto.\nLa sustituci\u00f3n se lleva a cabo mediante cajas S, como se muestra en la figura 8-6(b). En este ejemplo, se ingresa un texto llano de 3 bits y sale un texto cifrado de 3 bits. La entrada de 3 bits selecciona una de las ocho l\u00edneas de salida de la primera etapa y la establece en 1; las dem\u00e1s l\u00edneas son 0. La segunda etapa es una caja P. La tercera etapa codifica en binario nuevamente la l\u00ednea de entrada seleccionada. Con el alambrado que se muestra, si los ocho n\u00fameros octales\n738\nSEGURIDAD EN REDES\nCAP. 8\n01234567 entraran uno tras otro, la secuencia de salida ser\u00eda de 24506713. En otras palabras, se ha reemplazado el 0 por el 2, el 1 por el 4, etc\u00e9tera. Nuevamente, puede lograrse cualquier sustituci\u00f3n mediante el alambrado adecuado de la caja P dentro de la caja S. Adem\u00e1s, tal dispositivo puede integrarse en hardware y puede alcanzarse una gran velocidad debido a que los codificadores y decodificadores s\u00f3lo tienen uno o dos retardos de puerta l\u00f3gica (subnanosegundos) y el tiempo de propagaci\u00f3n a trav\u00e9s de la caja P tal vez podr\u00eda muy bien ser menor a 1 picosegundo. La potencia real de estos elementos b\u00e1sicos s\u00f3lo se hace aparente cuando ponemos en cascada una serie completa de cajas para formar un cifrado de producto, como se muestra en la figura 8-6(c). En este ejemplo, se trasponen (es decir, se permutan) 12 l\u00edneas de entrada en la primera etapa (P1). En teor\u00eda, ser\u00eda posible hacer que la segunda etapa fuera una caja S que relacionara un n\u00famero de 12 bits con otro n\u00famero de 12 bits. En vez de ello, tal dispositivo requerir\u00eda 212 = 4096 alambres cruzados en su etapa media. En cambio, la entrada se divide en cuatro grupos de 3 bits, cada uno de los cuales se sustituye independientemente de los dem\u00e1s. Aunque este m\u00e9todo es menos general, a\u00fan es poderoso. Mediante la inclusi\u00f3n de una cantidad suficiente de etapas en el cifrado de producto, puede hacerse de la salida una funci\u00f3n excesivamente complicada de la entrada. Los cifrados de producto que operan en entradas de k bits para generar salidas de k bits son muy comunes. Por lo general, k es 64 a 256. Una implementaci\u00f3n de hardware por lo general tiene por lo menos 18 etapas f\u00edsicas, en lugar de s\u00f3lo siete como en la figura 8-6(c). Una implementaci\u00f3n de software se programa como un ciclo con por lo menos 8 iteraciones, cada una de las cuales realiza sustituciones de tipo caja S en subbloques del bloque de datos de 64 a 256 bits, seguido por una permutaci\u00f3n que mezcla las salidas de las cajas S. Con frecuencia hay una permutaci\u00f3n inicial especial y tambi\u00e9n una al final. En la literatura, las iteraciones se conocen como rondas.\n8.2.1 DES\u2014El Est\u00e1ndar de Encriptaci\u00f3n de Datos En enero de 1977, el gobierno de Estado Unidos adopt\u00f3 un cifrado de producto desarrollado por IBM como su est\u00e1ndar oficial para informaci\u00f3n no secreta. Este cifrado, el DES (Est\u00e1ndar de Encriptaci\u00f3n de Datos), se adopt\u00f3 ampliamente en la industria para usarse con productos de seguridad. Ya no es seguro en su forma original, pero a\u00fan es \u00fatil en una forma modificada. Ahora explicaremos el funcionamiento del DES. En la figura 8-7(a) se muestra un esbozo del DES. El texto llano se encripta en bloques de 64 bits, produciendo 64 bits de texto cifrado. El algoritmo, que se parametriza mediante una clave de 56 bits, tiene 19 etapas diferentes. La primera etapa es una transposici\u00f3n, independiente de la clave, del texto llano de 64 bits. La \u00faltima etapa es el inverso exacto de esta transposici\u00f3n. La etapa previa a la \u00faltima intercambia los 32 bits de la izquierda y los 32 bits de la derecha. Las 16 etapas restantes son funcionalmente id\u00e9nticas, pero se parametrizan mediante diferentes funciones de la clave. El algoritmo se ha dise\u00f1ado para permitir que la desencriptaci\u00f3n se haga con la misma clave que la encriptaci\u00f3n. Los pasos simplemente se ejecutan en el orden inverso.\nSEC. 8.2\n739\nALGORITMOS DE CLAVE SIM\u00c9TRICA 64 bits de texto llano\nTransposici\u00f3n inicial\nClave de 56 bits\nIteraci\u00f3n 1\nIteraci\u00f3n 2\nIteraci\u00f3n 16\nIntercambio de 32 bits\nTransposici\u00f3n inversa\n64 bits de texto cifrado (a)\n32 bits\n32 bits (b)\nFigura 8-7. El est\u00e1ndar de encriptaci\u00f3n de datos. (a) Esbozo general. (b) Detalle de una iteraci\u00f3n. El signo de suma del c\u00edrculo significa OR exclusivo.\nLa operaci\u00f3n de una de estas etapas intermedias se ilustra en la figura 8-7(b). Cada etapa toma dos entradas de 32 bits y produce dos salidas de 32 bits. La salida de la izquierda simplemente es una copia de la entrada de la derecha. La salida de la derecha es el OR exclusivo a nivel de bits de la entrada izquierda y una funci\u00f3n de la entrada derecha y la clave de esta etapa, Ki. Toda la complejidad reside en esta funci\u00f3n. La funci\u00f3n consiste en cuatro pasos, ejecutados en secuencia. Primero se construye un n\u00famero de 48 bits, E, expandiendo el Ri \u2212 1 de 32 bits seg\u00fan una regla fija de transposici\u00f3n y duplicaci\u00f3n. Despu\u00e9s, se aplica un OR exclusivo a E y Ki. Esta salida entonces se divide en ocho grupos de 6 bits, cada uno de los cuales se alimenta a una caja S distinta. Cada una de las 64 entradas posibles a la caja S se mapea en una salida de 4 bits. Por \u00faltimo, estos 8 \u00d7 4 bits se pasan a trav\u00e9s de una caja P. En cada una de las 16 iteraciones, se usa una clave diferente. Antes de iniciarse el algoritmo, se aplica una transposici\u00f3n de 56 bits a la clave. Justo antes de cada iteraci\u00f3n, la clave se divide en dos unidades de 28 bits, cada una de las cuales se gira hacia la izquierda una cantidad de bits dependiente del n\u00famero de iteraci\u00f3n. Ki se deriva de esta clave girada aplic\u00e1ndole otra transposici\u00f3n de 56 bits. En cada vuelta se extrae y permuta de los 56 bits un subgrupo de 48 bits diferente.\n740\nSEGURIDAD EN REDES\nCAP. 8\nUna t\u00e9cnica que algunas veces se utiliza para hacer a DES m\u00e1s fuerte se conoce como blanqueamiento (whitening). Consiste en aplicar un OR exclusivo a una clave aleatoria de 64 bits con cada bloque de texto llano antes de alimentarla al DES y despu\u00e9s aplicar un OR exclusivo a una segunda clave de 64 bits con el texto cifrado resultante antes de transmitirla. El blanqueamiento puede eliminarse f\u00e1cilmente mediante la ejecuci\u00f3n de las operaciones inversas (si el receptor tiene las dos claves de blanqueamiento). Puesto que esta t\u00e9cnica agrega m\u00e1s bits a la longitud de la clave, provoca que una b\u00fasqueda completa del espacio de claves consuma mucho m\u00e1s tiempo. Observe que se utiliza la misma clave de blanqueamiento para cada bloque (es decir, s\u00f3lo hay una clave de blanqueamiento). El DES se ha visto envuelto en controversias desde el d\u00eda en que se lanz\u00f3. Se bas\u00f3 en un cifrado desarrollado y patentado por IBM, llamado Lucifer, excepto que dicho cifrado usaba una clave de 128 bits en lugar de una de 56 bits. Cuado el gobierno federal de Estados Unidos quiso estandarizar un m\u00e9todo de cifrado para uso no confidencial, \u201cinvit\u00f3\u201d a IBM a \u201cdebatir\u201d el asunto con la NSA, la dependencia de descifrado de c\u00f3digos del gobierno, que es el empleador de matem\u00e1ticos y cript\u00f3logos m\u00e1s grande del mundo. La NSA es tan secreta que una broma de la industria reza: Pregunta: \u00bfQu\u00e9 significa NSA? Respuesta: Ninguna Supuesta Agencia. En realidad, NSA significa Agencia Nacional de Seguridad de Estados Unidos. Tras estos debates, IBM redujo la clave de 128 a 56 bits y decidi\u00f3 mantener en secreto el proceso de dise\u00f1o del DES. Mucha gente sospech\u00f3 que la longitud de la clave se redujo para asegurar que la NSA pudiera descifrar el c\u00f3digo, pero no ninguna organizaci\u00f3n de menor presupuesto. El objetivo del dise\u00f1o secreto supuestamente era esconder una puerta trasera que pudiera facilitar a\u00fan m\u00e1s a la NSA el descifrado del DES. Cuando un empleado de la NSA pidi\u00f3 discretamente al IEEE que cancelara una conferencia planeada sobre criptograf\u00eda, eso incomod\u00f3 a\u00fan m\u00e1s a la gente. La NSA neg\u00f3 todo. En 1977, dos investigadores de criptograf\u00eda de Stanford, Diffie y Hellman (1977) dise\u00f1aron una m\u00e1quina para violar el DES y estimaron que el costo de la construcci\u00f3n podr\u00eda ascender a unos 20 millones de d\u00f3lares. Dado un trozo peque\u00f1o de texto llano y el texto cifrado correspondiente, esta m\u00e1quina podr\u00eda encontrar la clave mediante una b\u00fasqueda exhaustiva del espacio de claves de 256 entradas en menos de un d\u00eda. Hoy d\u00eda tal m\u00e1quina costar\u00eda tal vez menos de un mill\u00f3n de d\u00f3lares. Triple DES Ya en 1979, IBM se dio cuenta de que la longitud de la clave DES era muy corta y dise\u00f1\u00f3 una forma de incrementarla de manera efectiva, utilizando cifrado triple (Tuchman, 1979). El m\u00e9todo elegido, que desde entonces se ha incorporado en el Est\u00e1ndar Internacional 8732, se ilustra en la figura 8-8. Aqu\u00ed se utilizan dos claves y tres etapas. En la primera etapa, el texto llano se encripta mediante DES de la forma usual con K1. En la segunda etapa, DES se ejecuta en modo de desencriptaci\u00f3n, utilizando K2 como la clave. Por \u00faltimo, se realiza otra encriptaci\u00f3n DES con K1.\nSEC. 8.2\n741\nALGORITMOS DE CLAVE SIM\u00c9TRICA\n(a)\n(b)\nFigura 8-8. (a) Triple encriptaci\u00f3n con DES. (b) Desencriptaci\u00f3n.\nEste dise\u00f1o da lugar inmediatamente a dos preguntas. Primera, \u00bfpor qu\u00e9 s\u00f3lo se usan dos claves en lugar de tres? Segunda, \u00bfpor qu\u00e9 se utiliza EDE (Encriptar Desencriptar Encriptar) en lugar de EEE (Encriptar Encriptar Encriptar)? La raz\u00f3n de que se usen dos claves es que incluso los cript\u00f3grafos m\u00e1s paranoicos coinciden en que por ahora 112 bits son suficientes para las aplicaciones comerciales. (Y entre los cript\u00f3grafos la paranoia se considera una ventaja, no un error.) Subir a 168 bits simplemente agregar\u00eda la sobrecarga innecesaria de administrar y transportar otra clave. La raz\u00f3n para encriptar, desencriptar y luego encriptar de nuevo es la compatibilidad hacia atr\u00e1s con los sistemas DES de una sola clave. Tanto las funciones de encriptaci\u00f3n como de desencriptaci\u00f3n son correspondencias entre grupos de n\u00fameros de 64 bits. Desde el punto de vista criptogr\u00e1fico, las dos correspondencias son igualmente robustas. Sin embargo, mediante el uso de EDE en lugar de EEE, una computadora que emplea triple encriptaci\u00f3n puede comunicarse con otra que usa encriptaci\u00f3n sencilla simplemente estableciendo K1 = K2. Esta propiedad permite la introducci\u00f3n gradual de la triple encriptaci\u00f3n, algo que no interesa a los cript\u00f3grafos acad\u00e9micos, pero que es de importancia considerable para IBM y sus clientes.\n8.2.2 AES\u2014El Est\u00e1ndar de Encriptaci\u00f3n Avanzada Conforme el DES comenz\u00f3 a acercarse al final de su vida \u00fatil, aun con el DES triple, el NIST (Instituto Nacional de Est\u00e1ndares y Tecnolog\u00eda), la agencia del Departamento de Comercio de Estados Unidos encargada de aprobar est\u00e1ndares del Gobierno Federal de Estados Unidos, decidi\u00f3 que el gobierno necesitaba un nuevo est\u00e1ndar criptogr\u00e1fico para uso no confidencial. El NIST estaba completamente consciente de toda la controversia alrededor del DES y sab\u00eda que si s\u00f3lo anunciaba un nuevo est\u00e1ndar, todos los que tuvieran conocimiento sobre criptograf\u00eda supondr\u00edan de manera autom\u00e1tica que la NSA hab\u00eda construido una puerta trasera con el fin de leer todo lo que se encriptara con ella. Bajo estas condiciones, probablemente nadie utilizar\u00eda el est\u00e1ndar y con seguridad tendr\u00eda una muerte silenciosa. Por esto, el NIST adopt\u00f3 una estrategia sorprendentemente diferente para una burocracia gubernamental: promovi\u00f3 un concurso. En enero de 1997, los investigadores de todo el mundo fueron invitados a emitir propuestas para un nuevo est\u00e1ndar, que se llamar\u00eda AES (Est\u00e1ndar de Encriptaci\u00f3n Avanzada). Las reglas fueron:\n742\nSEGURIDAD EN REDES\nCAP. 8\n1. El algoritmo debe ser un cifrado de bloques sim\u00e9tricos. 2. Todo el dise\u00f1o debe ser p\u00fablico. 3. Deben soportarse las longitudes de claves de 128, 192 y 256 bits. 4. Deben ser posibles las implementaciones tanto de software como de hardware. 5. El algoritmo debe ser p\u00fablico o con licencia en t\u00e9rminos no discriminatorios. Se realizaron quince propuestas serias y se organizaron conferencias para presentarlas, en las cuales se alent\u00f3 activamente a los asistentes a que encontraran errores en todas ellas. En agosto de 1998, el NIST seleccion\u00f3 cinco finalistas con base en su seguridad, eficiencia, simplicidad, flexibilidad y requerimientos de memoria (importantes para los sistemas integrados). Se llevaron a cabo m\u00e1s conferencias y se tomaron m\u00e1s cr\u00edticas. En la \u00faltima conferencia se realiz\u00f3 una votaci\u00f3n no obligatoria. Los finalistas y sus puntajes fueron los siguientes: 1. Rijndael (de Joan Daemen y Vincent Rijmen, 86 votos). 2. Serpent (de Ross Anderson, Eli Biham y Lars Knudsen, 59 votos). 3. Twofish (de un equipo encabezado por Bruce Schneier, 31 votos). 4. RC6 (de los Laboratorios RSA, 23 votos). 5. MARS (de IBM, 13 votos). En octubre de 2000, el NIST anunci\u00f3 que \u00e9l tambi\u00e9n vot\u00f3 por Rijndael, y en noviembre de 2001 Rijndael se volvi\u00f3 un est\u00e1ndar del gobierno de Estados Unidos publicado como FIPS 197 (Est\u00e1ndar Federal para el Procesamiento de Informaci\u00f3n). Debido a la extraordinaria apertura de la competencia, las propiedades t\u00e9cnicas de Rijndael y al hecho de que el equipo ganador estuvo compuesto por dos j\u00f3venes cript\u00f3grafos belgas (quienes no es probable que hayan construido una puerta trasera s\u00f3lo para complacer a la NSA), se espera que Rijndael se vuelva el est\u00e1ndar criptogr\u00e1fico dominante en el mundo por lo menos por una d\u00e9cada. El nombre Rijndael se deriva de los apellidos de los autores: Rijmen + Daemen. Rijndael soporta longitudes de clave y tama\u00f1os de bloque de 128 a 256 bits en pasos de 32 bits. Las longitudes de clave y de bloque pueden elegirse de manera independiente. Sin embargo, el AES especifica que el tama\u00f1o de bloque debe ser de 128 bits y la longitud de clave debe ser de 128, 192 o 256 bits. Es indudable que nadie utilizar\u00e1 claves de 192 bits, por lo que, de hecho, el AES tiene dos variantes: un bloque de 128 bits con clave de 128 bits y un bloque de 128 bits con clave de 256 bits. En el tratamiento de nuestro siguiente algoritmo examinaremos s\u00f3lo el caso 128/128 porque es probable que \u00e9ste se vuelva la norma comercial. Una clave de 128 bits da un espacio de claves de 2128 \u2248 3 \u00d7 1038 claves. Incluso si la NSA se las arregla para construir una m\u00e1quina con mil millones de procesadores paralelos, cada uno de los cuales es capaz de evaluar una clave por picosegundo, a tal m\u00e1quina le llevar\u00eda 1010 a\u00f1os buscar en el espacio de claves. Para ese entonces el Sol\nSEC. 8.2\nALGORITMOS DE CLAVE SIM\u00c9TRICA\n743\nya se habr\u00e1 apagado, por lo que las personas existentes tendr\u00e1n que leer los resultados a la luz de las velas. Rijndael Desde una perspectiva matem\u00e1tica, Rijndael se basa en la teor\u00eda de campos de Galois, la cual da algunas propiedades verificables de seguridad. Sin embargo, tambi\u00e9n puede verse como c\u00f3digo C, sin meterse a las matem\u00e1ticas. Al igual que el DES, Rijndael utiliza sustituci\u00f3n y permutaciones, as\u00ed como m\u00faltiples rondas. El n\u00famero de rondas depende del tama\u00f1o de clave y del tama\u00f1o de bloque, y es de 10 para las claves de 128 bits con bloques de 128 bits y aumenta hasta 14 para la clave o el bloque m\u00e1s grande. Sin embargo, a diferencia del DES, todas las operaciones involucran bytes completos, para permitir implementaciones eficientes tanto en hardware como en software. En la figura 8-9 se muestra un esquema del c\u00f3digo. #define LENGTH 16 #define #define #define typedef\nNROWS 4 NCOLS 4 ROUNDS 10 unsigned char byte;\n/* # de bytes en el bloque de datos o en la clave */ /* n\u00famero de filas en estado */ /* n\u00famero de columnas en estado */ /* n\u00famero de iteraciones */ /* entero sin signo de 8 bits */\nrijndael(byte plaintext[LENGTH], byte ciphertext[LENGTH], byte key[LENGTH]) { int r; /* \u00edndice de ciclo */ byte state[NROWS][NCOLS]; /* estado actual */ struct {byte k[NROWS][NCOLS];} rk[ROUNDS + 1]; /* claves de ronda */ expand_key(key, rk); /* construye las claves de ronda */ copy_plaintext_to_state(state, plaintext); /* inicia el estado actual */ xor_roundkey_into_state(state, rk[0]); /* aplica OR exclusivo a la clave dentro del estado */ for (r = 1; r k, la posibilidad de que cuando menos una coincida es bastante buena. Por lo tanto, en t\u00e9rminos aproximados, es probable una igualaci\u00f3n para \u2013 n > \u221ak. Este resultado significa que un compendio de mensajes de 64 bits probablemente puede violarse generando unos 232 mensajes y buscando dos con el mismo compendio de mensaje. Veamos ahora un ejemplo pr\u00e1ctico. El Departamento de Inform\u00e1tica de la Universidad Estatal tiene una c\u00e1tedra para un miembro facultativo y tiene dos candidatos, Tom y Dick. Tom fue contratado dos a\u00f1os antes que Dick, por lo que su candidatura ser\u00e1 considerada antes. Si Tom obtiene el puesto, mala suerte para Dick. Tom sabe que la jefa del departamento, Marilyn, tiene buen concepto de su trabajo, por lo que le pide que escriba una carta de recomendaci\u00f3n para el rector, quien decidir\u00e1 el caso de Tom. Una vez enviadas, todas las cartas se vuelven confidenciales. Marilyn le dice a su secretaria, Ellen, que escriba una carta al rector, delineando lo que quiere en ella. Cuando est\u00e1 lista, Marilyn la revisar\u00e1, calcular\u00e1 y firmar\u00e1 el compendio de 64 bits y lo enviar\u00e1 al rector. Ellen puede mandar la carta despu\u00e9s por correo electr\u00f3nico. Desgraciadamente para Tom, Ellen tiene una relaci\u00f3n sentimental con Dick y le gustar\u00eda dejar fuera a Tom, por lo que escribe la carta siguiente con las 32 opciones entre corchetes. Estimado rector Smith, Esta [carta | mensaje] es para dar mi opini\u00f3n [ franca | honesta] sobre el profesor Tom Wilson, que [ahora | este a\u00f1o] [es candidato a | est\u00e1 en espera de] una c\u00e1tedra. He [conocido a | trabajado con] el profesor Wilson durante [unos | casi ] seis a\u00f1os. Es un investigador [sobresaliente | excelente] de gran [talento | habilidad ] conocido [mundialmente | internacionalmente] por sus [brillantes | creativas] investigaciones sobre [muchos | una gran variedad de] problemas [dif\u00edciles | desafiantes]. \u00c9l es tambi\u00e9n un [ profesor | educador] [altamente | grandemente] [respetado | admirado]. Sus estudiantes han hecho evaluaciones [sobresalientes | espectaculares] de sus [clases | cursos]; es el [ profesor | instructor] [m\u00e1s admirado | m\u00e1s querido] [del departamento | por nosotros].\n764\nSEGURIDAD EN REDES\nCAP. 8\n[Adem\u00e1s | Por otra parte], el profesor Wilson es [h\u00e1bil | diligente] para obtener financiamiento. Sus [subvenciones | contratos] han aportado una cantidad [importante | sustancial] de dinero [al | a nuestro] departamento. [Este dinero ha | Estos fondos han] [posibilitado | permitido] que [emprendamos | pongamos en pr\u00e1ctica] muchos programas [especiales | importantes], [como | por ejemplo] su programa Estado 2000. Sin estos fondos [ser\u00edamos incapaces de | no podr\u00edamos] continuar este programa, que es tan [importante | esencial] para ambos. Recomiendo encarecidamente que se le otorgue la c\u00e1tedra. Desgraciadamente para Tom, tan pronto como Ellen termina de redactar y mecanografiar esta carta, tambi\u00e9n escribe una segunda: Estimado rector Smith: Esta [carta | mensaje] es para dar mi opini\u00f3n [franca | honesta] sobre el profesor Tom Wilson, que [ahora | este a\u00f1o] [es candidato a | est\u00e1 en espera de] una c\u00e1tedra. He [conocido a | trabajado con] el profesor Wilson durante [unos | casi] seis a\u00f1os. Es un investigador [malo | mediocre] poco conocido en su [campo | \u00e1rea]. Sus investigaciones [casi nunca | pocas veces] muestran [entendimiento | comprensi\u00f3n del] los problemas [clave | principales] [del d\u00eda | de nuestros tiempos]. Es m\u00e1s, no es un [profesor | educador] [respetado | admirado]. Sus estudiantes han hecho evaluaciones [pobres | malas] de sus [clases | cursos]; es el [maestro | instructor] menos querido [del departamento | por nosotros], conocido [ principalmente | m\u00e1s] en [el | nuestro] departamento por su [tendencia | propensi\u00f3n] a [ridiculizar | avergonzar] a los estudiantes lo bastante [tontos | imprudentes] como para hacer preguntas durante su clase. [Adem\u00e1s | Por otra parte], el profesor Wilson no es [h\u00e1bil | diligente] para obtener financiamiento. Sus [subvenciones | contratos] han aportado una cantidad [insustancial | insignificante] de dinero [al | a nuestro] departamento. A menos que [se recolecte dinero nuevo | se consigan fondos nuevos] pronto tendremos que cancelar algunos programas esenciales, como su programa Estado 2000. Desgraciadamente, en estas [condiciones | circunstancias] no puedo recomendarlo de buena [conciencia | fe] a usted para [la c\u00e1tedra | un puesto permanente]. Ahora Ellen prepara su computadora para calcular los 232 compendios de mensaje para cada carta durante la noche. Con suerte, un compendio de la primera carta ser\u00e1 igual a un compendio de la segunda. De no serlo puede agregar algunas opciones m\u00e1s e intentar de nuevo durante el fin de semana. Supongamos que encuentra una correspondencia. Llamemos a la carta \u201cbuena\u201d A y a la \u201cmala\u201d B. Ahora Ellen env\u00eda la carta A a Marilyn para su aprobaci\u00f3n y mantiene en completo secreto la carta B, sin mostr\u00e1rsela a nadie. Marilyn, por supuesto, la aprueba, calcula su compendio de mensaje de 64 bits, firma el compendio y manda por correo electr\u00f3nico el compendio firmado al rector Smith. Independientemente, Ellen env\u00eda la carta B al rector (no la carta A, que se supon\u00eda deb\u00eda haber enviado). Al recibir la carta y el compendio de mensaje firmado, el rector ejecuta el algoritmo de compendio de mensaje con la carta B, constata que coincide con lo que Marilyn le envi\u00f3 y despide a Tom. El rector no se da cuenta de que Ellen se las ingeni\u00f3 para generar dos cartas con el mismo compendio de mensaje y le envi\u00f3 una diferente de la que Marilyn vio y aprob\u00f3. (Desenlace opcio-\nSEC. 8.5\n765\nADMINISTRACI\u00d3N DE CLAVES P\u00daBLICAS\nnal: Ellen le dice a Dick lo que hizo. Dick se horroriza y rompe con ella. Ellen se pone furiosa y confiesa su falta a Marilyn. \u00c9sta llama al rector. Tom consigue la c\u00e1tedra a fin de cuentas.) Con el MD5, el ataque de cumplea\u00f1os es dif\u00edcil porque aun a una velocidad de mil millones de compendios por segundo, se requerir\u00edan m\u00e1s de 500 a\u00f1os para calcular los 264 compendios de dos cartas con 64 variantes cada una, e incluso entonces no se garantiza una equivalencia. Por supuesto, con 5000 computadoras operando en paralelo, 500 a\u00f1os se convierten en 5 semanas. SHA-1 es mejor (porque es m\u00e1s largo).\n8.5 ADMINISTRACI\u00d3N DE CLAVES P\u00daBLICAS La criptograf\u00eda de clave p\u00fablica hace posible que las personas que no comparten una clave com\u00fan se comuniquen con seguridad. Tambi\u00e9n posibilita firmar mensajes sin la presencia de un tercero confiable. Por \u00faltimo, los compendios de mensajes firmados hacen que verificar f\u00e1cilmente la integridad de mensajes recibidos sea una realidad. Sin embargo, hay un problema que hemos pasado por alto: si Alice y Bob no se conocen entre s\u00ed, \u00bfc\u00f3mo obtiene cada uno la clave p\u00fablica del otro para iniciar el proceso de comunicaci\u00f3n? La soluci\u00f3n m\u00e1s obvia \u2014colocar su clave p\u00fablica en su sitio Web\u2014 no funciona por la siguiente raz\u00f3n. Suponga que Alice quiere buscar la clave p\u00fablica de Bob en el sitio Web de \u00e9l. \u00bfC\u00f3mo lo hace? Comienza tecleando el URL de Bob. A continuaci\u00f3n su navegador busca la direcci\u00f3n DNS de la p\u00e1gina de inicio de Bob y le env\u00eda una solicitud GET, como se muestra en la figura 8-23. Desgraciadamente, Trudy intercepta la solicitud y responde con una p\u00e1gina de inicio falsa, probablemente una copia de la de Bob, excepto por el reemplazo de la clave p\u00fablica de Bob con la de Trudy. Cuando Alice encripta su primer mensaje con ET, Trudy lo desencripta, lo lee, lo vuelve a encriptar con la clave p\u00fablica de Bob y lo env\u00eda a \u00e9ste, quien no tiene la menor idea de que Trudy est\u00e1 leyendo los mensajes que le llegan. Peor a\u00fan, Trudy puede modificar los mensajes antes de volverlos a encriptar para Bob. Claramente, se necesita un mecanismo para asegurar que las claves p\u00fablicas puedan intercambiarse de manera segura. 1. Obtiene la p\u00e1gina de inicio de Bob Alice\n2. Falsifica la p\u00e1gina de inicio con ET\nTrudy\nBob\n3. ET (mensaje) 4. EB (mensaje)\nFigura 8-23. Una forma mediante la que Trudy puede subvertir la encriptaci\u00f3n de clave p\u00fablica.\n8.5.1 Certificados Como un primer intento para distribuir claves p\u00fablicas de manera segura, podemos imaginar un centro de distribuci\u00f3n de claves disponible en l\u00ednea las 24 horas del d\u00eda que proporciona claves p\u00fablicas a petici\u00f3n. Uno de los muchos problemas con esta soluci\u00f3n es que no es escalable, y el\n766\nSEGURIDAD EN REDES\nCAP. 8\ncentro de distribuci\u00f3n de claves podr\u00eda volverse r\u00e1pidamente un cuello de botella. Adem\u00e1s, si alguna vez fallara, la seguridad en Internet podr\u00eda reducirse a nada. Por estas razones, se ha desarrollado una soluci\u00f3n diferente, una que no requiere que el centro de distribuci\u00f3n est\u00e9 en l\u00ednea todo el tiempo. De hecho, ni siquiera tiene que estar en l\u00ednea. En su lugar, lo que hace es certificar las claves p\u00fablicas que pertenecen a las personas, empresas y otras organizaciones. Una organizaci\u00f3n que certifica claves p\u00fablicas se conoce como CA (autoridad de certificaci\u00f3n). Como un ejemplo, suponga que Bob desea permitir que Alice y otras personas se comuniquen con \u00e9l de manera segura. \u00c9l puede ir con la CA con su clave p\u00fablica junto con su pasaporte o licencia de conducir para pedir su certificaci\u00f3n. A continuaci\u00f3n, la CA emite un certificado similar al que se muestra en la figura 8-24 y firma su hash SHA-1 con la clave privada de la CA. Bob paga la cuota de la CA y obtiene un disco flexible que contiene el certificado y su hash firmado. Certifico que la clave p\u00fablica 19836A8B03030CF83737E3837837FC3s87092827262643FFA82710382828282A pertenece a Robert John Smith 12345 University Avenue Berkeley, CA 94702 Birthday: July 4, 1958 Email:\n[[email protected]](/cdn-cgi/l/email-protection) Hash SHA-1 del certificado anterior firmado con la clave p\u00fablica de la CA\nFigura 8-24. Un posible certificado y su hash firmado.\nEl trabajo fundamental de un certificado es enlazar una clave p\u00fablica con el nombre de un personaje principal (individual, empresa, etc\u00e9tera). Los certificados mismos no son secretos ni protegidos. Por ejemplo, Bob podr\u00eda decidir colocar su nuevo certificado en su sitio Web, con un v\u00ednculo en la p\u00e1gina de inicio que diga: Haga clic aqu\u00ed para obtener mi certificado de clave p\u00fablica. El clic resultante podr\u00eda regresar el certificado y el bloque de la firma (el hash SHA-1 firmado del certificado). Ahora vayamos nuevamente al escenario que se muestra en la figura 8-23. Cuando Trudy intercepta la solicitud que Alice realiza para obtener la p\u00e1gina de inicio de Bob, \u00bfqu\u00e9 puede hacer Trudy? Puede poner su propio certificado y bloque de firma en la p\u00e1gina falsificada, pero cuando Alice lea el certificado, ver\u00e1 inmediatamente que no est\u00e1 hablando con Bob porque el nombre de \u00e9ste no se encuentra en dicho certificado. Trudy puede modificar sobre la marcha la p\u00e1gina de inicio de Bob, reemplazando la clave privada de Bob con la suya. Sin embargo, cuando Alice ejecute el algoritmo SHA-1 en el certificado, obtendr\u00e1 un hash que no corresponde con el que obtuvo cuando aplic\u00f3 la clave privada bien conocida de la CA al bloque de firma. Puesto que Trudy no tiene la clave privada de la CA, no tiene forma de generar un bloque de firma que contenga el hash de la p\u00e1gina Web modificada con su clave p\u00fablica en \u00e9l. De esta manera, Alice puede estar segura de que tiene la clave p\u00fablica de Bob y no la de Trudy o la de alguien m\u00e1s. Y, como prometimos, este esquema no requiere que la CA est\u00e9 en l\u00ednea para la verificaci\u00f3n, por lo tanto se elimina un cuello de botella potencial.\nSEC. 8.5\nADMINISTRACI\u00d3N DE CLAVES P\u00daBLICAS\n767\nMientras que la funci\u00f3n est\u00e1ndar de un certificado es enlazar una clave p\u00fablica a un personaje principal, un certificado tambi\u00e9n se puede utilizar para enlazar una clave p\u00fablica a un atributo. Por ejemplo, un certificado podr\u00eda decir: Esta clave p\u00fablica pertenece a alguien mayor de 18 a\u00f1os. Podr\u00eda utilizarse para probar que el due\u00f1o de la clave privada no es una persona menor de edad y, por lo tanto, se le permiti\u00f3 acceder material no apto para ni\u00f1os, entre otras cosas, pero sin revelar la identidad del due\u00f1o. Por lo general, la persona que tiene el certificado podr\u00eda enviarlo al sitio Web, al personaje principal o al proceso que se preocupa por la edad. El sitio, el personaje principal o el proceso podr\u00edan generar a continuaci\u00f3n un n\u00famero aleatorio y encriptarlo con la clave p\u00fablica del certificado. Si el due\u00f1o pudiera desencriptarlo y regresarlo, \u00e9sa ser\u00eda una prueba de que el due\u00f1o ten\u00eda el atributo establecido en el certificado. De manera alternativa, el n\u00famero aleatorio podr\u00eda utilizarse para generar una clave de sesi\u00f3n para la conversaci\u00f3n resultante. Otro ejemplo en el que un certificado podr\u00eda contener un atributo es un sistema distribuido orientado a objetos. Cada objeto normalmente tiene m\u00faltiples m\u00e9todos. El due\u00f1o del objeto podr\u00eda proporcionar a cada cliente un certificado que d\u00e9 un mapa de bits de cu\u00e1les m\u00e9todos puede invocar y que enlace dicho mapa de bits a una clave p\u00fablica mediante un certificado firmado. Nuevamente, si el due\u00f1o del certificado puede probar la posesi\u00f3n de la clave privada correspondiente, se le permitir\u00e1 realizar los m\u00e9todos en el mapa de bits. Tiene la propiedad de que la identidad del due\u00f1o no necesita conocerse, lo cual es \u00fatil en las situaciones en las que la privacidad es importante.\n8.5.2 X.509 Si todas las personas que desean algo firmado fueran a la CA con un tipo diferente de certificado, administrar todos los formatos diferentes pronto se volver\u00eda un problema. Para resolverlo se ha dise\u00f1ado un est\u00e1ndar para certificados, el cual ha sido aprobado por la ITU. Dicho est\u00e1ndar se conoce como X.509 y se utiliza ampliamente en Internet. Ha tenido tres versiones desde su estandarizaci\u00f3n inicial en 1988. Aqu\u00ed analizaremos la versi\u00f3n V3. El X.509 ha recibido una enorme influencia del mundo de OSI, y ha tomado prestadas algunas de sus peores caracter\u00edsticas (por ejemplo, la asignaci\u00f3n de nombres y la codificaci\u00f3n). Sorprendentemente, la IETF estaba de acuerdo con el X.509, aunque en casi todas las dem\u00e1s \u00e1reas, desde direcciones de m\u00e1quinas, protocolos de transporte hasta formatos de correo electr\u00f3nico, la IETF por lo general ignor\u00f3 a la OSI y trat\u00f3 de hacerlo bien. La versi\u00f3n IETF del X.509 se describe en el RFC 3280. En esencia, el X.509 es una forma de describir certificados. Los campos principales en un certificado se listan en la figura 8-25. Las descripciones dadas ah\u00ed deben proporcionar una idea general de lo que hacen los campos. Para informaci\u00f3n adicional, por favor consulte el est\u00e1ndar mismo o el RFC 2459. Por ejemplo, si Bob trabaja en el departamento de pr\u00e9stamos del Banco Monetario, su direcci\u00f3n X.500 podr\u00eda ser: /C=MX/O=BancoMonetario/OU=Prestamo/CN=Bob/\ndonde C corresponde al pa\u00eds, O a la organizaci\u00f3n, OU a la unidad organizacional y CN a un nombre com\u00fan. Las CAs y otras entidades se nombran de forma similar. Un problema considerable con\n768\nSEGURIDAD EN REDES\nCAP. 8\nCampo\nSignificado\nVersi\u00f3n\nCu\u00e1l versi\u00f3n del X.509\nN\u00famero de serie\nEste n\u00famero junto con el nombre de la CA identifican de manera \u00fanica el certificado\nAlgoritmo de firma\nEl algoritmo que se utiliz\u00f3 para firmar el certificado\nEmisor\nEl nombre X.500 de la CA\nValidez\nLas fechas de inicio y final del periodo de validez\nNombre del sujeto\nLa entidad cuya clave se est\u00e1 certificando\nClave p\u00fablica\nLa clave p\u00fablica del sujeto y el ID del algoritmo usado para generarla\nID del emisor\nUn ID opcional que identifica de manera \u00fanica al emisor del certificado\nID del sujeto\nUn ID opcional que identifica de manera \u00fanica al sujeto del certificado\nExtensiones\nSe han definido muchas extensiones\nFirma\nLa firma del certificado (firmada por la clave privada de la CA)\nFigura 8-25. Los campos b\u00e1sicos de un certificado X.509.\nlos nombres X.500 es que si Alice est\u00e1 tratando de contactar a\n[[email protected]](/cdn-cgi/l/email-protection) y se le da un certificado con un nombre X.500, tal vez no sea obvio para ella que el certificado se refiera al Bob que ella busca. Por fortuna, a partir de la versi\u00f3n 3 se permiten los nombres DNS en lugar de los de X.500, por lo que este problema terminar\u00e1 por resolverse en alg\u00fan momento. Los certificados est\u00e1n codificados mediante la ASN.1 (Notaci\u00f3n de Sintaxis Abstracta 1) de la OSI, que puede considerarse como si fuera una estructura de C, pero con una notaci\u00f3n peculiar y poco concisa. Es posible encontrar informaci\u00f3n sobre X.509 en (Ford y Baum, 2000).\n8.5.3 Infraestructuras de clave p\u00fablica El hecho de que una sola CA emita todos los certificados del mundo obviamente no funciona. Podr\u00eda derrumbarse por la carga y tambi\u00e9n podr\u00eda ser un punto central de fallas. Una posible soluci\u00f3n ser\u00eda tener m\u00faltiples CAs que fueran ejecutadas por la misma organizaci\u00f3n y que utilizaran la misma clave privada para firmar los certificados. Si bien esto podr\u00eda solucionar los problemas de carga y de fallas, introducir\u00eda un nuevo problema: la fuga de claves. Si hubiera docenas de servidores esparcidos por todo el mundo, todos con la misma clave privada de la CA, la probabilidad de que la clave privada fuera robada o filtrada se incrementar\u00eda de manera considerable. Puesto que la situaci\u00f3n comprometida de esta clave arruinar\u00eda la infraestructura de la seguridad electr\u00f3nica mundial, tener una sola CA central es muy peligroso. Adem\u00e1s, \u00bfqu\u00e9 organizaci\u00f3n podr\u00eda operar la CA? Es dif\u00edcil imaginar cualquier autoridad que podr\u00eda ser aceptada mundialmente como leg\u00edtima y digna de confianza. En algunos pa\u00edses las personas insistir\u00edan en que fuera el gobierno, mientras que en otros lo rechazar\u00edan.\nSEC. 8.5\n769\nADMINISTRACI\u00d3N DE CLAVES P\u00daBLICAS\nPor estas razones, se ha desarrollado una forma diferente para certificar claves p\u00fablicas. Tiene el nombre general PKI (Infraestructura de Clave P\u00fablica). En esta secci\u00f3n resumiremos c\u00f3mo funciona, aunque ha habido diversas propuestas, por lo que los detalles podr\u00edan cambiar con el tiempo. Una PKI tiene m\u00faltiples componentes, entre ellos usuarios, CAs, certificados y directorios. Lo que una PKI hace es proporcionar una forma para estructurar estos componentes y definir est\u00e1ndares para los diversos documentos y protocolos. Una forma particularmente simple de PKI es una jerarqu\u00eda de CAs, como se muestra en la figura 8-26. En este ejemplo mostramos tres niveles, pero en la pr\u00e1ctica podr\u00edan ser menos o m\u00e1s. La CA de nivel superior, la ra\u00edz, certifica a CAs de segundo nivel, a las que llamaremos RAs (Autoridades Regionales) debido a que podr\u00edan cubrir alguna regi\u00f3n geogr\u00e1fica, como un pa\u00eds o un continente. Sin embargo, este t\u00e9rmino no es est\u00e1ndar; de hecho, ning\u00fan t\u00e9rmino es realmente est\u00e1ndar para los diversos niveles del \u00e1rbol. Estas RAs, a su vez, certifican a los CAs reales, las cuales emiten los certificados X.509 a organizaciones e individuos. Cuando la ra\u00edz autoriza una nueva RA, genera un certificado X.509 donde indica que ha aprobado la RA, e incluye en \u00e9l la nueva clave p\u00fablica de la RA, la firma y se la proporciona a la RA. De manera similar, cuando una RA aprueba una CA, produce y firma un certificado que indica su aprobaci\u00f3n y que contiene la clave p\u00fablica de la CA. Ra\u00edz\nRA 2 aprobada. Su clave p\u00fablica es 47383AE349...\nRA 2 aprobada. Su clave p\u00fablica es 47383AE349... Firma de la ra\u00edz\nFirma de la ra\u00edz\nCA 5 aprobada. Su clave p\u00fablica es 6384AF863B... Firma de la RA 2\nCA 5 aprobada. Su clave p\u00fablica es 6384AF863B... Firma de la RA 2\n(a)\n(b)\nFigura 8-26. (a) Una PKI jer\u00e1rquica. (b) Una cadena de certificados.\nNuestra PKI funciona como se muestra a continuaci\u00f3n. Suponga que Alice necesita la clave p\u00fablica de Bob para comunicarse con \u00e9l, por lo que busca y encuentra un certificado que la contiene, firmado por la CA 5. Sin embargo, Alice nunca ha escuchado sobre la CA 5. Por lo que ella sabe, CA 5 podr\u00eda ser la hija de 10 a\u00f1os de Bob. Puede ir con la CA 5 y decirle: Prueba tu autenticidad. La CA 5 responde con el certificado que obtuvo de la RA 2, el cual contiene la clave p\u00fablica de la CA 5. Una vez que tiene la clave p\u00fablica de la CA 5, Alice puede verificar que el certificado de Bob realmente fue firmado por la CA 5 y que, por lo tanto, es legal. Para asegurarse de que la RA 2 no sea el hijo de 12 a\u00f1os de Bob, el siguiente paso es que Alice pida a la RA 2 que pruebe su autenticidad. La respuesta a su consulta es un certificado firmado por la ra\u00edz que contiene la clave p\u00fablica de la RA 2. Ahora Alice est\u00e1 segura de que tiene la clave p\u00fablica de Bob.\n770\nSEGURIDAD EN REDES\nCAP. 8\nPero, \u00bfc\u00f3mo averigua Alice la clave p\u00fablica de la ra\u00edz? Magia. Se supone que todos conocen la clave p\u00fablica de la ra\u00edz. Por ejemplo, su navegador podr\u00eda haberse enviado con la clave p\u00fablica de la ra\u00edz integrada en \u00e9l. Bob es una persona amigable y no desea causar a Alice tanto trabajo. \u00c9l sabe que ella va a tener que verificar la CA 5 y la RA 2, por lo que para ahorrarle algunos problemas, recolecta los dos certificados necesarios y se los proporciona junto con el de \u00e9l. Ahora puede utilizar el conocimiento que tiene de la clave p\u00fablica de la ra\u00edz para verificar el certificado de nivel superior y la clave p\u00fablica contenida ah\u00ed para verificar la segunda. De esta manera, Alice no necesita contactar a nadie para realizar la verificaci\u00f3n. Debido a que todos los certificados est\u00e1n firmados, Alice puede detectar con facilidad cualquier intento de alterar el contenido. Una cadena de certificados que va de esta forma a la ra\u00edz algunas veces se conoce como cadena de confianza o ruta de certificaci\u00f3n. La t\u00e9cnica se utiliza ampliamente en la pr\u00e1ctica. Por supuesto, a\u00fan tenemos el problema de qui\u00e9n va a ejecutar la ra\u00edz. La soluci\u00f3n no es tener una sola ra\u00edz, sino tener muchas, cada una con sus propias RAs y CAs. De hecho, los navegadores modernos vienen precargados con claves p\u00fablicas para aproximadamente 100 ra\u00edces, algunas veces llamadas anclas de confianza. De esta forma, es posible evitar tener una sola autoridad mundial confiable. Pero ahora queda el problema de en qu\u00e9 forma el fabricante del navegador decide cu\u00e1les anclas de confianza propuestas son confiables y cu\u00e1les no. Queda a criterio del usuario confiar en el fabricante del navegador para elegir las mejores opciones y no simplemente aprobar todas las anclas de confianza deseando pagar sus cuotas de inclusi\u00f3n. La mayor\u00eda de los navegadores permiten que los usuarios inspeccionen las claves de la ra\u00edz (por lo general en la forma de certificados firmados por la ra\u00edz) y eliminen las que parezcan sospechosas. Directorios Otro problema de cualquier PKI es en d\u00f3nde est\u00e1n almacenados los certificados (y sus cadenas hacia un ancla de confianza conocida). Una posibilidad es hacer que cada usuario almacene sus propios certificados. Si bien esto es seguro (es decir, no hay forma de que los usuarios falsifiquen certificados firmados sin que esto se detecte), tambi\u00e9n es inconveniente. Una alternativa que se ha propuesto es utilizar DNS como un directorio de certificados. Antes de contactar a Bob, Alice probablemente tiene que buscar la direcci\u00f3n IP de Bob mediante DNS, entonces, \u00bfpor qu\u00e9 no hacer que DNS devuelva toda la cadena de certificados de Bob junto con su direcci\u00f3n IP? Algunas personas piensan que \u00e9sta es una forma de proceder, pero tal vez otras prefieren dedicar servidores de directorio cuyo \u00fanico trabajo sea manejar los certificados X.509. Tales directorios podr\u00edan proporcionar servicios de b\u00fasqueda utilizando propiedades de los nombres X.500. Por ejemplo, en teor\u00eda un servicio de directorio como \u00e9ste podr\u00eda contestar una consulta como: \u201cDame una lista de todas las personas que tengan el nombre Alice y que trabajen en los departamentos de ventas en cualquier lugar de Estados Unidos o Canad\u00e1\u201d. LDAP podr\u00eda ser un candidato para almacenar esta informaci\u00f3n.\nSEC. 8.5\nADMINISTRACI\u00d3N DE CLAVES P\u00daBLICAS\n771\nRevocaci\u00f3n El mundo real tambi\u00e9n est\u00e1 lleno de certificados, como los pasaportes y las licencias de conducir. Algunas veces estos certificados pueden revocarse, por ejemplo, las licencias de conducir pueden revocarse por conducir en estado de ebriedad y por otros delitos de manejo. En el mundo digital ocurre el mismo problema: el otorgante de un certificado podr\u00eda decidir revocarlo porque la persona u organizaci\u00f3n que lo posee ha abusado de alguna manera. Tambi\u00e9n puede revocarse si la clave privada del sujeto se ha expuesto o, peor a\u00fan, si la clave privada de la CA est\u00e1 en peligro. Por lo tanto, una PKI necesita tratar el problema de la revocaci\u00f3n. Un primer paso en esta direcci\u00f3n es hacer que cada CA emita peri\u00f3dicamente una CRL (lista de revocaci\u00f3n de certificados) que proporcione los n\u00fameros seriales de todos los certificados que ha revocado. Puesto que los certificados contienen fechas de vencimiento, la CRL s\u00f3lo necesita contener los n\u00fameros seriales de los certificados que no han expirado. Una vez que pasa la fecha de vencimiento de un certificado, \u00e9ste se invalida de manera autom\u00e1tica, por lo que no hay necesidad de hacer una distinci\u00f3n entre los certificados que han expirado y los que fueron revocados. Ninguno de esos tipos de certificados puede utilizarse. Desgraciadamente, introducir CRLs significa que un usuario que est\u00e1 pr\u00f3ximo a utilizar un certificado debe adquirir la CRL para ver si su certificado ha sido revocado. Si es as\u00ed, dicho certificado no debe utilizarse. Sin embargo, si el certificado no est\u00e1 en la lista, pudo haber sido revocado justo despu\u00e9s de que se public\u00f3 la lista. Por lo tanto, la \u00fanica manera de estar seguro realmente es preguntar a la CA. Y la siguiente vez que se utilice ese mismo certificado, se le tiene que preguntar nuevamente a la CA, puesto que dicho certificado pudo haber sido revocado segundos antes. Otra complicaci\u00f3n es que un certificado revocado puede reinstalarse nuevamente, por ejemplo, si fue revocado por falta de pago, pero ahora se ha puesto al corriente. Tener que tratar con la revocaci\u00f3n (y, posiblemente, con la reinstalaci\u00f3n) elimina una de la mejores propiedades de los certificados, principalmente, que pueden utilizarse sin tener que contactar a una CA. \u00bfD\u00f3nde deben almacenarse las CRLs? Un buen lugar ser\u00eda el mismo en el que se almacenan los certificados. Una estrategia es que una CA quite de manera activa y peri\u00f3dica CRLs y hacer que los directorios las procesen con s\u00f3lo eliminar los certificados revocados. Si no se utilizan directorios para almacenar certificados, las CRLs pueden almacenarse en cach\u00e9 en varios lugares convenientes alrededor de la red. Puesto que una CRL es por s\u00ed misma un documento firmado, si se altera, esa alteraci\u00f3n puede detectarse con facilidad. Si los certificados tienen tiempos de vida largos, las CRLs tambi\u00e9n los tendr\u00e1n. Por ejemplo, si las tarjetas de cr\u00e9dito son v\u00e1lidas durante cinco a\u00f1os, el n\u00famero de revocaciones pendientes ser\u00e1 mucho m\u00e1s grande que si se emitieran nuevas tarjetas cada tres meses. Una forma est\u00e1ndar para tratar con CRLs grandes es emitir una lista maestra ocasionalmente, pero emitir actualizaciones con m\u00e1s frecuencia. Hacer esto reduce el ancho de banda necesario para distribuir las CRLs.\n772\nSEGURIDAD EN REDES\nCAP. 8\n8.6 SEGURIDAD EN LA COMUNICACI\u00d3N Hemos terminado nuestro estudio de las herramientas en cuesti\u00f3n. Ya cubrimos la mayor\u00eda de las t\u00e9cnicas y protocolos importantes. El resto del cap\u00edtulo trata de c\u00f3mo se utilizan estas t\u00e9cnicas en la pr\u00e1ctica para proporcionar seguridad de red, m\u00e1s algunas reflexiones sobre los aspectos sociales de la seguridad, al final del cap\u00edtulo. En las siguientes cuatro secciones veremos la seguridad en la comunicaci\u00f3n, es decir, c\u00f3mo obtener los bits de manera secreta y sin modificaci\u00f3n desde el origen hasta el destino y c\u00f3mo mantener fuera a los bits no deseados. \u00c9stos no son de ning\u00fan modo los \u00fanicos aspectos de seguridad en las redes, pero ciertamente est\u00e1n entre los m\u00e1s importantes, lo que hace de \u00e9ste un buen lugar para comenzar.\n8.6.1 IPsec La IETF ha sabido por a\u00f1os que hay una falta de seguridad en Internet. Agregarla no era f\u00e1cil pues surgi\u00f3 una controversia sobre d\u00f3nde colocarla. La mayor\u00eda de los expertos en seguridad cre\u00edan que para estar realmente seguro, el cifrado y las verificaciones de integridad ten\u00edan que llevarse a cabo de extremo a extremo (es decir, en la capa de aplicaci\u00f3n). De tal manera, el proceso de origen encripta y/o protege la integridad de los datos y los env\u00eda al proceso de destino en donde se desencriptan y/o verifican. Por lo tanto, cualquier alteraci\u00f3n hecha en medio de estos dos procesos, o en cualquier sistema operativo, puede detectarse. El problema con este enfoque es que requiere cambiar todas las aplicaciones para que est\u00e9n conscientes de la seguridad. Desde esta perspectiva, el siguiente mejor enfoque es colocar el cifrado en la capa de transporte o en una nueva capa entre la capa de aplicaci\u00f3n y la de transporte, con lo que se conserva el enfoque de extremo a extremo pero no requiere que se cambien las aplicaciones. La perspectiva opuesta es que los usuarios no entiendan la seguridad y no sean capaces de utilizarla correctamente, as\u00ed como que nadie desee modificar los programas existentes de ninguna forma, por lo que la capa de red debe autentificar y/o cifrar paquetes sin que los usuarios est\u00e9n involucrados. Despu\u00e9s de a\u00f1os de batallas encarnizadas, esta perspectiva gan\u00f3 soporte suficiente para que se definiera un est\u00e1ndar de seguridad de capa de red. El argumento fue en parte que tener cifrado de la capa de red no evitaba que los usuarios conscientes de la seguridad la aplicaran correctamente y que ayudaba hasta cierto punto a los usuarios no conscientes de ella. El resultado de esta guerra fue un dise\u00f1o llamado IPsec (Seguridad IP), que se describe en los RFCs 2401, 2402 y 2406, entre otros. No todos los usuarios desean cifrado (pues \u00e9ste es costoso computacionalmente). En lugar de hacerlo opcional, se decidi\u00f3 requerir cifrado todo el tiempo pero permitir el uso de un algoritmo nulo. \u00c9ste se describe y alaba por su simplicidad, facilidad de implementaci\u00f3n y gran velocidad en el RFC 2410. El dise\u00f1o IPsec completo es una estructura para servicios, algoritmos y granularidades m\u00faltiples. La raz\u00f3n para los servicios m\u00faltiples es que no todas las personas quieren pagar el precio por tener todos los servicios todo el tiempo, por lo que los servicios est\u00e1n disponibles a la carta. Los servicios principales son confidencialidad, integridad de datos y protecci\u00f3n contra ataques de\nSEC. 8.6\nSEGURIDAD EN LA COMUNICACI\u00d3N\n773\nrepetici\u00f3n (un intruso repite una conversaci\u00f3n). Todos estos se basan en criptograf\u00eda sim\u00e9trica debido a que el alto rendimiento es crucial. La raz\u00f3n de tener m\u00faltiples algoritmos es que un algoritmo que ahora se piensa es seguro puede ser violado en el futuro. Al hacer independiente al algoritmo IPsec, la estructura puede sobrevivir incluso si alg\u00fan algoritmo particular es violado posteriormente. La raz\u00f3n de tener m\u00faltiples granularidades es para hacer posible la protecci\u00f3n de una sola conexi\u00f3n TCP, todo el tr\u00e1fico entre un par de hosts o todo el tr\u00e1fico entre un par de enrutadores seguros, entre otras posibilidades. Un aspecto ligeramente sorprendente de IPsec es que aunque se encuentra en la capa IP, es orientado a la conexi\u00f3n. En la actualidad, eso no es tan sorprendente porque para tener seguridad, se debe establecer y utilizar una clave por alg\u00fan periodo \u2014en esencia, un tipo de conexi\u00f3n. Adem\u00e1s, las conexiones amortizan los costos de configuraci\u00f3n sobre muchos paquetes. Una \u201cconexi\u00f3n\u201d en el contexto de IPsec se conoce como SA (asociaci\u00f3n de seguridad). Una SA es una conexi\u00f3n s\u00edmplex entre dos puntos finales y tiene un identificador de seguridad asociado con ella. Si se necesita tr\u00e1fico seguro en ambas direcciones, se requieren dos asociaciones de seguridad. Los identificadores de seguridad se transportan en paquetes que viajan en estas conexiones seguras y se utilizan para buscar claves y otra informaci\u00f3n relevante cuando llega un paquete seguro. T\u00e9cnicamente, IPsec tiene dos partes principales. La primera describe dos encabezados nuevos que pueden agregarse a paquetes para transportar el identificador de seguridad, datos de control de integridad, entre otra informaci\u00f3n. La otra parte, ISAKMP (Asociaci\u00f3n para Seguridad en Internet y Protocolo de Administraci\u00f3n de Claves), tiene que ver con el establecimiento de claves. No trataremos con mayor detalle a ISAKMP porque (1) es extremadamente complejo y (2) su protocolo principal, IKE (Intercambio de Claves de Internet), est\u00e1 plagado de fallas y necesita ser reemplazado (Perlman y Kaufman, 2000). IPsec puede utilizarse en cualquiera de dos modos. En el modo de transporte, el encabezado IPsec se inserta justo despu\u00e9s del encabezado IP. El campo Protocolo del encabezado IP se cambia para indicar que un encabezado IPsec sigue al encabezado IP normal (antes del encabezado TCP). El encabezado IPsec contiene informaci\u00f3n de seguridad, principalmente el identificador SA, un nuevo n\u00famero de secuencia y tal vez una verificaci\u00f3n de integridad del campo de carga. En el modo de t\u00fanel, todo el paquete IP, encabezado y dem\u00e1s, se encapsula en el cuerpo de un paquete IP nuevo con un encabezado IP completamente nuevo. El modo de t\u00fanel es \u00fatil cuando un t\u00fanel termina en una ubicaci\u00f3n que no sea el destino final. En algunos casos, el final del t\u00fanel es una m\u00e1quina de puerta de enlace de seguridad, por ejemplo, un firewall de una empresa. En este modo, el firewall encapsula y desencapsula paquetes conforme pasan a trav\u00e9s del firewall. Al terminar el t\u00fanel en esta m\u00e1quina segura, las m\u00e1quinas en la LAN de la empresa no tienen que estar consciente de IPsec. S\u00f3lo el firewall tiene que saber sobre \u00e9l. El modo de t\u00fanel tambi\u00e9n es \u00fatil cuando se agrega un conjunto de conexiones TCP y se maneja como un solo flujo cifrado porque as\u00ed se evita que in intruso vea qui\u00e9n est\u00e1 enviando cu\u00e1ntos paquetes a qui\u00e9n. Algunas veces el simple hecho de saber cu\u00e1nto tr\u00e1fico est\u00e1 pasando y hacia d\u00f3nde se dirige es informaci\u00f3n valiosa. Por ejemplo, si durante una crisis militar, la cantidad de tr\u00e1fico que fluye entre el Pent\u00e1gono y la Casa Blanca se reduce de manera significativa, pero la cantidad de tr\u00e1fico entre el Pent\u00e1gono y alguna instalaci\u00f3n militar oculta entre las Monta\u00f1as Rocosas de\n774\nSEGURIDAD EN REDES\nCAP. 8\nColorado se incrementa en la misma cantidad, un intruso podr\u00eda ser capaz de deducir alguna informaci\u00f3n \u00fatil a partir de estos datos. El estudio de los patrones de flujo de paquetes, aunque est\u00e9n cifrados, se conoce como an\u00e1lisis de tr\u00e1fico. El modo de t\u00fanel proporciona una forma de frustrarlo hasta cierto punto. La desventaja del modo de t\u00fanel es que agrega un encabezado IP extra, por lo que se incrementa el tama\u00f1o del paquete en forma sustancial. En contraste, el modo de transporte no afecta tanto el tama\u00f1o del paquete. El primer nuevo encabezado es AH (encabezado de autenticaci\u00f3n). Proporciona verificaci\u00f3n de integridad y seguridad antirrepetici\u00f3n, pero no la confidencialidad (es decir, no cifrado de datos). El uso de AH en el modo de transporte se ilustra en la figura 8-27. En el IPv4 se coloca entre el encabezado IP (incluyendo cualquier opci\u00f3n) y el TCP. En IPv6 es s\u00f3lo otro encabezado de extensi\u00f3n y se trata como tal. De hecho, el formato est\u00e1 cerca del de un encabezado de extensi\u00f3n IPv6 est\u00e1ndar. La carga \u00fatil tal vez tenga que rellenarse a alguna longitud en particular para el algoritmo de autenticaci\u00f3n, como se muestra. Autenticado Encabezado IP\nAH\nEncabezado TCP\nCarga \u00fatil + relleno\n32 Bits Siguiente encabezado\nLongitud de carga \u00fatil\n(Reservado)\n\u00cdndice de par\u00e1metros de seguridad N\u00famero de secuencia Datos de autenticaci\u00f3n (HMAC)\nFigura 8-27. El encabezado de autenticaci\u00f3n IPsec en el modo de transporte para IPv4.\nExaminemos el encabezado AH. El campo Siguiente encabezado se utiliza para almacenar el valor anterior que ten\u00eda el campo Protocolo IP antes de que se reemplazara con 51 para indicar que segu\u00eda un encabezado AH. En muchos casos, el c\u00f3digo para TCP (6) ir\u00e1 aqu\u00ed. La Longitud de carga \u00fatil es el n\u00famero de palabras de 32 bits en el encabezado AH menos 2. El \u00cdndice de par\u00e1metros de seguridad es el indicador de conexi\u00f3n. Es insertado por el emisor para indicar un registro en particular en la base de datos del receptor. Este registro contiene la clave compartida utilizada en esta conexi\u00f3n y otra informaci\u00f3n sobre dicha conexi\u00f3n. Si este protocolo hubiera sido inventado por la ITU en lugar del IETF, este campo se hubiera llamado N\u00famero de circuitos virtuales. El campo N\u00famero de secuencia se utiliza para numerar todos los paquetes enviados en una SA. Cada paquete obtiene un n\u00famero \u00fanico, incluso las retransmisiones. En otras palabras, la retransmisi\u00f3n de un paquete obtiene un n\u00famero diferente aqu\u00ed que el original (aunque su n\u00famero de secuencia TCP sea el mismo). El prop\u00f3sito de este campo es detectar ataques de repetici\u00f3n. Tal vez estos n\u00fameros de secuencia no se ajusten. Si todos los 232 se agotan, debe establecerse una nueva SA para continuar la comunicaci\u00f3n.\nSEC. 8.6\n775\nSEGURIDAD EN LA COMUNICACI\u00d3N\nPor \u00faltimo, veamos el campo Datos de autenticaci\u00f3n, que es de longitud variable y contiene la firma digital de la carga \u00fatil. Cuando se establece la SA, los dos lados negocian cu\u00e1l algoritmo de firmas van a utilizar. Por lo general, aqu\u00ed no se utiliza la criptograf\u00eda de clave p\u00fablica porque los paquetes se deben procesar extremadamente r\u00e1pido y todos los algoritmos de clave p\u00fablica conocidos son muy lentos. Puesto que IPsec se basa en la criptograf\u00eda de clave sim\u00e9trica y el emisor y el receptor negocian una clave compartida antes de establecer una SA, dicha clave compartida se utiliza en el c\u00e1lculo de la firma. Una forma simple es calcular el hash sobre el paquete m\u00e1s la clave compartida. Por supuesto, \u00e9sta no se transmite. Un esquema como \u00e9ste se conoce como HMAC (C\u00f3digo de Autenticaci\u00f3n de Mensajes basado en Hash). Es m\u00e1s r\u00e1pido realizar el c\u00e1lculo que primero ejecutar el SHA-1 y luego el RSA sobre el resultado. El encabezado AH no permite la encriptaci\u00f3n de los datos, por lo que es \u00fatil principalmente cuando la verificaci\u00f3n de la integridad es necesaria pero la confidencialidad no lo es. Una caracter\u00edstica de AH que vale la pena es que la verificaci\u00f3n de integridad abarca algunos de los campos en el encabezado IP, principalmente aquellos que no cambian conforme el paquete se mueve de enrutador a enrutador. El campo Tiempo de vida cambia en cada salto, por ejemplo, de manera que no se puede incluir en la verificaci\u00f3n de integridad. Sin embargo, la direcci\u00f3n IP de origen se incluye en la verificaci\u00f3n, lo que hace imposible que un intruso falsifique el origen de un paquete. El encabezado IPsec alternativo es ESP (Carga \u00datil de Encapsulamiento de Seguridad). Su uso para modo de transporte y para modo de t\u00fanel se muestra en la figura 8-28. Autenticado (a)\nEncabezado IP\nEncabeEncabezado ESP zado TCP\nCarga \u00fatil + relleno\nAutenticaci\u00f3n (HMAC)\nEncriptado Autenticado (b)\nNuevo encabezado IP\nEncabe- EncabeEncabezado IP zado ESP zado TCP antiguo\nCarga \u00fatil + relleno\nAutenticaci\u00f3n (HMAC)\nEncriptado\nFigura 8-28. (a) ESP en modo de transporte. (b) ESP en modo de t\u00fanel.\nEl encabezado ESP consiste en dos palabras de 32 bits. \u00c9stas son los campos \u00cdndice de par\u00e1metros de seguridad y N\u00famero de secuencia que vimos en AH. Una tercera palabra que generalmente va despu\u00e9s de ellos (pero que t\u00e9cnicamente no es parte del encabezado) es el Vector de inicializaci\u00f3n utilizado para la encriptaci\u00f3n de datos, a menos que se utilice la encriptaci\u00f3n nula, en cuyo caso se omite. ESP tambi\u00e9n incluye verificaciones de integridad HMAC, al igual que AH, pero en lugar de incluirse en el encabezado, van despu\u00e9s de la carga \u00fatil, como se muestra en la figura 8-28. Colocar el HMAC al final tiene una ventaja en una implementaci\u00f3n de hardware. El HMAC se puede calcular conforme los bits se transmiten por la interfaz de red y agregarse al final. \u00c9sta es la raz\u00f3n por la cual Ethernet y otras LANs tienen sus CRCs en un terminador, en lugar de en un encabezado. Con AH, el paquete tiene que almacenarse en el b\u00fafer y la firma tiene que calcularse antes\n776\nSEGURIDAD EN REDES\nCAP. 8\nde que se env\u00ede el paquete, con lo que se reduce de manera potencial el n\u00famero de paquetes/seg que pueden enviarse. Puesto que ESP puede hacer lo mismo que AH y m\u00e1s, y debido a que es m\u00e1s eficiente para iniciar, surge la pregunta: \u00bfPor qu\u00e9 molestarse en tener a AH? La respuesta es principalmente hist\u00f3rica. En un principio, AH manejaba s\u00f3lo integridad y ESP manejaba s\u00f3lo confidencialidad. M\u00e1s tarde, la integridad se agreg\u00f3 a ESP, pero las personas que dise\u00f1aron AH no quer\u00edan dejarlo morir despu\u00e9s de todo el trabajo que hab\u00edan realizado. Sin embargo, su \u00fanico argumento es que AH verifica parte del encabezado IP, lo cual ESP no hace, pero es un argumento d\u00e9bil. Otro argumento d\u00e9bil es que un producto que soporta AH y no ESP podr\u00eda tener menos problemas para obtener una licencia de exportaci\u00f3n porque no puede realizar encriptaci\u00f3n. Es probable que AH sea desplazado en el futuro.\n8.6.2 Firewalls La capacidad de conectar una computadora, en cualquier lugar, con cualquier computadora, de cualquier lugar, es una ventaja a medias. Para los usuarios dom\u00e9sticos, navegar en Internet significa mucha diversi\u00f3n. Para los gerentes de seguridad empresarial, es una pesadilla. Muchas empresas tienen en l\u00ednea grandes cantidades de informaci\u00f3n confidencial \u2014secretos de comercio, planes de desarrollo de productos, estrategias de marketing, an\u00e1lisis financieros, etc\u00e9tera. Si esta informaci\u00f3n cae en manos de un competidor podr\u00eda tener graves consecuencias. Adem\u00e1s del peligro de la fuga de informaci\u00f3n, tambi\u00e9n existe el peligro de la infiltraci\u00f3n de informaci\u00f3n. En particular, virus, gusanos y otras pestes digitales pueden abrir brechas de seguridad, destruir datos valiosos y hacer que los administradores pierdan mucho tiempo tratando de arreglar el da\u00f1o que hayan hecho. Por lo general, son tra\u00eddos por empleados descuidados que desean ejecutar alg\u00fan nuevo juego ingenioso. En consecuencia, se necesitan mecanismos para mantener adentro a los bits \u201cbuenos\u201d y afuera a los bits \u201cmalos\u201d. Un m\u00e9todo es utilizar IPsec. Este m\u00e9todo protege a los datos en tr\u00e1nsito entre los sitios seguros. Sin embargo, IPsec no hace nada para mantener afuera de la LAN de la compa\u00f1\u00eda a las pestes digitales y a los intrusos. Para saber c\u00f3mo alcanzar ese objetivo, necesitamos ver los firewalls. Los firewalls (servidores de seguridad) son simplemente una adaptaci\u00f3n moderna de la vieja estrategia medieval de seguridad: excavar un foso defensivo profundo alrededor de su castillo. Este dise\u00f1o obligaba a que todos los que entraran o salieran del castillo pasaran a trav\u00e9s de un puente levadizo, en donde los encargados de la E/S los pod\u00edan inspeccionar. En las redes es posible el mismo truco: una compa\u00f1\u00eda puede tener muchas LANs conectadas de formas arbitrarias, pero se obliga a que todo el tr\u00e1fico desde o hacia la compa\u00f1\u00eda pase a trav\u00e9s de un puente levadizo electr\u00f3nico ( firewall), como se muestra en la figura 8-29. En esta configuraci\u00f3n el firewall tiene dos componentes: dos enrutadores que realizan filtrado de paquetes y una puerta de enlace de aplicaci\u00f3n. Tambi\u00e9n existen configuraciones m\u00e1s simples, pero la ventaja de este dise\u00f1o es que cada paquete debe transitar a trav\u00e9s de dos filtros y una puerta de enlace de aplicaci\u00f3n para entrar o salir. No existe otra ruta. Es evidente que quienes piensen que un punto de verificaci\u00f3n de seguridad es suficiente, no han hecho vuelos internacionales recientemente en alguna aerol\u00ednea.\nSEC. 8.6\n777\nSEGURIDAD EN LA COMUNICACI\u00d3N Puerta de enlace de aplicaci\u00f3n\nRed dorsal\nEnrutador de filtrado de paquetes\nRed corporativa\nEnrutador de filtrado de paquetes\nConexiones a redes externas\nPer\u00edmetro de seguridad\nLAN interna\nLAN externa\nFirewall\nFigura 8-29. Un firewall que consiste en dos filtros de paquetes y en una puerta de enlace de aplicaci\u00f3n.\nCada filtro de paquete es un enrutador est\u00e1ndar equipado con alguna funcionalidad extra. \u00c9sta permite inspeccionar cada paquete entrante o saliente. Los paquetes que cumplan con alg\u00fan criterio se reenv\u00edan de manera normal. Los que fallen la prueba se descartan. En la figura 8-29 probablemente el filtro de paquete de la LAN interna verifica los paquetes salientes y el que est\u00e1 en la LAN externa verifica los paquetes entrantes. Los paquetes que cruzan la primera barrera pasan a la puerta de enlace de aplicaci\u00f3n, donde se vuelven a examinar. El objetivo de colocar los dos filtros de paquetes en LANs diferentes es asegurar que ning\u00fan paquete entre o salga sin pasar a trav\u00e9s de la puerta de enlace de aplicaci\u00f3n: no hay otra ruta. Por lo general, los filtros de paquetes son manejados por tablas configuradas por el administrador del sistema. Dichas tablas listan or\u00edgenes y destinos aceptables, or\u00edgenes y destinos bloqueados, y reglas predeterminadas sobre lo que se debe hacer con los paquetes que van o vienen de otras m\u00e1quinas. En el caso com\u00fan de una configuraci\u00f3n TCP/IP, un origen o un destino consiste en una direcci\u00f3n IP y un puerto. Los puertos indican qu\u00e9 servicio se desea. Por ejemplo, el puerto TCP 23 es para telnet, el puerto TCP 79 es para directorio y el puerto TCP 119 es para las noticias USENET. Una compa\u00f1\u00eda podr\u00eda bloquear los paquetes entrantes de todas las direcciones IP combinadas con uno de estos puertos. De esta forma, nadie afuera de la compa\u00f1\u00eda puede iniciar una sesi\u00f3n a trav\u00e9s de telnet o buscar personas mediante el demonio de directorio. Adem\u00e1s, la compa\u00f1\u00eda podr\u00eda estar en contra de que sus empleados desperdicien todo el d\u00eda leyendo noticias USENET. Bloquear paquetes salientes es un poco dif\u00edcil pues aunque la mayor\u00eda de los sitios se apegan a las convenciones est\u00e1ndar de numeraci\u00f3n de puertos, no est\u00e1n obligados a hacerlo. Adem\u00e1s, para algunos servicios importantes, como FTP (Protocolo de Transferencia de Archivos), los n\u00fameros de puerto se asignan de manera din\u00e1mica. Asimismo, aunque el bloqueo de conexiones TCP es dif\u00edcil, el de paquetes UDP lo es a\u00fan m\u00e1s debido a que se sabe muy poco con anticipaci\u00f3n sobre lo\n778\nSEGURIDAD EN REDES\nCAP. 8\nque har\u00e1n. Muchos filtros de paquetes est\u00e1n configurados para simplemente prohibir el tr\u00e1fico de paquetes UDP. La segunda mitad del firewall es la puerta de enlace de aplicaci\u00f3n. En lugar de s\u00f3lo buscar los paquetes simples, la puerta de enlace opera a nivel de aplicaci\u00f3n. Por ejemplo, es posible configurar una puerta de enlace de correo para examinar cada mensaje que sale o entra. Para cada uno, la puerta de enlace decide si transmitir o descartar el mensaje con base en los campos de encabezado, el tama\u00f1o del mensaje o incluso en el contenido (por ejemplo, en una instalaci\u00f3n militar, la presencia de palabras como \u201cnuclear\u201d o \u201cbomba\u201d podr\u00eda causar que se tomara alguna acci\u00f3n especial). Las instalaciones son libres de configurar una o m\u00e1s puertas de enlace de aplicaci\u00f3n para aplicaciones espec\u00edficas, aunque no es poco com\u00fan que organizaciones desconfiadas permitan correo entrante y saliente, e incluso el acceso a World Wide Web, pero que consideren todo lo dem\u00e1s muy peligroso. Combinado con la encriptaci\u00f3n y el filtrado de paquetes, este arreglo ofrece una cantidad limitada de seguridad con el costo de algunas inconveniencias. Incluso si el firewall est\u00e1 configurado perfectamente, a\u00fan existir\u00e1 una gran cantidad de problemas. Por ejemplo, si un firewall est\u00e1 configurado para permitir s\u00f3lo paquetes entrantes de redes espec\u00edficas (por ejemplo, de otras instalaciones de la compa\u00f1\u00eda), un intruso afuera del firewall puede introducir direcciones de origen falsas para evadir esta verificaci\u00f3n. Si un miembro interno desea enviar documentos secretos, puede encriptarlos o incluso fotografiarlos y enviar las fotos como archivos JPEG, los cuales pueden evadir cualquier filtro de palabras. Y no hemos analizado el hecho de que el 70% de todos los ataques provienen del lado interno del firewall, por ejemplo, de empleados descontentos (Schneier, 2000). Adem\u00e1s, hay otra clase de ataques que los firewalls no pueden manejar. La idea b\u00e1sica de un firewall es evitar que entren intrusos y que salga informaci\u00f3n secreta. Desgraciadamente, hay personas que no tienen nada mejor que hacer que tratar de perjudicar ciertos sitios. Esto lo hacen enviando grandes cantidades de paquetes leg\u00edtimos al destino, hasta que el sitio se caiga debido a la carga. Por ejemplo, para derribar un sitio Web, un intruso puede enviar un paquete TCP SYN para establecer una conexi\u00f3n. A continuaci\u00f3n el sitio asignar\u00e1 una ranura de tabla para la conexi\u00f3n y enviar\u00e1 como respuesta un paquete SYN + ACK. Si el intruso no responde, la ranura de tabla se conservar\u00e1 durante algunos segundos hasta que expire. Si el intruso env\u00eda miles de solicitudes de conexi\u00f3n, todas las ranuras de tabla se llenar\u00e1n y no podr\u00e1 establecerse ninguna conexi\u00f3n leg\u00edtima. Los ataques en los que el objetivo del intruso es bloquear el destino en lugar de robar datos se conocen como ataques DoS (negaci\u00f3n de servicio). Por lo general, los paquetes de solicitud tienen direcciones falsas de origen por lo que el intruso no puede ser rastreado con facilidad. Una variante a\u00fan peor es aquella en la que el intruso ha entrado en cientos de computadoras en cualquier parte del mundo, y despu\u00e9s ordena a todas ellas que ataquen al mismo objetivo al mismo tiempo. Este m\u00e9todo no s\u00f3lo incrementa el poder del intruso, tambi\u00e9n reduce la probabilidad de su detecci\u00f3n, debido a que los paquetes provienen de una gran cantidad de m\u00e1quinas que pertenecen a usuarios ingenuos. Un ataque de este tipo se conoce como ataque DDoS (negaci\u00f3n de servicio distribuida). Es dif\u00edcil defenderse de un ataque como \u00e9ste. Incluso si la m\u00e1quina atacada puede reconocer r\u00e1pidamente una solicitud falsa, le toma alg\u00fan tiempo procesar y descartar la\nSEC. 8.6\n779\nSEGURIDAD EN LA COMUNICACI\u00d3N\nsolicitud, y si llegan suficientes solicitudes por segundo, la CPU pasar\u00e1 todo su tiempo ocup\u00e1ndose de ellas.\n8.6.3 Redes privadas virtuales Muchas compa\u00f1\u00edas tienen oficinas e instalaciones esparcidas en muchas ciudades, algunas veces en m\u00faltiples pa\u00edses. En el pasado, antes de que existieran las redes de datos p\u00fablicas, era com\u00fan que algunas compa\u00f1\u00edas alquilaran l\u00edneas a las compa\u00f1\u00edas telef\u00f3nicas entre todas o entre s\u00f3lo algunas ubicaciones. Algunas compa\u00f1\u00edas a\u00fan hacen esto. Una red constituida por computadoras de compa\u00f1\u00edas y l\u00edneas telef\u00f3nicas alquiladas se conoce como red privada. En la figura 8-30(a) se muestra una red privada de ejemplo que conecta tres ubicaciones.\nOficina 1\nL\u00ednea alquilada\nOficina 2\nOficina 1\nFirewall Internet\nOficina 2\nT\u00fanel\nOficina 3\nOficina 3\n(a)\n(b)\nFigura 8-30. (a) Una red privada con l\u00ednea alquilada. (b) Una red privada virtual.\nLas redes privadas funcionan bien y son muy seguras. Si las \u00fanicas l\u00edneas disponibles son las alquiladas, el tr\u00e1fico no puede fugarse de las ubicaciones de la compa\u00f1\u00eda y los intrusos tienen que intervenir f\u00edsicamente las l\u00edneas para infiltrarse, lo cual no es f\u00e1cil de hacer. El problema con las redes privadas es que alquilar una sola l\u00ednea T1 cuesta miles de d\u00f3lares mensuales y las l\u00edneas T3 son muchas veces m\u00e1s costosas. Cuando aparecieron las redes de datos p\u00fablicas y, m\u00e1s tarde, Internet, muchas compa\u00f1\u00edas quisieron trasladar su tr\u00e1fico de datos (y, posiblemente, de voz) a la red p\u00fablica, aunque sin renunciar a la seguridad de la red privada. Esta demanda pronto llev\u00f3 a la invenci\u00f3n de las VPNs (redes privadas virtuales), que son redes superpuestas sobre redes p\u00fablicas pero con muchas propiedades de las redes privadas. Se llaman \u201cvirtuales\u201d porque son s\u00f3lo una ilusi\u00f3n, al igual que los circuitos virtuales no son circuitos reales ni la memoria virtual es memoria real. Aunque las VPNs pueden implementarse encima de ATM (o de Frame Relay), un m\u00e9todo cada vez m\u00e1s popular es construir VPNs directamente sobre Internet. Un dise\u00f1o com\u00fan es equipar cada oficina con un firewall y crear t\u00faneles a trav\u00e9s de Internet entre todos los pares de oficinas,\n780\nSEGURIDAD EN REDES\nCAP. 8\ncomo se ilustra en la figura 8-30(b). Si IPsec se utilizara para el proceso de entunelamiento, entonces ser\u00eda posible agregar todo el tr\u00e1fico entre cualquiera de los dos pares de oficinas en una sola SA encriptada y autenticada, con lo que se proporcionar\u00eda control de integridad, confidencialidad e incluso inmunidad considerable al an\u00e1lisis de tr\u00e1fico. Cuando se inicia el sistema, cada par de firewalls tiene que negociar los par\u00e1metros de su SA, incluyendo los servicios, modos, algoritmos y claves. Muchos firewalls tienen capacidades VPN integradas, aunque algunos enrutadores ordinarios tambi\u00e9n pueden hacer esto. Pero debido a que los firewalls est\u00e1n principalmente en el negocio de la seguridad, es natural que los t\u00faneles empiecen y terminen en los firewalls, estableciendo una clara separaci\u00f3n entre la compa\u00f1\u00eda e Internet. Por lo tanto, los firewalls, las VPNs e IPsec con ESP en modo de t\u00fanel son una combinaci\u00f3n natural y se utilizan ampliamente en la pr\u00e1ctica. Una vez que se han establecido las SAs, el tr\u00e1fico puede comenzar a fluir. Para un enrutador en Internet, un paquete que viaja a trav\u00e9s de un t\u00fanel VPN es s\u00f3lo un paquete ordinario. Lo \u00fanico extra\u00f1o es la presencia del encabezado IPsec despu\u00e9s del encabezado IP, pero debido a que estos encabezados adicionales no tienen efecto en el proceso de reenv\u00edo, los enrutadores no se preocupan por ellos. Una ventaja principal de organizar de esta forma una VPN es que es completamente transparente para todo el software de usuario. Los firewalls configuran y manejan las SAs. La \u00fanica persona que est\u00e1 consciente de esta configuraci\u00f3n es el administrador del sistema, quien tiene que configurar y manejar los firewalls. Para todos los dem\u00e1s, es como tener nuevamente una red privada mediante una l\u00ednea alquilada. Para mayor informaci\u00f3n sobre las VPNs, vea (Brown, 1999, e Izzo, 2000).\n8.6.4 Seguridad inal\u00e1mbrica Dise\u00f1ar un sistema que sea l\u00f3gica y completamente seguro mediante VPNs y firewalls es muy f\u00e1cil, pero eso, en la pr\u00e1ctica, puede fallar. Esta situaci\u00f3n puede darse si algunas de las m\u00e1quinas son inal\u00e1mbricas y utilizan comunicaci\u00f3n de radio, que pase justo encima del firewall en ambas direcciones. El rango de las redes 802.11 con frecuencia es de algunos cientos de metros, por lo que cualquiera que desee espiar una compa\u00f1\u00eda puede simplemente introducirse en el estacionamiento para empleados por la ma\u00f1ana, dejar una computadora port\u00e1til habilitada para 802.11 en el autom\u00f3vil para que grabe todo lo que oiga. Al anochecer, el disco duro estar\u00e1 repleto de datos valiosos. En teor\u00eda, se supone que esta fuga no deber\u00eda suceder. Pero, en teor\u00eda, las personas tampoco deber\u00edan robar bancos. La mayor parte del problema de seguridad puede remontarse a los fabricantes de las estaciones base inal\u00e1mbricas (puntos de acceso), quienes tratan de hacer que sus productos sean amigables para el usuario. Por lo general, si el usuario saca el dispositivo de la caja y lo conecta en el enchufe de la energ\u00eda el\u00e9ctrica, comienza a operar inmediatamente \u2014casi siempre sin seguridad, revelando secretos a quienes est\u00e9n dentro del rango de radio. Si a continuaci\u00f3n se conecta a una Ethernet, de pronto todo el tr\u00e1fico de \u00e9sta aparecer\u00e1 tambi\u00e9n en el estacionamiento. La tecnolog\u00eda\nSEC. 8.6\nSEGURIDAD EN LA COMUNICACI\u00d3N\n781\ninal\u00e1mbrica es el sue\u00f1o de todo esp\u00eda: datos gratuitos sin tener que hacer nada. Por lo tanto, sobra decir que la seguridad es mucho m\u00e1s importante para los sistemas inal\u00e1mbricos que para los cableados. En esta secci\u00f3n veremos algunas formas en que las redes inal\u00e1mbricas manejan la seguridad. Es posible encontrar informaci\u00f3n adicional en (Nichols y Lekkas, 2002). Seguridad del 802.11 El est\u00e1ndar 802.11 establece un protocolo de seguridad en el nivel de capa de enlace de datos llamado WEP (Privacidad Inal\u00e1mbrica Equivalente), dise\u00f1ado para que la seguridad de una LAN inal\u00e1mbrica sea tan buena como la de una LAN cableada. Puesto que lo predeterminado para las LANs al\u00e1mbricas no es la seguridad, este objetivo es f\u00e1cil de alcanzar, y WEP lo consigue, como veremos m\u00e1s adelante. Cuando se habilita la seguridad para el est\u00e1ndar 802.11, cada estaci\u00f3n tiene una clave secreta que comparte con la estaci\u00f3n base. La forma en que se distribuyen las claves no se especifica en el est\u00e1ndar. \u00c9stas s\u00f3lo pueden ser precargadas por el fabricante. Pueden intercambiarse por adelantado a trav\u00e9s de la red al\u00e1mbrica. Por \u00faltimo, la estaci\u00f3n base o la m\u00e1quina del usuario pueden tomar una clave aleatoria y envi\u00e1rsela al otro por aire encriptada con la clave p\u00fablica del otro. Una vez establecidas, por lo general las claves permanecen estables por meses o a\u00f1os. La encriptaci\u00f3n WEP utiliza un cifrado de flujo con base en el algoritmo RC4. \u00c9ste fue dise\u00f1ado por Ronald Rivest y se mantuvo en secreto hasta que fue filtrado y se public\u00f3 en Internet en 1994. Como se\u00f1alamos anteriormente, es casi imposible mantener en secreto los algoritmos, incluso cuando el objetivo es proteger la propiedad intelectual (como fue en este caso) en lugar de la seguridad gracias al anonimato (que no era el objetivo de RC4). En WEP, RC4 genera un flujo de claves al cual se le aplica un OR exclusivo con el texto llano para dar lugar al texto cifrado. La carga \u00fatil de cada paquete se encripta a trav\u00e9s del m\u00e9todo de la figura 8-31. Primero se realiza una suma de verificaci\u00f3n de la carga \u00fatil utilizando el CRC-32 polinomial y la suma de verificaci\u00f3n se agrega a la carga \u00fatil para formar el texto llano para el algoritmo de encriptaci\u00f3n. A continuaci\u00f3n, a este texto llano se le aplica un OR exclusivo con un fragmento de flujo de claves de su propio tama\u00f1o. El resultado es el texto cifrado. El IV utilizado para iniciar el RC4 se env\u00eda junto con el texto cifrado. Cuando el receptor obtiene el paquete, extrae la carga \u00fatil de \u00e9l, genera el flujo de claves a partir de la clave secreta compartida y el IV que acaba de recibir, y aplica un OR exclusivo al flujo de claves con la carga \u00fatil para recuperar el texto llano. A continuaci\u00f3n puede comprobar la suma de verificaci\u00f3n para saber si el paquete fue modificado. Aunque esta estrategia parece buena a primera vista, se ha publicado un m\u00e9todo para violarla (Borisov y cols., 2001). A continuaci\u00f3n resumiremos sus resultados. Primero que nada, sorprendentemente muchas instalaciones utilizan la misma clave compartida para todos los usuarios, en cuyo caso cada usuario puede leer todo el tr\u00e1fico de los dem\u00e1s usuarios. Esto ciertamente es equivalente a Ethernet, pero no es muy seguro. Pero incluso si cada usuario tiene una clave distinta, WEP a\u00fan puede ser atacado. Puesto que por lo general las claves son estables por largos periodos, el est\u00e1ndar WEP recomienda (no obliga a) que el IV se cambie en cada paquete para evitar los ataques de reutilizaci\u00f3n de flujo de claves\n782\nSEGURIDAD EN REDES\nCAP. 8\nTexto llano Carga \u00fatil del paquete\nSuma de verificaci\u00f3n\nXOR Flujo de claves generado por RC4 (clave, IV)\nIV\nTexto cifrado Datos transmitidos\nFigura 8-31. Encriptaci\u00f3n de paquetes mediante WEP.\nque analizamos en la secci\u00f3n 8.2.3. Desgraciadamente, muchas tarjetas 802.11 para computadoras port\u00e1tiles restablecen el IV a 0 cuando la tarjeta se introduce en la computadora, y lo incrementan en uno por cada paquete enviado. Puesto que las personas remueven e insertan con frecuencia estas tarjetas, son comunes los paquetes con valores bajos de IV. Si Trudy puede coleccionar varios paquetes enviados por el mismo usuario con el mismo valor de IV (que tambi\u00e9n es enviado en texto llano junto con cada paquete), puede calcular el OR exclusivo de dos valores de texto llano y probablemente romper el cifrado de esa forma. Pero incluso si la tarjeta 802.11 elige un IV aleatorio para cada paquete, los IVs son de s\u00f3lo 24 bits, por lo que despu\u00e9s de que se hayan enviado 224 paquetes, tienen que reutilizarse los IVs. Peor a\u00fan, con los IVs elegidos de manera aleatoria, la cantidad esperada de paquetes que tiene que enviarse antes de que se utilice dos veces el mismo IV es de aproximadamente 5000, debido al ataque de cumplea\u00f1os descrito en la secci\u00f3n 8.4.4. Por lo tanto, si Trudy escucha por algunos minutos, es casi seguro que atrape dos paquetes con el mismo IV y la misma clave. Al aplicar un OR exclusivo a los textos cifrados, puede obtener el OR exclusivo de los textos llanos. Esta secuencia de bits puede ser atacada de varias formas para recuperar los textos llanos. Con algo m\u00e1s de trabajo, tambi\u00e9n puede obtenerse el flujo de claves para ese IV. Trudy puede continuar trabajando de esta manera por un tiempo y compilar un diccionario de flujo de claves para varios IVs. Una vez que se ha descifrado un IV, se pueden desencriptar por completo todos los paquetes que se env\u00eden con \u00e9l en el futuro (aunque tambi\u00e9n en el pasado). Adem\u00e1s, puesto que los IVs se utilizan de manera aleatoria, una vez que Trudy ha determinado un par v\u00e1lido (IV, flujo de claves), puede emplearlo para generar todos los paquetes que desee que lo utilicen y, por lo tanto, interferir activamente la comunicaci\u00f3n. En teor\u00eda, un receptor podr\u00eda notar que de repente grandes cantidades de paquetes tienen el mismo IV, pero (1) WEP permite esto, y (2) nadie lo verifica. Por \u00faltimo, el CRC no es de mucha ayuda, puesto que es posible que Trudy cambie la carga \u00fatil y haga el cambio correspondiente al CRC, incluso sin tener que eliminar la encriptaci\u00f3n. En resumen, es muy sencillo violar la seguridad del 802.11, y no hemos listado todos los ataques que encontraron Borisov y cols.\nSEC. 8.6\nSEGURIDAD EN LA COMUNICACI\u00d3N\n783\nEn agosto de 2001, un mes despu\u00e9s de que se present\u00f3 el trabajo de Borisov y cols., se public\u00f3 otro ataque devastador contra WEP (Fluhrer y cols., 2001). \u00c9ste encontr\u00f3 debilidades criptogr\u00e1ficas en el RC4 mismo. Fluhrer y cols., descubrieron que muchas de las claves tienen la propiedad de que es posible derivar algunos bits de las claves a partir del flujo de claves. Si este ataque se realiza de manera repetida, es posible deducir toda la clave con un m\u00ednimo de esfuerzo. Como el enfoque de su investigaci\u00f3n era te\u00f3rico, Fluhrer y cols., no trataron de romper ninguna LAN 802.11 en la pr\u00e1ctica. En contraste, cuando un estudiante y dos investigadores de los Laboratorios AT&T supieron sobre el ataque de Fluhrer y cols., decidieron llevarlo a la pr\u00e1ctica (Stubblefield y cols., 2002). En una semana hab\u00edan descifrado su primera clave de 128 bits de una LAN 802.11 en funcionamiento, y la mayor parte de esa semana la dedicaron realmente a buscar la tarjeta 802.11 m\u00e1s barata, obtener el permiso para comprarla, instalarla y probarla. La programaci\u00f3n tard\u00f3 s\u00f3lo dos horas. Cuando anunciaron sus resultados, la CNN public\u00f3 un reportaje en el que algunos gur\u00fas de la industria trataron de menospreciar sus resultados afirmando que lo que hab\u00edan hecho era trivial, pues hab\u00edan tomado como base el trabajo de Fluhrer y cols. Si bien ese comentario es t\u00e9cnicamente cierto, lo relevante es que los esfuerzos combinados de estos dos equipos demostraron un defecto fatal en WEP y el 802.11. El 7 de septiembre de 2001, el IEEE respondi\u00f3 al hecho de que WEP se hab\u00eda roto por completo emitiendo una corta declaraci\u00f3n en la que se\u00f1alaba seis puntos que pueden resumirse de la siguiente manera: 1. Les dijimos que la seguridad de WEP no era mejor que la de Ethernet. 2. Es mucho peor olvidarse de establecer alguna clase de seguridad. 3. Traten de utilizar otro tipo de seguridad (por ejemplo, seguridad en la capa de transporte). 4. La siguiente versi\u00f3n, 802.11i, tendr\u00e1 mejor seguridad. 5. La certificaci\u00f3n futura requerir\u00e1 el uso del 802.11i. 6. Trataremos de determinar qu\u00e9 hacer en tanto llega el 802.11i. Hemos analizado detenidamente esta historia para resaltar el hecho de que no es sencillo conseguir la seguridad correcta, incluso para los expertos. Seguridad de Bluetooth Bluetooth tiene un rango considerablemente m\u00e1s corto que el 802.11, por lo que no puede atacarse desde un estacionamiento, pero la seguridad sigue siendo un problema aqu\u00ed. Por ejemplo, imagine que la computadora de Alice est\u00e1 equipada con un teclado inal\u00e1mbrico Bluetooth. En un escenario donde no hubiera seguridad, si Trudy se encontrara en la oficina adyacente, podr\u00eda leer todo lo que Alice escribiera, incluyendo todo su correo electr\u00f3nico saliente. Tambi\u00e9n podr\u00eda capturar todo lo que la computadora de Alice enviara a la impresora Bluetooth instalada junto a ella (por ejemplo, correo electr\u00f3nico entrante e informes confidenciales). Por fortuna, Bluetooth tiene\n784\nSEGURIDAD EN REDES\nCAP. 8\nun complejo esquema de seguridad para tratar de que todas las Trudies del mundo fracasen. A continuaci\u00f3n resumiremos sus caracter\u00edsticas principales. Bluetooth tiene tres modos de seguridad, que van desde ninguna seguridad en absoluto hasta encriptaci\u00f3n completa de datos y control de integridad. Al igual que con el 802.11, si se deshabilita la seguridad (lo predeterminado), no hay seguridad. La mayor\u00eda de los usuarios mantiene deshabilitada la seguridad hasta que ocurre una brecha de seguridad; entonces es cuando la habilitan. Este enfoque se parece al dicho \u201cdespu\u00e9s del ni\u00f1o ahogado, pozo tapado\u201d. Bluetooth proporciona seguridad en m\u00faltiples capas. En la capa f\u00edsica, los saltos de frecuencia proporcionan un poco de seguridad, pero debido a que es necesario indicar a cualquier dispositivo Bluetooth de una piconet la secuencia de saltos de frecuencia, esta secuencia obviamente no es un secreto. La seguridad real inicia cuando el esclavo reci\u00e9n llegado pide un canal al maestro. Se da por hecho que los dos dispositivos comparten una clave secreta establecida con anticipaci\u00f3n. En algunos casos, el fabricante es quien las incluye (por ejemplo, para un tel\u00e9fono m\u00f3vil con auriculares vendidos como una sola unidad). En otros casos, un dispositivo (por ejemplo, los auriculares) tiene una clave integrada y el usuario tiene que introducir esa clave en el otro dispositivo (por ejemplo, el tel\u00e9fono m\u00f3vil) como un n\u00famero decimal. Estas claves compartidas se conocen como claves maestras. Para establecer un canal, tanto el esclavo como el maestro verifican si el otro conoce la clave maestra. De ser as\u00ed, negocian si ese canal ser\u00e1 encriptado, si se va a controlar su integridad, o ambas cosas. Despu\u00e9s pueden seleccionar una clave de sesi\u00f3n aleatoria de 128 bits, de los cuales algunos pueden ser p\u00fablicos. El objetivo de permitir esta debilidad de clave es respetar las restricciones gubernamentales de varios pa\u00edses dise\u00f1adas para evitar la exportaci\u00f3n o el uso de claves m\u00e1s grandes de lo que el gobierno puede romper. La encriptaci\u00f3n utiliza un cifrado de flujo llamado E 0 ; el control de integridad utiliza SAFER+. Ambos son cifrados en bloque de clave sim\u00e9trica tradicionales. SAFER+ fue emitido para el AES bake-off, pero se elimin\u00f3 en la primera ronda porque era m\u00e1s lento que los otros candidatos. Bluetooth se termin\u00f3 antes de que se eligiera el cifrado AES; de lo contrario \u00e9ste hubiera utilizado probablemente Rijndael. En la figura 8-14 se muestra la encriptaci\u00f3n real que utiliza el cifrado de flujo, con el texto llano al cual se le aplica OR exclusivo con el flujo de claves para generar el texto cifrado. Desafortunadamente, E0 mismo (al igual que RC4) podr\u00eda tener debilidades fatales (Jakobsson y Wetzel, 2001). Si bien no ha sido roto al tiempo de escribir esto, sus similitudes con el cifrado A5/1, cuya falla espectacular puso en peligro el tr\u00e1fico telef\u00f3nico de GSM, son causa de preocupaci\u00f3n (Biryukov y cols., 2000). Algunas veces sorprende a toda la gente (incluyendo al autor), que en el eterno juego del gato y el rat\u00f3n entre los cript\u00f3grafos y los criptoanalistas, estos \u00faltimos salen ganando con mucha frecuencia. Otro problema de seguridad es que Bluetooth s\u00f3lo autentica dispositivos, no usuarios, por lo que el robo de un dispositivo Bluetooth podr\u00eda conceder acceso al ladr\u00f3n a la cuenta financiera del usuario. Sin embargo, Bluetooth tambi\u00e9n implementa seguridad en las capas superiores, por lo que incluso en el caso de una brecha de seguridad en el nivel de enlace, podr\u00eda permanecer algo de seguridad, en especial en las aplicaciones que requieren que se introduzca manualmente un c\u00f3digo PIN desde alg\u00fan tipo de teclado para completar la transacci\u00f3n.\nSEC. 8.7\nPROTOCOLOS DE AUTENTICACI\u00d3N\n785\nSeguridad de WAP 2.0 En su mayor parte, el foro WAP aprendi\u00f3 su lecci\u00f3n al tener una pila de protocolos no est\u00e1ndar en WAP 1.0. En su mayor parte, WAP 2.0 utiliza protocolos est\u00e1ndares en todas las capas. La seguridad no es una excepci\u00f3n. Puesto que est\u00e1 basado en el IP, soporta el uso completo de IPsec en la capa de red. En la capa de transporte, las conexiones TCP pueden protegerse mediante TLS, un est\u00e1ndar IETF que analizaremos m\u00e1s adelante en este cap\u00edtulo. M\u00e1s arriba todav\u00eda, utiliza autenticaci\u00f3n de cliente HTTP, como se define en el RFC 2617. Las crypto bibliotecas a nivel de aplicaci\u00f3n proporcionan control de integridad y de no repudio. Despu\u00e9s de todo, puesto que WAP 2.0 se basa en est\u00e1ndares bien conocidos, hay una posibilidad de que sus servicios de seguridad \u2014en particular, privacidad, autenticaci\u00f3n, control de integridad y no repudio\u2014 sean mejores que la seguridad del 802.11 y Bluetooth.\n8.7 PROTOCOLOS DE AUTENTICACI\u00d3N La autenticaci\u00f3n es la t\u00e9cnica mediante la cual un proceso verifica que su compa\u00f1ero de comunicaci\u00f3n sea quien se supone que debe ser y no un impostor. Verificar la identidad de un proceso remoto en la presencia de un intruso activo y malicioso es sorprendentemente dif\u00edcil y requiere protocolos complejos con base en la criptograf\u00eda. En esta secci\u00f3n estudiaremos algunos de los muchos protocolos de autenticaci\u00f3n que se utilizan en redes de computadoras no seguras. Adem\u00e1s, algunas personas confunden la autorizaci\u00f3n con la autenticaci\u00f3n. Esta \u00faltima tiene que ver con la interrogante de si usted se est\u00e1 comunicando con un proceso espec\u00edfico. La autorizaci\u00f3n tiene que ver con lo que ese proceso tiene permitido hacer. Por ejemplo, un proceso cliente contacta un servidor de archivos y dice: Soy el proceso de Scott y deseo eliminar el archivo cookbook.old. Desde el punto de vista del servidor, deben contestarse dos preguntas: 1. \u00bf\u00c9ste es el proceso real de Scott (autenticaci\u00f3n)? 2. \u00bfScott tiene permitido eliminar cookbook.old (autorizaci\u00f3n)? S\u00f3lo despu\u00e9s de que estas preguntas se contestan afirmativamente y sin ambig\u00fcedad, se puede realizar la acci\u00f3n solicitada. La primera pregunta es la clave. Una vez que el servidor de archivos sabe con qui\u00e9n est\u00e1 hablando, verificar la autorizaci\u00f3n es s\u00f3lo cuesti\u00f3n de buscar entradas en las tablas locales o en las bases de datos. Por esta raz\u00f3n, en esta secci\u00f3n nos concentraremos en la autenticaci\u00f3n. Este modelo general es el que utilizan todos los protocolos de autenticaci\u00f3n. Alice inicia enviando un mensaje ya sea a Bob o a un KDC (Centro de Distribuci\u00f3n de Claves) confiable, el cual se espera sea honesto. A continuaci\u00f3n siguen otros intercambios de mensajes en varias direcciones. Conforme se env\u00edan estos mensajes, Trudy podr\u00eda interceptarlos, modificarlos o repetirlos para enga\u00f1ar a Alice y a Bob o simplemente da\u00f1ar el trabajo.\n786\nSEGURIDAD EN REDES\nCAP. 8\nSin embargo, cuando el protocolo se haya completado, Alice est\u00e1 segura de que est\u00e1 hablando con Bob y Bob est\u00e1 seguro de que est\u00e1 hablando con Alice. Asimismo, en la mayor\u00eda de los protocolos, dos de ellos tambi\u00e9n habr\u00e1n establecido una clave de sesi\u00f3n secreta para utilizarla en la pr\u00f3xima conversaci\u00f3n. En la pr\u00e1ctica, por razones de rendimiento, todo el tr\u00e1fico de datos se encripta utilizando criptograf\u00eda de clave sim\u00e9trica (por lo general, AES o triple DES), aunque la criptograf\u00eda de clave p\u00fablica se utiliza ampliamente para los protocolos de autenticaci\u00f3n mismos y para establecer la clave de sesi\u00f3n. El objetivo de utilizar una nueva clave de sesi\u00f3n elegida al azar para cada nueva conexi\u00f3n es minimizar la cantidad de tr\u00e1fico que se env\u00eda con las claves secretas o p\u00fablicas del usuario, para reducir la cantidad de texto cifrado que un intruso puede obtener, y para minimizar el da\u00f1o hecho si un proceso falla y su vaciado del n\u00facleo cae en manos equivocadas. Por fortuna, la \u00fanica clave presente ser\u00e1 la de sesi\u00f3n. Todas las claves permanentes deben ponerse en cero con cuidado despu\u00e9s de que se haya establecido la sesi\u00f3n.\n8.7.1 Autenticaci\u00f3n basada en una clave secreta compartida Para nuestro primer protocolo de autenticaci\u00f3n daremos por hecho que Alice y Bob ya comparten una clave secreta, KAB. Esta clave compartida podr\u00eda haberse acordado por tel\u00e9fono o en persona, pero no en la red (insegura). Este protocolo se basa en un principio encontrado en muchos protocolos de autenticaci\u00f3n: una parte env\u00eda un n\u00famero aleatorio a la otra, quien a continuaci\u00f3n lo transforma en una forma especial y despu\u00e9s regresa el resultado. Tales protocolos se conocen como de desaf\u00edo-respuesta. En \u00e9ste y en los protocolos de autenticaci\u00f3n subsiguientes se utilizar\u00e1 la notaci\u00f3n que se muestra a continuaci\u00f3n: A, B son las identidades de Alice y Bob. Ri son los desaf\u00edos, donde el sub\u00edndice es el retador. Ki son claves, donde i es el due\u00f1o. KS es la clave de sesi\u00f3n. La secuencia de mensajes de nuestro primer protocolo de autenticaci\u00f3n de clave compartida se ilustra en la figura 8-32. En el mensaje 1, Alice env\u00eda su identidad, A, a Bob en una forma que \u00e9l entiende. Por supuesto, Bob no tiene forma de saber si este mensaje proviene de Alice o de Trudy, por lo que elige un desaf\u00edo, un n\u00famero aleatorio grande, RB, y lo env\u00eda a \u201cAlice\u201d como mensaje 2, en texto llano. Los n\u00fameros aleatorios utilizados una sola vez en los protocolos de desaf\u00edorespuesta como \u00e9ste se conocen como marcas aleatorias (nonces). A continuaci\u00f3n Alice encripta el mensaje con la clave que comparte con Bob y env\u00eda el texto cifrado, KAB (RB), como mensaje 3. Cuando Bob ve este mensaje, inmediatamente sabe que proviene de Alice porque Trudy no conoce KAB y, por lo tanto, no pudo haberlo generado. Adem\u00e1s, puesto que RB fue elegido de manera aleatoria a partir de un espacio grande (digamos, n\u00fameros aleatorios de 128 bits), no es probable que Trudy haya visto RB y su respuesta en una sesi\u00f3n anterior. Tampoco es probable que pueda adivinar la respuesta correcta de cualquier desaf\u00edo.\n787\nBob\nPROTOCOLOS DE AUTENTICACI\u00d3N\nAlice\nSEC. 8.7\nFigura 8-32. Autenticaci\u00f3n de dos v\u00edas que utiliza un protocolo de desaf\u00edo-respuesta.\nBob\nAlice\nEn este punto, Bob est\u00e1 seguro de que est\u00e1 hablando con Alice, pero ella no est\u00e1 segura de nada. Por lo que Alice sabe, Trudy podr\u00eda haber interceptado el mensaje 1 y regresar RB como respuesta. Tal vez Bob muri\u00f3 la noche anterior. Para averiguar con qui\u00e9n est\u00e1 hablando, Alice elige un n\u00famero al azar, RA y lo env\u00eda a Bob como texto llano, en el mensaje 4. Cuando Bob responde con KAB (RA), Alice sabe que est\u00e1 hablando con Bob. Si desean establecer una clave de sesi\u00f3n ahora, Alice puede elegir una, KS, encriptarla con KAB y enviarla a Bob. El protocolo de la figura 8-32 contiene cinco mensajes. Veamos si podemos ser ingeniosos para eliminar algunos de ellos. En la figura 8-33 se muestra un m\u00e9todo. Aqu\u00ed Alice inicia el protocolo de desaf\u00edo-respuesta en lugar de esperar a que Bob lo haga. De manera similar, mientras Bob responde al desaf\u00edo de Alice, env\u00eda el suyo. El protocolo puede reducirse a tres mensajes en lugar de a cinco.\nFigura 8-33. Un protocolo de autenticaci\u00f3n de dos v\u00edas acortado.\n\u00bfEste nuevo protocolo es una mejora del original? En un sentido s\u00ed lo es: es m\u00e1s corto. Desgraciadamente, tambi\u00e9n es incorrecto. Bajo algunas circunstancias, Trudy puede vencer este protocolo utilizando lo que se conoce como un ataque de reflexi\u00f3n. En particular, Trudy puede romperlo si es posible para abrir a la vez m\u00faltiples sesiones con Bob. Por ejemplo, esta situaci\u00f3n podr\u00eda ocurrir si Bob es un banco y est\u00e1 preparado para aceptar muchas conexiones simult\u00e1neas de cajeros autom\u00e1ticos.\n788\nSEGURIDAD EN REDES\nCAP. 8\nEn la figura 8-34 se muestra el ataque de reflexi\u00f3n de Trudy. Inicia cuando Trudy afirma que es Alice y env\u00eda RT . Bob responde, como es usual, con su propio desaf\u00edo, RB. Ahora Trudy est\u00e1 atorada. \u00bfQu\u00e9 puede hacer? No conoce KAB (RB).\nBob\nTrudy\nPrimera sesi\u00f3n\nSegunda sesi\u00f3n\nPrimera sesi\u00f3n\nFigura 8-34. El ataque de reflexi\u00f3n.\nTrudy puede abrir una segunda sesi\u00f3n con el mensaje 3, y proporcionar un RB , tomado del mensaje 2, como su desaf\u00edo. Bob lo encripta con calma y regresa KAB (RB) en el mensaje 4. Sombreamos los mensajes de la segunda sesi\u00f3n para que resalten. Ahora Trudy tiene la informaci\u00f3n que le faltaba, por lo que puede completar la primera sesi\u00f3n y abortar la segunda. Bob ahora est\u00e1 convencido de que Trudy es Alice, por lo que cuando ella le pide su estado de cuenta bancaria, Bob se lo proporciona sin m\u00e1s. Despu\u00e9s, cuando ella le pide que transfiera todo su dinero a una cuenta secreta en un banco de Suiza, lo hace sin titubeo alguno. La moraleja de esta historia es: Dise\u00f1ar un protocolo de autenticaci\u00f3n correcto es m\u00e1s dif\u00edcil de lo que parece. Las siguientes cuatro reglas generales con frecuencia ayudan: 1. Obligue al iniciador a que pruebe que es quien dice ser antes de que el contestador tenga que hacerlo. En este caso, Bob revel\u00f3 informaci\u00f3n valiosa antes de que Trudy proporcionara cualquier evidencia de que era quien dec\u00eda ser. 2. Obligue a que tanto el iniciador como el contestador utilicen claves diferentes para probar, aunque esto signifique tener dos claves compartidas, KAB y K\u2032AB. 3. Obligue a que el iniciador y el contestador utilicen conjuntos diferentes para elaborar sus desaf\u00edos. Por ejemplo, el iniciador debe utilizar n\u00fameros pares y el contestador n\u00fameros impares. 4. Haga que el protocolo resista a ataques que involucren una segunda sesi\u00f3n paralela en la que la informaci\u00f3n obtenida en una sesi\u00f3n se utilice en una diferente. Si se viola alguna de estas reglas, el protocolo puede romperse con frecuencia. Aqu\u00ed, se violaron las cuatro reglas, con consecuencias desastrosas.\nSEC. 8.7\nPROTOCOLOS DE AUTENTICACI\u00d3N\n789\nAhora regresemos y demos un vistazo m\u00e1s de cerca a la figura 8-32. \u00bfExiste la seguridad de que este protocolo no est\u00e1 sujeto a un ataque de reflexi\u00f3n? Bueno, depende. Es muy sutil. Trudy fue capaz de derrotar nuestro protocolo utilizando un ataque de reflexi\u00f3n porque fue posible abrir una segunda sesi\u00f3n con Bob y enga\u00f1arlo para que contestara sus propias preguntas. \u00bfQu\u00e9 habr\u00eda pasado si Alice fuera una computadora de prop\u00f3sito general que tambi\u00e9n aceptara sesiones m\u00faltiples, en lugar de una persona en una computadora? Veamos lo que puede hacer Trudy. Para saber c\u00f3mo funciona el ataque de Trudy, vea la figura 8-35. Alice inicia anunciando su identidad en el mensaje 1. Trudy intercepta ese mensaje y comienza su propia sesi\u00f3n con el mensaje 2, afirmando que es Bob. Nuevamente sombreamos los mensajes de la sesi\u00f3n 2. Alice responde al mensaje 2 diciendo \u201c\u00bfDices ser Bob? Pru\u00e9balo.\u201d en el mensaje 3. En este punto Trudy est\u00e1 atorada porque no puede probar que es Bob.\nPrimera sesi\u00f3n\nSegunda sesi\u00f3n\nTrudy\nAlice\nPrimera sesi\u00f3n\nSegunda sesi\u00f3n Primera sesi\u00f3n\nSegunda sesi\u00f3n\nPrimera sesi\u00f3n\nFigura 8-35. Un ataque de reflexi\u00f3n al protocolo de la figura 8-32.\n\u00bfQu\u00e9 hace Trudy ahora? Regresa a la primera sesi\u00f3n, en donde le toca enviar un desaf\u00edo, y env\u00eda el RA que obtuvo en el mensaje 3. Alice responde amablemente a \u00e9l en el mensaje 5, y de esta forma proporciona a Trudy la informaci\u00f3n que necesita para enviar el mensaje 6 en la sesi\u00f3n 2. En este punto, Trudy est\u00e1 pr\u00e1cticamente del otro lado porque ha respondido exitosamente al desaf\u00edo de Alice en la sesi\u00f3n 2. Ahora puede cancelar la sesi\u00f3n 1, enviar cualquier n\u00famero antiguo por el resto de la sesi\u00f3n 2 y tendr\u00e1 una sesi\u00f3n autenticada con Alice en la sesi\u00f3n 2. Pero Trudy es vil y realmente desea insistir. En lugar de enviar cualquier n\u00famero antiguo en toda la sesi\u00f3n 2, espera hasta que Alice env\u00eda en el mensaje 7, el desaf\u00edo de Alice para la sesi\u00f3n 1. Por supuesto, Trudy no sabe c\u00f3mo responder, por lo que utiliza nuevamente el ataque de reflexi\u00f3n, regresando RA2 como el mensaje 8. Alice encripta de manera apropiada RA2 en el mensaje 9. Trudy\n790\nSEGURIDAD EN REDES\nCAP. 8\nBob\nAlice\nahora cambia a la sesi\u00f3n 1 y env\u00eda a Alice el n\u00famero que desea en el mensaje 10, copiado de manera conveniente a partir de lo que Alice envi\u00f3 en el mensaje 9. En este punto Trudy tiene dos sesiones completamente autenticadas con Alice. Este ataque tiene un resultado ligeramente diferente que el ataque del protocolo de tres mensajes que se muestra en la figura 8-34. Esta vez, Trudy tiene dos conexiones autenticadas con Alice. En el ejemplo anterior, ten\u00eda una conexi\u00f3n autenticada con Bob. Aqu\u00ed, si hubi\u00e9ramos aplicado todas las reglas de protocolos de autenticaci\u00f3n analizadas previamente, este ataque podr\u00eda haberse detenido. Un an\u00e1lisis detallado de este tipo de ataques y c\u00f3mo frustrarlos se da en (Bird y cols., 1993). Tambi\u00e9n muestran c\u00f3mo es posible construir de manera sistem\u00e1tica protocolos que tengan altas probabilidades de ser correctos. No obstante, el protocolo m\u00e1s simple de este tipo es un poco complicado, por lo que a continuaci\u00f3n mostraremos una clase diferente de protocolo que tambi\u00e9n funciona. El nuevo protocolo de autenticaci\u00f3n se muestra en la figura 8-36 (Bird y cols., 1993). Utiliza un HMAC del tipo que vimos cuando estudiamos IPsec. Alice inicia enviando a Bob una marca aleatoria, RA como mensaje 1. Bob responde seleccionando su propia marca aleatoria, RB, y envi\u00e1ndola junto con un HMAC. El HMAC se forma para construir una estructura de datos que consiste en la marca aleatoria de Alice, la marca aleatoria de Bob, sus identidades y la clave secreta compartida, KAB. A continuaci\u00f3n a estos datos estructurados se les aplica un hash en el HMAC, por ejemplo utilizando SHA-1. Cuando Alice recibe el mensaje 2, tiene una RA (que ella misma eligi\u00f3), RB, que llega como texto llano, las dos identidades y la clave secreta, KAB, que ha sabido todo el tiempo, por lo que ella misma puede calcular el HMAC. Si corresponde con el HMAC del mensaje, Alice sabe que est\u00e1 hablando con Bob porque Trudy no conoce KAB y, por lo tanto, no sabe cu\u00e1l HMAC enviar. Alice responde a Bob con un HMAC que contiene s\u00f3lo las dos marcas aleatorias.\nFigura 8-36. Autenticaci\u00f3n mediante HMACs.\n\u00bfTrudy puede romper de alguna forma este protocolo? No, porque ella no puede obligar a ninguna de las dos partes a encriptar o aplicar un hash a un valor de su elecci\u00f3n, como sucede en las figuras 8-34 y 8-35. Ambos HMACs incluyen valores elegidos por la parte emisora, algo que Trudy no puede controlar. El uso de HMACs no es la \u00fanica forma de utilizar esta idea. Un esquema alternativo que se utiliza con mucha frecuencia en lugar de calcular el HMAC por sobre una serie de elementos es encriptar dichos elementos de manera secuencial utilizando encadenamiento de bloques de cifrado.\nSEC. 8.7\nPROTOCOLOS DE AUTENTICACI\u00d3N\n791\n8.7.2 Establecimiento de una clave compartida: el intercambio de claves de Diffie-Hellman Hasta ahora hemos supuesto que Alice y Bob comparten una clave secreta. Suponga que no lo hacen (porque hasta el momento no hay una PKI aceptada universalmente para firmar y distribuir certificados). \u00bfC\u00f3mo pueden establecer una? Una forma ser\u00eda que Alice llamara a Bob y le diera su clave por tel\u00e9fono, pero probablemente \u00e9l iniciar\u00eda diciendo: \u00bfC\u00f3mo s\u00e9 que eres Alice y no Trudy? Podr\u00edan tratar de establecer una reuni\u00f3n, en la que cada uno trajera un pasaporte, una licencia de conducir y tres tarjetas de cr\u00e9dito, pero al ser gente ocupada, tal vez no encuentren una fecha aceptable para los dos en meses. Por fortuna, tan incre\u00edble como pueda parecer, hay una forma para que personas totalmente extra\u00f1as establezcan una clave secreta compartida a la vista de todos, incluso si Trudy est\u00e1 grabando con cuidado cada mensaje. El protocolo que permite que extra\u00f1os establezcan una clave secreta compartida se conoce como intercambio de claves de Diffie-Hellman (Diffie y Hellman, 1976) y funciona como sigue. Alice y Bob tienen que estar de acuerdo en dos n\u00fameros grandes, n y g, donde n es un n\u00famero primo, (n \u2212 1)/2 tambi\u00e9n es un n\u00famero primo y ciertas condiciones se aplican a g. Estos n\u00fameros podr\u00edan ser p\u00fablicos, por lo que cualquiera de ellos simplemente pueden elegir n y g y decirle al otro de manera abierta. Ahora Alice elige un n\u00famero grande (digamos, de 512 bits), x, y lo mantiene en secreto. De manera similar, Bob elige un n\u00famero secreto grande, y. Alice inicia el protocolo de intercambio de claves enviando a Bob un mensaje que contiene (n, g, g x mod n), como se muestra en la figura 8-37. Bob responde enviando a Alice un mensaje que contiene g y mod n. Ahora Alice eleva a la x potencia m\u00f3dulo n el n\u00famero que Bob le envi\u00f3 para obtener (g y mod n) x mod n. Bob realiza una operaci\u00f3n similar para obtener (g x mod n) y mod n. Por las leyes de la aritm\u00e9tica modular, ambos c\u00e1lculos dan como resultado g xy mod n. Como por arte de magia, Alice y Bob comparten una clave secreta, g xy mod n. Bob elige y\nBob\nAlice\nAlice elige x\nAlice calcula (gy mod n)x mod n = gxy mod n\nBob calcula (gx mod n)y mod n = gxy mod n\nFigura 8-37. El intercambio de claves de Diffie-Hellman.\nPor supuesto, Trudy ha visto ambos mensajes. Ella conoce g y n a partir del mensaje 1. Si pudiera calcular x y y, podr\u00eda adivinar la clave secreta. El problema es que, con s\u00f3lo g x mod n, no puede encontrar x. No se conoce ning\u00fan algoritmo pr\u00e1ctico para calcular logaritmos discretos m\u00f3dulo un n\u00famero primo muy grande.\n792\nSEGURIDAD EN REDES\nCAP. 8\nTrudy elige z\nBob elige y\nBob\nAlice\nAlice elige x\nTrudy\nPara que el ejemplo sea m\u00e1s concreto, utilizaremos los valores (que no son reales en absoluto) de n = 47 y g = 3. Alice elige x = 8 y Bob elige y = 10. Esto se mantiene en secreto. El mensaje de Alice para Bob es (47, 3, 28) porque 38 mod 47 es 28. El mensaje de Bob para Alice es (17). Alice calcula 178 mod 47, lo cual es 4. Bob calcula 2810 mod 47, lo cual es 4. Alice y Bob han determinado de manera independiente que la clave secreta ahora es 4. Trudy tiene que resolver la ecuaci\u00f3n 3x mod 47 = 28, lo cual puede hacerse mediante una b\u00fasqueda minuciosa de n\u00fameros peque\u00f1os como \u00e9stos, pero no cuando todos los n\u00fameros tienen una longitud de cientos de bits. Todos los algoritmos conocidos en la actualidad simplemente tardan mucho, incluso en supercomputadoras paralelas masivas. A pesar de la elegancia del algoritmo de Diffie-Hellman, hay un problema: cuando Bob obtiene el triple (47, 3, 28), \u00bfc\u00f3mo sabe que proviene de Alice y no de Trudy? No hay forma de que pueda saberlo. Desgraciadamente, Trudy puede explotar este hecho para enga\u00f1ar tanto a Alice como a Bob, como se ilustra en la figura 8-38. Aqu\u00ed, mientras Alice y Bob est\u00e1n eligiendo x y y, respectivamente, Trudy elige su propio n\u00famero aleatorio, z. Alice env\u00eda el mensaje 1 dirigido a Bob. Trudy lo intercepta y env\u00eda el mensaje 2 a Bob, utilizando los valores g y n correctos (que de todas formas son p\u00fablicos) pero con su propio valor z en lugar de x. Tambi\u00e9n regresa el mensaje 3 a Alice. M\u00e1s tarde Bob env\u00eda el mensaje 4 a Alice, el cual es interceptado y conservado nuevamente por Trudy.\nFigura 8-38. El ataque de la brigada de bomberos o de hombre en medio.\nAhora todos realizan la aritm\u00e9tica modular. Alice calcula la clave secreta como g xz mod n, al igual que Trudy (para mensajes destinados a Alice). Bob calcula g yz mod n al igual que Trudy (para mensajes destinados a Bob). Alice piensa que est\u00e1 hablando con Bob por lo que establece una clave de sesi\u00f3n (con Trudy). Bob tambi\u00e9n lo hace. Cada mensaje que Alice env\u00eda en la sesi\u00f3n encriptada, Trudy lo captura, almacena, modifica si lo desea, y lo pasa (lo cual es opcional) a Bob. De manera similar, en la otra direcci\u00f3n. Trudy ve todo y puede modificar todos los mensajes a voluntad, mientras que Alice y Bob tienen la creencia de que tienen un canal seguro. Este ataque se conoce como ataque de la brigada de bomberos, porque se parece vagamente a un antiguo departamento de bomberos voluntarios en el que \u00e9stos pasan cubetas en fila desde el cami\u00f3n de bomberos hacia el fuego. Tambi\u00e9n se conoce como ataque de hombre en medio.\nSEC. 8.7\n793\nPROTOCOLOS DE AUTENTICACI\u00d3N\n8.7.3 Autenticaci\u00f3n que utiliza un centro de distribuci\u00f3n de claves\nBob\nKDC\nAlice\nEl secreto compartido con un extra\u00f1o casi funcion\u00f3, pero no del todo. Por otro lado, tal vez no valga la pena hacerlo. Para hablar de esta manera con n personas, podr\u00eda necesitar n claves. Para las personas populares, la administraci\u00f3n de claves podr\u00eda volverse una verdadera carga, especialmente si cada clave tiene que almacenarse aparte en una tarjeta de chips de pl\u00e1stico. Un m\u00e9todo diferente es introducir un KDC (centro de distribuci\u00f3n de claves confiable.) En este modelo, cada usuario tiene una clave compartida con el KDC. Ahora el KDC realiza la administraci\u00f3n de claves de sesi\u00f3n y autenticaci\u00f3n. En la figura 8-39 se muestran el protocolo de autenticaci\u00f3n KDC m\u00e1s simple conocido que involucra dos partes y un KDC confiable.\nFigura 8-39. Un primer intento en un protocolo de autenticaci\u00f3n que utiliza un KDC.\nLa idea detr\u00e1s de este protocolo es simple: Alice elige una clave de sesi\u00f3n, KS, e indica al KDC que desea hablar con Bob utilizando KS. Este mensaje se encripta con la clave secreta que Alice (s\u00f3lo) comparte con el KDC, KA. El KDC desencripta este mensaje, extrayendo la identidad de Bob y la clave de sesi\u00f3n. Despu\u00e9s construye un nuevo mensaje que contiene la identidad de Alice y la clave de sesi\u00f3n y env\u00eda este mensaje a Bob. Esta encriptaci\u00f3n se realiza con KB, la clave secreta que Bob comparte con el KDC. Cuando Bob desencripta el mensaje, sabe que Alice desea hablar con \u00e9l y cu\u00e1l clave desea utilizar. La autenticaci\u00f3n sucede aqu\u00ed sin costo alguno. El KDC sabe que el mensaje 1 debe provenir de Alice, puesto que nadie m\u00e1s podr\u00eda encriptarlo con la clave secreta de Alice. De manera similar, Bob sabe que el mensaje 2 debe provenir del KDC, en quien \u00e9l conf\u00eda, puesto que nadie m\u00e1s sabe su clave secreta. Desgraciadamente, este protocolo tiene un defecto importante. Trudy necesita algo de dinero, por lo que idea alg\u00fan servicio leg\u00edtimo que puede realizar por Alice, realiza una oferta atractiva y obtiene el trabajo. Despu\u00e9s de realizar el trabajo, Trudy educadamente solicita a Alice que pague por transferencia bancaria. A continuaci\u00f3n Alice establece una clave de sesi\u00f3n con su banquero, Bob. Despu\u00e9s env\u00eda a Bob un mensaje en el que le pide que transfiera dinero a la cuenta de Trudy. Mientras tanto, Trudy regresa a sus antiguos h\u00e1bitos, espiar la red. Copia los dos mensajes de la figura 8-39 y la solicitud de transferencia de dinero que le sigue. M\u00e1s tarde, lo repite para Bob. \u00c9ste los obtiene y piensa: Alice debe haber contratado nuevamente a Trudy. \u00c9sta seguramente\n794\nSEGURIDAD EN REDES\nCAP. 8\nBob\nAlice\nKDC\nhace un magn\u00edfico trabajo. Despu\u00e9s Bob transfiere una cantidad igual de dinero de la cuenta de Alice a la de Trudy. Alg\u00fan tiempo despu\u00e9s del quincuag\u00e9simo par de mensajes, Bob sale corriendo de la oficina a fin de encontrar a Trudy para ofrecerle un gran pr\u00e9stamo de manera que pueda ampliar su obviamente exitoso negocio. Este problema se conoce como el ataque de repetici\u00f3n. Son posibles algunas soluciones al ataque de repetici\u00f3n. La primera es incluir una marca de tiempo en cada mensaje. Despu\u00e9s, si cada quien recibe un mensaje obsoleto, puede descartarse. El problema con este m\u00e9todo es que los relojes en una red nunca est\u00e1n sincronizados, por lo que debe haber un intervalo durante el cual sea v\u00e1lida la marca de tiempo. Trudy puede repetir el mensaje durante este intervalo y marcharse con \u00e9l. La segunda soluci\u00f3n es colocar una marca aleatoria en cada mensaje. A continuaci\u00f3n cada parte tiene que recordar todas las marcas aleatorias previas y rechazar cualquier mensaje que contenga una marca aleatoria utilizada anteriormente. Sin embargo, las marcas aleatorias deben ser recordadas por siempre, a fin de que Trudy no trate de repetir un mensaje de 5 a\u00f1os de antig\u00fcedad. Adem\u00e1s, si una m\u00e1quina falla y pierde su lista de marcas aleatorias, nuevamente es vulnerable a un ataque de repetici\u00f3n. Las marcas de tiempo y las marcas aleatorias pueden combinarse para limitar cu\u00e1nto tiempo deben recordarse las marcas aleatorias, pero claramente el protocolo se va a poner mucho m\u00e1s complicado. Un m\u00e9todo mucho m\u00e1s refinado para la autenticaci\u00f3n mutua es utiliza un protocolo de desaf\u00edo-respuesta de m\u00faltiples v\u00edas. Un ejemplo bien conocido de tal protocolo es el protocolo de autenticaci\u00f3n de Needham-Schroeder (Needham y Schroeder, 1978), una variante de lo que se muestra en la figura 8-40.\nFigura 8-40. El protocolo de autenticaci\u00f3n Needham-Schroeder.\nEl protocolo comienza con Alice dici\u00e9ndole al KDC que desea hablar con Bob. Este mensaje contiene como marca aleatoria un n\u00famero aleatorio grande, RA. El KDC regresa el mensaje 2 que contiene el n\u00famero aleatorio de Alice, una clave de sesi\u00f3n y un boleto que ella puede regresar a Bob. El objetivo del n\u00famero aleatorio, RA, es asegurar a Alice que el mensaje 2 est\u00e1 actualizado y que no es una repetici\u00f3n. La identidad de Bob tambi\u00e9n est\u00e1 encerrada en caso de que Trudy tenga algunas ideas graciosas sobre reemplazar B en el mensaje 1 con su propia identidad a fin de que el\nSEC. 8.7\n795\nPROTOCOLOS DE AUTENTICACI\u00d3N\nBob\nKDC\nAlice\nKDC encripte el boleto al final del mensaje 2 con KT en lugar de KB. El boleto encriptado con KB se incluye dentro del mensaje encriptado para evitar que Trudy lo reemplace con algo m\u00e1s cuando el mensaje vaya hacia Alice. Alice ahora env\u00eda el boleto a Bob, junto con un nuevo n\u00famero aleatorio, RA2, encriptado con la clave de sesi\u00f3n, KS. En el mensaje 4, Bob regresa KS (RA2 \u2212 1) para probar a Alice que ella est\u00e1 hablando con el Bob verdadero. Regresar KS (RA2) podr\u00eda no haber funcionado, puesto que Trudy podr\u00eda haberlo robado del mensaje 3. Despu\u00e9s de recibir el mensaje 4, Alice est\u00e1 convencida de que est\u00e1 hablando con Bob y de que hasta el momento no es posible que se hayan utilizado repeticiones. Despu\u00e9s de todo, simplemente gener\u00f3 RA2 algunos milisegundos antes. El prop\u00f3sito del mensaje 5 es convencer a Bob de que s\u00ed es Alice con la que est\u00e1 hablando, y de que aqu\u00ed tampoco se han utilizado repeticiones. Al hacer que las dos partes generen un desaf\u00edo y una respuesta, se elimina cualquier posibilidad de alg\u00fan tipo de ataque de repetici\u00f3n. Aunque este protocolo parece muy s\u00f3lido, tiene una ligera debilidad. Si Trudy se las arregla para conseguir una sesi\u00f3n de clave antigua en texto llano, puede iniciar una nueva sesi\u00f3n con Bob al repetir el mensaje 3 que corresponde a la clave comprometida y al convencerlo de que ella es Alice (Denning y Sacco, 1981). Esta vez puede saquear la cuenta bancaria de Alice sin tener que realizar ni siquiera una vez el servicio leg\u00edtimo. Posteriormente Needham y Schroeder publicaron un protocolo que corrige este problema (Needham y Schroeder, 1987). En el mismo n\u00famero de la misma publicaci\u00f3n, Otway y Rees (1987) tambi\u00e9n dieron a conocer un protocolo que resuelve el problema en una forma m\u00e1s corta. La figura 8-41 muestra un protocolo Otway-Rees con algunas modificaciones ligeras.\nFigura 8-41. El protocolo de autenticaci\u00f3n de Otway-Rees (ligeramente simplificado).\nEn el protocolo de Otway-Rees, Alice inicia generando un par de n\u00fameros aleatorios, R, que se utilizar\u00e1 como identificador com\u00fan, y RA, que Alice utilizar\u00e1 para retar a Bob. Cuando Bob obtenga este mensaje, construir\u00e1 un mensaje nuevo a partir de la parte encriptada del mensaje de Alice y del suyo propio. Ambas partes encriptadas con KA y KB identifican a Alice y a Bob, contienen el identificador com\u00fan y un desaf\u00edo. El KDC verifica si en ambas partes R es el mismo. Podr\u00eda no ser porque Trudy falsific\u00f3 R en el mensaje 1 o reemplaz\u00f3 parte del mensaje 2. Si los dos Rs coinciden, el KDC cree que el mensaje\n796\nSEGURIDAD EN REDES\nCAP. 8\nde solicitud de Bob es v\u00e1lido. Despu\u00e9s genera una clave de sesi\u00f3n y la encripta dos veces, una para Alice y la otra para Bob. Cada mensaje contiene el n\u00famero aleatorio del receptor, como prueba de que el KDC, y no Trudy, gener\u00f3 el mensaje. En este punto tanto Alice como Bob poseen la misma clave de sesi\u00f3n y pueden comenzar a comunicarse. La primera vez que intercambian mensajes de datos, cada uno puede ver que el otro tiene una copia id\u00e9ntica de KS, por lo que la autenticaci\u00f3n est\u00e1 completa.\n8.7.4 Autenticaci\u00f3n utilizando Kerberos Un protocolo de autenticaci\u00f3n utilizado en muchos sistemas reales (incluyendo Windows 2000) es Kerberos, que est\u00e1 basado en una variante de Needham-Schroeder. Su nombre proviene del perro de m\u00faltiples cabezas de la mitolog\u00eda griega que custodiaba la entrada a Hades (para mantener fuera a las personas indeseables). Kerberos se dise\u00f1\u00f3 en el M.I.T. para permitir que los usuarios de estaciones de trabajo accedieran recursos de red en una forma segura. Su mayor diferencia con respecto de Needham-Schroeder es su suposici\u00f3n de que todos los relojes est\u00e1n bien sincronizados. El protocolo ha pasado por varias iteraciones. V4 es la versi\u00f3n m\u00e1s ampliamente utilizada en la industria, por lo que la describiremos. M\u00e1s tarde, daremos algunas palabras sobre su sucesor, V5. Para mayor informaci\u00f3n, vea (Steiner y cols., 1988). Kerberos involucra a tres servidores adem\u00e1s de Alice (una estaci\u00f3n de trabajo cliente): Authentication Server (AS): verifica usuarios durante el inicio de sesi\u00f3n Ticket-Granting Server (TGS): emite \u201cprueba de boletos de identidad\u201d Bob, el servidor: hace el trabajo que Alice desea AS es similar a KDC en que comparte una contrase\u00f1a secreta con cada usuario. El trabajo de TGS es emitir boletos que puedan convencer a los servidores reales de que el portador de un boleto TGS es realmente quien afirma ser. Para iniciar una sesi\u00f3n, Alice se sienta frente a una estaci\u00f3n de trabajo p\u00fablica arbitraria y teclea su nombre. La estaci\u00f3n de trabajo env\u00eda su nombre al AS en texto llano, como se muestra en la figura 8-42. Lo que regresa es una clave de sesi\u00f3n y un boleto, KTGS (A, KS), destinado para TGS. Estos elementos se empaquetan y encriptan mediante la clave secreta de Alice, de forma que s\u00f3lo Alice pueda desencriptarlos. \u00danicamente cuando el mensaje 2 llega, la estaci\u00f3n de trabajo pide la contrase\u00f1a de Alice. A continuaci\u00f3n, dicha contrase\u00f1a se utiliza para generar KA a fin de desencriptar el mensaje 2 y obtener la clave de sesi\u00f3n y el boleto TGS dentro de \u00e9l. En este punto, la estaci\u00f3n de trabajo sobrescribe la contrase\u00f1a de Alice para asegurarse de que s\u00f3lo est\u00e9 dentro de la estaci\u00f3n de trabajo por lo mucho durante algunos milisegundos. Si Trudy intenta iniciar una sesi\u00f3n como Alice, la contrase\u00f1a que teclee ser\u00e1 err\u00f3nea y la estaci\u00f3n de trabajo detectar\u00e1 esto porque la parte est\u00e1ndar del mensaje 2 ser\u00e1 incorrecta. Despu\u00e9s de que inicia la sesi\u00f3n, Alice podr\u00eda decirle a la estaci\u00f3n de trabajo que desea contactar a Bob, el servidor de archivos. A continuaci\u00f3n la estaci\u00f3n de trabajo env\u00eda el mensaje 3 al TGS pregunt\u00e1ndole por un boleto para utilizar con Bob. El elemento clave en esta petici\u00f3n es KTGS (A, KS), que se encripta con la clave secreta del TGS y que se utiliza como prueba de que el\n797\nPROTOCOLOS DE AUTENTICACI\u00d3N\nInicio de sesi\u00f3n\nObtiene un boleto\nBob\nAlice\nTGS\nAS\nSEC. 8.7\nHace el trabajo\nFigura 8-42. El funcionamiento de Kerberos V4.\nemisor es realmente Alice. El TGS responde con la creaci\u00f3n de una clave de sesi\u00f3n, KAB , para que Alice la utilice con Bob. Se regresan dos versiones de dicha clave. La primera se encripta s\u00f3lo con KS, de manera que Alice pueda leerla. La segunda se encripta con la clave de Bob, KB, de manera que Bob pueda leerla. Trudy puede copiar el mensaje 3 y tratar de utilizarlo nuevamente, pero no podr\u00e1 hacerlo porque se lo impedir\u00e1 la marca de tiempo encriptada, t, la cual se env\u00eda junto con \u00e9l. Trudy no puede reemplazar la marca de tiempo con una m\u00e1s reciente, porque ella no conoce KS, la clave de sesi\u00f3n que Alice utiliza para hablar con el TGS. Incluso si Trudy repite con rapidez el mensaje 3, todo lo que obtendr\u00e1 ser\u00e1 otra copia del mensaje 4, el cual no pudo desencriptar la primera vez y que tampoco podr\u00e1 desencriptar esta segunda vez. Ahora Alice puede enviar KAB a Bob para establecer una sesi\u00f3n con \u00e9l. Este intercambio tambi\u00e9n tiene establecidas marcas de tiempo. La respuesta es probar a Alice que realmente est\u00e1 hablando con Bob, no con Trudy. Despu\u00e9s de esta serie de intercambios, Alice puede comunicarse con Bob bajo la cobertura de KAB. Si m\u00e1s adelante Alice necesita hablar con otro servidor, Carol, simplemente repite el mensaje 3 al TGS, s\u00f3lo que ahora especificando C en lugar de B. El TGS responder\u00e1 r\u00e1pidamente con un boleto encriptado con KC que Alice puede enviar a Carol, y que Carol aceptar\u00e1 como prueba de que proviene de Alice. El objetivo de todo este trabajo es que ahora Alice puede acceder servidores a trav\u00e9s de toda la red de forma segura y que su contrase\u00f1a no tiene que pasar a trav\u00e9s de la red. De hecho, s\u00f3lo tuvo que estar en su propia estaci\u00f3n de trabajo durante algunos milisegundos. Sin embargo, observe que cada servidor realiza su propia autorizaci\u00f3n. Cuando Alice presenta su boleto a Bob, esto simplemente prueba a Bob qui\u00e9n lo envi\u00f3. Bob es quien determina las acciones que Alice tiene permitido realizar. Puesto que los dise\u00f1adores de Kerberos no esperaron que todo el mundo confiara en un solo servidor de autenticaci\u00f3n, establecieron reglas para tener m\u00faltiples dominios, cada uno con su propio AS y TGS. Para obtener un boleto para un servidor de un dominio distante, Alice podr\u00eda solicitar a su propio TGS un boleto que sea aceptado por el TGS en el dominio distante. Si el TGS distante se ha registrado con el TGS local (de la misma manera en que lo hacen los servidores\n798\nSEGURIDAD EN REDES\nCAP. 8\nlocales), este \u00faltimo le dar\u00e1 a Alice un boleto v\u00e1lido en el TGS distante. A continuaci\u00f3n ella puede hacer negocios, como obtener boletos para servidores de ese dominio. Sin embargo, observe que para que las partes de dos dominios hagan negocios, cada una debe confiar en el TGS de la otra. Kerberos V5 es m\u00e1s elegante que V4 y tiene m\u00e1s sobrecarga. Tambi\u00e9n utiliza OSI ASN.1 (Notaci\u00f3n de Sintaxis Abstracta 1) para describir tipos de datos y tiene peque\u00f1os cambios en los protocolos. Adem\u00e1s, sus boletos tienen duraciones m\u00e1s largas, permite que los boletos sean renovados y emitir\u00e1 boletos postfechados. Adem\u00e1s, al menos en teor\u00eda, no depende de DES, como lo hace V4, y soporta m\u00faltiples dominios pues delega la generaci\u00f3n de boletos a m\u00faltiples servidores de boletos.\n8.7.5 Autenticaci\u00f3n utilizando criptograf\u00eda de clave p\u00fablica La autenticaci\u00f3n mutua tambi\u00e9n puede realizarse utilizando criptograf\u00eda de clave p\u00fablica. Para empezar, Alice necesita obtener la clave p\u00fablica de Bob. Si existe una PKI con un servidor de directorios que proporciona certificados de clave p\u00fablica, Alice puede pedir la de Bob, que en la figura 8-43 se muestra como mensaje 1. La repetici\u00f3n, en el mensaje 2, es un certificado X.509 que contiene la clave p\u00fablica de Bob. Cuando Alice verifica que la firma sea correcta, env\u00eda a Bob un mensaje que contiene su identidad y una marca aleatoria.\nAlice\nB\nDirectorio\n4. Da 5. me Aq E u\u00ed A est \u00e1E A\nBob\ne E EB am st\u00e1 D \u00ede 1. qu A 2.\nFigura 8-43. Autenticaci\u00f3n mutua utilizando la criptograf\u00eda de clave p\u00fablica.\nCuando Bob recibe este mensaje, no tiene idea de si proviene de Alice o de Trudy, pero sigue adelante y pide al servidor de directorio la clave p\u00fablica de Alice (mensaje 4) la cual obtiene de inmediato (mensaje 5). A continuaci\u00f3n env\u00eda a Alice como mensaje 6 uno que contiene el RA de Alice, su propia marca aleatoria, RB , y una clave de sesi\u00f3n propuesta, KS . Cuando Alice obtiene el mensaje 6, lo desencripta mediante su clave privada. Ve el RA en dicho mensaje, lo cual le trae alivio. El mensaje debe provenir de Bob, puesto que Trudy no tiene forma de determinar RA. Adem\u00e1s, debe ser una actualizaci\u00f3n y no una repetici\u00f3n, puesto que acaba de enviarle a Bob el RA. Alice accede a la sesi\u00f3n enviando el mensaje 7. Cuando Bob ve RB encriptado con la clave de sesi\u00f3n que acaba de generar, sabe que Alice obtuvo el mensaje 6 y verific\u00f3 RA.\nSEC. 8.8\nSEGURIDAD DE CORREO ELECTR\u00d3NICO\n799\n\u00bfQu\u00e9 puede hacer Trudy para tratar de arruinar este protocolo? Puede fabricar el mensaje 3 y enga\u00f1ar a Bob para que investigue a Alice, pero \u00e9sta ver\u00e1 un RA que ella no envi\u00f3 y ya no proseguir\u00e1. Trudy no podr\u00e1 falsificar el mensaje 7 para Bob porque no conoce RB o KS y no puede determinarlos sin la clave privada de Alice. No es el d\u00eda de suerte de Trudy.\n8.8 SEGURIDAD DE CORREO ELECTR\u00d3NICO Cuando se env\u00eda un mensaje de correo electr\u00f3nico entre dos sitios distantes, por lo general pasar\u00e1 por docenas de m\u00e1quinas. Cualquiera de ellas puede leer y registrar el mensaje para uso futuro. En la pr\u00e1ctica, no existe la privacidad, a pesar de lo que mucha gente piensa. Sin embargo, muchas personas desear\u00edan tener la capacidad de enviar correo electr\u00f3nico que s\u00f3lo pueda ser le\u00eddo por el destinatario y por nadie m\u00e1s: ni siquiera su jefe ni su gobierno. Este deseo ha estimulado a varias personas y grupos a que apliquen al correo electr\u00f3nico los principios criptogr\u00e1ficos que estudiamos anteriormente para producir correo electr\u00f3nico seguro. En las siguientes secciones analizaremos un sistema seguro ampliamente utilizado, PGP, y despu\u00e9s mencionaremos brevemente dos m\u00e1s, PEM y S/MIME. Para informaci\u00f3n adicional sobre el correo electr\u00f3nico seguro, vea (Kaufman y cols., 2002, y Schneier, 1995).\n8.8.1 PGP\u2014Privacidad Bastante Buena Nuestro primer ejemplo, PGP (Privacidad Bastante Buena), es esencialmente la idea original de una persona, Phil Zimmermann (Zimmermann, 1995a, 1995b). Zimmermann es un defensor de la privacidad cuyo lema es: Si la privacidad se elimina, solamente los delincuentes tendr\u00e1n privacidad. Liberado en 1991, PGP es un paquete de seguridad de correo electr\u00f3nico completo que proporciona privacidad, autenticaci\u00f3n, firmas digitales y compresi\u00f3n, todo en una forma f\u00e1cil de utilizar. Adem\u00e1s, todo el paquete, incluyendo todo el c\u00f3digo fuente, se distribuye sin costo alguno a trav\u00e9s de Internet. Debido a su cualidad, precio (ninguno) y f\u00e1cil disponibilidad en las plataformas UNIX, Linux, Windows y Mac OS, se utiliza ampliamente hoy en d\u00eda. PGP encripta los datos utilizando un cifrado de bloque llamado IDEA (Algoritmo Internacional de Encriptaci\u00f3n de Datos), que utiliza claves de 128 bits. Se dise\u00f1\u00f3 en Suecia en la \u00e9poca en que el DES fue visto como defectuoso y el AES todav\u00eda no se inventaba. De manera conceptual, IDEA es similar a DES y AES: mezcla los bits en una serie de rondas, pero los detalles de las funciones de mezcla son diferentes de los de DES y AES. La administraci\u00f3n de claves utiliza RSA y la integridad de datos utiliza MD5, temas que ya hemos analizado. PGP tambi\u00e9n se ha visto envuelto en controversias desde su primer d\u00eda (Levy, 1993). Debido a que Zimmermann no hizo nada para que otras personas no colocaran a PGP en Internet, en donde personas de todo el mundo pod\u00edan accederlo, el gobierno de los Estados Unidos declar\u00f3 que Zimmermann hab\u00eda violado las leyes de los Estados Unidos que prohib\u00edan la exportaci\u00f3n de equipo de guerra. La investigaci\u00f3n del gobierno de los Estados Unidos en contra de Zimmermann dur\u00f3 cinco a\u00f1os, pero con el tiempo se abandon\u00f3, probablemente por dos razones. Primera, Zimmermann\n800\nSEGURIDAD EN REDES\nCAP. 8\nmismo no coloc\u00f3 a PGP en Internet, por lo que su abogado aleg\u00f3 que Zimmermann nunca export\u00f3 nada (y ah\u00ed entra la controversia de si la creaci\u00f3n de un sitio Web significa exportaci\u00f3n). Segunda, con el tiempo el gobierno se dio cuenta de que ganar el juicio significaba convencer al jurado de que el hecho de crear un sitio Web que contenga un programa de privacidad descargable estaba cubierto por la ley de tr\u00e1fico de armas que proh\u00edbe la exportaci\u00f3n de material de guerra, como tanques, submarinos, aviones militares y armas nucleares. Los a\u00f1os de mala publicidad tampoco fueron de mucha ayuda. Adem\u00e1s, las leyes de exportaci\u00f3n son extra\u00f1as, por decir lo menos. El gobierno consider\u00f3 la colocaci\u00f3n de c\u00f3digo en un sitio Web como una exportaci\u00f3n ilegal y persigui\u00f3 a Zimmermann durante cinco a\u00f1os por eso. Por otro lado, cuando alguien public\u00f3 todo el c\u00f3digo fuente PGP, en C, en un libro (en una fuente grande con una suma de verificaci\u00f3n en cada p\u00e1gina para hacer que su digitalizaci\u00f3n fuera f\u00e1cil) y despu\u00e9s export\u00f3 dicho libro, no hubo problema con el gobierno debido a que los libros no se clasifican como equipo de guerra. La espada es m\u00e1s poderosa que la pluma, por lo menos para el T\u00edo Sam. Otro problema en el que se vio involucrado PGP tuvo que ver con la infracci\u00f3n de las patentes. La compa\u00f1\u00eda que pose\u00eda la patente RSA, RSA Security, Inc., aleg\u00f3 que el uso que PGP hac\u00eda del algoritmo RSA infringi\u00f3 su patente, pero ese problema qued\u00f3 resuelto a partir de la versi\u00f3n 2.6. Adem\u00e1s, PGP utiliza otro algoritmo de encriptaci\u00f3n patentado, IDEA, cuyo uso caus\u00f3 algunos problemas al principio. Puesto que el c\u00f3digo de PGP es abierto, diversas personas y grupos lo han modificado y producido varias versiones. Algunas de ellas se dise\u00f1aron para resolver los problemas con las leyes de equipo de guerra, otras se enfocaron en evitar el uso de algoritmos patentados, y otros m\u00e1s desearon convertirlo en un producto comercial de c\u00f3digo cerrado. Aunque en la actualidad las leyes de equipo de guerra se han liberado ligeramente (de lo contrario los productos que utilizan AES no podr\u00edan exportarse de los Estados Unidos), y la patente de RSA caduc\u00f3 en septiembre de 2000, el legado de todos estos problemas es que hay en circulaci\u00f3n varias versiones incompatibles de PGP, bajo diversos nombres. La discusi\u00f3n anterior se enfoca en el PGP cl\u00e1sico, que es la versi\u00f3n m\u00e1s antigua y simple. En el RFC 2440 se describe otra versi\u00f3n popular, Open PGP. Otra m\u00e1s es GNU Privacy Guard. PGP utiliza de manera intencional algoritmos criptogr\u00e1ficos existentes en lugar de inventar nuevos. Se basa principalmente en algoritmos que han aguantado revisiones extensas de iguales y no fueron dise\u00f1ados o influenciados por ninguna agencia gubernamental para debilitarlos. Para las personas que intentan desconfiar del gobierno, esta propiedad es una gran ganancia. PGP soporta la compresi\u00f3n de texto, confidencialidad y firmas digitales, adem\u00e1s de que proporciona caracter\u00edsticas de administraci\u00f3n extensa de claves, pero por extra\u00f1o que parezca, no proporciona caracter\u00edsticas de correo electr\u00f3nico. Es m\u00e1s que un preprocesador que toma como entrada texto llano y produce como salida texto cifrado firmado en base64. Por supuesto, despu\u00e9s esta salida puede enviarse por correo electr\u00f3nico. Algunas implementaciones de PGP llaman a un agente de usuario como paso final para enviar realmente el mensaje. Para ver c\u00f3mo funciona PGP, consideremos el ejemplo que se muestra en la figura 8-44. Aqu\u00ed, Alice desea enviar de forma segura un mensaje en texto llano firmado, P, a Bob. Tanto Alice\nSEC. 8.8\n801\nSEGURIDAD DE CORREO ELECTR\u00d3NICO\ncomo Bob tienen claves p\u00fablicas (E X) y privadas (DX) RSA. Supongamos que cada uno conoce la clave p\u00fablica del otro; analizaremos la administraci\u00f3n de claves PGP dentro de poco.\nClave p\u00fablica RSA de Bob, EB\nClave de mensaje de una sola vez para IDEA Concatenaci\u00f3n\nRSA\nClave privada RSA de Alice, DA\nMD5\nRSA\nZip\nIDEA\nBase 64\nTexto ASCII para la red\nP1 comprimido Mensaje de texto llano original de Alice\nConcatenaci\u00f3n de P y el hash firmado de P\nConcatenaci\u00f3n de P1.Z encriptado con IDEA y KM encriptado con EB\nFigura 8-44. PGP en funcionamiento para enviar un mensaje.\nAlice empieza por abrir el programa PGP en su computadora. Lo primero que hace PGP es aplicar un hash al mensaje, P, mediante MD5, y despu\u00e9s encripta el hash resultante mediante su clave privada RSA, DA. Cuando Bob obtiene el mensaje, puede desencriptar el hash con la clave p\u00fablica de Alice y verificar que dicho hash sea correcto. Incluso si alguien m\u00e1s (por ejemplo, Trudy) pudiera adquirir el hash en esta etapa y desencriptarlo con la clave p\u00fablica conocida de Alice, la fuerza de MD5 garantiza que desde un punto de vista computacional sea imposible producir otro mensaje con el mismo hash MD5. El hash encriptado y el mensaje original ahora est\u00e1n concatenados en un solo mensaje, P1, y se comprimen mediante un programa ZIP, que utiliza el algoritmo Ziv-Lempel (Ziv y Lempel, 1977). Llame P1. Z a la salida de este paso. A continuaci\u00f3n, PGP pide a Alice alguna entrada aleatoria. Tanto el contenido como la velocidad de tecleo se utilizan para generar una clave de mensaje IDEA de 128 bits, KM (llamada clave de sesi\u00f3n en la literatura de PGP, pero \u00e9ste realmente es un nombre inapropiado puesto que no es una sesi\u00f3n). KM ahora se utiliza para encriptar P1.Z con IDEA en modo de retroalimentaci\u00f3n de cifrado. Adem\u00e1s, KM se encripta con la clave p\u00fablica de Bob, EB. Estos dos componentes despu\u00e9s se concatenan y convierten a base64, como analizamos en la secci\u00f3n sobre MIME en el cap\u00edtulo 7. El mensaje resultante contiene s\u00f3lo letras, d\u00edgitos y los s\u00edmbolos +, / e =, lo que significa que puede colocarse en el cuerpo del RFC 822 y se puede esperar que llegue sin modificaciones. Cuando Bob obtiene el mensaje, invierte la codificaci\u00f3n base64 y desencripta la clave IDEA mediante su clave privada RSA. Bob puede utilizar esta clave para desencriptar el mensaje a fin\n802\nSEGURIDAD EN REDES\nCAP. 8\nde obtener P1.Z. Despu\u00e9s de descomprimirlo, Bob separa el texto llano del hash encripta y desencripta este \u00faltimo meditante la clave p\u00fablica de Alice. Si el hash de texto llano coincide con su propio c\u00e1lculo MD5, Bob sabe que P es el mensaje correcto y que proviene de Alice. Vale la pena se\u00f1alar que aqu\u00ed RSA s\u00f3lo se utiliza en dos lugares: para encriptar el hash MD5 de 128 bits y para desencriptar la clave IDEA de 128 bits. Aunque RSA es lento, s\u00f3lo tiene que encriptar 256 bits, no un gran volumen de datos. Adem\u00e1s, los 256 bits de texto llano son en extremo aleatorios, por lo que se necesitar\u00e1 que Trudy realice una cantidad considerable de trabajo para determinar si una clave adivinada es correcta. IDEA realiza la encriptaci\u00f3n pesada, que es varios \u00f3rdenes de magnitud m\u00e1s r\u00e1pida que RSA. Por lo tanto, PGP proporciona seguridad, compresi\u00f3n y una firma digital y lo hace en una forma m\u00e1s eficiente que el esquema ilustrado en la figura 8-19. PGP soporta cuatro longitudes de clave RSA. Es responsabilidad del usuario seleccionar la m\u00e1s adecuada. Las longitudes son: 1. Casual (384 bits): En la actualidad puede romperse con facilidad. 2. Commercial (512 bits): Organizaciones de tres letras pueden romperla. 3. Military (1024 bits): Nadie de este mundo puede romperla. 4. Alien (2048 bits): Ni siquiera alguien de otro planeta puede romperla. Puesto que RSA s\u00f3lo se utiliza para dos peque\u00f1os c\u00e1lculos, todo mundo deber\u00eda utilizar las claves de fuerza alien todo el tiempo. En la figura 8-45 se muestra el formato de un mensaje PGP cl\u00e1sico. Tambi\u00e9n se utilizan otros formatos. El mensaje tiene tres partes, las cuales contienen la clave IDEA, la firma y el mensaje, respectivamente. La parte de la clave no s\u00f3lo contiene \u00e9sta, sino tambi\u00e9n un identificador de clave, puesto que se permite que los usuarios tengan m\u00faltiples claves p\u00fablicas.\nParte de clave del mensaje\nID de EB\nKM\nParte de firma Encabezado de firma\nT i e m p o\nID de EA\nBase64 Comprimido y encriptado por IDEA Parte de mensaje\nT Encai beza- NomHash p do de bre de o MD5 men- archivo s saje\nT i e m p o\nMensaje\nEncriptado por\nFigura 8-45. Un mensaje PGP.\nLa parte de firma contiene un encabezado, el cual no trataremos aqu\u00ed. El encabezado est\u00e1 seguido por una marca de tiempo, el identificador para la clave p\u00fablica del emisor que puede utili-\nSEC. 8.8\nSEGURIDAD DE CORREO ELECTR\u00d3NICO\n803\nzarse para desencriptar el hash de firma, alguna informaci\u00f3n de tipos que identifica los algoritmos utilizados (para permitir que MD6 y RSA2 se puedan utilizar cuando se inventen) y el hash encriptado mismo. La parte del mensaje tambi\u00e9n contiene un encabezado, el nombre predeterminado del archivo que se va a utilizar si el receptor escribe el archivo en disco, una marca de creaci\u00f3n de mensajes y, finalmente, el mensaje mismo. La administraci\u00f3n de claves ha recibido una gran cantidad de atenci\u00f3n en PGP puesto que es el tal\u00f3n de Aquiles de los sistemas de seguridad. La administraci\u00f3n de claves funciona como sigue. Cada usuario mantiene localmente dos estructuras de datos: un anillo de clave privada y un anillo de clave p\u00fablica. El anillo de clave privada contiene uno o m\u00e1s pares de claves p\u00fablica-privada personales. La raz\u00f3n para soportar m\u00faltiples pares por usuario es permitir que los usuarios cambien sus claves p\u00fablicas peri\u00f3dicamente o cuando piensen que han sido comprometidas, sin invalidar los mensajes que est\u00e1n actualmente en preparaci\u00f3n o en tr\u00e1nsito. Cada par tiene asociado un identificador asociado, por lo que un emisor de mensajes puede indicarle al destinatario cu\u00e1l clave p\u00fablica se utiliz\u00f3 para encriptarlo. Los identificadores de mensajes consisten en los 64 bits de orden menor de la clave p\u00fablica. Los usuarios son responsables de evitar conflictos en sus identificadores de clave p\u00fablica. Las claves privadas en disco se encriptan mediante una contrase\u00f1a especial (de tama\u00f1o arbitrario) para protegerlas contra ataques de robo. El anillo de clave p\u00fablica contiene claves p\u00fablicas de los contactos del usuario. \u00c9stas son necesarias para encriptar las claves de mensaje asociadas con cada mensaje. Cada entrada del anillo de clave p\u00fablica no s\u00f3lo contiene la clave p\u00fablica, sino tambi\u00e9n su identificador de 64 bits y una indicaci\u00f3n de qu\u00e9 tanto conf\u00eda el usuario en la clave. El problema que se trata de solucionar aqu\u00ed es el siguiente. Suponga que las claves p\u00fablicas se mantienen en boletines electr\u00f3nicos. Un forma para que Trudy pueda leer el correo electr\u00f3nico secreto de Bob es atacar el bolet\u00edn electr\u00f3nico y reemplazar la clave p\u00fablica de Bob con una de su elecci\u00f3n. Cuando m\u00e1s tarde Alice obtiene la clave que supuestamente pertenece a Bob, Trudy puede atacar a Bob mediante un ataque de brigada de bomberos. Para evitar tales ataques, o por lo menos minimizar las consecuencias de ellos, Alice necesita saber cu\u00e1nto debe confiar en el elemento llamado \u201cclave de Bob\u201d de su anillo de clave p\u00fablica. Si Alice sabe que Bob le proporcion\u00f3 personalmente un disco flexible que contiene la clave, puede establecer el valor confiable al valor m\u00e1s alto. Este enfoque controlado por el usuario y descentralizado hacia la administraci\u00f3n de claves p\u00fablicas es el que mantiene apartado a PGP de los esquemas centralizados PKI. Sin embargo, las personas algunas veces obtienen claves p\u00fablicas cuando consultan al servidor de claves confiable. Por esta raz\u00f3n, despu\u00e9s de que X.509 se estandariz\u00f3, PGP soport\u00f3 estos certificados, as\u00ed como el mecanismo de anillo de clave p\u00fablica de PGP. Todas las versiones actuales de PGP soportan X.509.\n8.8.2 PEM\u2014Correo con Privacidad Mejorada En contraste con PGP, que inicialmente fue idea de un solo hombre, nuestro segundo ejemplo, PEM (Correo con Privacidad Mejorada), desarrollado a finales de la d\u00e9cada de 1980, es un\n804\nSEGURIDAD EN REDES\nCAP. 8\nest\u00e1ndar oficial de Internet que se describe en cuatro RFCs: del RFC 1421 al 1424. PEM cubre m\u00e1s o menos el mismo territorio que PGP: privacidad y autenticaci\u00f3n para los sistemas de correo electr\u00f3nico basados en el RFC 822. Sin embargo, tambi\u00e9n tiene algunas diferencias con respecto a PGP en lo que se refiere a metodolog\u00eda y tecnolog\u00eda. Los mensajes enviados mediante PEM primero se convierten en una forma can\u00f3nica a fin de que tengan las mismas convenciones sobre los espacios en blanco (por ejemplo, tabuladores, espacios en blanco). Despu\u00e9s se calcula un hash de mensaje mediante MD2 o MD5, y la concatenaci\u00f3n del hash y del mensaje se encripta mediante DES. Puesto que se sabe que una clave de 56 bits es d\u00e9bil, esta opci\u00f3n no es muy conveniente. El mensaje encriptado puede codificarse m\u00e1s tarde con codificaci\u00f3n base64 y transmitirse al destinatario. Al igual que en PGP, cada mensaje se encripta con una clave de una sola vez que se encierra junto con el mensaje. La clave puede protegerse con el RSA o con el DES triple mediante EDE. La administraci\u00f3n de claves est\u00e1 m\u00e1s estructurada que en PGP. Las claves est\u00e1n certificadas por certificados X.509 emitidos por CAs, que est\u00e1n ordenados en una jerarqu\u00eda r\u00edgida que comienza en una sola ra\u00edz. La ventaja de este esquema es que es posible la revocaci\u00f3n de certificados al hacer que la ra\u00edz emita CRLs de manera peri\u00f3dica. El \u00fanico problema con PEM es que nadie lo ha utilizado y hace mucho tiempo que se fue al cielo de los bits. El problema es principalmente pol\u00edtico: \u00bfqui\u00e9n podr\u00eda operar la ra\u00edz y bajo qu\u00e9 condiciones? No faltaban candidatos, pero las personas estaban temerosas de confiar a alguna compa\u00f1\u00eda la seguridad de todo el sistema. El candidato m\u00e1s serio, RSA Security, Inc., quer\u00eda cobrar por certificado emitido. Sin embargo, algunas organizaciones se opusieron a esta idea. En particular, el gobierno de los Estados Unidos tiene permitido utilizar sin costo alguno todas las patentes, y las compa\u00f1\u00edas fuera de Estados Unidos se hab\u00edan acostumbrado a utilizar de manera gratuita el algoritmo RSA (la compa\u00f1\u00eda olvid\u00f3 patentarla fuera de Estados Unidos). Nadie estaba feliz por tener que pagar de repente a RSA Security, Inc., por algo que siempre se hab\u00eda realizado de manera gratuita. Al final, no se encontr\u00f3 ninguna ra\u00edz y PEM se colaps\u00f3.\n8.8.3 S/MIME La siguiente aventura del IETF en lo que se refiere a la seguridad de correo electr\u00f3nico, llamada S/MIME (MIME Seguro), se describe en los RFCs 2632 al 2643. Al igual que PEM, proporciona autenticaci\u00f3n, integridad de datos, confidencialidad y no repudio. Tambi\u00e9n es muy flexible, pues soporta una variedad de algoritmos criptogr\u00e1ficos. No es sorprendente, dado el nombre, que S/MIME se integre bien con MIME, lo cual permite la protecci\u00f3n de todos los mensajes. Se define una gran variedad de encabezados MIME, por ejemplo, para contener firmas digitales. IETF definitivamente aprendi\u00f3 algo de la experiencia de PEM. S/MIME no tiene una jerarqu\u00eda de certificados r\u00edgida que comienza en una sola ra\u00edz. En su lugar, los usuarios pueden tener m\u00faltiples anclas confiables. Un certificado se considera v\u00e1lido siempre y cuando pueda ser rastreado hacia alguna ancla en la que el usuario conf\u00ede. S/MIME utiliza los algoritmos y protocolos est\u00e1ndar que hemos examinado hasta ahora, por lo que no los trataremos aqu\u00ed. Para m\u00e1s detalles, por favor consulte los RFCs.\nSEC. 8.9\nSEGURIDAD EN WEB\n805\n8.9 SEGURIDAD EN WEB Hemos estudiado dos \u00e1reas importantes en donde es necesaria la seguridad: las comunicaciones y el correo electr\u00f3nico. Puede considerarlos como la sopa y el entrem\u00e9s. Ahora es tiempo del platillo principal: la seguridad en Web. Web es el lugar donde la mayor\u00eda de las Trudies vagan en la actualidad y tratan de realizar trabajo sucio. En las siguientes secciones analizaremos algunos de los problemas y cuestiones que se relacionan con la seguridad en Web. La seguridad en Web se puede dividir en tres partes. La primera, \u00bfc\u00f3mo se nombran de manera segura los objetos y los recursos? Segunda, \u00bfc\u00f3mo pueden establecerse las conexiones seguras y autenticadas? Tercera, \u00bfqu\u00e9 sucede cuando un sitio Web env\u00eda a un cliente una pieza del c\u00f3digo ejecutable? Despu\u00e9s de ver algunas amenazas, examinaremos todas estas cuestiones.\n8.9.1 Amenazas Casi semanalmente, uno lee en los peri\u00f3dicos los problemas de seguridad en los sitios Web. La situaci\u00f3n es muy sombr\u00eda. Veamos algunos ejemplos de lo que ha sucedido en realidad. Primero, la p\u00e1gina de inicio de numerosas organizaciones ha sido atacada y reemplazada por una nueva p\u00e1gina de inicio de la elecci\u00f3n de los crackers. (La prensa popular llama \u201chackers\u201d a las personas que irrumpen en las computadoras, pero muchos programadores reservan ese t\u00e9rmino para los grandes programadores. Nosotros preferimos llamar \u201ccrackers\u201d a las personas que irrumpen sin permiso a la computadora de otra persona.) Entre los sitios que han sido atacados por los crackers se incluyen Yahoo, el Ej\u00e9rcito de Estados Unidos, la CIA, la NASA y el New York Times. En muchos casos, los crackers simplemente colocaron alg\u00fan texto gracioso y los sitios fueron reparados en algunas horas. Ahora veamos algunos casos m\u00e1s serios. Muchos sitios han sido derribados por ataques de negaci\u00f3n de servicio, en los que el cracker inunda con tr\u00e1fico el sitio, dej\u00e1ndolo incapaz de responder a consultas leg\u00edtimas. Con frecuencia, el ataque se realiza desde varias m\u00e1quinas en las que el cracker ya ha irrumpido (ataques DDoS). Estos ataques son tan comunes que ya no son noticia, pero pueden costar al sitio atacado miles de d\u00f3lares en negocios perdidos. En 1999, un cracker sueco irrumpi\u00f3 en el sitio Web Hotmail de Microsoft y cre\u00f3 un sitio espejo que permiti\u00f3 que cualquiera tecleara el nombre de un usuario de Hotmail y leyera todo el correo electr\u00f3nico de la persona correspondiente. En otro caso, un cracker ruso de 19 a\u00f1os llamado Maxim irrumpi\u00f3 en un sitio Web de comercio y rob\u00f3 300,000 n\u00fameros de tarjetas de cr\u00e9dito. Despu\u00e9s contact\u00f3 a los due\u00f1os del sitio y les dijo que si no le pagaban $100,000, publicar\u00eda en Internet todos los n\u00fameros de las tarjetas. Los due\u00f1os no cedieron a su chantaje y Maxim public\u00f3 dichos n\u00fameros, da\u00f1ando a muchas v\u00edctimas inocentes. Otro caso fue el de un estudiante de California de 23 a\u00f1os que envi\u00f3 por correo electr\u00f3nico un comunicado de prensa a una agencia de noticias en el que declaraba falsamente que Emulex Corporation iba a publicar una gran p\u00e9rdida trimestral y que el director general iba a renunciar\n806\nSEGURIDAD EN REDES\nCAP. 8\ninmediatamente. En pocas horas, las acciones de la compa\u00f1\u00eda cayeron en 60%, causando que los inversionistas perdieran m\u00e1s de $2 mil millones. El autor de esta noticia gan\u00f3 un cuarto de mill\u00f3n de d\u00f3lares al vender las acciones poco antes de enviar el anuncio. Si bien este evento no tuvo que ver con que alguien irrumpiera en un sitio Web, es claro que colocar un anuncio de tal magnitud en una p\u00e1gina de inicio de cualquier corporaci\u00f3n importante podr\u00eda tener un efecto similar. (Desgraciadamente) podr\u00edamos seguir contando muchos casos como \u00e9stos, pero es tiempo de que examinemos algunos de los aspectos t\u00e9cnicos relacionados con la seguridad en Web. Para mayor informaci\u00f3n sobre los problemas de seguridad de todo tipo, vea (Anderson, 2001; Garfinkel con Spafford, 2002, y Schneier, 2000). En Internet podr\u00eda encontrar una gran cantidad de casos espec\u00edficos.\n8.9.2 Asignaci\u00f3n segura de nombres Comencemos con algo muy b\u00e1sico: Alice desea visitar el sitio Web de Bob. Ella teclea el URL de Bob en su navegador y segundos m\u00e1s tarde, aparece una p\u00e1gina Web. Pero, \u00bfes la de Bob? Tal vez. Trudy podr\u00eda estar haciendo sus viejos trucos nuevamente. Por ejemplo, tal vez est\u00e9 interceptando y examinando todos los paquetes salientes de Alice. Cuando captura una solicitud GET de HTTP dirigida al sitio Web de Bob, puede ir ella misma a dicho sitio para obtener la p\u00e1gina, modificarla como lo desea y regresar la p\u00e1gina falsa a Alice, la cual no ser\u00eda extra\u00f1a para Alice. Peor a\u00fan, Trudy podr\u00eda recortar los precios de la tienda electr\u00f3nica de Bob para hacer que los precios de los productos parezcan muy atractivos, con lo que enga\u00f1ar\u00eda a Alice para que enviara su n\u00famero de tarjeta de cr\u00e9dito a \u201cBob\u201d para comprar algo de mercanc\u00eda. Una desventaja de este cl\u00e1sico ataque de hombre en medio es que Trudy tiene que estar en una posici\u00f3n para interceptar el tr\u00e1fico saliente de Alice y falsificar su tr\u00e1fico entrante. En la pr\u00e1ctica, tiene que intervenir la l\u00ednea telef\u00f3nica de Alice o la de Bob, puesto que intervenir la red dorsal de fibra es mucho m\u00e1s dif\u00edcil. Aunque intervenir la l\u00ednea es ciertamente posible, tambi\u00e9n significa mucho trabajo, y aunque Trudy es inteligente, tambi\u00e9n es floja. Adem\u00e1s, hay formas m\u00e1s f\u00e1ciles de enga\u00f1ar a Alice. Falsificaci\u00f3n de DNS Por ejemplo, suponga que Trudy es capaz de violar el sistema DNS, tal vez s\u00f3lo el cach\u00e9 DNS del ISP de Alice, y reemplazar la direcci\u00f3n IP de Bob (digamos, 36.1.2.3) con la suya propia (digamos, 42.9.9.9). Eso lleva al siguiente ataque. En la figura 8-46(a) se ilustra la forma en que se supone debe trabajar. Aqu\u00ed (1) Alice pide al DNS la direcci\u00f3n IP de Bob, (2) la obtiene, (3) le pide a Bob su p\u00e1gina de inicio, y (4) tambi\u00e9n la obtiene. Despu\u00e9s de que Trudy ha modificado el registro DNS de Bob para contener su propia direcci\u00f3n IP en lugar de la de Bob, obtenemos la situaci\u00f3n de la figura 8-46(b). Aqu\u00ed, cuando Alice busca la direcci\u00f3n IP de Bob, obtiene la de Trudy, por lo que todo su tr\u00e1fico dirigido a Bob va a parar a las manos de Trudy. Ahora, ella puede iniciar un ataque de hombre en medio sin tener que intervenir ninguna l\u00ednea telef\u00f3nica. En su lugar, tiene que irrumpir en un servidor DNS y cambiar un registro, lo cual es m\u00e1s f\u00e1cil.\nSEC. 8.9\n807\nSEGURIDAD EN WEB\nServidor DNS violado\nServidor DNS Servidor Web de Bob (36.1.2.3)\nAlice\n1. Dame la direcci\u00f3n IP de Bob 2. 36.1.2.3 (direcci\u00f3n IP de Bob) 3. GET indice.html 4. P\u00e1gina de inicio de Bob (a)\nServidor Web de Trudy (42.9.9.9)\nAlice\n1. Dame la direcci\u00f3n IP de Bob 2. 42.9.9.9 (direcci\u00f3n IP de Trudy) 3. GET indice.html 4. Falsificaci\u00f3n que hace Trudy de la p\u00e1gina de inicio de Bob (b)\nFigura 8-46. (a) Situaci\u00f3n normal. (b) Un ataque basado en la violaci\u00f3n de un DNS para modificar el registro de Bob.\n\u00bfC\u00f3mo enga\u00f1a Trudy al DNS? Parece bastante f\u00e1cil. Brevemente, Trudy puede enga\u00f1ar al servidor DNS en el ISP de Alice para que env\u00ede una consulta a fin de encontrar la direcci\u00f3n de Bob. Desgraciadamente, puesto que el DNS utiliza UDP, el servidor DNS no puede verificar qui\u00e9n proporcion\u00f3 la respuesta. Trudy puede explotar esta propiedad falsificando la respuesta esperada e introduciendo una direcci\u00f3n IP falsa en el cach\u00e9 del servidor DNS. Por simplicidad, supondremos que el ISP de Alice inicialmente no tiene una entrada para el sitio Web de Bob, bob.com. Si la tiene, Trudy puede esperar hasta que expire y probar otra vez (o utilizar otros trucos). Trudy inicia el ataque enviando una solicitud de respuesta al ISP de Alice preguntando por la direcci\u00f3n IP de bob.com. Puesto que no hay entrada para este nombre DNS, el servidor de cach\u00e9 pide al servidor de nivel superior el dominio com para obtener uno. Sin embargo, Trudy evade al servidor com y regresa una respuesta falsa diciendo: \u201cbob.com es 42.9.9.9\u201d; sin embargo, esta direcci\u00f3n IP es la de ella. Si la respuesta falsa de Trudy llega primero al ISP de Alice, se almacenar\u00e1 en cach\u00e9 y la respuesta real se rechazar\u00e1 como respuesta no solicitada de una consulta que ya no est\u00e1 pendiente. Enga\u00f1ar a un servidor DNS para que instale una direcci\u00f3n IP falsa se conoce como falsificaci\u00f3n de DNS. Un cach\u00e9 que contiene una direcci\u00f3n IP intencionalmente falsa como \u00e9sta se conoce como cach\u00e9 envenenado. Por lo general, las cosas no son tan sencillas. Primero, el ISP de Alice verifica si la respuesta lleva la direcci\u00f3n de origen IP correcta del servidor de nivel superior. Pero debido a que Trudy puede colocar lo que quiera en ese campo IP, puede vencer esa prueba con facilidad puesto que las direcciones IP de los servidores de nivel superior tienen que ser p\u00fablicas.\n808\nSEGURIDAD EN REDES\nCAP. 8\nSegundo, para permitir que los servidores DNS digan cu\u00e1l respuesta corresponde a cual solicitud, todas las solicitudes llevan un n\u00famero de secuencia. Para falsificar el ISP de Alice, Trudy tiene que conocer su n\u00famero de secuencia actual. La forma m\u00e1s f\u00e1cil para que Trudy conozca el n\u00famero de secuencia actual es que ella misma registre un dominio, digamos, trudy-la-intrusa.com. Supongamos que su direcci\u00f3n IP tambi\u00e9n es 42.9.9.9. Trudy tambi\u00e9n crea un servidor DNS para su nuevo dominio, dns.trudy-la-intrusa.com. El servidor DNS utiliza la direcci\u00f3n IP 42.9.9.9 de Trudy, puesto que \u00e9sta s\u00f3lo tiene una computadora. Ahora Trudy tiene que informarle al ISP de Alice sobre su servidor DNS. Esto es f\u00e1cil. Todo lo que tiene que hacer es pedir foobar.trudy-laintrusa.com al IPS de Alice, lo que causar\u00e1 que dicho ISP pregunte al servidor com de nivel superior qui\u00e9n proporciona el nuevo dominio de Trudy. Una vez que tiene seguro el dns.trudy-la-intrusa.com en el cach\u00e9 del ISP de Alice, el ataque real puede comenzar. Trudy ahora solicita www.trudy-la-intrusa.com al ISP de Alice. Como es natural, el ISP env\u00eda al servidor DNS de Trudy una consulta en la que se lo pide. Dicha consulta lleva el n\u00famero de secuencia que Trudy est\u00e1 buscando. R\u00e1pidamente, Trudy pide al ISP de Alice que busque a Bob. Trudy responde de inmediato su propia pregunta enviando al ISP una respuesta falsificada, supuestamente del servidor com de nivel superior que dice: \u201cbob.com es 42.9.9.9\u201d. Esta respuesta falsificada lleva un n\u00famero de secuencia, un n\u00famero m\u00e1s que el que acaba de recibir. Mientras est\u00e9 all\u00ed, puede enviar una segunda falsificaci\u00f3n con un n\u00famero de secuencia incrementado en dos, y tal vez una docena m\u00e1s con n\u00fameros de secuencia crecientes. Uno de ellos est\u00e1 obligado a coincidir. El resto simplemente se elimina. Cuando llega la respuesta falsificada de Alice, se almacena en cach\u00e9; cuando la respuesta real viene m\u00e1s tarde, se rechaza puesto que ninguna consulta est\u00e1 pendiente. Cuando Alice busca a bob.com, se le indica que utilice 42.9.9.9, la direcci\u00f3n de Trudy. \u00c9sta ha realizado un ataque hombre en medio desde la comodidad de su casa. En la figura 8-47 se ilustran los diversos pasos para este ataque. Para empeorar las cosas, \u00e9sta no es la \u00fanica forma de falsificar un DNS. Hay muchas otras formas.\nServidor DNS para com\nTrudy\nCach\u00e9 del ISP de Alice\n1. Busca foobar.trudy-la-intrusa.com (para obligarlo a entrar al cach\u00e9 del ISP) 2. Busca www.trudy-la-intrusa.com (para obtener el siguiente n\u00famero de secuencia del ISP) 3. Solicita www.trudy-la-intrusa.com (lleva el siguiente n\u00famero de secuencia del ISP, n) 4. R\u00e1pidamente, busca bob.com (para obligar a que el ISP consulte al servidor com en el paso 5) 5. Consulta leg\u00edtima para bob.com con seq = n+1 6. Respuesta falsificada de Trudy: Bob es 42.9.9.9, seq = n+1 7. Respuesta real (rechazada, demasiado tarde)\nFigura 8-47. La forma en que Trudy falsifica el ISP de Alice.\nSEC. 8.9\nSEGURIDAD EN WEB\n809\nDNS seguro Este ataque espec\u00edfico puede frustrarse al hacer que los servidores DNS utilicen IDs aleatorios en cualquiera de las consultas en lugar de s\u00f3lo contar, pero parece que cada vez que se tapa un hoyo, otro se destapa. El problema real es que el DNS se dise\u00f1\u00f3 en la \u00e9poca en la que Internet era una herramienta de investigaci\u00f3n para algunos cientos de universidades y ni Alice, ni Bob, ni mucho menos Trudy fueron invitados a la fiesta. En ese entonces la seguridad no era un problema; hacer que Internet funcionara era el problema. Con los a\u00f1os, el entorno ha cambiado radicalmente, por lo que en 1994 el IETF estableci\u00f3 un grupo funcional para hacer que DNS fuera seguro. Este proyecto se conoce como DNSsec (seguridad DNS); su salida se presenta en el RFC 2535. Desgraciadamente, DNSsec a\u00fan no se ha distribuido por completo, por lo que numerosos servidores DNS a\u00fan son vulnerables a ataques de falsificaci\u00f3n. DNSsec es en concepto muy sencillo. Se basa en la criptograf\u00eda de clave p\u00fablica. Cada zona DNS (en el sentido de la figura 7-4) tiene un par de claves p\u00fablica/privada. Toda la informaci\u00f3n enviada por un servidor DNS se firma con la clave privada de la zona originaria, por lo que el receptor puede verificar su autenticidad. DNSsec ofrece tres servicios fundamentales: 1. Prueba de en d\u00f3nde se originaron los datos. 2. Distribuci\u00f3n de la clave p\u00fablica. 3. Autenticaci\u00f3n de transacciones y solicitudes. El servicio principal es el que se lista primero, el cual verifica que los datos que se est\u00e1n regresando ha sido probado por el due\u00f1o de la zona. El segundo es \u00fatil para almacenar y recuperar de manera segura claves p\u00fablicas. El tercero es necesario para proteger contra ataques de repetici\u00f3n y falsificaci\u00f3n. Observe que la confidencialidad no es un servicio ofrecido puesto que toda la informaci\u00f3n en el DNS se considera como p\u00fablica. Puesto que la planificaci\u00f3n en etapas del DNSsec se lleva algunos a\u00f1os, es esencial la capacidad que tienen los servidores concientes de la seguridad para interactuar con los servidores que no est\u00e1n conscientes de ella, lo cual implica que el protocolo no puede cambiarse. Veamos ahora algunos de los detalles. Los registros DNS est\u00e1n agrupados en conjuntos llamados RRSets (Conjuntos de Registro de Recursos), en los que todos los registros tienen el mismo nombre, clase y tipo en un conjunto. Un RRSet puede contener m\u00faltiples registros A; por ejemplo, si un nombre DNS se resuelve en una direcci\u00f3n IP primaria y una secundaria. Los RRSets se extienden con varios nuevos tipos de registro (que se analizan a continuaci\u00f3n). A cada RRSet se le aplica un hash de manera criptogr\u00e1fica (por ejemplo, utilizando MD5 o SHA-1). La clave privada de la zona firma (por ejemplo, utilizando RSA) el hash. La unidad de transmisi\u00f3n a clientes es el RRSet firmado. Al momento de la recepci\u00f3n de un RRSet firmado, el cliente puede verificar si fue firmado por la clave privada de la zona originaria. Si la firma concuerda, se aceptan los datos. Puesto que cada RRSet contiene su propia firma, los RRSets pueden cambiarse en cualquier lugar, incluso en servidores no confiables, sin poner en peligro la seguridad.\n810\nSEGURIDAD EN REDES\nCAP. 8\nDNSsec introduce varios tipos nuevos de registros. El primero de \u00e9stos es el registro KEY. Estos registros mantienen la clave p\u00fablica de una zona, usuario, host u otro personaje principal, el algoritmo criptogr\u00e1fico utilizado para firmar, el protocolo utilizado para transmisi\u00f3n y otros bits. La clave p\u00fablica se almacena tal como est\u00e1. Los certificados X.509 no se utilizan debido a su volumen. El campo de algoritmo contiene un 1 para las firmas MD5/RSA (la opci\u00f3n preferida) y otros valores para otras combinaciones. El campo de protocolo puede indicar el uso de IPsec y otros protocolos de seguridad, si es que hay. SIG es el segundo nuevo tipo de registro. Contiene el hash firmado de acuerdo con el algoritmo especificado en el registro KEY. La firma se aplica a todos los registros del RRSet, incluyendo a cualquiera de los registros KEY presentes, pero excluy\u00e9ndose a s\u00ed mismo. Tambi\u00e9n contiene la fecha en la que la firma comienza su periodo de validaci\u00f3n y cuando \u00e9sta expira, as\u00ed como el nombre de quien firma y algunos otros elementos. El dise\u00f1o de DNSsec tiene la caracter\u00edstica de que es posible mantener sin conexi\u00f3n una clave privada de una zona. Una o dos veces al d\u00eda, el contenido de una base de datos de una zona puede transportarse de manera manual (por ejemplo, en CD-ROM) a una m\u00e1quina desconectada en la que se localiza una clave privada. Todos los RRSets pueden firmarse ah\u00ed y los registros SIG producidos de esa manera pueden transportarse al servidor primario de la zona en CD-ROM. De esta manera, la clave privada puede almacenarse en un CD-ROM guardado en forma segura excepto cuando se inserta en la m\u00e1quina desconectada para firmar los nuevos RRSets del d\u00eda. Despu\u00e9s de que se termina el proceso de firma, todas las copias de la clave se eliminan de la memoria y el disco y el CD-ROM son guardados. Este procedimiento reduce la seguridad electr\u00f3nica a seguridad f\u00edsica, algo que las personas saben c\u00f3mo tratar. Este m\u00e9todo de prefirmar los RRSets aumenta la velocidad de manera considerable el proceso de responder consultas puesto que no es necesario realizar criptograf\u00eda sobre la marcha. La desventaja consiste en que se necesita una gran cantidad de espacio en disco para almacenar todas las claves y firmas en las bases de datos DNS. Algunos registros incrementar\u00e1n diez veces el tama\u00f1o debido a la firma. Cuando un proceso de cliente obtenga un RRSet firmado, debe aplicar la clave p\u00fablica de la zona originaria para desencriptar el hash, calcular el hash mismo y comparar los dos valores. Si concuerdan, los datos se consideran v\u00e1lidos. Sin embargo, este procedimiento asume la manera de c\u00f3mo obtiene el cliente la clave p\u00fablica de la zona. Una forma es adquirirla de un servidor confiable, utilizando una conexi\u00f3n segura (por ejemplo, utilizando IPsec). Sin embargo, en la pr\u00e1ctica, se espera que los clientes ser\u00e1n preconfigurados con las claves p\u00fablicas de todos los dominios de nivel superior. Si Alice ahora desea visitar el sitio Web de Bob, puede pedir al DNS el RRSet de bob.com, que contendr\u00e1 su direcci\u00f3n IP y un registro KEY que contiene la clave p\u00fablica de Bob. Este RRSet ser\u00e1 firmado por el dominio com de nivel superior, por lo que Alice puede verificar f\u00e1cilmente su validez. Un ejemplo de lo que podr\u00eda contener este RRSet se muestra en la figura 8-48. Una vez que Alice tiene una copia verificada de la clave p\u00fablica de Bob, puede pedir al servidor DNS de Bob la direcci\u00f3n IP de www.bob.com. La clave privada de Bob firmar\u00e1 este RRSet, a fin de que Alice pueda verificar la firma del RRSet que Bob regresa. Si Trudy hace algo para inyectar un RRSet falso en cualquiera de los cach\u00e9s, Alice puede detectar f\u00e1cilmente su falta de autenticidad porque el registro SIG contenido ser\u00e1 incorrecto.\nSEC. 8.9\nSEGURIDAD EN WEB Nombre del dominio\nTiempo de vida\nClase\nTipo\nbob.com.\n86400\nIN\nA\n36.1.2.3\nbob.com.\n86400\nIN\nKEY\n3682793A7B73F731029CE2737D...\nbob.com.\n86400\nIN\nSIG\n86947503A8B848F5272E53930C...\n811\nValor\nFigura 8-48. Un RRSet de ejemplo para bob.com. El registro KEY es la clave p\u00fablica de Bob. El registro SIG es el hash firmado del servidor com de nivel superior de los registros A y KEY para verificar su autenticidad.\nSin embargo, DNSsec tambi\u00e9n proporciona un mecanismo criptogr\u00e1fico para enlazar una respuesta a una consulta espec\u00edfica, a fin de evitar el tipo de falsificaci\u00f3n utilizado por Trudy en la figura 8-47. Esta medida (opcional) de antifalsificaci\u00f3n agrega a la respuesta un hash del mensaje de consulta firmado con la clave privada del receptor. Puesto que Trudy no conoce la clave privada del servidor com de nivel superior, no puede falsificar una respuesta a una consulta que el ISP de Alice haya enviado a dicho servidor. Ciertamente Trudy puede conseguir que su respuesta regrese primero, pero ser\u00e1 rechazada debido a la firma inv\u00e1lida sobre la consulta con hash. DNSsec tambi\u00e9n soporta algunos otros tipos de registros. Por ejemplo, el registro CERT puede utilizarse para almacenar certificados (por ejemplo, X.509). Este registro ha sido proporcionado porque algunas personas desean cambiar un DNS en una PKI. Si esto realmente sucede, est\u00e1 por verse. Detendremos nuestro an\u00e1lisis de DNSsec aqu\u00ed. Para mayores detalles, por favor consulte el RFC 2535. Nombres autocertificables El DNS seguro no es la \u00fanica posibilidad para asegurar los nombres. Un m\u00e9todo completamente diferente se utiliza en el Sistema de Archivos Seguro (Mazi\u00e8res y cols., 1999). En este proyecto, los autores dise\u00f1aron un sistema de archivos seguro y escalable a nivel mundial, sin modificar el DNS (est\u00e1ndar) y sin utilizar certificados o suponer la existencia de una PKI. En esta secci\u00f3n mostraremos la forma en que estas ideas pueden aplicarse a Web. De manera acorde, en la descripci\u00f3n que daremos a continuaci\u00f3n, utilizaremos la terminolog\u00eda de Web en lugar de la del sistema de archivos. Pero para evitar cualquier posible confusi\u00f3n, mientras que este esquema podr\u00eda aplicarse a Web a fin de lograr una m\u00e1xima seguridad, actualmente no est\u00e1 en uso y podr\u00eda requerir cambios sustanciales de software para introducirla. Comenzaremos suponiendo que cada servidor Web tiene un par de claves p\u00fablica/privada. La esencia de la idea es que cada URL contiene un hash criptogr\u00e1fico del nombre del servidor y una clave p\u00fablica como parte del URL. Por ejemplo, en la figura 8-49 podemos ver el URL para la foto de Bob. Comienza con el esquema HTTP usual seguido por el nombre DNS del servidor (www.bob.com). A continuaci\u00f3n se encuentra un punto y coma y un hash de 32 caracteres. Al final est\u00e1 el nombre del archivo, nuevamente como es usual. Excepto por el hash, \u00e9ste es un URL est\u00e1ndar. Con el hash, es un URL autocertificable.\n812\nSEGURIDAD EN REDES\nCAP. 8\nSHA-1 (servidor, clave p\u00fablica Nombre de Servidor del servidor) archivo 644474448 64444444744444448 6447448 http://www.bob.com:2g5hd8bfjkc7mf6hg8dgany23xds4pe6/fotos/bob.jpg\nFigura 8-49. Un URL autocertificable que contiene un hash del nombre y la clave p\u00fablica del servidor.\nLa pregunta obvia es: \u00bfPara qu\u00e9 es el hash? \u00c9ste se calcula concatenando el nombre DNS del servidor con la clave p\u00fablica del servidor y ejecutando el resultado mediante la funci\u00f3n SHA-1 para obtener un hash de 160 bits. En este esquema, el hash se representa como una secuencia de 32 d\u00edgitos y letras en min\u00fasculas, a excepci\u00f3n de las letras \u201cl\u201d y \u201co\u201d y los d\u00edgitos \u201c1\u201d y \u201c0\u201d, para evitar la confusi\u00f3n. Esto deja 32 d\u00edgitos y letras. Con 32 caracteres disponibles, cada uno puede codificar una cadena de 5 bits. Una cadena de 32 caracteres puede contener el hash SHA-1 de 160 bits. Realmente, no es necesario utilizar un hash; puede utilizarse la clave misma. La ventaja del hash es que se reduce la longitud del nombre. La forma m\u00e1s sencilla (pero menos conveniente) para ver la foto de Bob, es que Alice simplemente teclee la cadena de la figura 8-49 en su navegador. \u00c9ste env\u00eda un mensaje al sitio Web de Bob pidi\u00e9ndole la clave p\u00fablica. Cuando llega la clave p\u00fablica de Bob, el navegador concatena el nombre del servidor y la clave p\u00fablica y ejecuta el algoritmo de hash. Si el resultado concuerda con el hash de 32 caracteres en el URL seguro, el navegador est\u00e1 seguro de que tiene la clave p\u00fablica de Bob. Despu\u00e9s de todo, debido a las propiedades de SHA-1, incluso aunque Trudy intercepte la solicitud y falsifique la respuesta, no tendr\u00e1 manera de encontrar una clave p\u00fablica que d\u00e9 el hash esperado. Por lo tanto, se detectar\u00e1 cualquier interferencia por parte de Trudy. La clave p\u00fablica de Bob puede almacenarse en cach\u00e9 para uso futuro. Ahora Alice tiene que verificar que Bob tiene la clave privada correspondiente. Ella construye un mensaje que contiene una clave de sesi\u00f3n AES propuesta, una marca aleatoria y una marca de tiempo. A continuaci\u00f3n encripta el mensaje con la clave p\u00fablica de Bob y se la env\u00eda. Puesto que s\u00f3lo Bob tiene la clave privada correspondiente, \u00fanicamente \u00e9l puede desencriptar el mensaje y regresar la marca aleatoria encriptada con la clave AES. Una vez que recibe la marca aleatoria AES encriptada correcta, Alice sabe que est\u00e1 hablando con Bob. Adem\u00e1s, Alice y Bob ahora tienen una clave de sesi\u00f3n AES para las solicitudes y respuestas GET subsecuentes. Una vez que Alice tiene la foto de Bob (o cualquier p\u00e1gina Web), puede marcarla, por lo que ya no tiene que teclear nuevamente todo el URL. Adem\u00e1s, los URLs incrustados en p\u00e1ginas Web tambi\u00e9n pueden ser autocertificables, por lo que pueden utilizarse con s\u00f3lo hacer clic en ellos, pero con la seguridad adicional de que sabe que la p\u00e1gina regresada es la correcta. Otras formas de evitar los URLs autocertificables son obtenerlos a trav\u00e9s de una conexi\u00f3n segura a un servidor confiable o tenerlos presentes en certificados X.509 firmados por CAs. Otra forma de obtener URLs autocertificables podr\u00eda ser conectarse con una m\u00e1quina de b\u00fasqueda confiable tecleando su URL autocertificable (la primera vez) e ir a trav\u00e9s del mismo protocolo como se describi\u00f3 anteriormente, lo que producir\u00eda una conexi\u00f3n autenticada segura con la m\u00e1quina de b\u00fasqueda confiable. A continuaci\u00f3n podr\u00eda consultarse dicha m\u00e1quina de b\u00fasqueda, y los resultados aparecer\u00edan en una p\u00e1gina firmada llena de URLs autocertificables en los que se podr\u00eda hacer clic sin tener que teclear cadenas largas.\nSEC. 8.9\nSEGURIDAD EN WEB\n813\nAhora veamos qu\u00e9 efectos tiene este m\u00e9todo en la falsificaci\u00f3n de DNS de Trudy. Si Trudy se las arregla para envenenar el cach\u00e9 del ISP de Alice, la solicitud de \u00e9sta podr\u00eda ser falsamente entregada a Trudy en lugar de a Bob. Pero el protocolo ahora requiere que el destinatario de un mensaje original (es decir, Trudy) regrese una clave p\u00fablica que produce el hash correcto. Si Trudy regresa su propia clave p\u00fablica, Alice lo detectar\u00e1 inmediatamente porque el hash SHA-1 no coincidir\u00e1 con el URL autocertificable. Si Trudy regresa la clave p\u00fablica de Bob, Alice no detectar\u00e1 el ataque, pero encriptar\u00e1 su siguiente mensaje, utilizando la clave de Bob. Trudy obtendr\u00e1 el mensaje, pero no tendr\u00e1 forma de desencriptarlo para extraer la clave AES y la marca aleatoria. De cualquier forma, todo lo que la falsificaci\u00f3n DNS puede hacer es proporcionar un ataque de negaci\u00f3n de servicio.\n8.9.3 SSL\u2014La Capa de Sockets Seguros La asignaci\u00f3n de nombres segura es un buen inicio, pero hay mucho m\u00e1s sobre la seguridad en Web. El siguiente paso son las conexiones seguras. A continuaci\u00f3n veremos c\u00f3mo pueden lograrse las conexiones seguras. Cuando Web irrumpi\u00f3 a la vista p\u00fablica, inicialmente s\u00f3lo se utiliz\u00f3 para distribuir p\u00e1ginas est\u00e1ticas. Sin embargo, pronto algunas compa\u00f1\u00edas tuvieron la idea de utilizarla para transacciones financieras, como para comprar mercanc\u00eda con tarjeta de cr\u00e9dito, operaciones bancarias en l\u00ednea y comercio electr\u00f3nico de acciones. Estas aplicaciones crearon una demanda de conexiones seguras. En 1995, Netscape Communications Corp, el entonces fabricante l\u00edder de navegadores, respondi\u00f3 a esta demanda con un paquete de seguridad llamado SSL (Capa de Sockets Seguros). En la actualidad, este software y su protocolo se utilizan ampliamente, incluso por Internet Explorer, por lo que vale la pena examinarlo en detalle. SSL construye una conexi\u00f3n segura entre los dos sockets, incluyendo 1. Negociaci\u00f3n de par\u00e1metros entre el cliente y el servidor. 2. Autenticaci\u00f3n tanto del cliente como del servidor. 3. Comunicaci\u00f3n secreta. 4. Protecci\u00f3n de la integridad de los datos. Ya hemos visto antes estos elementos, por lo que no hay necesidad de volver a tratarlos. En la figura 8-50 se ilustra la posici\u00f3n de SSL en la pila de protocolos usuales. Efectivamente, es una nueva capa colocada entre la capa de aplicaci\u00f3n y la de transporte, que acepta solicitudes del navegador y envi\u00e1ndolas al TCP para transmitir al servidor. Una vez que se ha establecido la conexi\u00f3n segura, el trabajo principal de SSL es manejar la compresi\u00f3n y encriptaci\u00f3n. Cuando HTTP se utiliza encima de SSL, se conoce como HTTPS (HTTP Seguro), aunque es el protocolo HTTP est\u00e1ndar. Sin embargo, algunas veces est\u00e1 disponible en un nuevo puerto (443) en lugar de en uno est\u00e1ndar (80). Adem\u00e1s, SSL no est\u00e1 restringido a utilizarse s\u00f3lo con navegadores Web, pero \u00e9sa es la aplicaci\u00f3n m\u00e1s com\u00fan. El protocolo SSL ha pasado por varias versiones. A continuaci\u00f3n s\u00f3lo trataremos la versi\u00f3n 3, que es la versi\u00f3n m\u00e1s ampliamente utilizada. SSL soporta una variedad de algoritmos y opciones\n814\nSEGURIDAD EN REDES\nCAP. 8\nAplicaci\u00f3n (HTTP) Seguridad (SSL) Transporte (TCP) Red (IP) Enlace de datos (PPP) F\u00edsica (m\u00f3dem, ADSL, TV por cable)\nFigura 8-50. Capas (y protocolos) para una navegaci\u00f3n de usuario dom\u00e9stico con SSL.\ndiferentes. Entre dichas opciones se incluyen la presencia o ausencia de compresi\u00f3n, los algoritmos criptogr\u00e1ficos a utilizar y algunos asuntos relacionados con la exportaci\u00f3n de restricciones en la criptograf\u00eda. La \u00faltima es la destinada principalmente para asegurarse de que se utilice criptograf\u00eda seria s\u00f3lo cuando ambos lados de la conexi\u00f3n est\u00e9n en los Estados Unidos. En otros casos, las claves se limitan a 40 bits, lo que los cript\u00f3grafos consideran como una broma. El gobierno de los Estados Unidos oblig\u00f3 a Netscape a incluir esta restricci\u00f3n para obtener una licencia de exportaci\u00f3n. SSL consiste en dos subprotocolos, uno para establecer una conexi\u00f3n segura y otro para utilizarla. Comencemos viendo c\u00f3mo se establecen las conexiones seguras. En la figura 8-51 se muestra el subprotocolo de establecimiento de conexi\u00f3n. Comienza con el mensaje 1, cuando Alice env\u00eda una solicitud a Bob para que establezca una conexi\u00f3n. La solicitud especifica la versi\u00f3n SSL que tiene Alice y sus preferencias con respecto a los algoritmos criptogr\u00e1ficos y de compresi\u00f3n. Tambi\u00e9n contiene una marca aleatoria, RA, para utilizarse m\u00e1s tarde. Ahora es el turno de Bob. En el mensaje 2, Bob realiza una elecci\u00f3n de entre los diversos algoritmos que Alice puede soportar y env\u00eda su propia marca aleatoria, RB. Despu\u00e9s, en el mensaje 3, env\u00eda un certificado que contiene su clave p\u00fablica. Si este certificado no est\u00e1 firmado por alguna autoridad bien conocida, tambi\u00e9n env\u00eda una cadena de certificados que pueden seguirse hasta encontrar uno. Todos los navegadores, incluyendo el de Alice, vienen precargados con aproximadamente 100 claves p\u00fablicas, por lo que si Bob puede establecer una cadena anclada a una de ellas, Alice podr\u00e1 verificar la clave p\u00fablica de Bob. En este punto Bob podr\u00eda enviar algunos otros mensajes (por ejemplo, podr\u00eda solicitar el certificado de la clave p\u00fablica de Alice). Cuando Bob termina, env\u00eda el mensaje 4 para indicar a Alice que es su turno. Alice responde eligiendo una clave premaestra aleatoria de 384 bits y envi\u00e1ndola a Bob encriptada con la clave p\u00fablica de \u00e9l (mensaje 5). La clave de sesi\u00f3n real utilizada para encriptar datos se deriva de la clave premaestra combinada con las dos marcas aleatorias en una forma compleja. Despu\u00e9s de que se ha recibido el mensaje 5, tanto Alice como Bob pueden calcular la clave de sesi\u00f3n. Por esta raz\u00f3n, Alice indica a Bob que cambie al nuevo cifrado (mensaje 6) y tambi\u00e9n que ha terminado con el establecimiento del subprotocolo (mensaje 7). Despu\u00e9s Bob confirma que ha recibido la indicaci\u00f3n (mensajes 8 y 9). Sin embargo, aunque Alice sabe qui\u00e9n es Bob, \u00e9ste no sabe qui\u00e9n es Alice (a menos que Alice tenga una clave p\u00fablica y un certificado correspondiente para ella, una situaci\u00f3n no probable para un individuo). Por lo tanto, el primer mensaje de Bob puede ser una solicitud para que Alice inicie una sesi\u00f3n utilizando un nombre de inicio de sesi\u00f3n y una contrase\u00f1a previamente establecidos.\nSEC. 8.9\n815\nSEGURIDAD EN WEB Versi\u00f3n SSL, Preferencias, RA Versi\u00f3n SSL, Opciones, RB Cadena de certificados X.509\nEB (Clave premaestra)\nBob\nAlice\nServidor completo\nCambiar cifrado Terminado Cambiar cifrado Terminado\nFigura 8-51. Una versi\u00f3n simplificada del subprotocolo de establecimiento de conexi\u00f3n SSL.\nSin embargo, el protocolo de inicio de sesi\u00f3n est\u00e1 fuera del alcance de SSL. Una vez que se ha consumado, por cualquier medio, puede comenzar el transporte de los datos. Como se mencion\u00f3 anteriormente, SSL soporta m\u00faltiples algoritmos criptogr\u00e1ficos. El m\u00e1s robusto utiliza triple DES con tres claves separadas para encriptaci\u00f3n y SHA-1 para la integridad de mensajes. Esta combinaci\u00f3n es relativamente lenta, por lo que se utiliza principalmente para operaciones bancarias y otras aplicaciones en las que se requiere la seguridad de mayor nivel. Para las aplicaciones comunes de comercio electr\u00f3nico, se utiliza RC4 con una clave de 128 bits para encriptaci\u00f3n y MD5 se utiliza para la autenticaci\u00f3n de mensajes. RC4 toma la clave de 128 bits como semilla y la expande a un n\u00famero mucho m\u00e1s grande para uso interno. Despu\u00e9s utiliza este n\u00famero interno para generar un flujo de claves. A \u00e9ste se le aplica un OR exclusivo con el texto llano para proporcionar un cifrado cl\u00e1sico de flujo, como vimos en la figura 8-14. Las versiones de exportaci\u00f3n tambi\u00e9n utilizan RC4 con claves de 128 bits, 88 de los cuales se hacen p\u00fablicos para que el cifrado sea f\u00e1cil de romper. Para un transporte real se utiliza un segundo subprotocolo, como se muestra en la figura 8-52. Los mensajes que provengan del navegador primero se dividen en unidades de hasta 16 KB. Si se activa la compresi\u00f3n, cada unidad se comprime por separado. Despu\u00e9s de eso, se deriva una clave secreta a partir de las dos marcas aleatorias y la clave premaestra se concatena con el texto comprimido y al resultado se le aplica un hash con el algoritmo de hash acordado (por lo general MD5). Este hash se agrega a cada fragmento como el MAC. Despu\u00e9s, el fragmento comprimido y el MAC se encriptan con el algoritmo de encriptaci\u00f3n sim\u00e9trico acordado (por lo general, aplic\u00e1ndole un OR exclusivo con el flujo de claves RC4). Por \u00faltimo, se agrega un encabezado de fragmento y el fragmento se transmite a trav\u00e9s de la conexi\u00f3n TCP.\n816\nSEGURIDAD EN REDES\nCAP. 8\nMensaje del navegador\nParte 1\nFragmentaci\u00f3n\nParte 2\nC\u00f3digo de autenticaci\u00f3n de mensajes\nCompresi\u00f3n\nMAC agregado\nEncriptaci\u00f3n\nEncabezado agregado\nFigura 8-52. Transmisi\u00f3n de datos mediante SSL.\nSin embargo, es necesaria una advertencia. Puesto que se ha mostrado que el RC4 tiene claves d\u00e9biles que pueden criptoanalizarse con facilidad, la seguridad de SSL mediante RC4 no es muy confiable (Fluhrer y cols., 2001). Los navegadores que permiten que el usuario elija el conjunto de cifrado deben configurarse para utilizar todo el tiempo triple DES con claves de 168 bits y SHA-1, aunque esta combinaci\u00f3n es m\u00e1s lenta que RC4 y MD5. Otro problema con SSL es que tal vez los personajes principales no tienen certificados e incluso si los tienen, no siempre verifican que coincidan las claves que se utilizan. En 1996, Netscape Communications Corp. mand\u00f3 el SSL a la IETF para su estandarizaci\u00f3n. El resultado fue TLS (Seguridad de Capa de Transporte). Se describe en el RFC 2246. Los cambios hechos a SSL fueron relativamente peque\u00f1os, pero s\u00f3lo lo suficiente para que SSL versi\u00f3n 3 y TLS no puedan interoperar. Por ejemplo, la forma en que se deriva una clave de sesi\u00f3n a partir de la clave premaestra y las marcas aleatorias se cambi\u00f3 para hacer que la clave fuera m\u00e1s fuerte (es decir, fuera dif\u00edcil de criptoanalizar). La versi\u00f3n TLS tambi\u00e9n se conoce como SSL versi\u00f3n 3.1. Las primeras implementaciones aparecieron en 1999, pero a\u00fan no es claro si TLS reemplazar\u00e1 a SSL en la pr\u00e1ctica, aunque es ligeramente m\u00e1s fuerte. Sin embargo, permanece el problema con las claves d\u00e9biles RC4.\n8.9.4 Seguridad de c\u00f3digo m\u00f3vil La asignaci\u00f3n de nombres y las conexiones son dos \u00e1reas de preocupaci\u00f3n que se relacionan con la seguridad en Web. Pero hay m\u00e1s. En los primeros d\u00edas, cuando las p\u00e1ginas Web eran simplemente archivos HTML est\u00e1ticos, no conten\u00edan c\u00f3digo ejecutable. Ahora con frecuencia contienen peque\u00f1os programas, incluyendo subprogramas de Java, controles ActiveX y JavaScripts. Descargar y ejecutar tal c\u00f3digo m\u00f3vil obviamente es un riesgo de seguridad masivo, por lo que se han\nSEC. 8.9\n817\nSEGURIDAD EN WEB\ndise\u00f1ado varios m\u00e9todos para minimizarlo. A continuaci\u00f3n daremos un vistazo a algunos de los problemas surgidos debido al c\u00f3digo m\u00f3vil y a algunos m\u00e9todos para tratarlos. Seguridad de subprogramas de Java Los subprogramas de Java son peque\u00f1os programas de Java compilados a un lenguaje de m\u00e1quina orientado a pilas llamado JVM (M\u00e1quina Virtual de Java). Pueden colocarse en una p\u00e1gina Web para descargarlos junto con dicha p\u00e1gina. Despu\u00e9s de que la p\u00e1gina se carga, los subprogramas se insertan en un int\u00e9rprete JVM dentro del navegador, como se ilustra en la figura 8-53. Espacio virtual de direcciones\nSubprograma no confiable\nCaja de arena Subprograma confiable\nInt\u00e9rprete Navegador Web\nFigura 8-53. Los subprogramas pueden ser interpretados por un navegador Web.\nLa ventaja de ejecutar c\u00f3digo interpretado en lugar de compilado es que cada instrucci\u00f3n es examinada por el int\u00e9rprete antes de ser ejecutada. Esto da al int\u00e9rprete la oportunidad de verificar si la direcci\u00f3n de la instrucci\u00f3n es v\u00e1lida. Adem\u00e1s, las llamadas de sistema tambi\u00e9n son atrapadas e interpretadas. La forma en que se manejan estas llamadas depende de la pol\u00edtica de seguridad. Por ejemplo, si un subprograma es confiable (por ejemplo, proviene del disco local), sus llamadas de sistema podr\u00edan transportarse sin pregunta alguna. Sin embargo, si un subprograma no es confiable (por ejemplo, proviene de Internet), podr\u00eda encapsularse en lo que se conoce como caja de arena para restringir su comportamiento y atrapar sus intentos por utilizar los recursos del sistema. Cuando un subprograma intenta utilizar un recurso del sistema, su llamada se pasa al monitor de seguridad para que la apruebe. El monitor examina la llamada a la luz de la pol\u00edtica de seguridad local y despu\u00e9s toma una decisi\u00f3n para permitirla o rechazarla. De esta manera, es posible proporcionar acceso a los subprogramas a algunos recursos pero no a todos. Desgraciadamente, la realidad es que el modelo de seguridad no funciona del todo bien y con frecuencia surgen errores. ActiveX Los controles ActiveX son programas binarios Pentium que pueden incrustarse en p\u00e1ginas Web. Cuando se encuentra alguno de ellos, se realiza una verificaci\u00f3n para ver si se debe ejecutar, y si pasa la prueba, se ejecuta. No est\u00e1 interpretado o puesto en una caja de arena de ninguna\n818\nSEGURIDAD EN REDES\nCAP. 8\nmanera, por lo que tiene tanto poder que cualquier otro programa de usuario, y puede hacer mucho da\u00f1o. Por lo tanto, toda la seguridad recae en la decisi\u00f3n de si se ejecuta o no el control ActiveX. El m\u00e9todo que Microsoft eligi\u00f3 para tomar esta decisi\u00f3n se basa en la idea de la firma de c\u00f3digo. Cada control ActiveX est\u00e1 acompa\u00f1ado por una firma digital \u2014un hash del c\u00f3digo que est\u00e1 firmado por su creador utilizando la encriptaci\u00f3n de clave p\u00fablica. Cuando aparece un control ActiveX, el navegador primero verifica la firma para asegurarse de que no ha sido alterada en el camino. Si la firma es correcta, el navegador verifica a continuaci\u00f3n sus tablas internas para ver si el creador del programa es confiable o hay una cadena de confianza hacia un creador confiable. Si el creador es confiable, el programa se ejecuta; de lo contrario, no se ejecuta. El sistema de Microsoft para verificar controles ActiveX se conoce como Authenticode. Es \u00fatil comparar los m\u00e9todos de Java y ActiveX. Con el m\u00e9todo de Java, no se realiza ning\u00fan intento por determinar qui\u00e9n escribi\u00f3 el subprograma. En su lugar, un int\u00e9rprete en tiempo de ejecuci\u00f3n se asegura de que el subprograma no haga lo que el due\u00f1o de la m\u00e1quina haya prohibido. En contraste, con la firma de c\u00f3digo, no hay intento por supervisar el comportamiento en tiempo de ejecuci\u00f3n del c\u00f3digo m\u00f3vil. Si proviene de un origen confiable y no ha sido modificado en el camino, simplemente se ejecuta. No se realiza ning\u00fan intento por ver si el c\u00f3digo es maligno o no. Si el programador original destin\u00f3 el c\u00f3digo para formatear el disco duro y despu\u00e9s borra la flash ROM a fin de que la computadora nunca vuelva a encenderse, y si el programador ha sido certificado como confiable, el c\u00f3digo se ejecutar\u00e1 y destruir\u00e1 la computadora (a menos que los controles ActiveX hayan sido desactivados en el navegador). Muchas personas piensan que confiar en software de una compa\u00f1\u00eda desconocida es temible. Para demostrar el problema, un programador de Seattle form\u00f3 una compa\u00f1\u00eda de software y la certific\u00f3 como confiable, lo cual es f\u00e1cil de hacer. Despu\u00e9s escribi\u00f3 un control ActiveX que apagaba limpiamente la m\u00e1quina y lo distribuy\u00f3 ampliamente. Apag\u00f3 muchas m\u00e1quinas, pero pod\u00edan encenderse nuevamente, por lo que no caus\u00f3 ning\u00fan da\u00f1o. Simplemente trataba de exponer el problema al mundo. La respuesta oficial fue revocar el certificado a este control ActiveX espec\u00edfico, lo cual acab\u00f3 con un corto episodio vergonzoso, pero el problema subyacente a\u00fan est\u00e1 all\u00ed para que un programador con no buenas intenciones se aproveche de \u00e9l (Garfinkel y Spafford, 2002). Puesto que no hay forma de vigilar miles de compa\u00f1\u00edas de software que podr\u00edan escribir c\u00f3digo m\u00f3vil, la t\u00e9cnica de firma de c\u00f3digo es un desastre al acecho. JavaScript JavaScript no tiene ning\u00fan modelo de seguridad formal, pero tiene una larga historia de implementaciones defectuosas. Cada fabricante maneja la seguridad de forma diferente. Por ejemplo, la versi\u00f3n 2 de Netscape Navigator utiliz\u00f3 algo semejante al modelo de Java, pero en la versi\u00f3n 4 se abandon\u00f3 por un modelo de firma de c\u00f3digo. El problema fundamental es que permitir la ejecuci\u00f3n de c\u00f3digo extra\u00f1o en su m\u00e1quina es abrir la puerta a los problemas. Desde el punto de vista de la seguridad, es como invitar a un ladr\u00f3n a su casa y despu\u00e9s tratar de vigilarlo cuidadosamente de manera que no pueda ir de la cocina\nSEC. 8.10\nASPECTOS SOCIALES\n819\na la sala. Si algo inesperado sucede y est\u00e1 distra\u00eddo por un momento, pueden suceder cosas extra\u00f1as. El suspenso aqu\u00ed es que el c\u00f3digo m\u00f3vil permite gr\u00e1ficos vistosos e interacci\u00f3n r\u00e1pida, y muchos dise\u00f1adores de sitios Web piensan que esto es m\u00e1s importante que la seguridad, especialmente cuando es la m\u00e1quina de alguien m\u00e1s la que est\u00e1 en riesgo. Virus Los virus son otra forma de c\u00f3digo m\u00f3vil. S\u00f3lo que a diferencia de los ejemplos anteriores, los virus no se invitan de ninguna manera. La diferencia entre un virus y el c\u00f3digo m\u00f3vil ordinario es que los virus se escriben para que se reproduzcan a s\u00ed mismos. Cuando llegan los virus, ya sea por medio de una p\u00e1gina Web, un archivo adjunto de correo electr\u00f3nico, o alg\u00fan otro medio, por lo general inician infectando los programas ejecutables del disco. Cuando se ejecuta alguno de estos programas, el control se transfiere al virus, que por lo general trata de esparcirse a s\u00ed mismo a otras m\u00e1quinas, por ejemplo, enviando por correo electr\u00f3nico copias de s\u00ed mismo a cualquier persona que se encuentre en la libreta de direcciones de la v\u00edctima. Algunos virus infectan el sector de arranque del disco duro, por lo que cuando la m\u00e1quina se inicia, el virus se ejecuta. Los virus se han convertido en un gran problema en Internet y han causado que se pierdan miles de millones de d\u00f3lares por los da\u00f1os. No hay soluci\u00f3n a este problema. Tal vez podr\u00eda ayudar una nueva generaci\u00f3n de sistemas operativos basados en microkernels seguros y el compartimiento de usuarios, procesos y recursos.\n8.10 ASPECTOS SOCIALES Internet y su tecnolog\u00eda de seguridad es un \u00e1rea donde confluyen los aspectos sociales, las pol\u00edticas de seguridad y la tecnolog\u00eda, frecuentemente con consecuencias importantes. A continuaci\u00f3n s\u00f3lo examinaremos con brevedad tres \u00e1reas: privacidad, libertad de expresi\u00f3n y derechos de autor. No es necesario decir que s\u00f3lo echaremos un vistazo. Para mayor informaci\u00f3n, vea (Anderson, 2001; Garfinkel con Spafford, 2002, y Schneier, 2000). En Internet tambi\u00e9n puede encontrar mucho material. Simplemente introduzca en cualquier m\u00e1quina de b\u00fasqueda palabras como \u201cprivacidad\u201d, \u201ccensura\u201d y \u201cderechos de autor\u201d. Adem\u00e1s, vea el sitio Web de este libro para obtener algunos v\u00ednculos.\n8.10.1 Privacidad \u00bfLas personas tienen derecho a la privacidad? Buena pregunta. La Cuarta Enmienda de los Estados Unidos proh\u00edbe que el gobierno busque en las casas, documentos y bienes de las personas sin una raz\u00f3n v\u00e1lida y restringe las circunstancias en las que se deben emitir las \u00f3rdenes de cateo. Por lo tanto, la privacidad ha estado en la agenda p\u00fablica aproximadamente durante 200 a\u00f1os, por lo menos en Estados Unidos.\n820\nSEGURIDAD EN REDES\nCAP. 8\nEn la d\u00e9cada pasada cambi\u00f3 la facilidad con la que el gobierno puede espiar a sus ciudadanos y la facilidad con la que \u00e9stos pueden evitar tal espionaje. En el siglo XVIII, para que el gobierno pudiera buscar en los documentos de los ciudadanos, ten\u00eda que enviar un polic\u00eda a caballo a la granja de dicho ciudadano exigiendo ver ciertos documentos. Era un procedimiento engorroso. Hoy en d\u00eda, las compa\u00f1\u00edas telef\u00f3nicas y los proveedores de Internet proporcionan con facilidad intervenciones telef\u00f3nicas cuando se les presenta una orden de cateo. Esto facilita la vida del polic\u00eda y ya no hay peligro de que se caiga del caballo. La criptograf\u00eda cambia todo esto. Cualquiera que se tome la molestia de bajar e instalar PGP y quien utilice una clave bien custodiada de fuerza alien puede estar seguro de que nadie en el universo conocido puede leer su correo electr\u00f3nico, haya o no orden de cateo. Los gobiernos entienden bien esto y no les gusta. La privacidad real para ellos significa que les ser\u00e1 mucho m\u00e1s dif\u00edcil espiar a los criminales de todo tipo, y todav\u00eda les ser\u00e1 m\u00e1s dif\u00edcil espiar a los reporteros y oponentes pol\u00edticos. En consecuencia, algunos gobiernos restringen o proh\u00edben el uso o exportaci\u00f3n de la criptograf\u00eda. Por ejemplo, en Francia, antes de 1999, la criptograf\u00eda estaba prohibida a menos que se le proporcionaran las claves al gobierno. Esto no s\u00f3lo suced\u00eda en Francia. En abril de 1993, el gobierno de Estados Unidos anunci\u00f3 su intenci\u00f3n de hacer que un criptoprocesador de hardware, el procesador clipper, fuera el est\u00e1ndar en toda la comunicaci\u00f3n en red. De esta manera, se dijo, la privacidad de los ciudadanos estar\u00eda garantizada. Tambi\u00e9n se mencion\u00f3 que el procesador proporcionar\u00eda al gobierno la capacidad de desencriptar todo el tr\u00e1fico a trav\u00e9s de un esquema llamado dep\u00f3sito de claves, el cual permit\u00eda que el gobierno accediera a todas las claves. Sin embargo, se prometi\u00f3 que s\u00f3lo se espiar\u00eda cuando se tuviera una orden de cateo v\u00e1lida. No es necesario decir que se gener\u00f3 una gran controversia por esta situaci\u00f3n, en la que los activistas de la privacidad condenaban todo el plan y los oficiales del cumplimiento de la ley la aclamaban. En alg\u00fan momento, el gobierno se retract\u00f3 y abandon\u00f3 la idea. En el sitio Web de la Electronic Frontier Foundation, www.eff.org, est\u00e1 disponible una gran cantidad de informaci\u00f3n acerca de la privacidad electr\u00f3nica. Retransmisores de correo an\u00f3nimos PGP, SSL y otras tecnolog\u00edas hacen posible que dos partes establezcan comunicaci\u00f3n segura y autenticada, libre de vigilancia e interferencia de terceros. Sin embargo, algunas veces la privacidad se aplica mejor cuando no hay autenticaci\u00f3n, es decir, haciendo que la comunicaci\u00f3n sea an\u00f3nima. El anonimato podr\u00eda quererse para los mensajes punto a punto, grupos de noticias o ambos. Veamos algunos ejemplos. Primero, los disidentes pol\u00edticos que viven bajo reg\u00edmenes autoritarios con frecuencia desean comunicarse de manera an\u00f3nima para evitar ser encarcelados o asesinados. Segundo, por lo general las acciones ilegales en muchas organizaciones gubernamentales, educacionales, corporativas, entre otras, son denunciadas por personas que con frecuencia prefieren permanecer en el anonimato para evitar represalias. Tercero, las personas con creencias religiosas, pol\u00edticas y sociales impopulares podr\u00edan querer comunicarse entre ellas a trav\u00e9s de correo electr\u00f3nico o grupos de noticias sin exponerse a s\u00ed mismos. Cuarto, las personas podr\u00edan desear discutir el alcoholismo, las enfermedades mentales, el acoso sexual, el abuso a infantes o ser\nSEC. 8.10\nASPECTOS SOCIALES\n821\nmiembros de una minor\u00eda perseguida de un grupo de noticias sin revelar su identidad. Por supuesto, existen muchos otros ejemplos. Consideremos un ejemplo espec\u00edfico. En la d\u00e9cada de 1990 algunos cr\u00edticos publicaron sus puntos de vista sobre un grupo religioso no tradicional, en un grupo de noticias de USENET a trav\u00e9s de un retransmisor de correo an\u00f3nimo. Este servidor permit\u00eda que los usuarios crearan pseud\u00f3nimos y le enviaran correo electr\u00f3nico, y despu\u00e9s dicho servidor volv\u00eda a enviar o publicar tal correo utilizando el pseud\u00f3nimo creado, de manera que nadie pod\u00eda saber de d\u00f3nde proven\u00eda realmente el mensaje. Algunas publicaciones revelaron informaci\u00f3n que el grupo religioso afirmaba eran secretos comerciales y documentos con derechos de autor. Por lo tanto, dicho grupo fue con las autoridades locales y les dijo que sus secretos comerciales hab\u00edan sido revelados y que sus derechos de autor hab\u00edan sido violados, lo cual eran delitos en el lugar donde se localizaba el servidor. En consecuencia, se produjo un juicio y el operador del servidor fue obligado a entregar la informaci\u00f3n de correspondencia, la cual revel\u00f3 las verdaderas identidades de las personas quienes realizaron las publicaciones. (Incidentalmente, \u00e9sta no fue la primera vez que una religi\u00f3n no estaba de acuerdo con que alguien revelara sus secretos: William Tyndale fue quemado en la hoguera en 1536 por traducir al ingl\u00e9s la Biblia.) Un segmento considerable de la comunidad de Internet se indign\u00f3 por esta brecha de confidencialidad. La conclusi\u00f3n a la que todos llegaron es que no sirve de nada un retransmisor an\u00f3nimo que almacena una correspondencia entre las direcciones reales de correo electr\u00f3nico y los pseud\u00f3nimos (llamado retransmisor de correo de tipo 1). Este caso estimul\u00f3 a varias personas a dise\u00f1ar retransmisores de correo an\u00f3nimos que pudieran resistir ataques de citaciones legales. Estos nuevos retransmisores, con frecuencia llamados retransmisores de correo cypherpunks, funcionan como se describe a continuaci\u00f3n. El usuario produce un mensaje de correo electr\u00f3nico, lleno de encabezados RFC 822 (excepto From:, por supuesto), lo encripta con la clave p\u00fablica del retransmisor y lo env\u00eda a \u00e9ste. Ah\u00ed se eliminan los encabezados externos RFC 822, el contenido se desencripta y el mensaje es retransmitido. El retransmisor no tiene cuentas ni mantiene registros, por lo que aunque el servidor se confisque posteriormente, no contiene ni una huella de los mensajes que han pasado a trav\u00e9s de \u00e9l. Muchos usuarios que desean el anonimato encadenan sus solicitudes a trav\u00e9s de m\u00faltiples retransmisores an\u00f3nimos, como se muestra en la figura 8-54. Aqu\u00ed, Alice desea enviar a Bob una tarjeta del D\u00eda de San Valent\u00edn en verdad an\u00f3nima, por lo que utiliza tres retransmisores. Redacta el mensaje, M, y coloca en \u00e9l un encabezado que contiene la direcci\u00f3n de correo electr\u00f3nico de Bob. Despu\u00e9s encripta todo el mensaje con la clave p\u00fablica del retransmisor 3, E3 (indicado por el sombreado horizontal). Para esto anexa al principio un encabezado con la direcci\u00f3n de correo electr\u00f3nico en texto llano del retransmisor 3. En la figura, este mensaje es el que se muestra entre los retransmisores 2 y 3. A continuaci\u00f3n encripta este mensaje con la clave p\u00fablica del retransmisor 2, E2 (indicado por el sombreado vertical) y anexa al principio un encabezado en texto llano que contiene la direcci\u00f3n de correo electr\u00f3nico del retransmisor 2. Este mensaje se muestra en la figura 8-54 entre los retransmisores 1 y 2. Por \u00faltimo, Alice encripta todo el mensaje con la clave p\u00fablica del retransmisor 1, E1, y anexa al inicio un encabezado en texto llano con la direcci\u00f3n de correo electr\u00f3nico del retransmisor 1. En la figura, este mensaje es el que est\u00e1 a la derecha de Alice y tambi\u00e9n es el que ella transmite en realidad.\n822\nSEGURIDAD EN REDES\nA1 A2 A3\nEncriptado con E1 A2 A3\nEncriptado con E2 A3\nCAP. 8\nEncriptado con E3\nA Bob\nA Bob\nA Bob\nA Bob\nM\nM\nM\nM\nAlice\nBob Retransmisor an\u00f3nimo\nFigura 8-54. C\u00f3mo utiliza Alice tres retransmisores de correo para enviar un mensaje a Bob.\nCuando el mensaje llega al retransmisor de correo 1, el encabezado exterior se elimina. El cuerpo se desencripta y despu\u00e9s se env\u00eda al retransmisor de correo 2. En los otros dos retransmisores se realizan pasos similares. Aunque para cualquiera es muy dif\u00edcil rastrear el mensaje final de regreso a Alice, muchos retransmisores de correo toman precauciones de seguridad adicionales. Por ejemplo, tal vez mantengan los mensajes por un tiempo aleatorio, agreguen o eliminen basura al final de un mensaje, y reordenen los mensajes, todo esto para dificultar que alguien pueda indicar cu\u00e1l mensaje de un retransmisor de correo corresponde a qu\u00e9 entrada, a fin de frustrar el an\u00e1lisis de tr\u00e1fico. Para una descripci\u00f3n de un sistema que representa lo \u00faltimo en correo electr\u00f3nico an\u00f3nimo, vea (Mazi\u00e8res y Kaashoek, 1998). El anonimato no se limita al correo electr\u00f3nico. Tambi\u00e9n existen servicios que permiten la navegaci\u00f3n an\u00f3nima en Web. El usuario configura su navegador para utilizar el anonymizer como un proxy. De ah\u00ed en adelante, todas las solicitudes HTTP se dirigir\u00e1n al anonymizer, el cual solicitar\u00e1 y regresar\u00e1 la p\u00e1gina. El sitio Web ve al anonymizer, y no al usuario, como el origen de la solicitud. Siempre y cuando el anonymizer se abstenga de mantener una bit\u00e1cora, nadie podr\u00e1 determinar qui\u00e9n solicit\u00f3 qu\u00e9 p\u00e1gina.\n8.10.2 Libertad de expresi\u00f3n La privacidad se refiere a los individuos que desean restringir lo que otras personas ven en ellos. Un segundo problema social clave es la libertad de expresi\u00f3n, y su aspecto opuesto, la censura, que tiene que ver con el hecho de que los gobiernos desean restringir lo que los individuos pueden leer y publicar. Debido a que la Web contiene millones y millones de p\u00e1ginas, se ha vuelto un para\u00edso de censura. Dependiendo de la naturaleza e ideolog\u00eda del r\u00e9gimen, entre el material prohibido podr\u00edan encontrarse los sitios Web que contengan cualquiera de lo siguiente: 1. Material inapropiado para ni\u00f1os o adolescentes. 2. Odio dirigido a varios grupos religiosos, \u00e9tnicos o sexuales, entre otros. 3. Informaci\u00f3n sobre democracia y valores democr\u00e1ticos.\nSEC. 8.10\nASPECTOS SOCIALES\n823\n4. Relatos de eventos hist\u00f3ricos que contradigan la versi\u00f3n del gobierno. 5. Manuales para abrir candados, construir armas, encriptar mensajes, etc\u00e9tera. La respuesta com\u00fan es prohibir los sitios malos. Algunas veces los resultados son inesperados. Por ejemplo, algunas bibliotecas p\u00fablicas han instalado filtros Web en sus computadoras para que sean aptas para los ni\u00f1os y bloqueados los sitios pornogr\u00e1ficos. Los filtros vetan los sitios que se encuentran en sus listas negras y tambi\u00e9n verifican las p\u00e1ginas antes de desplegarlas para ver si contienen palabras obscenas. En Loudoun County, Virginia, sucedi\u00f3 que el filtro bloque\u00f3 la b\u00fasqueda que un cliente realiz\u00f3 para encontrar informaci\u00f3n sobre el c\u00e1ncer de mama porque el filtro vio la palabra \u201cmama\u201d. Dicho usuario de la biblioteca demand\u00f3 al condado Loudoun. Sin embargo, en Livermore, California, despu\u00e9s de que se sorprendi\u00f3 a un ni\u00f1o de 12 a\u00f1os de edad viendo pornograf\u00eda, su padre demand\u00f3 a la biblioteca por no instalar un filtro. \u00bfQu\u00e9 ten\u00eda que hacer la biblioteca? Mucha gente ha obviado el hecho de que World Wide Web es una red mundial. Cubre a todo el mundo. No todos los pa\u00edses est\u00e1n de acuerdo en lo que debe permitirse en Web. Por ejemplo, en noviembre de 2000, una corte de Francia orden\u00f3 a Yahoo, una corporaci\u00f3n de California, que bloqueara a sus usuarios franceses para que no pudieran ver las subastas de objetos de recuerdo nazis, porque poseer tal material viola las leyes francesas. Yahoo apel\u00f3 en una corte de Estados Unidos, la cual le dio la raz\u00f3n, pero a\u00fan est\u00e1 lejos de resolverse el problema de d\u00f3nde aplicar las leyes de qui\u00e9n. Simplemente imag\u00ednese. \u00bfQu\u00e9 pasar\u00eda si alguna corte de Utah ordenara a Francia que bloqueara los sitios Web relacionados con el vino porque no cumplen con las muy estrictas leyes de Utah sobre el alcohol? Suponga que China demandara que todos los sitios Web que tienen que ver con la democracia fueran prohibidos porque no son del inter\u00e9s del Estado. \u00bfLas leyes iran\u00edes sobre la religi\u00f3n se aplican a la Suecia m\u00e1s liberal? \u00bfPuede Arabia Saudita bloquear los sitios Web que tienen que ver con los derechos de la mujer? Todo el problema es un verdadera caja de Pandora. Un comentario relevante de John Gilmore es: \u201cla red interpreta la censura como una aver\u00eda y encuentra una ruta alterna\u201d. Para una implementaci\u00f3n concreta, considere el servicio eternidad (Anderson, 1996). Su objetivo es asegurarse de que la informaci\u00f3n publicada no pueda ser eliminada o reescrita, como era com\u00fan en la Uni\u00f3n Sovi\u00e9tica durante el reinado de Josef Stalin. Para utilizar el servicio eternidad, el usuario especifica cu\u00e1nto tiempo se mantendr\u00e1 el material, paga una cuota proporcional a su duraci\u00f3n y tama\u00f1o, y lo carga. Despu\u00e9s de eso, nadie puede eliminarlo o modificarlo, ni siquiera quien lo carg\u00f3. \u00bfC\u00f3mo se puede implementar tal servicio? El modelo m\u00e1s sencillo es utilizar un sistema de igual a igual en el que los documentos almacenados se coloquen en docenas de servidores participantes, cada uno de los cuales obtenga una parte de la cuota y, por lo tanto, un incentivo para unirse al sistema. Los servidores deben esparcirse a trav\u00e9s de muchas jurisdicciones legales para obtener una m\u00e1xima elasticidad. Las listas de los 10 servidores seleccionados al azar podr\u00edan almacenarse en forma segura en varios lugares, por lo que si algunos estuvieran en peligro, otros a\u00fan existir\u00edan. Una autoridad dispuesta a destruir el documento nunca estar\u00e1 segura de que ha encontrado todas las copias. El sistema tambi\u00e9n podr\u00eda repararse a s\u00ed mismo; por ejemplo, si se sabe que se han destruido algunas copias, los sitios restantes podr\u00edan intentar encontrar nuevos dep\u00f3sitos para reemplazarlas.\n824\nSEGURIDAD EN REDES\nCAP. 8\nEl servicio eternidad fue la primera propuesta en lo que se refiere a sistemas anticensura. Desde entonces se han propuesto otros sistemas y, en algunos casos, se han implementado. Asimismo, se han agregado algunas nuevas caracter\u00edsticas, como encriptaci\u00f3n, anonimato y tolerancia a fallas. Con frecuencia los archivos se dividen en m\u00faltiples fragmentos, los cuales se almacenan en muchos servidores. Algunos de estos sistemas son Freenet (Clarke y cols., 2002), PASIS (Wylie y cols., 2000) y Publius (Waldman y cols., 2000). En (Serjantov, 2002), se reporta m\u00e1s trabajo. En la actualidad, cada vez m\u00e1s pa\u00edses tratan de regular la exportaci\u00f3n de valores intangibles, entre los que se encuentran sitios Web, software, documentos cient\u00edficos, correo electr\u00f3nico, servicios de ayuda telef\u00f3nica, entre otros. Incluso en el Reino Unido, que tiene una tradici\u00f3n de siglos de libertad de expresi\u00f3n, ahora est\u00e1 considerando seriamente las leyes muy restrictivas, las cuales podr\u00edan, por ejemplo, definir las discusiones t\u00e9cnicas entre un profesor brit\u00e1nico y su estudiante extranjero de la Universidad de Cambridge como exportaci\u00f3n regulada que necesita una licencia del gobierno (Anderson, 2002). No es necesario decir que tales pol\u00edticas son controversiales. Esteganograf\u00eda En los pa\u00edses en donde abunda la censura, los disidentes con frecuencia tratan de utilizar la tecnolog\u00eda para evadirla. La criptograf\u00eda permite el env\u00edo de mensajes secretos (aunque tal vez no legalmente), pero si el gobierno piensa que Alice es una Mala Persona, el simple hecho de que ella se est\u00e9 comunicando con Bob podr\u00eda ponerlo a \u00e9l tambi\u00e9n en esta categor\u00eda, pues los gobiernos represivos entienden el concepto de clausura transitiva, aunque no entiendan bien las matem\u00e1ticas. Los retransmisores de correo an\u00f3nimos pueden ayudar, pero si est\u00e1n prohibidos dom\u00e9sticamente, y los mensajes dirigidos a extranjeros requieren una licencia de exportaci\u00f3n por parte del gobierno, no ser\u00edan de mucha ayuda. Pero Web s\u00ed puede. Las personas que desean comunicarse de manera secreta con frecuencia tratan de ocultar el hecho de que se est\u00e1 realizando la comunicaci\u00f3n. La ciencia de ocultar mensajes se conoce como esteganograf\u00eda, cuyo origen proviene de las palabras griegas correspondientes a \u201cescritura encubierta\u201d. De hecho, los antiguos griegos la utilizaron. Herodoto escribi\u00f3 sobre un general que rap\u00f3 a un mensajero, tatu\u00f3 un mensaje en el cuero cabelludo de \u00e9ste y dej\u00f3 que le creciera el cabello antes de enviarlo a realizar la entrega. Las t\u00e9cnicas modernas son conceptualmente las mismas, s\u00f3lo que tienen un mayor ancho de banda y una latencia menor. Como ejemplo, considere la figura 8-55(a). Esta fotograf\u00eda, tomada en Kenia, contiene tres cebras que est\u00e1n contemplando un \u00e1rbol de acacia. La figura 8-55(b) parece ser la misma foto de las tres cebras y el \u00e1rbol de acacia, pero tiene una atracci\u00f3n extra. Contiene todo el texto de cinco obras de Shakespeare: Hamlet, El Rey Lear, Macbeth, El Mercader de Venecia y Julio C\u00e9sar. Juntas, estas obras tienen un tama\u00f1o de 700 KB. \u00bfC\u00f3mo funciona este canal esteganogr\u00e1fico? La imagen a color original es de 1024 \u00d7 768 p\u00edxeles. Cada p\u00edxel consiste en tres n\u00fameros de 8 bits, cada uno para la intensidad de rojo, verde y azul de ese p\u00edxel. El color del p\u00edxel se forma por la superposici\u00f3n lineal de los tres colores. El m\u00e9todo de codificaci\u00f3n esteganogr\u00e1fica utiliza como canal secreto el bit de orden menor de cada valor de color RGB. De esta manera, cada p\u00edxel tiene espacio para 3 bits de informaci\u00f3n secreta,\nSEC. 8.10\n825\nASPECTOS SOCIALES\n(a)\n(b)\nFigura 8-55. (a) Tres cebras y un \u00e1rbol. (b) Tres cebras, un \u00e1rbol y todo el texto de cinco obras de William Shakespeare.\nuno en el valor de rojo, otro en el valor de verde y otro m\u00e1s en el de azul. En una imagen de este tama\u00f1o se pueden almacenar hasta 1024 \u00d7 768 \u00d7 3 bits o 294,912 bytes de informaci\u00f3n secreta. Todo el texto de las cinco obras y una noticia corta suman 734,891 bytes. Este texto primero se comprimi\u00f3 a casi 274 KB mediante un algoritmo de compresi\u00f3n est\u00e1ndar. Despu\u00e9s la salida comprimida se encript\u00f3 utilizando IDEA y se insert\u00f3 en los bits de orden menor de cada valor de color. Como puede verse (o m\u00e1s bien, no puede verse), la informaci\u00f3n es completamente invisible. Tambi\u00e9n es invisible en la versi\u00f3n a todo color de la foto. El ojo no puede distinguir con facilidad los colores de 21 bits de los de 24 bits. Al ver las dos im\u00e1genes en blanco y negro con una resoluci\u00f3n baja no se distingue con facilidad el poder de esta t\u00e9cnica. Para tener una mejor idea de c\u00f3mo funciona la esteganograf\u00eda, el autor ha preparado una demostraci\u00f3n, que incluye la imagen de alta resoluci\u00f3n a todo color de la figura 8-55(b) con las cinco obras incrustadas en ella. En el sitio Web del libro se incluye la demostraci\u00f3n y las herramientas para insertar y extraer texto en im\u00e1genes. Para utilizar la esteganograf\u00eda para la comunicaci\u00f3n no detectada, los disidentes podr\u00edan crear un sitio Web que contenga im\u00e1genes pol\u00edticamente correctas, como fotograf\u00edas de un gran l\u00edder, de deportes locales, de estrellas de pel\u00edculas y de televisi\u00f3n, etc\u00e9tera. Por supuesto, las im\u00e1genes contendr\u00e1n mensajes esteganogr\u00e1ficos. Si los mensajes primero se comprimieran y despu\u00e9s se desencriptaran, incluso alguien que sospechara su presencia tendr\u00eda mucha dificultad para distinguir dichos mensajes del ruido blanco. Por supuesto, las im\u00e1genes deben ser digitalizaciones recientes; copiar una imagen de Internet y cambiar algunos de los bits produce una revelaci\u00f3n involuntaria. Las im\u00e1genes no son el \u00fanico medio para los mensajes esteganogr\u00e1ficos. Los archivos de audio tambi\u00e9n funcionan bien. Este tipo de archivos tiene un ancho de banda esteganogr\u00e1fico alto. Incluso el orden de las etiquetas de un archivo HTML puede llevar informaci\u00f3n.\n826\nSEGURIDAD EN REDES\nCAP. 8\nAunque hemos examinado la esteganograf\u00eda en el contexto de la libertad de expresi\u00f3n, tiene varios usos. Uno de los m\u00e1s comunes es para que los due\u00f1os de im\u00e1genes codifiquen mensajes secretos en ellos que indiquen sus derechos de propiedad. Si una imagen de \u00e9stas es robada y se coloca en un sitio Web, el propietario legal puede revelar el mensaje esteganogr\u00e1fico en la corte para probar a qui\u00e9n pertenece esa imagen. Esta t\u00e9cnica se conoce como watermarking (marca de agua) y se describe en (Piva y cols., 2002). Para obtener mayor informaci\u00f3n sobre la esteganograf\u00eda, vea (Artz, 2001; Johnson y Jajoda, 1998; Katzenbeisser y Petitcolas, 2000, y Wayner, 2002).\n8.10.3 Derechos de autor La privacidad y la censura son s\u00f3lo dos \u00e1reas en las que la tecnolog\u00eda se encuentra con la pol\u00edtica p\u00fablica. Una tercera son los derechos de autor. \u00c9stos son el otorgamiento a los creadores de la IP (propiedad intelectual), incluyendo a los escritores, artistas, compositores, m\u00fasicos, fot\u00f3grafos, cinemat\u00f3grafos, core\u00f3grafos, entre otros, del derecho exclusivo para explotar su IP por alg\u00fan tiempo, generalmente durante la vida del autor m\u00e1s 50 o 75 a\u00f1os en el caso de la propiedad corporativa. Despu\u00e9s de que expiran los derechos de autor de alg\u00fan trabajo, pasa a ser del dominio p\u00fablico y cualquiera puede utilizarlo o venderlo como lo desee. Por ejemplo, el Gutenberg Project (www.promo.net/pg) ha colocado en Web miles de trabajos de dominio p\u00fablico (de Shakespeare, Twain, Dickens). En 1998, el Congreso de los Estados Unidos extendi\u00f3 por 20 a\u00f1os m\u00e1s los derechos de autor en ese pa\u00eds por solicitud de Hollywood, que afirm\u00f3 que si no se otorgaba una extensi\u00f3n, nadie crear\u00eda nada m\u00e1s. En contraste, las patentes s\u00f3lo duran 20 a\u00f1os y las personas a\u00fan siguen inventando cosas. Los derechos de autor dieron de qu\u00e9 hablar cuando Napster, un servicio de intercambio de m\u00fasica, ten\u00eda 50 millones de miembros. Aunque Napster realmente no copiaba la m\u00fasica, las cortes aseveraron que el hecho de que mantuviera una base de datos de quien ten\u00eda las canciones era infracci\u00f3n contributoria, es decir, Napster ayudaba a otras personas a infringir la ley. Si bien nadie alega que los derechos de autor son una mala idea (aunque muchas personas alegan que el t\u00e9rmino es demasiado tiempo, lo que favorece a las grandes corporaciones y no a las p\u00fablicas), la siguiente generaci\u00f3n de compartici\u00f3n de m\u00fasica ya est\u00e1 provocando problemas mayores de \u00e9tica. Por ejemplo, considere una red de igual a igual en la que las personas comparten archivos legales (m\u00fasica del dominio p\u00fablico, v\u00eddeos dom\u00e9sticos, pistas religiosas que no son pistas comerciales, etc\u00e9tera) algunos de los cuales tal vez tengan derechos de autor. Suponga que todos est\u00e1n en l\u00ednea todo el d\u00eda mediante ADSL o cable. Cada m\u00e1quina tiene un \u00edndice de lo que hay en el disco duro, m\u00e1s una lista de otros miembros. Alguien que est\u00e9 buscando un elemento espec\u00edfico puede elegir un miembro al azar y ver si \u00e9ste tiene tal elemento. Si no lo tiene, puede verificar a todos los miembros que se encuentran en la lista de esa persona y, si no, a todos los miembros que se encuentren en las listas de dichos miembros, y as\u00ed sucesivamente. Las computadoras son muy buenas para este tipo de trabajo. Cuando encuentra el elemento, el solicitante simplemente lo copia. Si el trabajo tiene derechos de autor, es probable que el solicitante est\u00e9 infringiendo la ley (aunque para las transferencias internacionales, la pregunta de la ley de qui\u00e9n se aplica no es clara). Pero, \u00bfqu\u00e9 sucede con el proveedor? \u00bfEs un crimen mantener la m\u00fasica por la que se ha pagado y\nSEC. 8.10\nASPECTOS SOCIALES\n827\nque se ha descargado legalmente en su disco duro donde otros pueden encontrarla? Si usted tiene una cabina abierta en el pa\u00eds y un ladr\u00f3n de IP entra con una computadora port\u00e1til y un digitalizador, copia un libro que tiene derechos de autor y se va de manera furtiva, \u00bfusted es culpable por no poder proteger los derechos de autor de alguien m\u00e1s? Pero hay m\u00e1s problemas relacionados con los derechos de autor. En la actualidad hay una gran batalla entre Hollywood y la industria de la computaci\u00f3n. El primero quiere protecci\u00f3n estricta de toda la propiedad intelectual y la segunda no desea ser el polic\u00eda de Hollywood. En octubre de 1998, el Congreso aprob\u00f3 la DMCA (Ley de Propiedad Intelectual para el Milenio Digital) que considera un crimen evadir cualquier mecanismo de protecci\u00f3n presente en un trabajo con derechos de autor o indicar a otros c\u00f3mo evadirlo. En la Uni\u00f3n Europea se est\u00e1 estableciendo una legislaci\u00f3n similar. Si bien nadie piensa que deber\u00eda permitirse que los piratas del Lejano Oriente duplicaran los trabajos con derechos de autor, muchas personas piensan que la DMCA desplaza por completo el balance entre los intereses de los propietarios con derechos de autor y los p\u00fablicos. Por ejemplo, en septiembre de 2000, un consorcio de la industria de la m\u00fasica encargado de construir un sistema irrompible para vender m\u00fasica en l\u00ednea patrocin\u00f3 un concurso en el que invitaba a las personas a que trataran de romper el sistema (que es precisamente lo que deber\u00eda hacerse con cualquier sistema de seguridad). Un equipo de investigadores de seguridad de diversas universidades, dirigidas por el profesor Edward Felten de Princeton, acept\u00f3 el desaf\u00edo y rompi\u00f3 el sistema. Despu\u00e9s, este equipo escribi\u00f3 un documento sobre sus descubrimientos y lo emiti\u00f3 a la conferencia de seguridad USENIX, en donde se le someti\u00f3 a evaluaci\u00f3n por expertos y fue aceptado. Antes de que el documento se presentara, Felten recibi\u00f3 una carta de la Recording Industry Association of America, la cual amenazaba con demandarlos apoy\u00e1ndose en la DMCA si publicaban el documento. Su respuesta fue llevar a juicio pidiendo a la corte federal que reglamentara sobre si el publicar documentos cient\u00edficos sobre investigaci\u00f3n de seguridad era todav\u00eda legal. Temiendo que la corte fallara en contra de ellos, la industria retir\u00f3 su amenaza y la corte desech\u00f3 la demanda de Felten. Sin duda la industria estaba motivada por la debilidad de su caso: hab\u00edan invitado a las personas a que trataran de romper su sistema y despu\u00e9s trataron de demandar a algunas de ellas por aceptar el desaf\u00edo. Una vez retirada la amenaza, el documento se public\u00f3 (Craver y cols., 2001). Una nueva confrontaci\u00f3n es virtualmente cierta. Un asunto relacionado es la extensi\u00f3n de la doctrina de uso razonable, que ha sido establecida por fallos de la corte en varios pa\u00edses. Esta doctrina predica que los compradores de un trabajo con derechos de autor tienen ciertos derechos limitados para copiar el trabajo, incluyendo el derecho de citar partes de \u00e9l para prop\u00f3sitos cient\u00edficos, utilizarlo como material de ense\u00f1anza en escuelas o colegios y, en algunos casos, realizar copias de respaldo para uso personal en caso de que el medio original falle. Las pruebas de lo que constituye uso razonable incluyen (1) si el uso es comercial, (2) qu\u00e9 porcentaje se copia, y (3) el efecto del copiado en las ventas del trabajo. Puesto que el DMCA y las leyes similares dentro de la Uni\u00f3n Europea proh\u00edben la evasi\u00f3n de los esquemas de protecci\u00f3n contra copia, estas leyes tambi\u00e9n proh\u00edben el uso razonable legal. En efecto, la DMCA elimina los derechos hist\u00f3ricos de los usuarios para dar m\u00e1s poder a los vendedores de contenido. Es inevitable un enfrentamiento mayor.\n828\nSEGURIDAD EN REDES\nCAP. 8\nOtro desarrollo en los trabajos que eclipsa incluso a la DMCA en su desplazamiento del equilibrio entre los propietarios de los derechos de autor y los usuarios es la TCPA (Alianza para una Plataforma Inform\u00e1tica Confiable), dirigida por Intel y Microsoft. La idea es que el procesador de la CPU y el sistema operativo supervisen de diversas maneras y con cuidado el comportamiento del usuario (por ejemplo, ejecutando m\u00fasica pirateada) y proh\u00edban el comportamiento no deseable. El sistema incluso permite que los propietarios de contenido manipulen en forma remota las PCs de los usuarios para cambiar las reglas cuando se estime necesario. No es necesario decir que las consecuencias sociales de este esquema son inmensas. Es bueno que la industria finalmente est\u00e9 poniendo atenci\u00f3n a la seguridad, pero es lamentable que est\u00e9 enteramente dirigido a reforzar las leyes de derechos de autor en lugar de tratar con los virus, crackers, intrusos y otros problemas de seguridad por lo que la mayor\u00eda de la gente est\u00e1 preocupada. En resumen, en los siguientes a\u00f1os los legisladores y abogados estar\u00e1n ocupados equilibrando los intereses econ\u00f3micos de los propietarios de derechos de autor con los intereses p\u00fablicos. El ciberespacio no es muy diferente de la realidad: constantemente est\u00e1 confrontando a un grupo con otro, lo que resulta en batallas por el poder, litigaciones y (con suerte) alg\u00fan tipo de resoluci\u00f3n, por lo menos hasta que aparezca alguna tecnolog\u00eda inquietante.\n8.11 RESUMEN La criptograf\u00eda es una herramienta que puede utilizarse para mantener confidencial la informaci\u00f3n y para asegurar su integridad y autenticidad. Todos los sistemas criptogr\u00e1ficos modernos se basan en el principio de Kerckhoff de tener un algoritmo conocido p\u00fablicamente y una clave secreta. Muchos algoritmos criptogr\u00e1ficos utilizan transformaciones complejas que incluyen sustituciones y permutaciones para transformar el texto llano en texto cifrado. Sin embargo, si la criptograf\u00eda cu\u00e1ntica puede hacerse pr\u00e1ctica, el uso de rellenos de una sola vez podr\u00eda proporcionar criptosistemas realmente irrompibles. Los algoritmos criptogr\u00e1ficos pueden dividirse en algoritmos de clave sim\u00e9trica y algoritmos de clave p\u00fablica. Los primeros alteran los bits en una serie de rondas parametrizadas por la clave para convertir al texto llano en texto cifrado. En la actualidad los algoritmos de clave sim\u00e9trica m\u00e1s populares son el triple DES y Rijndael (AES). \u00c9stos pueden utilizarse en modo de libro de c\u00f3digo electr\u00f3nico, modo de encadenamiento de bloque de cifrado, modo de cifrado de flujo, modo de contador, entre otros. Los algoritmos de clave p\u00fablica tienen la propiedad de que se utilizan diferentes claves para la encriptaci\u00f3n y desencriptaci\u00f3n y de que la clave de desencriptaci\u00f3n no puede derivarse de la clave de encriptaci\u00f3n. Estas propiedades hacen posible publicar la clave p\u00fablica. El algoritmo principal de clave p\u00fablica es RSA, el cual deriva su fuerza del hecho de que es muy dif\u00edcil factorizar n\u00fameros grandes. Los documentos legales, comerciales y de otro tipo necesitan firmarse. De manera acorde, se han dise\u00f1ado varios esquemas para las firmas digitales, las cuales utilizan tanto algoritmos de clave sim\u00e9trica como de clave p\u00fablica. Por lo general, a los mensajes que se van a firmar se les aplica un\nCAP. 8\nPROBLEMAS\n829\nhash mediante algoritmos como MD5 o SHA-1, y despu\u00e9s se firman los hashes en lugar de los mensajes originales. El manejo de claves p\u00fablicas puede realizarse utilizando certificados, los cuales son documentos que enlazan a un personaje principal con una clave p\u00fablica. Los certificados son firmados por una autoridad de confianza o por alguien aprobado (recursivamente) por una autoridad confiable. La ra\u00edz de la cadena se tiene que obtener por adelantado, pero los navegadores por lo general tienen integrados muchos certificados ra\u00edz. Estas herramientas criptogr\u00e1ficas se pueden utilizar para asegurar el tr\u00e1fico de red seguro. IPsec opera en la capa de red, encriptando flujos de paquetes de host a host. Los firewalls pueden filtrar tr\u00e1fico entrante y saliente de una organizaci\u00f3n, frecuentemente con base en el protocolo y puerto utilizado. Las redes privadas virtuales pueden simular una red de l\u00ednea rentada antigua para proporcionar ciertas propiedades de seguridad deseables. Por \u00faltimo, las redes inal\u00e1mbricas necesitan buena seguridad y WEP de 802.11 no la proporciona, aunque 802.11i deber\u00eda mejorar las cosas de manera considerable. Cuando dos partes establecen una sesi\u00f3n, deben autenticarse entre s\u00ed y, si es necesario, establecer una clave de sesi\u00f3n compartida. Existen varios protocolos de autenticaci\u00f3n, entre ellos algunos que utilizan un tercero confiable, Diffie-Hellman, Kerberos y la criptograf\u00eda de clave p\u00fablica. La seguridad de correo electr\u00f3nico puede alcanzarse mediante una combinaci\u00f3n de las t\u00e9cnicas que hemos estudiado en este cap\u00edtulo. Por ejemplo, PGP comprime mensajes, despu\u00e9s los encripta utilizando IDEA. Env\u00eda la clave IDEA encriptada con la clave p\u00fablica del receptor. Adem\u00e1s, tambi\u00e9n aplica un hash al mensaje y env\u00eda el hash firmado para verificar la integridad del mensaje. La seguridad en Web tambi\u00e9n es un tema importante, iniciando con la asignaci\u00f3n de nombres segura. DNSsec proporciona una forma de evitar la falsificaci\u00f3n de DNS, al igual que los nombres autocertificables. La mayor\u00eda de los sitios Web de comercio electr\u00f3nico utilizan SSL para establecer sesiones autenticadas seguras entre el cliente y el servidor. Se utilizan varias t\u00e9cnicas para tratar con el c\u00f3digo m\u00f3vil, especialmente las cajas de arena y la firma de c\u00f3digo. Internet provoca muchos problemas en los que la tecnolog\u00eda interact\u00faa de manera considerable con la pol\u00edtica p\u00fablica. Algunas de estas \u00e1reas incluyen la privacidad, libertad de expresi\u00f3n y derechos reservados.\nPROBLEMAS 1. Rompa el siguiente cifrado monoalfab\u00e9tico. El texto llano, que consiste s\u00f3lo en letras, es un fragmento bien conocido de un poema de Lewis Carroll. kfd ktbd fzm eubd kfd pzyiom mztx ku kzyg ur bzha kfthcm ur mftnm zhx mfudm zhx mdzythc pzq ur ezsszcdm zhx gthcm zhx pfa kfd mdz tm sutythc fuk zhx pfdkfdi ntcm fzld pthcm\n830\nSEGURIDAD EN REDES\nCAP. 8\nsok pztk z stk kfd uamkdim eitdx sdruid pd fzld uoi efzk rui mubd ur om zid ouk ur sidzkf zhx zyy ur om zid rzk hu foiia mztx kfd ezindhkdi kfda kfzhgdx ftb boef rui kfzk 2. Rompa el siguiente cifrado de transposici\u00f3n columnar. El texto llano proviene de un libro de texto de computadoras muy popular, por lo que \u201ccomputadora\u201d es una palabra probable. El texto llano consiste por completo en letras (sin espacios). Para mayor claridad, el texto cifrado est\u00e1 dividido en bloques de cinco caracteres. aauan cvlre rurnn dltme aeepb ytust iceat npmey iicgo gorch srsoc nntii imiha oofpa gsivt tpsit lbolr otoex 3. Encuentre un relleno de una sola vez de 77 bits que genere el texto \u201cDonald Duck\u201d a partir del texto cifrado de la figura 8-4. 4. La criptograf\u00eda cu\u00e1ntica requiere tener un arma de fotones que pueda disparar a solicitud un solo fot\u00f3n que transporte 1 bit. En este problema, calcule cu\u00e1ntos fotones transporta un bit en un enlace de fibra de 100 Gbps. Suponga que la longitud de un fot\u00f3n es igual a su longitud de onda, que por prop\u00f3sitos de este problema, es 1 micra. La velocidad de la luz en la fibra es de 20 cm/nseg. 5. Si Trudy captura y regenera fotones cuando est\u00e1 en uso la criptograf\u00eda cu\u00e1ntica, obtendr\u00e1 algunos fotones err\u00f3neos y causar\u00e1 errores en el relleno de una sola vez de Bob. \u00bfEn promedio qu\u00e9 fracci\u00f3n de los bits de relleno de una sola vez de Bob ser\u00e1n err\u00f3neos? 6. Un principio fundamental de criptograf\u00eda indica que todos los mensajes deben tener redundancia. Pero tambi\u00e9n sabemos que la redundancia ayuda a que un intruso sepa si una clave adivinada es correcta. Considere dos formas de redundancia. Primero, los n bits iniciales de texto llano contienen un patr\u00f3n conocido. Segundo, los bits n finales del mensaje contienen un hash en el mensaje. Desde un punto de vista de seguridad, \u00bfestos dos son equivalentes? Analice su respuesta. 7. En la figura 8-6, se alternan las cajas P y S. Aunque este arreglo es est\u00e9tico, \u00bfes m\u00e1s seguro que primero tener todas las cajas P y despu\u00e9s todas las S? 8. Dise\u00f1e un ataque a DES con base en el conocimiento de que el texto llano consiste exclusivamente en letras ASCII may\u00fasculas, m\u00e1s espacio, coma, punto, punto y coma, retorno de carro y avance de l\u00ednea. No se sabe nada sobre los bits de paridad de texto llano. 9. En el texto calculamos que una m\u00e1quina para romper cifrado con mil millones de procesadores que pueden analizar una clave en 1 picosegundo podr\u00eda tardar s\u00f3lo 1010 a\u00f1os para romper la versi\u00f3n de 128 bits de AES. Sin embargo, las m\u00e1quinas actuales podr\u00edan tener 1024 procesadores y tardar 1 mseg en analizar una clave, por lo que necesitamos un factor de mejora en rendimiento de 1015 s\u00f3lo para obtener una m\u00e1quina de rompimiento AES. Si la ley de Moore (el poder de c\u00f3mputo se duplica cada 18 meses) sigue vigente, \u00bfcu\u00e1ntos a\u00f1os se necesitar\u00edan tan s\u00f3lo para construir la m\u00e1quina? 10. AES soporta una clave de 256 bits. \u00bfCu\u00e1ntas claves tiene AES-256? Vea si puede obtener alg\u00fan n\u00famero en f\u00edsica, qu\u00edmica o astronom\u00eda de aproximadamente el mismo tama\u00f1o. Utilice Internet para buscar n\u00fameros grandes. Elabore una conclusi\u00f3n a partir de su investigaci\u00f3n. 11. Suponga que un mensaje se ha encriptado utilizando DES en modo de encadenamiento de bloque de texto cifrado. Un bit de texto cifrado en el bloque Ci se transforma accidentalmente de 0 a un 1 durante la transmisi\u00f3n. \u00bfCu\u00e1nto texto llano se obtendr\u00e1 como resultado?\nCAP. 8\nPROBLEMAS\n831\n12. Ahora considere nuevamente el encadenamiento de bloque de texto cifrado. En lugar de que un solo bit 0 sea transformado en un bit 1, un bit 0 extra se inserta en el flujo de texto cifrado despu\u00e9s del bloque Ci. \u00bfCu\u00e1nto texto llano se distorsionar\u00e1 como resultado? 13. Compare el encadenamiento de bloque cifrado con el modo de retroalimentaci\u00f3n de cifrado en t\u00e9rminos del n\u00famero de operaciones de encriptaci\u00f3n necesarias para transmitir un archivo grande. \u00bfCu\u00e1l es m\u00e1s eficiente y por cu\u00e1nto? 14. Utilizando el criptosistema de clave p\u00fablica RSA, con a = 1, b = 2, etc\u00e9tera, (a) Si p = 7 y q = 11, liste cinco valores legales para d. (b) Si p = 13, q = 31 y d = 7, encuentre e. (c) Utilizando p = 5, q = 11 y d = 27, encuentre e y encripte \u201cabcdefghij\u201d. 15. Suponga que un usuario, Mar\u00eda, descubre que su clave privada RSA (d1, n1) es la misma que la clave p\u00fablica RSA (e2, n 2) de otro usuario, Frances. En otras palabras, d1 = e2 y n 1 = n2. \u00bfMar\u00eda debe considerar cambiar sus claves p\u00fablica y privada? Explique su respuesta. 16. Considere el uso del modo de contador, como se muestra en la figura 8-15, pero con IV = 0. \u00bfEl uso de 0 amenaza la seguridad del cifrado en general? 17. El protocolo de firma de la figura 8-18 tiene la siguiente debilidad. Si Bob falla, podr\u00eda perder el contenido de su RAM. \u00bfQu\u00e9 problemas causa esto y qu\u00e9 puede hacer \u00e9l para evitarlos? 18. En la figura 8-20 vimos la forma en que Alice puede enviar a Bob un mensaje firmado. Si Trudy reemplaza P, Bob puede detectarlo. Pero, \u00bfqu\u00e9 sucede si Trudy reemplaza tanto P como la firma? 19. Las firmas digitales tienen una debilidad potencial debido a los usuarios flojos. En las transacciones de comercio electr\u00f3nico podr\u00eda suscribirse un contrato y el usuario podr\u00eda solicitar la firma de su hash SHA-1. Si el usuario no verifica que el contrato y el hash correspondan, firmar\u00e1 de manera inadvertida un contrato diferente. Suponga que la mafia trata de explotar esta debilidad para ganar algo de dinero. Los mafiosos establecen un sitio Web no gratuito (por ejemplo, de pornograf\u00eda, apuestas, etc\u00e9tera) y piden a los nuevos clientes un n\u00famero de tarjeta de cr\u00e9dito. Despu\u00e9s env\u00edan al cliente un contrato en el que estipulan que \u00e9ste desea utilizar su servicio y pagar con tarjeta de cr\u00e9dito y le pide que lo firme, a sabiendas de que la mayor\u00eda de los clientes simplemente firmar\u00e1n sin verificar que el contrato y el hash correspondan. Muestre la forma en que la mafia puede comprar diamantes de un joyero leg\u00edtimo de Internet y pueda cargarlos a clientes inocentes. 20. Una clase de matem\u00e1ticas tiene 20 estudiantes. \u00bfCu\u00e1l es la probabilidad de que por lo menos dos estudiantes tengan la misma fecha de nacimiento? Suponga que nadie naci\u00f3 en a\u00f1o bisiesto, por lo que hay posibles 365 fechas de nacimiento. 21. Despu\u00e9s de que Ellen confiesa a Marilyn que la enga\u00f1\u00f3 en el asunto de Tom, Marilyn decide evitar este problema dictando el contenido de los mensajes futuros en una m\u00e1quina de dictado y d\u00e1rselos a su nueva secretaria para que los teclee. A continuaci\u00f3n, Marilyn planea examinar los mensajes en su terminal despu\u00e9s de que la secretaria los haya tecleado para asegurarse de que contengan sus palabras exactas. \u00bfLa nueva secretaria a\u00fan puede utilizar el ataque de cumplea\u00f1os para falsificar un mensaje, y de ser as\u00ed, c\u00f3mo? Sugerencia: Ella puede hacerlo. 22. Considere el intento fallido de Alice para obtener la clave p\u00fablica de Bob en la figura 8-23. Suponga que Bob y Alice ya comparten una clave secreta, pero Alice a\u00fan quiere la clave p\u00fablica de Bob. \u00bfHay ahora una forma para obtenerla de manera segura? De ser as\u00ed, \u00bfc\u00f3mo?\n832\nSEGURIDAD EN REDES\nCAP. 8\n23. Alice se quiere comunicar con Bob, utilizando la criptograf\u00eda de clave p\u00fablica. Ella establece una conexi\u00f3n con alguien que espera sea Bob. Le pide su clave p\u00fablica y \u00e9l se la env\u00eda en texto llano junto con un certificado X.509 firmado por la ra\u00edz CA. Alice ya tiene la clave p\u00fablica de la ra\u00edz CA. \u00bfQu\u00e9 pasos debe realizar Alice para verificar que est\u00e1 hablando con Bob? Suponga que a Bob no le importa con qui\u00e9n est\u00e1 hablando (por ejemplo, Bob es alg\u00fan tipo de servicio p\u00fablico). 24. Suponga que un sistema utiliza PKI con base en una jerarqu\u00eda con estructura de \u00e1rbol de CAs. Alice desea comunicarse con Bob y recibe un certificado de Bob firmado por un CA X despu\u00e9s de establecer el canal de comunicaci\u00f3n con Bob. Suponga que Alice nunca ha escuchado sobre X. \u00bfQu\u00e9 pasos debe realizar Alice para verificar que est\u00e1 hablando con Bob? 25. \u00bfEs posible utilizar en modo de transporte IPsec con AH si alguna de las m\u00e1quinas est\u00e1 detr\u00e1s de una caja NAT? Explique su respuesta. 26. D\u00e9 una ventaja de HMACs con respecto del uso de RSA para firmar hashes SHA-1. 27. D\u00e9 una raz\u00f3n por la cual se configurar\u00eda un firewall para inspeccionar el tr\u00e1fico entrante. D\u00e9 una raz\u00f3n por la cual se configurar\u00eda para inspeccionar tr\u00e1fico saliente. \u00bfCree que las inspecciones sean exitosas? 28. En la figura 8-31 se muestra el formato de paquetes WEP. Suponga que la suma de verificaci\u00f3n es de 32 bits, calculada mediante la aplicaci\u00f3n de OR exclusivos a todas las palabras de 32 bits en la carga \u00fatil. Tambi\u00e9n suponga que los problemas con RC4 se corrigen reemplaz\u00e1ndolo con un cifrado de flujo que no tiene debilidad y que los de IV se extienden a 128 bits. \u00bfHay alguna forma para que un intruso esp\u00ede o interfiera con el tr\u00e1fico sin ser detectado? 29. Suponga que una organizaci\u00f3n utiliza VPN para conectar de manera segura sus sitios a Internet. \u00bfHay alguna necesidad de que un usuario, Jim, de esta organizaci\u00f3n utilice la encriptaci\u00f3n o cualquier otro mecanismo de seguridad para comunicarse con otro usuario, Mary, de la organizaci\u00f3n? 30. Cambie ligeramente un mensaje del protocolo de la figura 8-34 para hacerlo resistente al ataque de reflexi\u00f3n. Explique por qu\u00e9 funcionar\u00eda su modificaci\u00f3n. 31. El intercambio de claves de Diffie-Hellman se utiliza para establecer una clave secreta entre Alice y Bob. Alice env\u00eda a Bob (719, 3, 191). Bob responde con (543). El n\u00famero secreto de Alice, x, es 16. \u00bfCu\u00e1l es la clave secreta? 32. Si Alice y Bob no se conocen, no comparten secretos ni tienen certificados, de cualquier manera pueden establecer una clave secreta compartida utilizando el algoritmo de Diffie-Hellman. Explique por qu\u00e9 es muy dif\u00edcil protegerse contra un ataque de hombre en medio. 33. En el protocolo de la figura 8-39, \u00bfpor qu\u00e9 A se env\u00eda en texto llano junto con la clave de sesi\u00f3n encriptada? 34. En el protocolo de la figura 8-39, se\u00f1alamos que iniciar cada mensaje de texto llano con 32 bits 0 es un riesgo de seguridad. Suponga que cada mensaje comienza con un n\u00famero aleatorio por usuario, efectivamente una segunda clave secreta conocida s\u00f3lo por su usuario y el KDC. \u00bfEsto elimina el ataque de texto llano conocido? \u00bfPor qu\u00e9? 35. En el protocolo Needham-Schroeder, Alice genera dos desaf\u00edos, RA y RA2 . Esto parece excesivo. \u00bfUno solo no podr\u00eda haber sido suficiente?\nCAP. 8\nPROBLEMAS\n833\n36. Suponga que una organizaci\u00f3n utiliza Kerberos para la autenticaci\u00f3n. En t\u00e9rminos de seguridad y disponibilidad de servicio, \u00bfcu\u00e1l es el efecto si AS o TGS se desactivan? 37. En el protocolo de autenticaci\u00f3n de clave p\u00fablica de la figura 8-43, en el mensaje 7, RB se encripta con KS. \u00bfEsta encriptaci\u00f3n es necesaria, o podr\u00eda haber sido adecuado regresarla en texto llano? Explique su respuesta. 38. Las terminales de punto de ventas que utilizan tarjetas con banda magn\u00e9tica y c\u00f3digos PIN tienen una falla fatal: un comerciante malicioso puede modificar su lector de tarjetas para capturar y almacenar toda la informaci\u00f3n de la tarjeta, as\u00ed como el c\u00f3digo PIN a fin de realizar posteriormente transacciones adicionales (falsas). La siguiente generaci\u00f3n de terminales de punto de ventas utilizar\u00e1 tarjetas con una CPU completa, teclado y una peque\u00f1a pantalla en la tarjeta. Dise\u00f1e un protocolo para este sistema que los comerciantes maliciosos no puedan romper. 39. D\u00e9 dos razones por las cuales PGP comprime mensajes. 40. Suponiendo que todos en Internet utilizaron PGP, \u00bfun mensaje PGP puede enviarse a una direcci\u00f3n arbitraria y decodificarse de manera correcta por todos los interesados? Explique su respuesta. 41. El ataque mostrado en la figura 8-47 omite un paso. \u00c9ste no es necesario para que el falsificador trabaje, pero incluy\u00e9ndolo podr\u00eda reducir la sospecha potencial despu\u00e9s del hecho. \u00bfCu\u00e1l es el paso faltante? 42. Se ha propuesto hacer que la falsificaci\u00f3n DNS fracase utilizando la predicci\u00f3n ID haciendo que el servidor coloque un ID aleatorio en lugar de utilizar un contador. Discuta los aspectos de seguridad de este m\u00e9todo. 43. El protocolo de transporte de datos SSL involucra dos marcas aleatorias, as\u00ed como una clave premaestra. \u00bfCu\u00e1l valor, en caso de que haya, tiene el uso de las marcas aleatorias? 44. La imagen de la figura 8-55(b) contiene el texto ASCII de cinco obras de Shakespeare. \u00bfSer\u00eda posible ocultar m\u00fasica entre las cebras en lugar de ocultar texto? De ser as\u00ed, \u00bfc\u00f3mo funcionar\u00eda y cu\u00e1nto podr\u00eda ocultar en esta imagen? Si no es posible, explique por qu\u00e9. 45. Alice era usuario de un retransmisor de correo an\u00f3nimo de tipo 1. Ella pod\u00eda publicar muchos mensajes en su grupo de noticias favorito, alt.fanclub.alice, y todos sab\u00edan que tales mensajes proven\u00edan de Alice porque todos llevaban el mismo pseud\u00f3nimo. Suponiendo que el retransmisor de correo funcionaba de manera correcta, Trudy no pod\u00eda suplantar a Alice. Despu\u00e9s de que los retransmisores de correo de tipo 1 desaparecieran, Alice cambi\u00f3 a un retransmisor cypherpunk e inici\u00f3 un nuevo subproceso en su grupo de noticias. Dise\u00f1e una manera para que Alice evite que Trudy la suplante y publique nuevos mensajes en el grupo de noticias. 46. Busque en Internet un caso interesante que involucre la privacidad y escriba un informe de una p\u00e1gina sobre \u00e9l. 47. Busque en Internet alg\u00fan caso de una corte que involucre los derechos reservados contra el uso razonable y escriba un informe de una p\u00e1gina en el que resuma lo que haya encontrado. 48. Escriba un programa que encripte su entrada al aplicar a \u00e9sta un OR exclusivo con un flujo de claves. Busque o escriba lo mejor que pueda un generador de n\u00fameros aleatorios para generar el flujo de claves. El programa debe actuar como un filtro, tomando texto llano como entrada est\u00e1ndar y produciendo texto cifrado como salida est\u00e1ndar (y viceversa). El programa debe tomar un par\u00e1metro, la clave que alimenta al generador de n\u00fameros aleatorios.\n834\nSEGURIDAD EN REDES\nCAP. 8\n49. Escriba un procedimiento que calcule el hash SHA-1 de un bloque de datos. El procedimiento debe tener dos par\u00e1metros: un apuntador al b\u00fafer de entrada y otro a un b\u00fafer de salida de 20 bytes. Para ver la especificaci\u00f3n exacta de SHA-1, busque en Internet FIPS 180-1, que es la especificaci\u00f3n completa.\n9 LISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nHemos terminado nuestro estudio de redes de computadoras, pero \u00e9ste es s\u00f3lo el comienzo. Por falta de espacio, no tratamos muchos temas interesantes con el detalle que se merecen y omitimos otros. Para beneficio de los lectores que se interesan en continuar sus estudios de redes de computadoras, en este cap\u00edtulo ofrecemos algunas sugerencias de lecturas adicionales y una bibliograf\u00eda.\n9.1. SUGERENCIAS DE LECTURAS ADICIONALES Hay una extensa literatura sobre todos los aspectos de redes de computadoras. Tres revistas que con frecuencia publican art\u00edculos sobre esta \u00e1rea son IEEE Transactions on Communications, IEEE Journal on Selected Areas in Communications y Computer Communication Review. Otras muchas revistas tambi\u00e9n contienen art\u00edculos ocasionales sobre el tema. El IEEE tambi\u00e9n publica tres revistas \u2014IEEE Internet Computing, IEEE Network Magazine e IEEE Communications Magazine\u2014 que contienen encuestas, tutoriales y casos de estudios sobre conexi\u00f3n de redes. Las dos primeras se enfocan principalmente en la arquitectura, los est\u00e1ndares y el software, y la \u00faltima tiende a la tecnolog\u00eda de comunicaciones (fibra \u00f3ptica, sat\u00e9lites, etc\u00e9tera). 835\n836\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nAdem\u00e1s, hay varias conferencias anuales o semestrales que provocan la creaci\u00f3n de ensayos sobre redes y sistemas distribuidos, en particular, SIGCOMM Annual Conference, The International Conference on Distributed Computer Systems y The Symposium on Operating Systems Principles. A continuaci\u00f3n presentamos una lista de sugerencias de lectura adicional, relacionadas con los cap\u00edtulos de este libro. La mayor\u00eda son tutoriales o encuestas sobre el tema; otras son cap\u00edtulos de libros de texto.\n9.1.1 Introducci\u00f3n y obras generales Bi y cols., \u201cWireless Mobile Communications at the Start of the 21st Century\u201d. Siglo nuevo, tecnolog\u00eda nueva. Suena bien. Despu\u00e9s de algunas historias sobre los sistemas inal\u00e1mbricos, aqu\u00ed se cubren los temas principales, como los est\u00e1ndares, las aplicaciones, Internet y las tecnolog\u00edas. Comer, The Internet Book. Cualquiera que desee una introducci\u00f3n f\u00e1cil a Internet debe buscarla aqu\u00ed. Comer describe la historia, el crecimiento, la tecnolog\u00eda, los protocolos y servicios de Internet en t\u00e9rminos que los principiantes pueden entender, pero abarca tanto material que el libro tambi\u00e9n es de inter\u00e9s para lectores m\u00e1s t\u00e9cnicos. Garber, \u201cWill 3G Really Be the Next Big Wireless Technology?\u201d Se supone que la tercera generaci\u00f3n de tel\u00e9fonos m\u00f3viles combinar\u00e1 voz y datos y proporcionar\u00e1 tasas de datos de hasta 2 Mbps. Su lanzamiento ha sido un poco lento. En este art\u00edculo f\u00e1cil de leer se cubren las promesas, los problemas, la tecnolog\u00eda, las pol\u00edticas y los aspectos econ\u00f3micos del uso de la comunicaci\u00f3n inal\u00e1mbrica de banda ancha. IEEE Internet Computing, enero-febrero de 2000. La primera edici\u00f3n de IEEE Internet Computing en el nuevo milenio hizo exactamente lo que usted esperar\u00eda: preguntar a la gente que ayud\u00f3 a crear Internet en el milenio anterior hacia d\u00f3nde piensa que ir\u00e1 en el actual. Los expertos son Paul Baran, Lawrence Roberts, Leonard Kleinrock, Stephen Crocker, Danny Cohen, Bob Metcalfe, Bill Gates, Bill Joy, entre otros. Para mejores resultados, espere 500 a\u00f1os, y entonces verifique si sus predicciones fueron acertadas. Kipnis, \u201cBeating the System: Abuses of the Standars Adoption Process\u201d. Los comit\u00e9s de est\u00e1ndares tratan de ser justos y neutrales en cuanto a proveedores pero, por desgracia, hay compa\u00f1\u00edas que tratan de abusar del sistema. Por ejemplo, con frecuencia sucede que una compa\u00f1\u00eda ayuda al desarrollo de un est\u00e1ndar y, una vez que \u00e9ste se aprueba, anuncia que dicho est\u00e1ndar se basa en una patente que es de su propiedad, y que s\u00f3lo dar\u00e1 licencias a compa\u00f1\u00edas\nSEC. 9.1\nSUGERENCIAS DE LECTURAS ADICIONALES\n837\nde su agrado, a precios que s\u00f3lo ella determina. Si desea echar un vistazo al lado oscuro de la estandarizaci\u00f3n, este art\u00edculo es un excelente inicio. Kwok, \u201cA Vision for Residential Broadband Service\u201d. Si desea saber qu\u00e9 pensaba Microsoft en 1995 acerca de la entrega de v\u00eddeo a solicitud, este art\u00edculo es para usted. Cinco a\u00f1os m\u00e1s tarde la visi\u00f3n era irremediablemente obsoleta. El valor del art\u00edculo est\u00e1 en demostrar que incluso personas muy enteradas y bien intencionadas no pueden ver siquiera cinco a\u00f1os a futuro con certeza alguna. \u00c9sta debe ser una lecci\u00f3n para todos. Kyas y Crawford, ATM Networks. Alguna vez ATM fue aclamado como el protocolo de conexi\u00f3n de redes del futuro, y sigue siendo importante en el sistema de la telefon\u00eda. Este libro es una gu\u00eda actualizada acerca del estado actual de ATM, con informaci\u00f3n detallada sobre los protocolos ATM y c\u00f3mo se pueden integrar con las redes basadas en IP. Naughton, A Brief History of the Future. Sin embargo, \u00bfqui\u00e9n invent\u00f3 Internet? Muchas personas han reclamado el cr\u00e9dito. Y con todo derecho, puesto que muchas personas tienen que ver en ello de diversas maneras. Esta historia de Internet narra c\u00f3mo sucedi\u00f3 todo, de una manera amena y encantadora, rebosante de an\u00e9cdotas, como la de AT&T que dejaba repetidamente bien sentada su creencia de que las comunicaciones digitales no ten\u00edan futuro. Perkins, \u201cMobile Networking in the Internet\u201d. Si desea un panorama de redes m\u00f3viles capa por capa, \u00e9ste es el lugar donde buscar. Se tratan las capas desde la de transporte hasta la f\u00edsica, as\u00ed como middleware, seguridad y conexi\u00f3n de redes ad hoc. Tegger y Waks, \u201cEnd-User Perspectives on Home Networking\u201d. Las redes dom\u00e9sticas no son como las corporativas. Las aplicaciones son diferentes (m\u00e1s intensivas en multimedia), el equipo proviene de un amplio rango de proveedores y los usuarios reciben un breve entrenamiento t\u00e9cnico y no toleran fallas. Para enterarse de m\u00e1s, busque aqu\u00ed. Varshney y Vetter, \u201cEmerging Mobile and Wireless Networks\u201d. Otra introducci\u00f3n a la comunicaci\u00f3n inal\u00e1mbrica. Comprende las LANs inal\u00e1mbricas, los ciclos locales inal\u00e1mbricos y los sat\u00e9lites, as\u00ed como algo sobre el software y las aplicaciones. Wetteroth, OSI Reference Model for Telecommunications. Aunque los protocolos OSI en s\u00ed ya no se utilizan, el modelo de siete capas ha llegado a ser muy bien conocido. Adem\u00e1s de dar una explicaci\u00f3n sobre OSI, este libro aplica el modelo a las redes de telecomunicaci\u00f3n (a diferencia de las de computadora), y muestra d\u00f3nde encajan la telefon\u00eda com\u00fan y otros protocolos de voz en la pila de conexi\u00f3n de redes.\n838\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\n9.1.2 La capa f\u00edsica Abramson, \u201cInternet Access Using VSATs\u201d. Las estaciones peque\u00f1as en tierra se est\u00e1n volviendo m\u00e1s populares tanto para la telefon\u00eda rural como para el acceso corporativo a Internet en pa\u00edses desarrollados. Sin embargo, la naturaleza del tr\u00e1fico en estos dos casos difiere de manera dram\u00e1tica, por lo que se requieren protocolos diferentes para manejar los dos casos. En este art\u00edculo, el inventor del sistema ALOHA expone varios m\u00e9todos de asignaci\u00f3n de canales que se pueden utilizar para sistemas VSAT. Alkhatib y cols., \u201cWireless Data Networks: Reaching the Extra Mile\u201d. Si desea una introducci\u00f3n r\u00e1pida a los t\u00e9rminos y tecnolog\u00edas de la conexi\u00f3n de redes inal\u00e1mbricas, incluyendo el espectro disperso, este documento tutorial es un buen punto de partida. Azzam y Ransom, Broadband Access Technologies. Aqu\u00ed el sistema telef\u00f3nico, las fibras, ADSL, las redes de cable, los sat\u00e9lites, incluso las l\u00edneas de energ\u00eda, se cubren como tecnolog\u00edas de acceso de red. Entre otros temas se encuentran las redes dom\u00e9sticas, los servicios, el desempe\u00f1o de redes y los est\u00e1ndares. El libro concluye con la biograf\u00eda de las principales compa\u00f1\u00edas en el negocio de redes y telecomunicaci\u00f3n, pero con la velocidad de cambios que hay en la industria, este cap\u00edtulo puede tener una vida de estanter\u00eda m\u00e1s corta que los cap\u00edtulos de tecnolog\u00eda. Bellamy, Digital Telephony. En este libro autorizado se encuentra todo lo que siempre quiso saber sobre el sistema telef\u00f3nico, entre muchas cosas m\u00e1s. Los cap\u00edtulos sobre transmisi\u00f3n y multiplexi\u00f3n, conmutaci\u00f3n digital, fibras \u00f3pticas, telefon\u00eda m\u00f3vil y ADSL son particularmente interesantes. Berezdivin y cols., \u201cNext-Generation Wireless Communications Concepts and Technologies\u201d. Estas personas van un paso adelante de todas las dem\u00e1s. La parte \u201cnext generation (siguiente generaci\u00f3n)\u201d se refiere a la cuarta generaci\u00f3n de redes inal\u00e1mbricas. Se espera que estas redes proporcionen servicio IP en todas partes con conectividad a Internet transparente, con alto ancho de banda y una excelente calidad de servicio. Estos objetivos se deben alcanzar mediante el uso inteligente del espectro, administraci\u00f3n din\u00e1mica de recursos y un servicio adaptable. Todo esto ahora suena visionario, pero aproximadamente en 1995 los tel\u00e9fonos celulares sonaban bastante visionarios. Dutta Roy, \u201cAn Overview of Cable Modem Technology and Market Perspectives\u201d. La televisi\u00f3n por cable ha dejado de ser un sistema sencillo para convertirse en un sistema complejo de distribuci\u00f3n de televisi\u00f3n, Internet y telefon\u00eda. Estos cambios han afectado en forma considerable la infraestructura de cable. Vale la pena leer este art\u00edculo para tener una explicaci\u00f3n sobre las plantas, est\u00e1ndares y marketing de cable, con un \u00e9nfasis en DOCSIS.\nSEC. 9.1\nSUGERENCIAS DE LECTURAS ADICIONALES\n839\nFarserotu y Prasad, \u201cA Survey of Future Broadband Multimedia Satellite Systems, Issues, and Trends\u201d. Varios sat\u00e9lites de comunicaciones est\u00e1n en el cielo o en la mesa de dibujo, como Astrolink, Cyberstar, Spaceway, Skybridge, Teledesic e iSky. \u00c9stos utilizan varias t\u00e9cnicas, como tubo doblado y conmutaci\u00f3n satelital. Si desea un panorama de los diferentes sistemas y t\u00e9cnicas de sat\u00e9lite, este documento es un buen punto de partida. Hu y Li, \u201cSatellite-Based Internet: A Tutorial\u201d. El acceso a Internet v\u00eda sat\u00e9lite es distinto del acceso por medio de l\u00edneas terrestres. No s\u00f3lo est\u00e1 el problema del retardo, sino que adem\u00e1s el enrutamiento y la conmutaci\u00f3n son diferentes. En este documento los autores examinan algunos de los problemas relacionados con el uso de sat\u00e9lites para el acceso a Internet. Joel, \u201cTelecommunications and the IEEE Communications Society\u201d. Para una historia condensada, pero sorprendentemente amplia, de las telecomunicaciones, empezando con el tel\u00e9grafo y terminando con el est\u00e1ndar 802.11, este art\u00edculo es lo que hay que ver. Tambi\u00e9n cubre radio, tel\u00e9fonos, conmutaci\u00f3n an\u00e1loga y digital, cables submarinos, transmisi\u00f3n digital, ATM, difusi\u00f3n de televisi\u00f3n, sat\u00e9lites, televisi\u00f3n por cable, comunicaciones \u00f3pticas, tel\u00e9fonos m\u00f3viles, conmutaci\u00f3n de paquetes, ARPANET e Internet. Metcalfe, \u201cComputer/Network Interface Design: Lessons from Arpanet & Ethernet\u201d. Aunque los ingenieros han estado construyendo interfaces de red durante d\u00e9cadas, con frecuencia nos preguntamos si han aprendido algo de toda esta experiencia. En este art\u00edculo, el dise\u00f1ador de Ethernet describe la manera de construir una interfaz de red, y qu\u00e9 se debe hacer una vez construida. No hace concesiones, indicando lo que hizo mal y lo que hizo bien. Palais, Fiber Optic Communication, 3a. ed. Los libros sobre la tecnolog\u00eda de la fibra \u00f3ptica tienden a estar orientados al especialista, pero \u00e9ste es m\u00e1s accesible que la mayor\u00eda; cubre las gu\u00edas de onda, fuentes de luz, detectores de luz, acopladores, modulaci\u00f3n, ruido y muchos otros temas. Pandya, \u201cEmerging Mobile and Personal Communications Systems\u201d. Para obtener una introducci\u00f3n corta y agradable a los sistemas de comunicaci\u00f3n personales port\u00e1tiles, vea este art\u00edculo. Una de las nueve p\u00e1ginas contiene una lista de 70 siglas que se usan en las otras ocho p\u00e1ginas. Sarikaya, \u201cPacket Mode in Wireless Networks: Overview of Transition to Third Generation\u201d. Toda la idea de las redes celulares de la tercera generaci\u00f3n est\u00e1 en los datos de transmisi\u00f3n inal\u00e1mbrica. Si desea ver un panorama de c\u00f3mo manejan los datos las redes de la segunda generaci\u00f3n y cu\u00e1l ser\u00e1 la evoluci\u00f3n a la tercera generaci\u00f3n, \u00e9ste es un buen lugar. Entre los temas que se cubren se encuentran GPRS, IS-95B, WCDMA y CDMA2000.\n840\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\n9.1.3 La capa de enlace de datos Carlson, PPP Design, Implementation and Debugging, 2a. ed. Si a usted le interesa una informaci\u00f3n detallada sobre todos los protocolos que integran la suite PPP, incluyendo CCP (compresi\u00f3n) y ECP (encriptaci\u00f3n), este libro es una buena referencia. Hay un enfoque particular en ANU PPP-2.3, una implementaci\u00f3n popular de PPP. Gravano, Introduction to Error Control Codes. Los errores se infiltran en casi todas las comunicaciones digitales, y se han desarrollado muchos tipos de c\u00f3digo para detectarlos y corregirlos. Este libro explica algunos de los m\u00e1s importantes, desde los sencillos c\u00f3digos lineales de Hamming hasta los campos y los c\u00f3digos de Galois m\u00e1s complejos. Aun cuando se intenta utilizar el m\u00ednimo de \u00e1lgebra, contiene una gran cantidad de \u00e9sta. Holzmann, Design and Validation of Computer Protocols. Los lectores interesados en los aspectos m\u00e1s formales de los protocolos de enlace de datos (y similares) deben leer este libro. En \u00e9l se cubren la especificaci\u00f3n, el modelado, la exactitud y las pruebas de tales protocolos. Peterson y Davie, Computer Networks: A Systems Approach. El cap\u00edtulo 2 contiene material acerca de muchos problemas de enlace de datos, como tramado, detecci\u00f3n de errores, protocolos de parada y espera, protocolos de deslizamiento de ventana y las LAN IEEE 802. Stallings, Data and Computer Communications. El cap\u00edtulo 7 trata la capa de enlace de datos y cubre el control de flujo, la detecci\u00f3n de errores y los protocolos b\u00e1sicos de enlace de datos, como los protocolos de paro y espera y de regreso n. Tambi\u00e9n se cubren los protocolos de tipo HDLC.\n9.1.4 La subcapa de control de acceso al medio Bhagwat, \u201cBluetooth: Technology for Short-Range Wireless Apps\u201d. Si desea una introducci\u00f3n directa al sistema Bluetooth, \u00e9ste es un buen lugar de inicio. Se explican los protocolos y perfiles medulares, radio, piconets y enlaces, seguidos de una introducci\u00f3n a los diversos protocolos. Bisdikian, \u201cAn Overview of the Bluetooth Wireless Technology\u201d. Al igual que el documento de Bhagwat (el anterior), \u00e9ste tambi\u00e9n es un buen punto de partida para aprender m\u00e1s acerca del sistema Bluetooth. Explica las piconets, la pila de protocolos y los perfiles, entre otros temas. Crow y cols., \u201cIEEE 802.11 Wireless Local Area Networks\u201d. \u00c9ste es un buen lugar para empezar una introducci\u00f3n sencilla a la tecnolog\u00eda y a los protocolos del est\u00e1ndar 802.11. Se destaca la subcapa MAC y se cubren tanto el control distribuido como\nSEC. 9.1\nSUGERENCIAS DE LECTURAS ADICIONALES\n841\nel control centralizado. El documento concluye con algunos estudios de simulaci\u00f3n en diversas circunstancias del desempe\u00f1o del est\u00e1ndar 802.11. Eklund y cols., \u201cIEEE Standard 802.16: A Technical Overview of the Wireless MAN Air Interface for Broadband Wireless Access\u201d. El ciclo local inal\u00e1mbrico estandarizado por el IEEE en 2002, como 802.16, puede revolucionar el servicio telef\u00f3nico, ofreciendo banda ancha para el hogar. En este panorama, los autores explican los principales problemas de tecnolog\u00eda relacionados con este est\u00e1ndar. Kapp, \u201c802.11: Leaving the Wire Behind\u201d. Esta breve introducci\u00f3n al est\u00e1ndar 802.11 cubre los fundamentos, los protocolos y los est\u00e1ndares relevantes. Kleinrock, \u201cOn Some Principles of Nomadic Computing and Multi-Access Communications\u201d. El acceso inal\u00e1mbrico sobre un canal compartido es m\u00e1s complejo que tener estaciones cableadas que comparten un canal. Entre otros problemas se encuentran las topolog\u00edas din\u00e1micas, el enrutamiento y la administraci\u00f3n de energ\u00eda. En este art\u00edculo se cubren estos y otros problemas relacionados con el acceso a canales a trav\u00e9s de dispositivos m\u00f3viles inal\u00e1mbricos. Miller y Cummins, LAN Technologies Explained. \u00bfNecesita conocer m\u00e1s acerca de las tecnolog\u00edas que se pueden emplear en una LAN? Este libro cubre la mayor\u00eda de ellas, incluyendo FDDI y token ring, as\u00ed como la siempre popular Ethernet. Aunque en la actualidad son muy raras las nuevas instalaciones de las dos primeras, muchas redes existentes a\u00fan las usan, adem\u00e1s de que todav\u00eda son comunes las redes de anillo (por ejemplo, SONET). Perlman, Interconnections, 2a. ed. El libro de Perlman es un buen lugar para buscar un tratamiento entretenido y bien documentado sobre los puentes, enrutadores y enrutamiento en general. El autor dise\u00f1\u00f3 los algoritmos que se utilizan en el puente de \u00e1rbol de expansi\u00f3n IEEE 802, y evidentemente es una de las autoridades mundiales en varios aspectos de la conectividad. Webb, \u201cBroadband Fixed Wireless Access\u201d. En este documento se analizan el \u201cporqu\u00e9\u201d y el \u201cc\u00f3mo\u201d del ancho de banda fijo inal\u00e1mbrico. La secci\u00f3n del \u201cporqu\u00e9\u201d argumenta que las personas no quieren una direcci\u00f3n de correo electr\u00f3nico dom\u00e9stica, una direcci\u00f3n de correo electr\u00f3nica de trabajo, n\u00fameros telef\u00f3nicos separados para el hogar, trabajo y celular, una cuenta de mensajes instant\u00e1nea y quiz\u00e1s uno o dos n\u00fameros de fax. M\u00e1s bien desean un sistema integrado \u00fanico que funcione en todas partes. En la secci\u00f3n de tecnolog\u00eda se destaca la capa f\u00edsica, incluyendo temas como TDD en comparaci\u00f3n con FDD, modulaci\u00f3n adaptable en comparaci\u00f3n con fija y n\u00famero de portadoras.\n842\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\n9.1.5 La capa de red Bhatti y Crowcroft, \u201cQoS Sensitive Flows: Issues in IP Packet Handling\u201d. Una de las maneras de conseguir la mejor calidad de servicio de una red es programar con cuidado las salidas de paquetes de cada enrutador. En este documento se explican en detalle varios algoritmos de programaci\u00f3n de paquetes, as\u00ed como problemas relacionados. Chakrabarti, \u201cQoS Issues in Ad Hoc Wireless Networks\u201d. El enrutamiento de redes ad hoc de computadoras port\u00e1tiles que est\u00e1n cerca unas de otras es bastante dif\u00edcil sin tener que preocuparse por la calidad del servicio. No obstante, la gente se preocupa por la calidad del servicio, por lo que hay que prestar atenci\u00f3n a este tema. En este art\u00edculo se exponen la naturaleza de las redes ad hoc y algunos de los problemas relacionados con el enrutamiento y la calidad del servicio. Comer, Internetworking with TCP/IP, Vol. 1, 4a. ed. Comer ha escrito el libro definitivo sobre el conjunto de protocolos TCP/IP. Los cap\u00edtulos 4 a 11 tratan el IP y los protocolos relacionados de la capa de red. Los otros cap\u00edtulos se encargan principalmente de las capas superiores, y tambi\u00e9n vale la pena leerlos. Huitema, Routing in the Internet. Si quiere saber todo lo que hay que saber sobre el enrutamiento en Internet, \u00e9ste es el libro para usted. Se tratan con lujo de detalle tanto los algoritmos pronunciables (por ejemplo, RIP, CIDR y MBONE), como los impronunciables (por ejemplo, OSPF, IGRP, EGP y BGP). Tambi\u00e9n est\u00e1n aqu\u00ed las caracter\u00edsticas nuevas, como multidifusi\u00f3n, IP m\u00f3vil y reservaci\u00f3n de recursos. Malhotra, IP Routing. Si desea una gu\u00eda detallada al enrutamiento IP, este libro contiene mucho material. Entre los protocolos cubiertos est\u00e1n RIP, RIP-2, IGRP, EIGRP, OSPF y BGP-4. Metz, \u201cDifferentiated Services\u201d. Las garant\u00edas de calidad de servicio son importantes para muchas aplicaciones multimedia. Los servicios integrados y los diferenciados son dos m\u00e9todos posibles para alcanzarlas. Los dos se explican aqu\u00ed, pero se resaltan los servicios diferenciados. Metz, \u201cIP Routers: New Tool for Gigabit Networking\u201d. La mayor\u00eda de las referencias al cap\u00edtulo 5 son acerca de algoritmos de enrutamiento. \u00c9sta es diferente: se refiere a c\u00f3mo funcionan en la actualidad los enrutadores. Han pasado por un proceso evolutivo desde ser estaciones de trabajo de prop\u00f3sito general hasta ser m\u00e1quinas de enrutamiento de prop\u00f3sitos altamente especiales. Si desea saber m\u00e1s, este art\u00edculo es un buen lugar para empezar.\nSEC. 9.1\nSUGERENCIAS DE LECTURAS ADICIONALES\n843\nNemeth y cols., UNIX System Administration Handbook. Para un cambio de ritmo, el cap\u00edtulo 13 de este libro aborda la conexi\u00f3n de redes de una manera m\u00e1s pr\u00e1ctica que la mayor\u00eda de nuestras dem\u00e1s referencias. En lugar de tratar s\u00f3lo los conceptos abstractos, aqu\u00ed se proporcionan muchos consejos sobre qu\u00e9 hacer si usted administra una red real actualmente. Perkins, \u201cMobile Networking through Mobile IP\u201d. Conforme los dispositivos de computaci\u00f3n port\u00e1til se vuelven cada vez m\u00e1s comunes, Mobile IP crece en importancia. Este tutorial da una buena introducci\u00f3n a este y otros temas relacionados. Perlman, Interconnections: Bridges and Routers, 2a. ed. En los cap\u00edtulos 12 a 15, Perlman describe muchos de los asuntos implicados en el dise\u00f1o de algoritmos de enrutamiento unidifusi\u00f3n y multidifusi\u00f3n, tanto en las WANs como en las redes de varias LANs, as\u00ed como su implementaci\u00f3n en varios protocolos. Pero la mejor parte del libro es el cap\u00edtulo 18, en el que el autor destila sus a\u00f1os de experiencia en protocolos de red en un cap\u00edtulo divertido e informativo. Puzmanova, Routing and Switching: Time of Convergence? A finales de 1990, algunos proveedores de equipos de conexi\u00f3n de redes empezaron a llamar conmutador a todo, mientras que muchos administradores de redes grandes dec\u00edan que estaban cambiando de enrutadores a conmutadores. Como implica el t\u00edtulo, este libro predice el futuro de los enrutadores y conmutadores, y cuestiona si en realidad est\u00e1n convergiendo. Royer y Toh, \u201cA Review of Current Routing Protocols for Ad-Hoc Mobile Wireless Networks\u201d. El algoritmo de enrutamiento ad hoc AODV que analizamos en el cap\u00edtulo 5 no es el \u00fanico conocido. Hay otros m\u00e1s, como DSDV, CGSR, WRP, DSR, TORA, ABR, DRP y SRP, que se explican aqu\u00ed y se comparan entre s\u00ed. Desde luego, si planea inventar un nuevo protocolo de enrutamiento, el paso 1 es idear una sigla de tres o cuatro letras. Stevens, TCP/IP Illustrated, Vol. 1. Los cap\u00edtulos 3 a 10 proporcionan un estudio detallado de IP y de los protocolos relacionados (ARP, RARP e ICMP), ilustrado con ejemplos. Striegel y Manimaram, \u201cA Survey of QoS Multicasting Issues\u201d. La multidifusi\u00f3n y la calidad de servicio son dos temas que cada vez toman m\u00e1s importancia conforme empiezan a despegar servicios como radio y televisi\u00f3n por Internet. En esta encuesta documentada, los autores explican c\u00f3mo los algoritmos de enrutamiento pueden tener en cuenta estos dos problemas.\n844\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nYang y Reddy, \u201cA Taxonomy for Congestion Control Algorithms in Packet Switching Networks\u201d. Los autores han dise\u00f1ado una clasificaci\u00f3n para los algoritmos de control de congestionamiento. Las categor\u00edas principales son ciclo abierto con control de origen, ciclo abierto con control de destino, ciclo cerrado con retroalimentaci\u00f3n expl\u00edcita y ciclo cerrado con realimentaci\u00f3n impl\u00edcita. Los autores usan esta clasificaci\u00f3n para describir y clasificar 23 algoritmos existentes.\n9.1.6 La capa de transporte Comer, Internetworking with TCP/IP, Vol. 1, 4a. ed. Como dijimos antes, Comer ha escrito la obra definitiva sobre el conjunto de protocolos TCP/IP. El cap\u00edtulo 12 se refiere al UDP; el cap\u00edtulo 13 a TCP. Hall y Cerf, Internet Core Protocols: The Definitive Guide. Si desea obtener su informaci\u00f3n directamente del origen, \u00e9ste es el lugar para aprender acerca de TCP. Despu\u00e9s de todo, Cerf lo coinvent\u00f3. El cap\u00edtulo 7 es una buena referencia de TCP, pues muestra c\u00f3mo interpretar la informaci\u00f3n proporcionada por el an\u00e1lisis de protocolos y las herramientas de administraci\u00f3n de redes. Otros cap\u00edtulos tratan UDP, IGMP, ICMP y ARP. Kurose y Ross, Computer Networking: A Top-Down Approach Featuring the Internet. El cap\u00edtulo 3 se refiere a la capa de transporte y contiene una buena cantidad de material sobre UDP y TCP. Tambi\u00e9n presenta los protocolos de parada y espera y de regreso n que analizamos en el cap\u00edtulo 3. Mogul, \u201cIP Network Performance\u201d. A pesar del t\u00edtulo de este art\u00edculo, en su mayor\u00eda trata el desempe\u00f1o de TCP y las redes en general, m\u00e1s que el de IP en particular; est\u00e1 lleno de lineamientos y reglas emp\u00edricas \u00fatiles. Peterson y Davie, Computer Networks: A Systems Approach. El cap\u00edtulo 5 trata sobre UDP, TCP y algunos protocolos relacionados. Aunque brevemente, tambi\u00e9n se toca el comportamiento de redes. Stevens, TCP/IP Illustrated, Vol. 1. Los cap\u00edtulos 17-24 dan un tratamiento detallado de TCP, ilustrado con ejemplos.\n9.1.7 La capa de aplicaci\u00f3n Bergholz, \u201cExtending Your Markup: An XML Tutorial\u201d. Una introducci\u00f3n directa y breve a XML para principiantes.\nSEC. 9.1\nSUGERENCIAS DE LECTURAS ADICIONALES\n845\nBerners-Lee y cols., \u201cThe World Wide Web\u201d. Una perspectiva de Web y hacia d\u00f3nde va, de parte de su inventor y de algunos de los colegas de \u00e9ste en CERN. El art\u00edculo se enfoca en la arquitectura de Web, los URLs, HTPP y HTML, as\u00ed como en las direcciones futuras, y la compara con los otros sistemas de informaci\u00f3n distribuidos. Cardellini y cols., The State-of-the-Art in Locally Distributed Web-Server Systems\u201d. A medida que Web se hace m\u00e1s popular, algunos sitios Web necesitan tener grandes granjas de servidores para manejar el tr\u00e1fico. La parte ardua de construir una granja de servidores es distribuir la carga entre las m\u00e1quinas. Este documento tutorial explica ampliamente ese tema. Choudbury y cols., \u201cCopyright Protection for Electronic Publishing on Computer Networks\u201d. Aunque numerosos libros y art\u00edculos describen los algoritmos criptogr\u00e1ficos, pocos describen la manera en que podr\u00edan usarse para evitar que los usuarios distribuyan m\u00e1s documentos de los que tienen permitido desencriptar. Este art\u00edculo describe varios mecanismos que pueden ayudar a proteger los derechos de los autores en la era electr\u00f3nica. Collins, \u201cCarrier Grade Voice over IP\u201d. Si usted ha le\u00eddo el trabajo de Varshney y cols., y ahora quiere conocer todos los detalles acerca de la voz a trav\u00e9s de IP utilizando H.323, \u00e9ste es un buen lugar para ver. Aunque el libro es largo y detallado, es tutorial por naturaleza y no requiere conocimientos previos de ingenier\u00eda telef\u00f3nica. Davison, \u201cA Web Caching Primer\u201d. Conforme Web crece, el uso de cach\u00e9 se hace indispensable para un buen desempe\u00f1o. Si desea una breve introducci\u00f3n al uso de cach\u00e9 de Web, \u00e9ste es un buen lugar para ver. Krishnamurthy y Rexford, Web Protocols and Practice. Ser\u00eda dif\u00edcil encontrar un libro m\u00e1s extenso sobre todos los aspectos de Web que \u00e9ste. Abarca clientes, servidores, proxies y uso de cach\u00e9, como usted pod\u00eda esperar. Sin embargo, tambi\u00e9n hay cap\u00edtulos sobre tr\u00e1fico y medidas de Web, as\u00ed como otros sobre investigaciones y mejoras actuales a Web. Rabinovich y Spatscheck, Web Caching and Replication. \u00c9ste contiene un tratamiento extenso del uso de cach\u00e9 y la duplicaci\u00f3n de Web. Se cubren en gran detalle proxies, cach\u00e9s, extracci\u00f3n previa, redes de entrega de contenido, selecci\u00f3n de servidor y mucho m\u00e1s. Shahabi y cols., \u201cYima: A Second-Generation Continuous Media Server\u201d. Los servidores multimedia son sistemas complejos que tienen que administrar programaci\u00f3n de CPU, colocaci\u00f3n de archivos de disco, sincronizaci\u00f3n de flujos y m\u00e1s. Con el tiempo, la gente\n846\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nha aprendido a dise\u00f1arlos mejor. En este documento se presenta un panorama de la arquitectura de uno de los sistemas m\u00e1s recientes. Tittel y cols., Mastering XHTML. Dos libros en un volumen grande, que cubren el nuevo lenguaje de marca est\u00e1ndar de Web. Primero, hay texto que describe HTML, enfoc\u00e1ndose sobre todo en la manera en que se diferencia del HTML regular. Despu\u00e9s viene una amplia gu\u00eda de referencias a etiquetas, c\u00f3digos y caracteres especiales que se utilizan en XHTML 1.0. Varshney y cols., \u201cVoice over IP\u201d. \u00bfC\u00f3mo funciona la voz a trav\u00e9s de IP? \u00bfVa a reemplazar a la red telef\u00f3nica conmutada p\u00fablica? Lea y desc\u00fabralo.\n9.1.8 Seguridad en redes Anderson, \u201cWhy Cryptosystems Fail\u201d. Seg\u00fan Anderson, la seguridad de los sistemas bancarios es mala, pero no debido a que intrusos astutos violen el DES desde sus PCs. Los verdaderos problemas van desde empleados deshonestos (un empleado bancario que cambia la direcci\u00f3n de correo de un cliente a la suya para interceptar el n\u00famero de tarjeta bancaria y el n\u00famero de PIN), a errores de programaci\u00f3n (dar a todos los clientes el mismo c\u00f3digo PIN). Lo que es especialmente interesante es la altanera respuesta que dan los bancos cuando se les confronta ante un problema evidente: \u201cNuestros sistemas son perfectos y, por lo tanto, todos los errores deben ser causados por errores del cliente o por fraude\u201d. Anderson, Security Engineering. Algo extenso, este libro es una versi\u00f3n de 600 p\u00e1ginas de \u201cWhy Cryptosystems Fail\u201d. Es m\u00e1s t\u00e9cnico que Secrets and Lies, pero menos que Network Security (vea m\u00e1s adelante). Despu\u00e9s de una introducci\u00f3n a las t\u00e9cnicas b\u00e1sicas de seguridad, cap\u00edtulos enteros est\u00e1n dedicados a diversas aplicaciones, como seguridad bancaria, comandos y control nucleares, seguridad en impresi\u00f3n, biometr\u00eda, seguridad f\u00edsica, guerra electr\u00f3nica, seguridad en telecomunicaciones, comercio electr\u00f3nico y protecci\u00f3n a derechos de autor. La tercera parte del libro se refiere a pol\u00edticas, administraci\u00f3n y evaluaci\u00f3n de sistemas. Artz, \u201cDigital Steganography\u201d. La esteganograf\u00eda se remonta a la antigua Grecia, donde se fund\u00eda cera en tablas limpias de manera que los mensajes secretos se pudieran aplicar a la madera que estaba debajo antes de aplicar la cera nuevamente. En la actualidad se usan t\u00e9cnicas diferentes, pero el objetivo es el mismo. Aqu\u00ed se explican varias t\u00e9cnicas modernas para ocultar informaci\u00f3n en im\u00e1genes, audio y otros medios de transporte. Brands, Rethinking Public Key Infrastructures and Digital Certificates. M\u00e1s que una introducci\u00f3n amplia a los certificados digitales, \u00e9ste tambi\u00e9n es un poderoso trabajo de defensa. El autor cree que los sistemas basados en documentos de verificaci\u00f3n de identidad\nSEC. 9.1\nSUGERENCIAS DE LECTURAS ADICIONALES\n847\nson obsoletos e in\u00fatiles, y argumenta que los certificados digitales se pueden usar para aplicaciones como votaciones electr\u00f3nicas, administraci\u00f3n de derechos digitales e incluso como sustitutos de dinero en efectivo. Tambi\u00e9n advierte que sin PKI ni encriptaci\u00f3n, Internet podr\u00eda llegar a ser una herramienta de supervisi\u00f3n a gran escala. Kaufman y cols. Network Security, 2a. ed. Para obtener m\u00e1s informaci\u00f3n t\u00e9cnica sobre algoritmos y protocolos de seguridad en redes, este libro autorizado e ingenioso es lo primero que hay que ver. Algoritmos y protocolos de clave p\u00fablica y secreta, hashes de mensajes, autenticaci\u00f3n, Kerberos, PKI, IPsec, SSL/TLS y seguridad en el correo electr\u00f3nico, se explican amplia y cuidadosamente, con muchos ejemplos. El cap\u00edtulo 26 sobre el folklore de la seguridad es una verdadera joya. En seguridad, el demonio est\u00e1 en los detalles. Cualquiera que planee dise\u00f1ar un sistema de seguridad que realmente se usar\u00e1, aprender\u00e1 en este cap\u00edtulo mucho del consejo del mundo real. Pohlmann, Firewall Systems. Los firewalls son la primera l\u00ednea (y la \u00faltima) de defensa contra salteadores de redes. Este libro explica c\u00f3mo funcionan y qu\u00e9 hacen, desde el firewall m\u00e1s sencillo con base en software dise\u00f1ado para proteger una PC, hasta las avanzadas aplicaciones de firewall que se sit\u00faan entre una red privada y su conexi\u00f3n a Internet. Schneier, Applied Cryptography, 2a. ed. Este compendio monumental es la peor pesadilla de NSA: un libro \u00fanico que describe cada algoritmo criptogr\u00e1fico conocido. Para empeorar las cosas (o para mejorarlas, dependiendo de su punto de vista), el libro contiene la mayor\u00eda de los algoritmos como programas ejecutables (en C). Y todav\u00eda mas, se proporcionan m\u00e1s de 600 referencias de literatura criptogr\u00e1fica. Este libro no es para principiantes, pero si quiere guardar realmente en secreto sus archivos, l\u00e9alo. Schneier, Secrets and Lies. Si ley\u00f3 Applied Cryptography de pasta a pasta, lo sabr\u00e1 todo acerca de algoritmos criptogr\u00e1ficos. Si luego lee Secrets and Lies de pasta a pasta (lo que se puede hacer en mucho menos tiempo), aprender\u00e1 que los algoritmos criptogr\u00e1ficos no son toda la historia. La mayor\u00eda de las debilidades de seguridad no se debe a fallas en los algoritmos o incluso a claves demasiado cortas, sino a fallas en el entorno de la seguridad. Se presentan innumerables ejemplos sobre amenazas, ataques, defensas, contraataques y mucho m\u00e1s. Para una explicaci\u00f3n sencilla y fascinante sobre la seguridad de las computadoras en el m\u00e1s amplio sentido, \u00e9ste es el libro que hay que leer. Skoudis, Counter Hack. La mejor manera de detener a un hacker es pensar como hacker. Este libro muestra c\u00f3mo ven los hackers a una red, y argumenta que la seguridad debe ser una funci\u00f3n de todo el dise\u00f1o de la red, no un pensamiento posterior con base en una tecnolog\u00eda espec\u00edfica. Cubre casi todos los ataques comunes, incluyendo los tipos de \u201cingenier\u00eda social\u201d que se aprovechan de los usuarios que no est\u00e1n familiarizados con las medidas de seguridad de computadora.\n848\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\n9.2 BIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO ABRAMSON, N., \u201cDevelopment of the ALOHANET\u201d, IEEE Trans. on Information Theory, vol. IT-31, p\u00e1gs. 119-123, marzo de 1985. ABRAMSON, N., \u201cInternet Access Using VSATs\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 60-68, julio de 2000. ADAMS, M., y DULCHINOS, D., \u201cOpenCable\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 98-105, junio de 2001. ALKHATIB, H.S.; BAILEY, C.; GERLA, M., y MCRAE, J., \u201cWireless Data Networks: Reaching the Extra Mile\u201d, Computer, vol. 30, p\u00e1gs. 59-62, diciembre de 1997. ANDERSON, R.J., \u201cFree Speech Online and Office\u201d, Computer, vol. 25, p\u00e1gs. 28-30, junio de 2002. ANDERSON, R.J., Security Engineering, Nueva York: Wiley, 2001. ANDERSON, R.J., \u201cThe Eternity Service\u201d, Proc. First Int\u2019l Conf. on Theory and Appl. Of Cryptology, CTU Publishing House, 1996. ANDERSON, R.J., \u201cWhy Cryptosystems Fail\u201d, Commun. of the ACM, vol. 37, p\u00e1gs. 32-40, noviembre de 1994. ARTZ, D., \u201cDigital Steganography\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 75-80, 2001. AZZAM, A.A., y RANSOM, N., Broadband Access Technologies, Nueva York: McGraw-Hill, 1999. BAKNE, A., y BADRINATH, B.R., \u201cI-TCP: Indirect TCP for Mobile Hosts\u201d, Proc. 15th Int\u2019l Conf. on Distr. Computer Systems, IEEE, p\u00e1gs. 136-143, 1995. BALAKRISHNAN, H.; SESHAN, S., y KATZ, R.H., \u201cImproving Reliable Transport and Handoff Performance in Cellular Wireless Networks\u201d, Proc. ACM Mobile Computing and Networking Conf., ACM, p\u00e1gs. 2-11, 1995. BALLARDIE, T.; FRANCIS, P., y CROWCROFT, J., \u201cCore Based Trees (CBT)\u201d, Proc. SIGCOMM \u201993 Conf., ACM, p\u00e1gs. 85-95, 1993. BARAKAT, C.; ALTMAN, E., y DABBOUS, W., \u201cOn TCP Performance in a Heterogeneous Network: A Survey\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 40-46, enero de 2000. BELLAMY, J., Digital Telephony, 3a. ed., Nueva York: Wiley, 2000. BELLMAN, R.E., Dynamic Programming, Princeton, Nueva Jersey: Princeton University Press, 1957. BELSNES, D., \u201cFlow Control in the Packet Switching Networks\u201d, Communications Networks, Uxbridge, Inglaterra: Online, p\u00e1gs. 349-361, 1975. BENNET, C.H., y BRASSARD, G., \u201cQuantum Cryptography: Public Key Distribution and Coin Tossing\u201d, Int\u2019l Conf. on Computer Systems and Signal Processing, p\u00e1gs. 175-179, 1984.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n849\nBEREZDIVIN, R.; BREINIG, R., y TOPP, R., \u201cNext-Generation Wireless Communication Concepts and Technologies\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 108-116, marzo de 2002. BERGHEL, H.L., \u201cCyber Privacy in the New Millennium\u201d, Computer, vol. 34, p\u00e1gs. 132-134, enero de 2001. BERGHOLZ, A., \u201cExtending Your Markup: An XML Tutorial\u201d, IEEE Internet Computing, vol. 4, p\u00e1gs. 74-79, julio-agosto de 2000. BERNERS-LEE, T.; CAILLIAU, A.; LOUTONEN, A.; NIELSEN, H.F., y SECRET, A., \u201cThe World Wide Web\u201d, Commun. of the ACM, vol. 37, p\u00e1gs. 76-82, agosto de 1994. BERTSEKAS, D., y GALLAGER, R., Data Networks, 2a. ed., Englewood Cliffs, Nueva Jersey: Prentice Hall, 1992. BHAGWAT, P., \u201cBluetooth: Technology for Short-Range Wireless Apps\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 96-103, mayo-junio de 2001. BHARGHAVAN, V.; DEMERS, A.; SHENKER, S., y ZHANG, L., \u201cMACAW: A Media Access Protocol for Wireless LANs\u201d, Proc. SIGCOMM \u201994 Conf., ACM, p\u00e1gs. 212-225, 1994. BHATTI, S.N., y CROWCROFT, J., \u201cQoS Sensitive Flows: Issues in IP Packet Handling\u201d, IEEE Internet Computing, vol. 4, p\u00e1gs. 48-57, julio-agosto de 2000. BI, Q.; ZYSMAN, G.I., y MENKES, H., \u201cWireless Mobile Communications at the Start of the 21st Century\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 110-116, enero de 2001. BIHAM, E., y SHAMIR, A., \u201cDifferential Cryptanalysis of the Data Encryption Standard\u201d, Proc. 17th Ann. Int\u2019l Cryptology Conf., Berl\u00edn: Springer-Verlag LNCS 1294, p\u00e1gs. 513-525, 1997. BIRD, R.; GOPAL, I.; HERZBERG, A.; JANSON, P.A.; KUTTEN, S.: MOLVA, R., y YUNG, M., \u201cSystematic Design of a Family of Attack-Resistant Authentication Protocols\u201d, IEEE J. on Selected Areas in Commun., vol. 11, p\u00e1gs. 679-693, junio de 1993. BIRRELL, A.D., y NELSON, B.J., \u201cImplementing Remote Procedure Calls\u201d, ACM Trans. on Computer Systems, vol. 2, p\u00e1gs. 39-59, febrero de 1984. BIRYUKOV, A.; SHAMIR, A., y WAGNER, D., \u201cReal Time Cryptanalysis of A5/1 on a PC\u201d, Proc. Seventh Int\u2019l Workshop on Fast Software Encryption, Berl\u00edn: Springer-Verlag LNCS 1978, p. 1, 2000. BISDIKIAN, C., \u201cAn Overview of the Bluetooth Wireless Technology\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 86-94, diciembre de 2001. BLAZE, M., \u201cProtocol Failure in the Escrowed Encryption Standard\u201d, Proc. Second ACM Conf. on Computer and Commun. Security, ACM, p\u00e1gs. 59-67, 1994. BLAZE, M., y BELLOVIN, S., \u201cTapping on My Network Door\u201d, Commun. of the ACM, vol. 43, p. 136, octubre de 2000.\n850\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nBOGINENI, K.; SIVALINGAM, K.M., y DOWD, P.W., \u201cLow-Complexity Multiple Access Protocols for Wavelength-Division Multiplexed Photonic Networks\u201d, IEEE Journal on Selected Areas in Commun., vol. 11, p\u00e1gs. 590-604, mayo de 1993. BOLCSKEI, H.; PAULRAJ, A.J.; HARI, K.V.S., y NABAR, R.U., \u201cFixed Broadband Wireless Access: State of the Art, Challenges, and Future Directions\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 100-108, enero de 2001. BORISOV, N.; GOLDBERG, I., y WAGNER, D., \u201cIntercepting Mobile Communications: The Insecurity of 802.11\u201d, Seventh Int\u2019l Conf. on Mobile Computing and Networking, ACM, p\u00e1gs. 180-188, 2001. BRANDS, S., Rethinking Public Key Infrastructures and Digital Certificates, Cambridge, Massachusetts: M.I.T. Press, 2000. BRAY, J., y STURMAN, C.F., Bluetooth 1.1: Connect without Cables, 2a. ed., Upper Saddle River, Nueva Jersey: Prentice Hall, 2002. BREYER, R., y RILEY, S., Switched, Fast, and Gigabit Ethernet, Indian\u00e1polis, Indiana: New Riders, 1999. BROWN, S., Implementing Virtual Private Networks, Nueva York: McGraw-Hill, 1999. BROWN, L.; KWAN, M.; PIEPRZYK, J., y SEBERRY, J., \u201cImproving Resistance to Differential Cryptanalysis and the Redesign of LOKI\u201d, ASIACRYPT \u201991 Abstracts, p\u00e1gs. 25-30, 1991. BURNETT, S., y PAINE, S., RSA Security\u2019s Official Guide to Cryptography, Berkeley, California: Osborne/McGraw-Hill, 2001. CAPETANAKIS, J.I., \u201cTree Algorithms for Packet Broadcast Channels\u201d, IEEE Trans. on Information Theory, vol. IT-25, p\u00e1gs. 505-515, septiembre de 1979. CARDELLINI, V.; CASALICCHIO, E.; COLAJANNI, M., y YU, P.S., \u201cThe State-of-the-Art in Locally Distributed Web-Server Systems\u201d, ACM Computing Surveys, vol. 34, p\u00e1gs. 263 311, junio de 2002. CARLSON, J., PPP Design, Implementation and Debugging, 2a. ed., Boston: Addison-Wesley, 2001. CERF, V., y KAHN, R., \u201cA Protocol for Packet Network Interconnection\u201d, IEEE Trans. on Commun., vol. COM-22, p\u00e1gs. 637-648, mayo de 1974. CHAKRABARTI, S., \u201cQoS Issues in Ad Hoc Wireless Networks\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 142-148, febrero de 2001. CHASE, J.S.; GALLATIN, A.J., y YOCUM, K.G., \u201cEnd System Optimizations for High-Speed TCP\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 68-75, abril de 2001. CHEN, B.; JAMIESON, K.; BALAKRISHNAN, H., y MORRIS, R., \u201cSpan: An Energy Efficient Coordination Algorithm for Topology Maintenance in Ad Hoc Wireless Networks\u201d, ACM Wireless Networks, vol. 8, septiembre de 2002. CHEN, K.-C., \u201cMedium Access Control of Wireless LANs for Mobile Computing\u201d, IEEE Network Magazine, vol. 8, p\u00e1gs. 50-63, septiembre-octubre de 1994.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n851\nCHOUDBURY, A.K.; MAXEMCHUK, N.F.; PAUL, S., y SCHULZRINNE, H.G., \u201cCopyright Protection for Electronic Publishing on Computer Networks\u201d, IEEE Network Magazine, vol. 9, p\u00e1gs. 12-20, mayo-junio de 1995. CHU, Y.; RAO, S.G., y ZHANG, H., \u201cA Case for End System Multicast\u201d, Proc. Int\u2019l Conf. on Measurements and Modeling of Computer Syst., ACM, p\u00e1gs. 1-12, 2000. CLARK, D.D., \u201cThe Design Philosophy of the DARPA Internet Protocols\u201d, Proc. SIGCOMM \u201988 Conf., ACM, p\u00e1gs. 106-114, 1988. CLARK, D.D., \u201cWindow and Acknowledgement Strategy in TCP\u201d, RFC 813, julio de 1982. CLARK, D.D.; DAVIE, B.S.; FARBER, D.J.; GOPAL, I.S.; KADABA, B.K.; SINCOSKIE, W.D.; SMITH, J.M., y TENNENHOUSE, D.L., \u201cThe Aurora Gigabit Testbed\u201d, Computer Networks and ISDN Systems, vol. 25, p\u00e1gs. 599-621, enero de 1993. CLARK, D.D.; JACOBSON, V.; ROMKEY, J., y SALWEN, H., \u201cAn Analysis of TCP Processing Overhead\u201d, IEEE Commun. Magazine, vol. 27, p\u00e1gs. 23-29, junio de 1989. CLARK, D.D.; LAMBERT, M., y ZHANG, L., \u201cNETBLT: A High Throughput Transport Protocol\u201d, Proc. SIGCOMM \u201987 Conf., ACM, p\u00e1gs. 353-359, 1987. CLARKE, A.C., \u201cExtra-Terrestrial Relays\u201d, Wireless World, 1945. CLARKE, I.; MILLER, S.G.; HONG, T.W.; SANDBERG, O., y WILEY, B., \u201cProtecting Free Expression Online with Freenet\u201d, IEEE Internet Computing, vol. 6, p\u00e1gs. 40-49, enero-febrero de 2002. COLLINS, D., Carrier Grade Voice over IP, Nueva York: McGraw-Hill, 2001. COLLINS, D., y SMITH, C., 3G Wireless Networks, Nueva York: McGraw-Hill, 2001. COMER, D.E., The Internet Book, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1995. COMER, D.E., Internetworking with TCP/IP, vol. 1, 4a. ed., Englewood Cliffs, Nueva Jersey: Prentice Hall, 2000. COSTA, L.H.M.K.; FDIDA, S., y DUARTE, O.C.M.B., \u201cHop by Hop Multicast Routing Protocol\u201d, Proc. 2001 Conf. on Applications, Technologies, Architectures, and Protocols for Computer Commun., ACM, p\u00e1gs. 249-259, 2001. CRAVER, S.A.; WU, M.; LIU, B.; STUBBLEFIELD, A., SWARTZLANDER, B.; WALLACH, D.W.; DEAN, D., y FELTEN, E.W., \u201cReading Between the Lines: Lessons from the SDMI Challenge\u201d, Proc. 10th USENIX Security Symp., USENIX, 2001. CRESPO, P.M.; HONIG, M.L., y SALEHI, J.A., \u201cSpread-Time Code-Division Multiple Access\u201d, IEEE Trans. on Commun., vol. 43, p\u00e1gs. 2139-2148, junio de 1995. CROW, B.P.; WIDJAJA, I; KIM, J.G., y SAKAI, P.T., \u201cIEEE 802.11 Wireless Local Area Networks\u201d, IEEE Commun. Magazine, vol. 35, p\u00e1gs. 116-126, septiembre de 1997.\n852\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nCROWCROFT, J.; WANG, Z.; SMITH, A., y ADAMS, J., \u201cA Rough Comparison of the IETF and ATM Service Models\u201d, IEEE Network Magazine, vol. 9, p\u00e1gs. 12-16, noviembre-diciembre de 1995. DABEK, F.; BRUNSKILL, E.; KAASHOEK, M.F.; KARGER, D.; MORRIS, R.; STOICA, R., y BALAKRISHNAN, H., \u201cBuilding Peer-to-Peer Systems With Chord, a Distributed Lookup Service\u201d, Proc. 8th Workshop on Hot Topics in Operating Systems, IEEE, p\u00e1gs. 71-76, 2001a. DABEK, F.; KAASHOEK, M.F.; KARGER, D.; MORRIS, R., y STOICA, I., \u201cWide-Area Cooperative Storage with CFS\u201d, Proc. 18th Symp. on Operating Systems Prin., ACM, p\u00e1gs. 202-215, 2001b. DAEMEN, J., y RIJMEN, V., The Design of Rijndael, Berl\u00edn: Springer-Verlag, 2002. DANTHINE, A.A.S., \u201cProtocol Representation with Finite-State Models\u201d, IEEE Trans. on Commun., vol. COM-28, p\u00e1gs. 632-643, abril de 1980. DAVIDSON, J., y PETERS, J. Voice over IP Fundamentals, Indian\u00e1polis, Indiana: Cisco Press, 2000. DAVIE, B., y REKHTER, Y., MPLS Technology and Applications, San Francisco: Morgan Kaufmann, 2000. DAVIS, P.T., y McGUFFIN, C.R., Wireless Local Area Networks, Nueva York: McGraw-Hill, 1995. DAVISON, B.D., \u201cA Web Caching Primer\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 38-45, julio-agosto de 2001. DAY, J.D., \u201cThe (Un)Revised OSI Reference Model\u201d, Computer Commun. Rev., vol. 25, p\u00e1gs. 39-55, octubre de 1995. DAY, J.D., y ZIMMERMANN, H., \u201cThe OSI Reference Model\u201d, Proc. of the IEEE, vol. 71, p\u00e1gs. 1334-1340, diciembre de 1983. DE VRIENDT, J.; LAINE, P.; LEROUGE, C., y XU, X., \u201cMobile Network Evolution: A Revolution on the Move\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 104-111, abril de 2002. DEERING, S.E., \u201cSIP: Simple Internet Protocol\u201d, IEEE Network Magazine, vol. 7, pp. 16-28, mayo-junio de 1993. DEMERS, A.; KESHAV, S., y SHENKER, S., \u201cAnalysis and Simulation of a Fair Queueing Algorithm\u201d, Internetwork: Research and Experience, vol. 1, p\u00e1gs. 3-26, septiembre de 1990. DENNING, D.E., y SACCO, G.M., \u201cTimestamps in Key Distribution Protocols\u201d, Commun. of the ACM, vol. 24, p\u00e1gs. 533-536, agosto de 1981. DIFFIE, W., y HELLMAN, M.E., \u201cExhaustive Cryptanalysis of the NBS Data Encryption Standard\u201d, Computer, vol. 10, p\u00e1gs. 74-84, junio de 1977. DIFFIE, W., y HELLMAN, M.E., \u201cNew Directions in Cryptography\u201d, IEEE Trans. on Information Theory, vol. IT-22, p\u00e1gs. 644-654, noviembre de 1976.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n853\nDIJKSTRA, E.W., \u201cA Note on Two Problems in Connexion with Graphs\u201d, Numer. Math., vol. 1, p\u00e1gs. 269-271, octubre de 1959. DOBROWSKI, G., y GRISE, D., ATM and SONET Basics, Fuquay-Varina, Carolina del Norte: APDG Telecom Books, 2001. DONALDSON, G., y JONES, D., \u201cCable Television Broadband Network Architectures\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 122-126, junio de 2001. DORFMAN, R., \u201cDetection of Defective Members of a Large Population\u201d, Annals Math. Statistics, vol. 14, p\u00e1gs. 436-440, 1943. DOUFEXI, A.; ARMOUR, S.; BUTLER, M.; NIX, A.; BULL, D.; McGEEHAN, J., y KARLSSON, P., \u201cA Comparison of the HIPERLAN/2 and IEEE 802.11A Wireless LAN Standards\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 172-180, mayo de 2002. DURAND, A., \u201cDeploying IPv6\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 79-81, enero-febrero de 2001. DUTCHER, B., The NAT Handbook, Nueva York: Wiley, 2001. DUTTA-ROY, A., \u201cAn Overview of Cable Modem Technology and Market Perspectives\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 81-88, junio de 2001. EASTTOM, C., Learn JavaScript, Ashburton, Reino Unido: Wordware Publishing, 2001. EL GAMAL, T., \u201cA Public-Key Cryptosystem and a Signature Scheme Based on Discrete Logarithms\u201d, IEEE Trans. on Information Theory, vol. IT-31, p\u00e1gs. 469-472, julio de 1985. ELHANANY, I.; KAHANE, M., y SADOT, D., \u201cPacket Scheduling in Next-Generation Multiterabit Networks\u201d, Computer, vol. 34, p\u00e1gs. 104-106, abril de 2001. ELMIRGHANI, J.M.H., y MOUFTAH, H.T., \u201cTechnologies and Architectures for Scalable Dynamic Dense WDM Networks\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 58-66, febrero de 2000. FARSEROTU, J., y PRASAD, R., \u201cA Survey of Future Broadband Multimedia Satellite Systems, Issues, and Trends\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 128-133, junio de 2000. FIORINI, D.; CHIANI, M.; TRALLI, V., y SALATI, C., \u201cCan we Trust HDLC?\u201d, Computer Commun. Rev., vol. 24, p\u00e1gs. 61-80, octubre de 1994. FLOYD, S., y JACOBSON, V., \u201cRandom Early Detection for Congestion Avoidance\u201d, IEEE/ACM Trans. on Networking, vol. 1, p\u00e1gs. 397-413, agosto de 1993. FLUHRER, S.; MANTIN, I., y SHAMIR, A., \u201cWeakness in the Key Scheduling Algorithm of RC4\u201d, Proc. Eighth Ann. Workshop on Selected Areas in Cryptography, 2001. FORD, L.R., Jr., y FULKERSON, D.R., Flows in Networks, Princeton, Nueva Jersey: Princeton, University Press, 1962.\n854\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nFORD, W., y BAUM, M.S., Secure Electronic Commerce, Upper Saddle River, Nueva Jersey: Prentice Hall, 2000. FORMAN, G.H., y ZAHORJAN, J., \u201cThe Challenges of Mobile Computing\u201d, Computer, vol. 27, p\u00e1gs. 38-47, abril de 1994. FRANCIS, P., \u201cA Near-Term Architecture for Deploying Pip\u201d, IEEE Network Magazine, vol. 7, p\u00e1gs. 30-37, mayo-junio de 1993. FRASER, A.G., \u201cTowards a Universal Data Transport System\u201d, en Advances in Local Area Networks, Kummerle, K.; Tobagi, F., y Limb, J.O. (Eds.), Nueva York: IEEE Press, 1987. FRENGLE, N., I-Mode: A Primer, Nueva York: Hungry Minds, 2002. GADECKI, C., y HECKERT, C., ATM for Dummies, Nueva York: Hungry Minds, 1997. GARBER, L., \u201cWill 3G Really Be the Next Big Wireless Technology?\u201d, Computer, vol. 35, p\u00e1gs. 26-32, enero de 2002. GARFINKEL, S., con SPAFFORD, G., Web Security, Privacy, and Commerce, Sebastopol, California: O\u2019Reilly, 2002. GEIER, J., Wireless LANs, 2a. ed., Indian\u00e1polis, Indiana: Sams, 2002. GEVROS, P.; CROWCROFT, J.; KIRSTEIN, P., y BHATTI, S., \u201cCongestion Control Mechanisms and the Best Effort Service Model\u201d, IEEE Network Magazine, vol. 15, p\u00e1gs. 16-25, mayo-junio de 2001. GHANI, N., y DIXIT, S., \u201cTCP/IP Enhancements for Satellite Networks\u201d, IEEE Commun. Magazine, vol. 37, p\u00e1gs. 64-72, 1999. GINSBURG, D., ATM: Solutions for Enterprise Networking, Boston: Addison-Wesley, 1996. GOODMAN, D.J., \u201cThe Wireless Internet: Promises and Challenges\u201d, Computer, vol. 33, p\u00e1gs. 36-41, julio de 2000. GORALSKI, W.J., Introduction to ATM Networking, Nueva York: McGraw-Hill, 1995. GORALSKI, W.J., Optical Networking and WDM, Nueva York: McGraw-Hill, 2001. GORALSKI, W.J., SONET, 2a. ed., Nueva York: McGraw-Hill, 2000. GOSSAIN, H., DE MORAIS CORDEIRO y AGRAWAL, D.P., \u201cMulticast: Wired to Wireless\u201d, IEEE Commun. Mag., vol. 40, p\u00e1gs. 116-123, junio de 2002. GRAVANO, S., Introduction to Error Control Codes, Oxford, Reino Unido: Oxford University Press, 2001. GUO, Y., y CHASKAR, H., \u201cClass-Based Quality of Service over Air Interfaces in 4G Mobile Networks\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 132-137, marzo de 2002. HAARTSEN, J., \u201cThe Bluetooth Radio System\u201d, IEEE Personal Commun. Magazine, vol. 7, p\u00e1gs. 28-36, febrero de 2000.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n855\nHAC,A., \u201cWireless and Cellular Architecture and Services\u201d, IEEE Commun. Magazine, vol. 33, p\u00e1gs. 98-104, noviembre de 1995. HAC, A., y GUO, L., \u201cA Scalable Mobile Host Protocol for the Internet\u201d, Int\u2019l J. of Network Mgmt, vol. 10, p\u00e1gs. 115-134, mayo-junio de 2000. HALL, E., y CERF, V., Internet Core Protocols: The Definitive Guide, Sebastopol, California: O\u2019Reilly, 2000. HAMMING, R.W., \u201cError Detecting and Error Correcting Codes\u201d, Bell System Tech. J., vol. 29, p\u00e1gs. 147-160, abril de 1950. HANEGAN, K., Custom CGI Scripting with Perl, Nueva York: Wiley, 2001. HARRIS, A., JavaScript Programming for the Absolute Beginner, Premier Press, 2001. HARTE, L.; KELLOGG, S.; DREHER, R., y SCHAFFNIT, T., The Comprehensive Guide to Wireless Technology, Fuquay-Varina, Carolina del Norte: APDG Publishing, 2000. HARTE, L.; LEVINE, R., y KIKTA, R., 3G Wireless Demystified, Nueva York: McGraw-Hill, 2002. HAWLEY, G.T., \u201cHistorical Perspectives on the U.S. Telephone System\u201d, IEEE Commun. Magazine, vol. 29, p\u00e1gs. 24-28, marzo de 1991. HECHT, J., \u201cUnderstanding Fiber Optics\u201d, Upper Saddle River, Nueva Jersey: Prentice Hall, 2001. HEEGARD, C.; COFFEY, J.T.; GUMMADI, S.; MURPHY, P.A.; PROVENCIO, R.; ROSSIN, E.J.; SCHRUM, S., y SHOEMAKER, M.B., \u201cHigh-Performance Wireless Ethernet\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 64-73, noviembre de 2001. HELD, G., The Complete Modem Reference, 2a. ed., Nueva York: Wiley, 1994. HELLMAN, M.E., \u201cA Cryptanalytic Time-Memory Tradeoff \u201d, IEEE Trans. on Information Theory, vol. IT-26, p\u00e1gs. 401-406, julio de 1980. HILLS, A., \u201cLarge-Scale Wireless LAN Design\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 98-104, noviembre de 2001. HOLZMANN, G.J., Design and Validation of Computer Protocols, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1991. HU, Y., y LI, V.O.K., \u201cSatellite-Based Internet Access\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 155-162, marzo de 2001. HU, Y.-C., y JOHNSON, D.B., \u201cImplicit Source Routes for On-Demand Ad Hoc Network Routing\u201d, Proc. ACM Int\u2019l Symp. on Mobile Ad Hoc Networking & Computing, ACM, p\u00e1gs. 1-10, 2001. HUANG, V., y ZHUANG, W., \u201cQoS-Oriented Access Control for 4G Mobile Multimedia CDMA Communications\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 118-125, marzo de 2002.\n856\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nHUBER, J.F.; WEILER, D., y BRAND, H., \u201cUMTS, the Mobile Multimedia Vision for IMT-2000: A Focus on Standardization\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 129-136, septiembre de 2000. HUI, J., \u201cA Broadband Packet Switch for Multi-rate Services\u201d, Proc. Int\u2019l Conf. on Commun., IEEE, p\u00e1gs. 782-788, 1987. HUITEMA, C., Routing in the Internet, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1995. HULL, S., Content Delivery Networks, Berkeley, California: Osborne/McGraw-Hill, 2002. HUMBLET, P.A.; RAMASWAMI, R., y SIVARAJAN, K.N., \u201cAn Efficient Communication Protocol for High-Speed Packet-Switched Multichannel Networks\u201d, Proc. SIGCOMM \u201992 Conf., ACM, p\u00e1gs. 2-13, 1992. HUNTER, D.K., y ANDONOVIC, I., \u201cApproaches to Optical Internet Packet Switching\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 116-122, septiembre de 2000. HUSTON, G., \u201cTCP in a Wireless World\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 82-84, marzo-abril de 2001. IBE, O.C., Essentials of ATM Networks and Services, Boston: Addison-Wesley, 1997. IRMER, T., \u201cShaping Future Telecommunications: The Challenge of Global Standardization\u201d, IEEE Commun. Magazine, vol. 32, p\u00e1gs. 20-28, enero de 1994. IZZO, P., Gigabit Networks, Nueva York: Wiley, 2000. JACOBSON, V., \u201cCongestion Avoidance and Control\u201d, Proc. SIGCOMM \u201988 Conf., ACM, p\u00e1gs. 314-329, 1988. JAIN, R., \u201cCongestion Control and Traffic Management in ATM Networks: Recent Advances and a Survey\u201d, Computer Networks and ISDN Systems, vol. 27, noviembre de 1995. JAIN, R., \u201cCongestion Control in Computer Networks: Issues and Trends\u201d, IEEE Network Magazine, vol. 4, p\u00e1gs. 24-30, mayo-junio de 1990. JAIN, R., FDDI Handbook\u2014High-Speed Networking Using Fiber and Other Media, Boston: AddisonWesley, 1994. JAKOBSSON, M., y WETZEL, S., \u201cSecurity Weaknesses in Bluetooth\u201d, Topics in Cryptology: CT-RSA 2001, Berl\u00edn: Springer-Verlag LNCS 2020, p\u00e1gs. 176-191, 2001. JOEL, A., \u201cTelecommunications and the IEEE Communications Society\u201d, IEEE Commun. Magazine, edici\u00f3n del 50 aniversario, p\u00e1gs. 6-14 y 162-167, mayo 2002. JOHANSSON, P.; KAZANTZIDIS, M.; KAPOOR, R., y GERLA, M., \u201cBluetooth: An Enabler for Personal Area Networking\u201d, IEEE Network Magazine, vol. 15, p\u00e1gs. 28-37, septiembre-octubre de 2001. JOHNSON, D.B., \u201cScalable Support for Transparent Mobile Host Internetworking\u201d, Wireless Networks, vol. 1, p\u00e1gs. 311-321, octubre de 1995.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n857\nJOHNSON, H.W., Fast Ethernet\u2014Dawn of a New Network, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1996. JOHNSON, N.F., y JAJODA, S., \u201cExploring Steganography: Seeing the Unseen\u201d, Computer, vol. 31, p\u00e1gs. 26-34, febrero de 1998. KAHN, D., \u201cCryptology Goes Public\u201d, IEEE Commun. Magazine, vol. 18, p\u00e1gs. 19-28, marzo de 1980. KAHN, D., The Codebreakers, 2a. ed., Nueva York: Macmillan, 1995. KAMOUN, F., y KLEINROCK, L., \u201cStochastic Performance Evaluation of Hierarchical Routing for Large Networks\u201d, Computer Networks, vol. 3, p\u00e1gs. 337-353, noviembre de 1979. KAPP, S., \u201c802.11: Leaving the Wire Behind\u201d, IEEE Internet Computing, vol. 6, p\u00e1gs. 82-85, enero-febrero de 2002. KARN, P., \u201cMACA\u2014A New Channel Access Protocol for Packet Radio\u201d, ARRL/CRRL Amateur Radio Ninth Computer Networking Conf., p\u00e1gs. 134-140, 1990. KARTALOPOULOS, S., Introduction to DWDM Technology: Data in a Rainbow, Nueva York, Nueva York: IEEE Communications Society, 1999. KASERA, S.K.; HJALMTYSSON, G.; TOWLSEY, D.F., y KUROSE, J.F., \u201cScalable Reliable Multicast Using Multiple Multicast Channels\u201d, IEEE/ACM Trans. on Networking, vol. 8, p\u00e1gs. 294-310, 2000. KATZ, D., y FORD, P.S., \u201cTUBA: Replacing IP with CLNP\u201d, IEEE Network Magazine, vol. 7, p\u00e1gs. 38-47, mayo-junio de 1993. KATZENBEISSER, S., y PETITCOLAS, F.A.P., Information Hiding Techniques for Steganography and Digital Watermarking, Londres, Artech House, 2000. KAUFMAN, C.; PERLMAN, R., y SPECINER, M., Network Security, 2a. ed., Englewood Cliffs, Nueva Jersey: Prentice Hall, 2002. KELLERER, W.; VOGEL, H.-J., y STEINBERG, K.-E., \u201cA Communication Gateway for Infrastructure-Independent 4G Wireless Access\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 126-131, marzo de 2002. KERCKHOFF, A., \u201cLa Cryptographie Militaire\u201d, J. des Sciences Militaires, vol. 9, p\u00e1gs. 5-38, enero de 1883 y p\u00e1gs. 161-191, febrero de 1883. KIM, J.B.; SUDA, T., y YOSHIMURA, M., \u201cInternational Standardization of B-ISDN\u201d, Computer Networks and ISDN Systems, vol. 27, p\u00e1gs. 5-27, octubre de 1994. KIPNIS, J., \u201cBeating the System: Abuses of the Standards Adoptions Process\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 102-105, julio de 2000. KLEINROCK, L., \u201cOn Some Principles of Nomadic Computing and Multi-Access Communications\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 46-50, julio de 2000.\n858\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nKLEINROCK, L., y TOBAGI, F., \u201cRandom Access Techniques for Data Transmission over Packet-Switched Radio Channels\u201d, Proc. Nat. Computer Conf., p\u00e1gs. 187-201, 1975. KRISHNAMURTHY, B., y REXFORD, J., Web Protocols and Practice, Boston: Addison-Wesley, 2001. KUMAR, V.; KORPI, M., y SENGODAN, S., IP Telephony with H.323, Nueva York: Wiley, 2001. KUROSE, J.F., y ROSS, K.W., Computer Networking: A Top-Down Approach Featuring the Internet, Boston: Addison-Wesley, 2001. KWOK, T., \u201cA Vision for Residential Broadband Service: ATM to the Home\u201d, IEEE Network Magazine, vol. 9, p\u00e1gs. 14-28, septiembre-octubre de 1995. KYAS, O., y CRAWFORD, G., ATM Networks, Upper Saddle River, Nueva Jersey: Prentice Hall, 2002. LAM, C.K.M., y TAN, B.C.Y., \u201cThe Internet Is Changing the Music Industry\u201d, Commun. of the ACM, vol. 44, p\u00e1gs. 62-66, agosto de 2001. LANSFORD, J.; STEPHENS, A, y NEVO, R., \u201cWi-Fi (802.11b) and Bluetooth: Enabling Coexistence\u201d, IEEE Network Magazine, vol. 15, p\u00e1gs. 20-27, septiembre-octubre de 2001. LASH, D.A., The Web Wizard\u2019s Guide to Perl and CGI, Boston: Addison-Wesley, 2002. LAUBACH, M.E.; FARBER, D.J., y DUKES, S.D., Delivering Internet Connections over Cable, Nueva York: Wiley, 2001. LEE, J.S., y MILLER, L.E., CDMA Systems Engineering Handbook, Londres: Artech House, 1998. LEEPER, D.G., \u201cA Long-Term View of Short-Range Wireless\u201d, Computer, vol. 34, p\u00e1gs. 39-44, junio de 2001. LEINER, B.M.; COLE, R.; POSTEL, J., y MILLS, D., \u201cThe DARPA Internet Protocol Suite\u201d, IEEE Commun. Magazine, vol. 23, p\u00e1gs. 29-34, marzo de 1985. LEVINE, D.A., y AKYILDIZ, I.A., \u201cPROTON: A Media Access Control Protocol for Optical Networks with Star Topology\u201d, IEEE/ACM Trans. on Networking, vol. 3, p\u00e1gs. 158-168, abril de 1995. LEVY, S., \u201cCrypto Rebels\u201d, Wired, p\u00e1gs. 54-61, mayo-junio de 1993. LI, J.; BLAKE, C.; DE COUTO, D.S.J.; LEE, H.I., y MORRIS, R., \u201cCapacity of Ad Hoc Wireless Networks\u201d, Proc. 7th Int\u2019l Conf. on Mobile Computing and Networking, ACM, p\u00e1gs. 61-69, 2001. LIN, F.; CHU, P., y LIU, M., \u201cProtocol Verification Using Reachability Analysis: The State Space Explosion Problem and Relief Strategies\u201d, Proc. SIGCOMM \u201987 Conf., ACM, p\u00e1gs. 126-135, 1987. LIN, Y.-D.; HSU, N.-B., y HWANG, R.-H., \u201cQoS Routing Granularity in MPLS Networks\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 58-65, junio de 2002. LISTANI, M.; ERAMO, V., y SABELLA, R., \u201cArchitectural and Technological Issues for Future Optical Internet Networks\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 82-92, septiembre de 2000.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n859\nLIU, C.L., y LAYLAND, J.W., \u201cScheduling Algorithms for Multiprogramming in a Hard Real-Time Environment\u201d, Journal of the ACM, vol. 20, p\u00e1gs. 46-61, enero de 1973. LIVINGSTON, D., Essential XML for Web Professionals, Upper Saddle River, Nueva Jersey: Prentice Hall, 2002. LOSHIN, P., IPv6 Clearly Explained, San Francisco: Morgan Kaufmann, 1999. LOUIS, P.J., Broadband Crash Course, Nueva York: McGraw-Hill, 2002. LU, W., Broadband Wireless Mobile: 3G and Beyond, Nueva York: Wiley, 2002. MACEDONIA, M.R., \u201cDistributed File Sharing\u201d, Computer, vol. 33, p\u00e1gs. 99-101, 2000. MADRUGA, E.L., y GARCIA-LUNA-ACEVES, J.J., \u201cScalable Multicasting: the Core Assisted Mesh Protocol\u201d, Mobile Networks and Applications, vol. 6, p\u00e1gs. 151-165, abril de 2001. MALHOTRA, R., IP Routing, Sebastopol, California: O\u2019Reilly, 2002. MATSUI, M., \u201cLinear Cryptanalysis Method for DES Cipher\u201d, Advances in Cryptology\u2014Eurocrypt \u201993 Proceedings, Berl\u00edn: Springer-Verlag LNCS 765, p\u00e1gs. 386-397, 1994. MAUFER, T.A., IP Fundamentals, Upper Saddle River, Nueva Jersey: Prentice Hall, 1999. MAZIERES, D., y KAASHOEK, M.F., \u201cThe Design, Implementation, and Operation of an Email Pseudonym Server\u201d, Proc. Fifth Conf. on Computer and Commun. Security, ACM, p\u00e1gs. 27-36, 1998. MAZIERES, D.; KAMINSKY, M.; KAASHOEK, M.F., y WITCHEL, E., \u201cSeparating Key Management from File System Security\u201d, Proc. 17th Symp. on Operating Systems Prin., ACM, p\u00e1gs. 124-139, diciembre de 1999. McFEDRIES, P., Using JavaScript, Indian\u00e1polis, Indiana: Que, 2001. McKENNEY, P.E., y DOVE, K.F., \u201cEfficient Demultiplexing of Incoming TCP Packets\u201d, Proc. SIGCOMM \u201992 Conf., ACM, p\u00e1gs. 269-279, 1992. MELTZER, K., y MICHALSKI, B., Writing CGI Applications with Perl, Boston: Addison-Wesley, 2001. MENEZES, A.J., y VANSTONE, S.A., \u201cElliptic Curve Cryptosystems and Their Implementation\u201d, Journal of Cryptology, vol. 6, p\u00e1gs. 209-224, 1993. MERKLE, R.C., \u201cFast Software Encryption Functions\u201d, Advances in Cryptology\u2014CRYPTO \u201990 Proceedings, Berl\u00edn: Springer-Verlag LNCS 473, p\u00e1gs. 476-501, 1991. MERKLE, R.C., y HELLMAN, M., \u201cHiding and Signatures in Trapdoor Knapsacks\u201d, IEEE Trans. on Information Theory, vol. IT-24, p\u00e1gs. 525-530, septiembre de 1978. MERKLE, R.C., y HELLMAN, M., \u201cOn the Security of Multiple Encryption\u201d, Commun. of the ACM, vol. 24, p\u00e1gs. 465-467, julio de 1981.\n860\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nMETCALFE, R.M., \u201cComputer/Network Interface Design: Lessons from Arpanet and Ethernet\u201d, IEEE Journal on Selected Areas in Commun., vol. 11, p\u00e1gs. 173-179, febrero de 1993. METCALFE, R.M., \u201cOn Mobile Computing\u201d, Byte, vol. 20, p\u00e1g. 110, septiembre de 1995. METCALFE, R.M., y BOGGS; D.R., \u201cEthernet: Distributed Packet Switching for Local Computer Networks\u201d, Commun. of the ACM, vol. 19, p\u00e1gs. 395-404, julio de 1976. METZ, C., \u201cDifferentiated Services\u201d, IEEE Multimedia Magazine, vol. 7, p\u00e1gs. 84-90, julio-septiembre de 2000. METZ, C., \u201cInterconnecting ISP Networks\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 74-80, marzo-abril de 2001. METZ, C., \u201cIP Routers: New Tool for Gigabit Networking\u201d, IEEE Internet Computing, vol. 2, p\u00e1gs. 14-18, noviembre-diciembre de 1998. MILLER, B.A., y BISDIKIAN, C., Bluetooth Revealed, Upper Saddle River, Nueva Jersey: Prentice Hall, 2001. MILLER, P., y CUMMINS, M., LAN Technologies Explained, Woburn, Massachusetts: Butterworth-Heinemann, 2000. MINOLI, D., Video Dialtone Technology, Nueva York: McGraw-Hill, 1995. MINOLI, D., y VITELLA, M., ATM & Cell Relay for Corporate Environments, Nueva York: McGrawHill, 1994. MISHRA, P.P., y KANAKIA, H., \u201cA Hop by Hop Rate-Based Congestion Control Scheme\u201d, Proc. SIGCOMM \u201992 Conf., ACM, p\u00e1gs. 112-123, 1992. MISRA, A.; DAS, S.; DUTTA, A.; McAULEY, A., y DAS, S., \u201cIDMP-Based Fast Hand-offs and Paging in IP-Based 4G Mobile Networks\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 138-145, marzo de 2002. MOGUL, J.C., \u201cIP Network Performance\u201d, en Internet System Handbook, Lynch, D.C. y Rose, M.T. (eds.), Boston: Addison-Wesley, p\u00e1gs. 575-675, 1993. MOK, A.K., y WARD, S.A., \u201cDistributed Broadcast Channel Access\u201d, Computer Networks, vol. 3, p\u00e1gs. 327-335, noviembre de 1979. MOY, J., \u201cMulticast Routing Extensions\u201d, Commun. of the ACM, vol. 37, p\u00e1gs. 61-66, agosto de 1994. MULLINS, J., \u201cMaking Unbreakable Code\u201d, IEEE Spectrum, p\u00e1gs. 40-45, mayo de 2002. NAGLE, J., \u201cCongestion Control in TCP/IP Internetworks\u201d, Computer Commun. Rev., vol. 14, p\u00e1gs. 11-17, octubre de 1984. NAGLE, J., \u201cOn Packet Switches with Infinite Storage\u201d, IEEE Trans. on Commun., vol. COM-35, p\u00e1gs. 435-438, abril de 1987.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n861\nNARAYANASWAMI, C.; KAMIJOH, N.; RAGHUNATH, M.; INOUE, T.; CIPOLLA, T.; SANFORD, J.; SCHLIG, E.; VENTKITESWARAN, S.; GUNIGUNTALA, D.; KULKARNI, V., y YAMAZAKI, K., \u201cIBM\u2019s Linux Watch: The Challenge of Miniaturization\u201d, Computer, vol. 35, p\u00e1gs. 33-41, enero de 2002. NAUGHTON, J., \u201cA Brief History of the Future\u201d, Woodstock, Nueva York: Overlook Press, 2000. NEEDHAM, R.M., y SCHROEDER, M.D., \u201cAuthentication Revisited\u201d, Operating Systems Rev., vol. 21, p\u00e1g. 7, enero de 1987. NEEDHAM, R.M., y SCHROEDER, M.D., \u201cUsing Encryption for Authentication in Large Networks of Computers\u201d, Commun. of the ACM, vol. 21, p\u00e1gs. 993-999, diciembre de 1978. NELAKUDITI, S., y ZHANG, Z.-L., \u201cA Localized Adaptive Proportioning Approach to QoS Routing\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 66-71, junio de 2002. NEMETH, E.; SNYDER, G.; SEEBASS, S., y HEIN, T.R., UNIX System Administration Handbook, 3a. ed., Englewood Cliffs, Nueva Jersey: Prentice Hall, 2000. NICHOLS, R.K., y LEKKAS, P.C., Wireless Security, Nueva York: McGraw-Hill, 2002. NIST, \u201cSecure Hash Algorithm\u201d, U.S. Government Federal Information Processing Standard 180, 1993. O\u2019HARA, B., y PETRICK, A., 802.11 Handbook: A Designer\u2019s Companion, Nueva York: IEEE Press, 1999. OTWAY, D., y REES, O., \u201cEfficient and Timely Mutual Authentication\u201d, Operating Systems Rev., p\u00e1gs. 8-10, enero de 1987. OVADIA, S., Broadband Cable TV Access Networks: from Technologies to Applications, Upper Saddle River, Nueva Jersey: Prentice Hall, 2001. PALAIS, J.C., Fiber Optic Commun., 3a. ed., Englewood Cliffs, Nueva Jersey: Prentice Hall, 1992. PAN, D., \u201cA Tutorial on MPEG/Audio Compression\u201d, IEEE Multimedia Magazine, vol. 2, p\u00e1gs. 60-74, verano de 1995. PANDYA, R., \u201cEmerging Mobile and Personal Communication Systems\u201d, IEEE Commun. Magazine, vol. 33, p\u00e1gs. 44-52, junio de 1995. PARAMESWARAN, M.; SUSARLA, A., y WHINSTON, A.B., \u201cP2P Networking: An Information-Sharing Alternative\u201d, Computer, vol. 34, p\u00e1gs. 31-38, julio de 2001. PARK, J.S., y SANDHU, R., \u201cSecure Cookies on the Web\u201d, IEEE Internet Computing, vol. 4, p\u00e1gs. 36-44, julio-agosto de 2000. PARTRIDGE, C.; HUGHES, J., y STONE, J., \u201cPerformance of Checksums and CRCs over Real Data\u201d, Proc. SIGCOMM \u201995 Conf., ACM, p\u00e1gs. 68-76, 1995. PAXSON, V., \u201cGrowth Trends in Wide-Area TCP Connections\u201d, IEEE Network Magazine, vol. 8, p\u00e1gs. 8-17, julio-agosto de 1994.\n862\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nPAXSON, V., y FLOYD, S., \u201cWide-Area Traffic: The Failure of Poisson Modeling\u201d, Proc. SIGCOMM \u201994 Conf., ACM, p\u00e1gs. 257-268, 1995. PEPELNJAK, I., y GUICHARD, J., MPLS and VPN Architectures, Indian\u00e1polis, Indiana: Cisco Press, 2001. PERKINS, C.E., Mobile IP Design Principles and Practices, Upper Saddle River, Nueva Jersey: Prentice Hall, 1998a. PERKINS, C.E., \u201cMobile Networking in the Internet\u201d, Mobile Networks and Applications, vol. 3, p\u00e1gs. 319-334, 1998b. PERKINS, C.E., \u201cMobile Networking through Mobile IP\u201d, IEEE Internet Computing, vol. 2, p\u00e1gs. 58-69, enero-febrero de 1998c. PERKINS, C.E. (ed.), Ad Hoc Networking, Boston: Addison-Wesley, 2001. PERKINS, C.E., RTP: Audio and Video for the Internet, Boston: Addison-Wesley, 2002. PERKINS, C.E., y ROYER, E., \u201cAd-hoc On-Demand Distance Vector Routing\u201d, Proc. Second Ann. IEEE Workshop on Mobile Computing Systems and Applications, IEEE, p\u00e1gs. 90-100, 1999. PERKINS, C.E., y ROYER, E., \u201cThe Ad Hoc On-Demand Distance-Vector Protocol\u201d, en Ad Hoc Networking, editado por C. Perkins, Boston: Addison-Wesley, 2001. PERLMAN, R., Network Layer Protocols with Byzantine Robustness, Ph.D. thesis, M.I.T., 1988. PERLMAN, R., Interconnections, 2a. ed., Boston: Addison-Wesley, 2000. PERLMAN, R., y KAUFMAN, C., \u201cKey Exchange in IPsec\u201d, IEEE Internet Computing, vol. 4, p\u00e1gs. 50-56, noviembre-diciembre de 2000. PETERSON, L.L., y DAVIE, B.S., Computer Networks: A Systems Approach, San Francisco: Morgan Kaufmann, 2000. PETERSON, W.W., y BROWN, D.T., \u201cCyclic Codes for Error Detection\u201d, Proc. IRE, vol. 49, p\u00e1gs. 228-235, enero de 1961. PICKHOLTZ, R.L.; SCHILLING, D.L., y MILSTEIN, L.B., \u201cTheory of Spread Spectrum Communication\u2014A Tutorial\u201d, IEEE Trans. on Commun., vol. COM-30, p\u00e1gs. 855-884, mayo de 1982. PIERRE, G.; KUZ, I.; VAN STEEN, M., y TANENBAUM, A.S., \u201cDifferentiated Strategies for Replicating Web Documents\u201d, Computer Commun., vol. 24, p\u00e1gs. 232-240, febrero de 2001. PIERRE, G.; VAN STEEN, M., y TANENBAUM, A.S., \u201cDynamically Selecting Optimal Distribution Strategies for Web Documents\u201d, IEEE Trans. on Computers, vol. 51, junio de 2002. PISCITELLO, D.M., y CHAPIN, A.L., Open Systems Networking: TCP/IP and OSI, Boston: AddisonWesley, 1993.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n863\nPITT, D.A., \u201cBridging\u2014The Double Standard\u201d, IEEE Network Magazine, vol. 2, p\u00e1gs. 94-95, enero de 1988. PIVA, A., BARTOLINI, F., y BARNI, M., \u201cManaging Copyrights in Open Networks, IEEE Internet Computing, vol. 6, p\u00e1gs. 18-26, mayo-junio de 2002. POHLMANN, N., Firewall Systems, Bonn, Alemania: MITP-Verlag, 2001. PUZMANOVA, R., Routing and Switching: Time of Convergence?, Londres: Addison-Wesley, 2002. RABINOVICH, M., y SPATSCHECK, O,. Web Caching and Replication, Boston: Addison-Wesley, 2002. RAJU, J., y GARCIA-LUNA-ACEVES, J.J., \u201cScenario-based Comparison of Source-Tracing and Dynamic Source Routing Protocols for Ad-Hoc Networks\u201d, ACM Computer Communications Review, vol. 31, octubre de 2001. RAMANATHAN, R., y REDI, J., \u201cA Brief Overview of Ad Hoc Networks: Challenges and Directions\u201d, IEEE Commun. Magazine, edici\u00f3n de 50 aniversario, p\u00e1gs. 20-22, mayo de 2002. RATNASAMY, S.; FRANCIS, P.; HANDLEY, M.; KARP, R., y SHENKER, S., \u201cA Scalable ContentAddressable Network\u201d, Proc. SIGCOMM \u201901 Conf., ACM, p\u00e1gs. 1161-1172, 2001. RIVEST, R.L., \u201cThe MD5 Message-Digest Algorithm\u201d, RFC 1320, abril de 1992. RIVEST, R.L., y SHAMIR, A., \u201cHow to Expose an Eavesdropper\u201d, Commun. of the ACM, vol. 27, p\u00e1gs. 393-395, abril de 1984. RIVEST, R.L.; SHAMIR, A., y ADLEMAN, L., \u201cOn a Method for Obtaining Digital Signatures and Public Key Cryptosystems\u201d, Commun. of the ACM, vol. 21, p\u00e1gs. 120-126, febrero de 1978. ROBERTS, L.G., \u201cDynamic Allocation of Satellite Capacity through Packet Reservation\u201d, Proc. NCC, AFIPS, p\u00e1gs. 711-716, 1973. ROBERTS, L.G., \u201cExtensions of Packet Communication Technology to a Hand Held Personal Terminal\u201d, Proc. Spring Joint Computer Conference, AFIPS, p\u00e1gs. 295-298, 1972. ROBERTS, L.G., \u201cMultiple Computer Networks and Intercomputer Communication\u201d, Proc. First Symp. on Operating Systems Prin., ACM, 1967. ROSE, M.T., The Internet Message, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1993. ROSE, M.T., The Simple Book, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1994. ROSE, M.T., y McCLOGHRIE, K., How to Manage Your Network Using SNMP, Englewood Cliffs, Nueva Jersey: Prentice Hall, 1995. ROWSTRON, A., y DRUSCHEL, P., \u201cStorage Management and Caching in PAST, a Large-Scale, Persistent Peer-to-Peer Storage Utility\u201d, Proc. 18th Symp. on Operating Systems Prin., ACM, p\u00e1gs. 188-201, 2001a.\n864\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nROWSTRON, A., y DRUSCHEL, P., \u201cPastry: Scalable, Distributed Object Location and Routing for Large-Scale Peer-to-Peer Storage Utility\u201d, Proc. 18th Int\u2019l Conf. on Distributed Systems Platforms, ACM/IFIP, 2001b. ROYER, E.M., y TOH, C.-K., \u201cA Review of Current Routing Protocols for Ad-Hoc Mobile Wireless Networks\u201d, IEEE Personal Commun. Magazine, vol. 6, p\u00e1gs. 46-55, abril de 1999. RUIZ-SANCHEZ, M.A.; BIERSACK, E.W., y DABBOUS, W., \u201cSurvey and Taxonomy of IP Address Lookup Algorithms\u201d, IEEE Network Magazine, vol. 15, p\u00e1gs. 8-23, marzo-abril de 2001. SAIRAM, K.V.S.S.S.S.; GUNASEKARAN, N., y REDDY, S.R., \u201cBluetooth in Wireless Communication\u201d, IEEE Commun. Mag., vol. 40, p\u00e1gs. 90-96, junio de 2002. SALTZER, J.H.; REED, D.P., y CLARK, D.D., \u201cEnd-to-End Arguments in System Design\u201d, ACM Trans. on Computer Systems, vol. 2, p\u00e1gs. 277-288, noviembre de 1984. SANDERSON, D.W., y DOUGHERTY, D., Smileys, Sebastopol, California: O\u2019Reilly, 1993. SARI, H.; VANHAVERBEKE, F., y MOENECLAEY, M., \u201cExtending the Capacity of Multiple Access Channels\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 74-82, enero de 2000. SARIKAYA, B., \u201cPacket Mode in Wireless Networks: Overview of Transition to Third Generation\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 164-172, septiembre de 2000. SCHNEIER, B., Applied Cryptography, 2a. ed., Nueva York: Wiley, 1996. SCHNEIER, B., \u201cDescription of a New Variable-Length Key, 64-Bit Block Cipher [Blowfish]\u201d, Proc. of the Cambridge Security Workshop, Berl\u00edn: Springer-Verlag LNCS 809, p\u00e1gs. 191-204, 1994. SCHNEIER, B., E-Mail Security, Nueva York: Wiley, 1995. SCHNEIER, B., Secrets and Lies, Nueva York: Wiley, 2000. SCHNORR, C.P., \u201cEfficient Signature Generation for Smart Cards\u201d, Journal of Cryptology, vol. 4, p\u00e1gs. 161-174, 1991. SCHOLTZ, R.A., \u201cThe Origins of Spread-Spectrum Communications\u201d, IEEE Trans. on Commun., vol. COM-30, p\u00e1gs. 822-854, mayo de 1982. SCOTT, R., \u201cWide Open Encryption Design Offers Flexible Implementations\u201d, Cryptologia, vol. 9, p\u00e1gs. 75-90, enero de 1985. SEIFERT, R., Gigabit Ethernet, Boston: Addison-Wesley, 1998. SEIFERT, R., The Switch Book, Boston: Addison-Wesley, 2000. SENN, J.A., \u201cThe Emergence of M-Commerce\u201d, Computer, vol. 33, p\u00e1gs. 148-150, diciembre de 2000. SERJANTOV, A., \u201cAnonymizing Censorship Resistant Systems\u201d, Proc. First Int\u2019l Workshop on Peer-toPeer Systems, Berl\u00edn: Springer-Verlag LNCS, 2002.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n865\nSEVERANCE, C., \u201cIEEE 802.11: Wireless Is Coming Home\u201d, Computer, vol. 32, p\u00e1gs. 126-127, noviembre de 1999. SHAHABI, C.; ZIMMERMANN, R.; FU, K., y YAO, S.-Y.D., \u201cYIMA: A Second-Generation Continuous Media Server\u201d, Computer, vol. 35, p\u00e1gs. 56-64, junio de 2002. SHANNON, C., \u201cA Mathematical Theory of Communication\u201d, Bell System Tech. J., vol. 27, p\u00e1gs. 379-423, julio de 1948; y p\u00e1gs. 623-656, octubre de 1948. SHEPARD, S., SONET/SDH Demystified, Nueva York: McGraw-Hill, 2001. SHREEDHAR, M., y VARGHESE, G., \u201cEfficient Fair Queueing Using Deficit Round Robin\u201d, Proc. SIGCOMM \u201995 Conf., ACM, p\u00e1gs. 231-243, 1995. SKOUDIS, E., Counter Hack, Upper Saddle River, Nueva Jersey: Prentice Hall, 2002. SMITH, D.K., y ALEXANDER, R.C., Fumbling the Future, Nueva York: William Morrow, 1988. SMITH, R.W., Broadband Internet Connections, Boston: Addison Wesley, 2002. SNOEREN, A.C., y BALAKRISHNAN, H., \u201cAn End-to-End Approach to Host Mobility\u201d, Int\u2019l Conf. on Mobile Computing and Networking, ACM, p\u00e1gs. 155-166, 2000. SOBEL, D.L., \u201cWill Carnivore Devour Online Privacy\u201d, Computer, vol. 34, p\u00e1gs. 87-88, mayo de 2001. SOLOMON, J.D., Mobile IP: The Internet Unplugged, Upper Saddle River, Nueva Jersey: Prentice Hall, 1998. SPOHN, M., y GARCIA-LUNA-ACEVES, J.J., \u201cNeighborhood Aware Source Routing\u201d, Proc. ACM MobiHoc 2001, ACM, p\u00e1gs. 2001. SPURGEON, C.E., Ethernet: The Definitive Guide, Sebastopol, California: O\u2019Reilly, 2000. STALLINGS, W., Data and Computer Communications, 6a. ed., Upper Saddle River, Nueva Jersey: Prentice Hall, 2000. STEINER, J.G.; NEUMAN, B.C., y SCHILLER, J.I., \u201cKerberos: An Authentication Service for Open Network Systems\u201d, Proc. Winter USENIX Conf., USENIX, p\u00e1gs. 191-201, 1988. STEINMETZ, R., y NAHRSTEDT, K., Multimedia Fundamentals. Vol. 1: Media Coding and Content Processing, Upper Saddle River, Nueva Jersey: Prentice Hall, 2002. STEINMETZ, R., y NAHRSTEDT, K., Multimedia Fundamentals. Vol. 2: Media Proessing and Communications, Upper Saddle River, Nueva Jersey: Prentice Hall, 2003a. STEINMETZ, R., y NAHRSTEDT, K., Multimedia Fundamentals. Vol. 3: Documents, Security, and Applications, Upper Saddle River, Nueva Jersey: Prentice Hall, 2003b. STEVENS, W.R., TCP/IP Illustrated, Vol. 1, Boston: Addison-Wesley, 1994.\n866\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nSTEVENS, W.R., UNIX Network Programming, Volume 1: Networking APIs - Sockets and XTI, Upper Saddle River, Nueva Jersey: Prentice Hall, 1997. STEWART, R., y METZ, C., \u201cSCTP: New Transport Protocol for TCP/IP\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 64-69, noviembre-diciembre de 2001. STINSON, D.R., Cryptography Theory and Practice, 2a. ed., Boca Rat\u00f3n, Florida: CRC Press, 2002. STOICA, I.; MORRIS, R.; KARGER, D.; KAASHOEK, M.F., y BALAKRISHNAN, H., \u201cChord: A Scalable Peer-to-Peer Lookup Service for Internet Applications\u201d, Proc. SIGCOMM \u201901 Conf., ACM, p\u00e1gs. 149-160, 2001. STRIEGEL, A., y MANIMARAN, G., \u201cA Survey of QoS Multicasting Issues\u201d, IEEE Commun. Mag., vol. 40, p\u00e1gs. 82-87, junio de 2002. STUBBLEFIELD, A.; IOANNIDIS, J., y RUBIN, A.D., \u201cUsing the Fluhrer, Mantin, and Shamir Attack to Break WEP\u201d, Proc Network and Distributed Systems Security Symp., ISOC, p\u00e1gs. 1-11, 2002. SUMMERS, C.K., ADSL: Standards, Implementation, and Architecture, Boca Rat\u00f3n, Florida: CRC Press, 1999. SUNSHINE, C.A., y DALAL, Y.K., \u201cConnection Management in Transport Protocols\u201d, Computer Networks, vol. 2, p\u00e1gs. 454-473, 1978. TANENBAUM, A.S., Modern Operating Systems, Upper Saddle River, Nueva Jersey: Prentice Hall, 2001. TANENBAUM, A.S., y VAN STEEN, M., Distributed Systems: Principles and Paradigms, Upper Saddle River, Nueva Jersey: Prentice Hall, 2002. TEGER, S., y WAKS, D.J., \u201cEnd-User Perspectives on Home Networking\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 114-119, abril de 2002. THYAGARAJAN, A.S., y DEERING, S.E., \u201cHierarchical Distance-Vector Multicast Routing for the MBone\u201d, Proc. SIGCOMM \u201995 Conf., ACM, p\u00e1gs. 60-66, 1995. TITTEL, E.; VALENTINE, C.; BURMEISTER, M., y DYKES, L., Mastering XHTML, Alameda, California: Sybex, 2001. TOKORO, M., y TAMARU, K., \u201cAcknowledging Ethernet\u201d, Compcon, IEEE, p\u00e1gs. 320-325, oto\u00f1o de 1977. TOMLINSON, R.S., \u201cSelecting Sequence Numbers\u201d, Proc. SIGCOMM/SIGOPS Interprocess Commun. Workshop, ACM, p\u00e1gs. 11-23, 1975. TSENG, Y.-C.; WU, S.-L.; LIAO, W.-H., y CHAO, C.-M., \u201cLocation Awareness in Ad Hoc Wireless Mobile Networks\u201d, Computer, vol. 34, p\u00e1gs. 46-51, 2001. TUCHMAN, W., \u201cHellman Presents No Shortcut Solutions to DES\u201d, IEEE Spectrum, vol. 16, p\u00e1gs. 40-41, julio de 1979.\nSEC. 9.2\nBIBLIOGRAF\u00cdA EN ORDEN ALFAB\u00c9TICO\n867\nTURNER, J.S., \u201cNew Directions in Communications (or Which Way to the Information Age)\u201d, IEEE Commun. Magazine, vol. 24, p\u00e1gs. 8-15, octubre de 1986. VACCA, J.R., I-Mode Crash Course, Nueva York: McGraw-Hill, 2002. VALADE, J., PHP & MySQL for Dummies, Nueva York: Hungry Minds, 2002. VARGHESE, G, y LAUCK, T., \u201cHashed and Hierarchical Timing Wheels: Data Structures for the Efficient Implementation of a Timer Facility\u201d, Proc. 11th Symp. on Operating Systems Prin., ACM, p\u00e1gs. 25-38, 1987. VARSHNEY, U.; SNOW, A.; McGIVERN, M., y HOWARD, C., \u201cVoice over IP\u201d, Commun. of the ACM, vol. 45, p\u00e1gs. 89-96, 2002. VARSHNEY, U., y VETTER, R., \u201cEmerging Mobile and Wireless Networks\u201d, Commun. of the ACM, vol. 43, p\u00e1gs. 73-81, junio de 2000. VETTER, P.; GODERIS, D.; VERPOOTEN, L., y GRANGER, A., \u201cSystems Aspects of APON/VDSL Deployment\u201d, IEEE Commun. Magazine, vol. 38, p\u00e1gs. 66-72, mayo de 2000. WADDINGTON, D.G., y CHANG, F., \u201cRealizing the Transition to IPv6\u201d, IEEE Commun. Mag., vol. 40, p\u00e1gs. 138-148, junio de 2002. WALDMAN, M.; RUBIN, A.D., y CRANOR, L.F., \u201cPublius: A Robust, Tamper-Evident, Censorship-Resistant, Web Publishing System\u201d, Proc. Ninth USENIX Security Symp., USENIX, p\u00e1gs. 59-72, 2000. WANG, Y., y CHEN, W., \u201cSupporting IP Multicast for Mobile Hosts\u201d, Mobile Networks and Applications, vol. 6, p\u00e1gs. 57-66, enero-febrero de 2001. WANG, Z., Internet QoS, San Francisco: Morgan Kaufmann, 2001. WARNEKE, B.; LAST, M.; LIEBOWITZ, B., y PISTER, K.S.J.: \u201cSmart Dust: Communicating with a Cubic Millimeter Computer\u201d, Computer, vol. 34, p\u00e1gs. 44-51, enero de 2001. WAYNER, P., Disappearing Cryptography: Information Hiding, Steganography, and Watermarking, 2a. ed., San Francisco: Morgan Kaufmann, 2002. WEBB, W., \u201cBroadband Fixed Wireless Access as a Key Component of the Future Integrated Communications Environment\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 115-121, septiembre de 2001. WEISER, M., \u201cWhatever Happened to the Next Generation Internet?\u201d, Commun. of the ACM, vol. 44, p\u00e1gs. 61-68, septiembre de 2001. WELTMAN, R., y DAHBURA, T., LDAP Programming with Java, Boston: Addison-Wesley, 2000. WESSELS, D., Web Caching, Sebastopol, California: O\u2019Reilly, 2001. WETTEROTH, D., OSI Reference Model for Telecommunications, Nueva York: McGraw-Hill, 2001.\n868\nLISTA DE LECTURAS Y BIBLIOGRAF\u00cdA\nCAP. 9\nWILJAKKA, J., \u201cTransition to IPv6 in GPRS and WCDMA Mobile Networks\u201d, IEEE Commun. Magazine, vol. 40, p\u00e1gs. 134-140, abril de 2002. WILLIAMSON, H., XML: The Complete Reference, Nueva York: McGraw-Hill, 2001. WILLINGER, W.; TAQQU, M.S.; SHERMAN, R., y WILSON, D.V., \u201cSelf-Similarity through High Variability: Statistical Analysis of Ethernet LAN Traffic at the Source Level\u201d, Proc. SIGCOMM \u201995 Conf., ACM, p\u00e1gs. 100-113, 1995. WRIGHT, D.J., Voice over Packet Networks, Nueva York: Wiley, 2001. WYLIE, J.; BIGRIGG, M.W.; STRUNK, J.D.; GANGER, G.R.; KILICCOTE, H., y KHOSLA, P.K., \u201cSurvivable Information Storage Systems\u201d, Computer, vol. 33, p\u00e1gs. 61-68, agosto de 2000. XYLOMENOS, G.; POLYZOS, G.C.; MAHONEN, P., y SAARANEN, M., \u201cTCP Performance Issues over Wireless Links\u201d, IEEE Commun. Magazine, vol. 39, p\u00e1gs. 52-58, abril de 2001. YANG, C.-Q., y REDDY, A.V.S., \u201cA Taxonomy for Congestion Control Algorithms in Packet Switching Networks\u201d, IEEE Network Magazine, vol. 9, p\u00e1gs. 34-45, julio-agosto de 1995. YUVAL, G., \u201cHow to Swindle Rabin\u201d, Cryptologia, vol. 3, p\u00e1gs. 187-190, julio de 1979. ZACKS, M., \u201cAntiterrorist Legislation Expands Electronic Snooping\u201d, IEEE Internet Computing, vol. 5, p\u00e1gs. 8-9, noviembre-diciembre de 2001. ZADEH, A.N.; JABBARI, B.; PICKHOLTZ, R., y VOJCIC, B., \u201cSelf-Organizing Packet Radio Ad Hoc Networks with Overlay (SOPRANO)\u201d, IEEE Commun. Mag., vol. 40, p\u00e1gs. 149-157, junio de 2002. ZHANG, L., \u201cComparison of Two Bridge Routing Approaches\u201d, IEEE Network Magazine, vol. 2, p\u00e1gs. 44-48, enero-febrero de 1988. ZHANG, L., \u201cRSVP: A New Resource ReSerVation Protocol\u201d, IEEE Network Magazine, vol. 7, p\u00e1gs. 8-18, septiembre-octubre de 1993. ZHANG, Y., y RYU, B., \u201cMobile and Multicast IP Services in PACS: System Architecture, Prototype, and Performance\u201d, Mobile Networks and Applications, vol. 6, p\u00e1gs. 81-94, enero-febrero de 2001. ZIMMERMANN, P.R., The Official PGP User\u2019s Guide, Cambridge, Massachusetts: M.I.T. Press, 1995a. ZIMMERMANN, P.R., PGP: Source Code and Internals, Cambridge, Massachusetts: M.I.T. Press, 1995b. ZIPF, G.K., Human Behavior and the Principle of Least Effort: An Introduction to Human Ecology, Boston: Addison-Wesley, 1949. ZIV, J., y LEMPEL, Z., \u201cA Universal Algorithm for Sequential Data Compression\u201d, IEEE Trans. on Information Theory, vol. IT-23, p\u00e1gs. 337-343, mayo de 1977.\n\u00cdNDICE\npersistente-1, 255 persistente-p, 256 Acceso M\u00faltiple con Prevenci\u00f3n de Colisiones, 269-270 Acceso M\u00faltiple de Divisi\u00f3n de C\u00f3digo, 162-166 Acceso m\u00faltiple, protocolos de, 251-270 ACL (vea As\u00edncrono no Orientado a la Conexi\u00f3n, enlace) Active Server Pages, 646 ActiveX, control, 650, 817-818 Actores principales, 731 Ad hoc, red, 68, 375-380 ADC (vea Convertidor Anal\u00f3gico a Digital) ADCCP (vea Procedimiento Avanzado de Control de Comunicaci\u00f3n de Datos) Administraci\u00f3n de conexiones, modelado de, 541-543 m\u00e1quina de estados, 486 Administraci\u00f3n de temporizadores, TCP, 550-553 Admisi\u00f3n, control de, 389, 406-408 ADSL (vea L\u00ednea Digital Asim\u00e9trica de Suscriptor) AES (vea Est\u00e1ndar de Encriptaci\u00f3n Avanzada) Agencia de Proyectos de Investigaci\u00f3n Avanzada, 51 Agencia Nacional de Seguridad, 740 Agente(s) de base, 373 de transferencia, correo electr\u00f3nico, 590 de usuario, correo electr\u00f3nico, 590 for\u00e1neos, 373 Aglomeraci\u00f3n instant\u00e1nea, 660 AH (vea encabezado, de autenticaci\u00f3n) Alambre de cobre, comparaci\u00f3n con la fibra \u00f3ptica, 98-99\nN\u00fameros 2.5G, sistema de telefon\u00eda m\u00f3vil, 168 3G (vea tercera generaci\u00f3n, sistema telef\u00f3nico m\u00f3vil de) 4B/5B, 285 8B/6T, 285 8B/10B, 289 10Base-x, 272 100Base-x, 285 802 (vea IEEE 802.x) 802.3 (vea Ethernet) 802.15 (vea Bluetooth) 802.16 (vea IEEE 802.16) 1000Base-x, 288\nA A, B, C y D, clases, 437 AAL (vea Capa de Adaptaci\u00f3n de ATM) AAL-SAP, 494 Abramson, Norman, 65-66 Acceso aleatorio, canal de, 162, 247 Acceso M\u00faltiple con Detecci\u00f3n de Portadora con detecci\u00f3n de colisiones, 255-258 con evitaci\u00f3n de colisiones, 296-297 no persistente, 256\n869\n870 Algoritmo Internacional de Encriptaci\u00f3n de Datos, 799 Algoritmo(s) adaptativos, 351 basados en flujo, 409-412 de codificaci\u00f3n, v\u00eddeo, 696 de decodificaci\u00f3n, v\u00eddeo, 696 de enrutamiento adaptativos, 424 seguro de Hash, 761-762 de SHA-1, 761-762 Alianza para una Plataforma Inform\u00e1tica Confiable, 828 Alice, 731 Alineaci\u00f3n, cable de televisi\u00f3n, 174 Almacenamiento en cach\u00e9 jer\u00e1rquico, 658-659 Almacenamiento y reenv\u00edo, conmutaci\u00f3n de paquetes, 20, 344 ALOHA, 251-255 puro, 251-254 ranurado, 254-255 Amplitud, modulaci\u00f3n de, 126 AMPS (vea Sistema Avanzado de Telefon\u00eda M\u00f3vil) Ancho de banda, 88 Ancho de banda-retardo, producto, 559 Anclas de confianza, 770 Anderson, Ross, 742 Andreessen, Mark, 57, 611 ANS (vea Redes y Servicios Avanzados) ANSI (vea Instituto Nacional de Est\u00e1ndares Nacionales) ANSNET, 55 AODV (vea Vector de Distancia ad hoc bajo Demanda) Aplicaci\u00f3n auxiliar, 617 Applets, 650 Aprendizaje hacia atr\u00e1s, 323 \u00c1rbol(es) de expansi\u00f3n, 368 puentes con, 323-325 de n\u00facleo, 372 sumidero, 352 Archivos, transferencia de, 57 \u00c1rea(s), 456 de acceso y transporte local, 122 enrutadores, 457 red de, personal, 15 Arm\u00f3nicos, 86 ARP gratuito, 463 proxy, 452 vea tambi\u00e9n Protocolo de Resoluci\u00f3n de Direcciones ARPA (vea Agencia de Proyectos de Investigaci\u00f3n Avanzada) ARPANET, 50-54 algoritmos de enrutamiento, 357, 454 ARQ (vea Solicitud Autom\u00e1tica de Repetici\u00f3n) Arquitectura de red, 28-30 Arranque lento algoritmo de Jacobson, 549-550 TCP, 549-550\n\u00cdNDICE Arreglo redundante de discos baratos, 708 Arrendamiento, 454 AS (vea sistema aut\u00f3nomo) ASCII, armadura, 598 Asequibilidad, an\u00e1lisis de, 230 Asignaci\u00f3n del canal, problema de, 248-251, 337 As\u00edncrono no Orientado a la Conexi\u00f3n, enlace, 315 ASN.1 (vea Notaci\u00f3n de Sintaxis Abstracta 1) Asociaci\u00f3n para Seguridad en Internet y Administraci\u00f3n de Claves, 773 Asociaci\u00f3n, servicios, 301 ASP (vea Active Server Pages) Ataque, seguridad consumo de energ\u00eda, 751 DDoS, 778 de cumplea\u00f1os, 763-765, 782 de hombre en medio, 792 de la brigada de bomberos, 792 de reflexi\u00f3n, 787-790 de repetici\u00f3n, 794 DoS, 778 reutilizaci\u00f3n de flujo de claves, 749 s\u00f3lo texto cifrado, 727 temporizaci\u00f3n, 751 texto llano conocido, 727 texto llano seleccionado, 727 Atenuaci\u00f3n, 125 ATM redes de, 61, 65, 417-418 subcapa dependiente del medio f\u00edsico, 64 vea tambi\u00e9n Modo de Transferencia As\u00edncrona Atributo certificado, 767 HTML, 630 Audio, 674-692 compresi\u00f3n de, 676-679 codificaci\u00f3n porcentual, 677 enmascaramiento de frecuencia, 677 enmascaramiento temporal, 677 MP3, 676-679 psicoac\u00fastica, 677 introducci\u00f3n al, digital, 674-676 Autenticaci\u00f3n, 785 centro de distribuci\u00f3n de claves, 793-796 clave compartida, 786-790 p\u00fablica, 798-799 Diffie-Hellman, 791-792 HMAC, 790 Kerberos, 796-798 Needham-Schroeder, 794-795 Otway-Rees, 795-796 servicios, 302\n\u00cdNDICE Authenticode, 818 Autoridad de Certificaci\u00f3n, 766 Autoridades Regionales, 769\nBush, Vannevar, 612 B\u00fasquedas invertidas, 584 Buzones de correo, correo electr\u00f3nico, 591\nB\nC\nBanda ancha, 130 Banda ancha inal\u00e1mbrica (vea IEEE 802.16) Bandas industriales, m\u00e9dicas y cient\u00edficas, 106, 292-293, 315 Bandera, 189 Baran, Paul, 50 Barker, secuencia, 294 Base diagonal, 732 rectil\u00ednea, 732 Base64, codificaci\u00f3n, 598 Baudios, 127 Beacon, trama de, 298 Bell, Alexander Graham, 119 Bellman-Ford, algoritmo de enrutamiento, 357-360, 454 Berkeley, sockets de, 487-488 BGP (vea Protocolo de Puerta de Enlace de Frontera) Big endian, m\u00e1quina, 433 Biham, Eli, 742 Bits relleno de, 190 secuencia ortogonal de, 164 Blaatand, Harald, 310 Blanqueamiento, 740 Bloque(s) de cifrado, modo de encadenamiento de, 746-747 irreversible, red de Petri, 232 Blowfish, 751 Bluetooth, 21, 310-317 aplicaciones, 312-313 arquitectura, 311 As\u00edncrono no Orientado a la Conexi\u00f3n, enlace, 315 capa de banda base, 315-316 enlace, 315 historia, 310 perfiles, 312-313 piconet, 311 pila de protocolos, 313-314 scatternet, 311 seguridad, 783-784 S\u00edncrono Orientado a la Conexi\u00f3n, enlace, 316 Bob, 731 BOC (vea Compa\u00f1\u00edas Operativas de Bell) BOOTP, protocolo, 453 Borrador de Est\u00e1ndar Internacional, 75 Brigada de bomberos, ataque de la, 792 B\u00fafer, almacenamiento en, 506-510\nCA (vea Autoridad de Certificaci\u00f3n) Cable coaxial, 92 m\u00f3dem, 173-175 Cableado, gabinete de, 91 Cach\u00e9, 657-659 encabezado If-Modified-Since, 659 Last-Modified, 658-659 envenenado, 807 jer\u00e1rquico, 658-659 obsoleto, 658-659 Ca\u00eddas, recuperaci\u00f3n de, 511-513 Caja de arena, 817 P, 737 S, 737 Calidad del servicio, 32 algoritmo de cubeta con goteo, 400-403 algoritmo de cubeta con tokens, 402-405 algoritmos basados en flujo, 409-412 almacenamiento en b\u00fafer, 399 basada en clase, 412-415 calendarizaci\u00f3n de paquetes, 408-409 capa de red, 397-417 conmutaci\u00f3n de etiquetas, 415-417 control de admisi\u00f3n, 406-408 diferenciada, 412-415 encolamiento justo, 408-409 enrutamiento proporcional, 408 especificaci\u00f3n de flujo, 407 integrada, 409-412 modelado de tr\u00e1fico, 399-400 MPLS, 415-417 reenv\u00edo asegurado, 414-415 reenv\u00edo expedito, 413-414 requerimientos, 397-398 reservaci\u00f3n de recursos, 405-406 RSVP, 410-412 t\u00e9cnicas para alcanzar buena, 398-409 l\u00ednea con, de voz, 88 Campo, v\u00eddeo, 693 Canal(es) asignaci\u00f3n din\u00e1mica de, 249-251 est\u00e1tica de, 248-249\n871\n872 de fibra, 283 de otorgamiento de acceso, 162 dedicado de control, 161 se\u00f1alizaci\u00f3n por, asociado, 141 por, com\u00fan, 141 Canalizaci\u00f3n, 217 Capa, 26 aspectos del dise\u00f1o, 30-31 de aplicaci\u00f3n, 41, 43, 579-720 correo electr\u00f3nico, 588-611 DNS, 579-588 multimedia, 674-714 World Wide Web, 611-673 de enlace de datos, 38, 183-246 conmutaci\u00f3n en la, 317-336 de presentaci\u00f3n, 41 de red, 39, 343-480 algoritmos de enrutamiento, 350-384 aspectos de dise\u00f1o, 343-350 calidad del servicio, 397-417 control de congesti\u00f3n, 384-396 interconectividad, 418-431 Internet, 431-473 de sesi\u00f3n, 40 de transporte, 481-578 acuerdo de tres v\u00edas, 500-502 almacenamiento en b\u00fafer, 506-510 aspectos del desempe\u00f1o, 557-573 control de flujo, 506-510 direccionamiento, 493-496 establecimiento de una conexi\u00f3n, 496-502 Internet, 524-556 liberaci\u00f3n de una conexi\u00f3n, 502-506 multiplexi\u00f3n, 510-511 protocolo de ejemplo, 513-524 recuperaci\u00f3n de ca\u00eddas, 511-513 seguridad de, 816 servicio, 481-492 TCP, 532-566 UDP, 524-532 del portador, WAP, 664 f\u00edsica, 38, 85-182 IEEE 802.11, 293-295 IEEE 802.16, 306-307 Internet a trav\u00e9s de cable, 170-176 medios al\u00e1mbricos, 90-99 sat\u00e9lites de comunicaci\u00f3n, 109-118 sistema telef\u00f3nico, 118-151 sistema telef\u00f3nico m\u00f3vil, 152-169 transmisi\u00f3n inal\u00e1mbrica, 100-108 Capa de Adaptaci\u00f3n de ATM, 64 Capa Inal\u00e1mbrica de Seguridad de Transporte, 664 Caracteres, relleno de, 189-190\n\u00cdNDICE Caritas, 588-589 Carnivore, 13 Casi v\u00eddeo bajo demanda, 704 Categor\u00eda 3, cableado, 91 5, cableado, 92 CCITT, 72 CD (vea comit\u00e9, borrador de) CD, audio, 676 CDMA (vea Acceso M\u00faltiple de Divisi\u00f3n de C\u00f3digo) CDMA2000, 167 CdmaOne, 162 CDN (vea Redes de Entrega de Contenido) Celda HTML, 633 transporte de, 155 duro, 155 suave, 155 Centro de Conmutaci\u00f3n M\u00f3vil, 155 Centro de Distribuci\u00f3n de Claves, 785 Certificaci\u00f3n, ruta de, 770 Certificados, 765-771 revocaci\u00f3n de, 771 C\u00e9sar, cifrado de, 727 CGI (vea Interfaz de Puerta de Enlace Com\u00fan) Chip, secuencia de, 162 Chord, 380-384 cHTML (vea HTML compacto) CIDR (vea Enrutamiento Interdominios sin Clase) Cifrado(s), 724 en bloques, 737 modo de, de flujo, 748-749 por sustituci\u00f3n, 727-729 por transposici\u00f3n, 729-730 s\u00f3lo texto, 727 Circuito Local Inal\u00e1mbrico (vea IEEE 802.16) Circuito(s) conmutaci\u00f3n de, 147-148 local, 120, 124 virtual(es), 62, 346 concatenados, 422-423 permanentes, 62 subred, 346-347 Clark, David, 46 Clark, Wesley, 51 Clase de Equivalencia de Reenv\u00edo, 416 Clases de servicio, IEEE 802.16, 308-309 Clave(s) algoritmos criptogr\u00e1ficos de, sim\u00e9trica, 737-751 AES, 741-745 DES, 738-741 modos de cifrado, 745-751 Rijndael, 743-745 Chord, 381\n\u00cdNDICE Criptograf\u00eda, 725 dep\u00f3sito de, 820 flujo de, 748 maestras, 784 premaestra, 814 privada, 753 p\u00fablica, 753 anillo de, 803 certificado, 765-771 infraestructuras de, 768-770 secretas, 753 CLEC (vea LEC Competitiva) Cliente, 4 stub del, 527-529 Clipper, procesador, 820 CMTS (vea Sistema de Terminaci\u00f3n de Cable M\u00f3dem) Codec, 140 Codificaci\u00f3n de forma de onda, 676 entrecomillada imprimible, 598 Manchester diferencial, 274-275 modulaci\u00f3n diferencial por, de impulsos, 142 perceptual, 677 Codificaci\u00f3n por Desplazamiento de Fase en Cuadratura, 127, 306 C\u00f3digo, 724 firma de, 818 m\u00f3vil, 817 seguridad, 816-819 polinomial, 196 C\u00f3digo de Autenticaci\u00f3n de Mensajes basado en Hash, 775, 790 Colisi\u00f3n, 250 Color secuencial con memoria, 694 Comentarios, solicitudes de, 76 Comercio electr\u00f3nico, 5 m\u00f3vil, 11 Comit\u00e9, borrador de, 75 Comit\u00e9 Nacional de Est\u00e1ndares de Televisi\u00f3n, 694 Compa\u00f1\u00edas Operativas de Bell, 122 Compresi\u00f3n de v\u00eddeo, 696-704 algoritmo de codificaci\u00f3n, 696 de decodificaci\u00f3n, 696 con p\u00e9rdidas, 696 JPEG, 697-700 MPEG, 700-704 sin p\u00e9rdidas, 696 Computadoras, redes de, 2 802.11, 68-71 ARPANET, 50-54 ATM, 61-65 dom\u00e9sticas, 6-9, 23-25\n873\nestandarizaci\u00f3n, 71-77 Ethernet, 65-68 hardware, 14-16 IEEE 802.11, 68-71 inal\u00e1mbricas, 21-23, 68-71 jerarqu\u00eda de protocolo, 26-30 modelos de referencia, 37-49 NSFNET, 54-56 orientadas a la conexi\u00f3n, 59-65 software, 26-37 uso, 3-14 X.25, 61 Comunicaci\u00f3n medio de, 5 seguridad en la, 772-785 firewalls, 776-779 inal\u00e1mbrica, 780-785 IPsec, 772-776 VPNs, 779-780 subred de, 19, 344 Concurso de m\u00e9ritos, 105 Conexi\u00f3n(es) establecimiento de una, 496-502 TCP, 539-540 liberaci\u00f3n de una, 502-506 TCP, 541 persistentes, 652 Confianza, cadena de, 770 Confirmaci\u00f3n de Recepci\u00f3n Positiva con Retransmisi\u00f3n, 209 Congesti\u00f3n, control de, 384-396 bit de advertencia, 391 control de fluctuaci\u00f3n, 395-396 paquetes reguladores, 391-394 principios, 386-388 subredes de circuitos virtuales, 389-390 subredes de datagramas, 391-395 TCP, 547-548 Conjuntos de Registro de Recursos, 809 Conmutaci\u00f3n de mensajes, 148-149 elementos de, 19 subred de, de paquetes, 20 Conmutadores, 326-328 Ethernet, 281 Conocimiento de los vecinos, 361 Consejo de Actividades de Internet, 75 Consejo de Arquitectura de Internet, 75 Constelaci\u00f3n, diagrama de, 128 Consulta recursiva, 588 Contador, modo de, 749-750 Contenci\u00f3n, 251 protocolos de, limitada, 261-265 Contenedor o Sobre de Carga \u00datil S\u00edncrona, 145 Conteo descendente binario, protocolo, 260-261\n874 Control canal de, com\u00fan, 161 canal de, de difusi\u00f3n, 161 de flujo basado en tasa, 192 dispositivo de, central, 18, 169 subcapa de, de acceso al medio, 247-342 (vea tambi\u00e9n MAC, subcapa) Control de Enlace de Datos de Alto Nivel, 234-237 Control L\u00f3gico de Enlace, 290-291 Convergencia de transmisi\u00f3n, subcapa, 64 Convertidor Anal\u00f3gico a Digital, 675 Cookie(s), Web 626-629 no persistente, 626 persistente, 626 Corporaci\u00f3n de Internet para la Asignaci\u00f3n de Nombres y N\u00fameros, 437 Correcci\u00f3n de errores c\u00f3digos de, 193 hacia delante, 193-307 Correo caracol, 588 electr\u00f3nico, 5, 57, 588-611 agente de usuario, 591-594 alias, 593 armadura ASCII, 598 arquitectura y servicios, 579-591 buzones de, 591 caracter\u00edsticas de entrega, 609-610 codificaci\u00f3n base64, 598 codificaci\u00f3n entrecomillada imprimible, 598 cuerpo, 591 disposici\u00f3n, 590 encabezados, 595-596 entrega final, 605-611 env\u00edo de, 592-593 filtros, 609 formatos de mensaje, 594-602 generaci\u00f3n del informe, 590 lectura del, 593-594 MIME, 596-602 perfil de usuario, 593 POP3, 605-608 redacci\u00f3n, 590 SMTP, 602-605 transferencia, 590 transferencia de mensajes, 602-605 visualizaci\u00f3n, 590 X.400, 589-590 Correo con Privacidad Mejorada, 803-804 Correos, Tel\u00e9grafos y Tel\u00e9fonos, administraci\u00f3n, 72 CRC (vea reduncia c\u00edclica, c\u00f3digo de) Cr\u00e9dito, mensaje de, 522\n\u00cdNDICE Criptoan\u00e1lisis, 726, 750-751 consumo de energ\u00eda, 751 diferencial, 750-751 lineal, 751 temporizaci\u00f3n, 751 Criptograf\u00eda, 724-755 AES, 741-745 clave p\u00fablica, 752-755 sim\u00e9trica, 737-751 criptoan\u00e1lisis, 726 cu\u00e1ntica, 731-735 DES, 738-741 introducci\u00f3n, 725-727 modos de cifrado, 745-750 principio de Kerckhoff, 726 rellenos de una sola vez, 730-731 Rijndael, 743-745 texto cifrado, 725 llano, 725 tradicional, 727-730 Criptolog\u00eda, 726 CRL (vea Lista de Revocaci\u00f3n de Certificados) Crominancia, 694 CSMA (vea Acceso M\u00faltiple con Detecci\u00f3n de Portadora) CSMA/CA (vea Acceso M\u00faltiple con Detecci\u00f3n de Portadora) CSMA/CD (vea Acceso M\u00faltiple con Detecci\u00f3n de Portadora) CTS (vea Libre para Env\u00edo) Cuantizaci\u00f3n JPEG, 698 ruido de, 675 Cubeta algoritmo de con goteo, 400-403 con tokens, 402-405 Cuenta hasta infinito, problema de la, 359-360 Cypherpun k, retransmisores de correo, 821-822\nD D-AMPS, 157-159, 665 Daemen, Joan, 742 Datagramas, 346 servicio de, 33 subredes, 345-347 control de congesti\u00f3n, 391-395 en comparaci\u00f3n con circuitos virtuales, 348-350 Datos entrega de, 302\n\u00cdNDICE obsoletos, 658 tramas de, 38 urgentes, 535 David y Goliath, 589 Davies, Donald, 51 DB, 674 DCF, Espaciado Entre Tramas, 299 DCF (vea Funci\u00f3n de Coordinaci\u00f3n Distribuida) DCT (vea Transformaci\u00f3n por Coseno Discreto) DDoS, ataque (vea Negaci\u00f3n de Servicio Distribuida, ataque) de facto, est\u00e1ndar, 71 de jure, est\u00e1ndar, 71 Decibel, 89 Demonios, 590 Derechos de autor, 826-828 Derivaci\u00f3n(es) cable de, 272 vampiro, Ethernet, 271 DES (vea Est\u00e1ndar de Encriptaci\u00f3n de Datos) Desconocimiento, seguridad por, 726 Descubrimiento de ruta, redes ad hoc, 376-379 Desempe\u00f1o aspectos del, 557-573 medici\u00f3n del, de las redes, 560-562 Desmultiplexi\u00f3n, 31 Desplazamiento de frecuencia, modulaci\u00f3n por, 126 Desprendimiento de carga, 394 Detecci\u00f3n c\u00f3digos de, de errores, 193 de portadora, supuesto, 250 protocolos de, de portadora, 255 temprana aleatoria, 395 DHCP (vea Protocolo de Configuraci\u00f3n de Host Din\u00e1mico) Di\u00e1logo, control de, 40 Diffie-Hellman, intercambio de claves de, 791-792 DIFS (vea DCF, Espaciado Entre Tramas) Difusi\u00f3n, 15, 276, 368 enrutamiento por, 368-370 Ethernet, 279 redes de, 15 tormenta de, 330, 558 Digramas, 728 Dijkstra, algoritmos de la ruta m\u00e1s corta, 353-355 Direcci\u00f3n bajo su responsabilidad, 463 traducci\u00f3n de, de red, 444-448 Direccionamiento, 31 con clase, 437 Direcciones IP, 436-438, 441-444 transporte, 493-496 Directivas, HTML, 630 Dirigido por control, MPLS, 417 DIS (vea Borrador de Est\u00e1ndar Internacional)\n875\nDiscos arreglo de, 708 granja de, 708 Dise\u00f1o, aspectos de, 30-31 capa de enlace de datos, 184-492 de red, 343-350 de transporte, 492-513 Disociaci\u00f3n, servicio 802.11, 301 Dispersi\u00f3n crom\u00e1tica, 95 Disposici\u00f3n, correo electr\u00f3nico, 590 Dispositivo de Interfaz de Red, 133 Distorsi\u00f3n, 125 Distribuci\u00f3n, servicio 802.11, 301 Divisi\u00f3n, 708 DIX, Ethernet, 275-276, 278 DMCA (vea Ley de Propiedad Intelectual para el Milenio Digital) DMT (vea MultiTono Discreto) DNS (vea Sistema de Nombres de Dominio) seguridad, 809-811 seguro, 809-811 DOCSIS (vea Especificaci\u00f3n de Interfaz para Servicio de Datos por Cable) Doctrina de uso, 827 Documento Web din\u00e1mico, 643-651 est\u00e1tico, 623-643 Dominio(s) de colisi\u00f3n, Ethernet, 282 de nivel superior, 580 Kerberos, 797 reflectometr\u00eda en el, del tiempo, 272 Dos ej\u00e9rcitos, problema de los, 503-504 DSLAM (vea Multiplexor de Acceso de L\u00ednea Digital de Suscriptor) DSSS (vea Espectro Disperso de Secuencia Directa) D\u00faplex total, 129 Duplexaci\u00f3n por Divisi\u00f3n de Frecuencia, 307 Duplexaci\u00f3n por Divisi\u00f3n de Tiempo, 307 DVMRP (vea Protocolo de Enrutamiento Multidifusi\u00f3n de Vector de Distancia) DWDM (vea Multiplexi\u00f3n Densa por Divisi\u00f3n de Longitud de Onda)\nE E1, portadora, 142 ECB (vea Libro de C\u00f3digo Electr\u00f3nico, modo de) EDE, modo, DES, 741 EDGE (vea Velocidades de Datos para la Evoluci\u00f3n del GSM)\n876 EEE, modo, DES, 741 EIFS (vea Espaciado Entre Tramas Extendido) Eisenhower, Dwight, 51 El ataque de cumplea\u00f1os, 763-765, 782 Elefantes, apocalipsis de los, 46-47 Emociones, s\u00edmbolos de, 588 Emoji, 669 Encabezado, 29 correo electr\u00f3nico, 591 de autenticaci\u00f3n, 774-775 Ethernet, 275-276 paquete IPv4, 433-436 IPv6, 466-469 predicci\u00f3n de, 568 segmento TCP, 536-539 trama, 201-203 Encapsulado de Carga \u00datil de Seguridad, 775-776 Encolamiento justo ponderado, 409 Encriptaci\u00f3n lineal, 751 Enlace Bluetooth, 315 capa de, de datos, 38, 183-246 control de errores, 192-200 control de flujo, 192 cuestiones de dise\u00f1o, 184-192 procedimientos de interfaz, 202-204 protocolo HDLC, 234-237 protocolo LCP, 239-242 protocolo NCP, 239, 242 protocolo PPP, 238-242 protocolo s\u00edmplex de parada y espera, 206-211 protocolo s\u00edmplex sin restricciones, 204-206 protocolos, 200-228 protocolos de ventana corrediza, 211-228 protocolos elementales, 200-211 relleno de bits, 190-191 relleno de caracteres, 189-190 verificaci\u00f3n de protocolo, 229-234 encriptaci\u00f3n de, 723 Enmascaramiento temporal, 677 Enmascarar, 677 Enrutador(es), 19, 326, 328 adyacente, 457 de multidifusi\u00f3n, 711-712 designado, 457 m, 711 multiprotocolo, 421 Enrutamiento, 31 algoritmo de, 20, 347, 350-384 adaptativo, 351-352 ARPANET, 357, 454 Bellman-Ford, 357-360, 454 estado del enlace, 360-366\n\u00cdNDICE Ford-Fulkerson, 357-360 host m\u00f3vil, 372-375 inundaci\u00f3n, 355-357 IS-IS, 365-366 jer\u00e1rquico, 366-368 multidifusi\u00f3n, 370-372 no adaptativo, 351 optimizaci\u00f3n, 352-353 OSPF, 454-459 proporcional, 408 red ad hoc, 375-380 reenv\u00edo por ruta invertida, 369-370 ruta m\u00e1s corta, 353-356 vector de distancia, 357-360 entre redes, 426-427 est\u00e1tico, 351 jer\u00e1rquico, 366-368 multidestino, 368 proporcional, 408 Enrutamiento Interdominios sin Clase, 441-444 Entorno de Aplicaciones Inal\u00e1mbricas, 664 Entrada agregada, 444 Entrelazado, v\u00eddeo, 693 Entunelamiento, 425-427 Errores control de, 31 detecci\u00f3n y correcci\u00f3n, 192-200 ESP (vea Encapsulado de Carga \u00datil de Seguridad) Espaciado Corto Entre Tramas, 299 Espaciado Entre Tramas Extendido, 299 Espacio Entre Tramas PCF, 299 Especificaci\u00f3n de Interfaz para Servicio de Datos por Cable, 173 Espectro disperso 802.11, 294-295 historia, 102 secuencia directa, 102, 294 Espectro Disperso con Salto de Frecuencia, 102, 294 tiempo de permanencia, 294 Espectro Disperso de Secuencia Directa, 102, 294 Espectro Disperso de Secuencia Directa de Alta Velocidad, 295 Espectro electromagn\u00e9tico, 100-102 pol\u00edticas de, 105-106 Esquema, World Wide Web, 623-625 ftp, 624 gopher, 624-625 http, 623-624 mailto, 624-625 news, 624 rtsp, 684 telnet, 624-625 URL, 623 Estaci\u00f3n(es), 249 central, 112, 272, 326-327\n\u00cdNDICE modelo de, 249 problema de, expuesta, 269 problema de, oculta, 269 Estado enrutamiento por, del enlace, 360-366 m\u00e1quinas de, finito inicial, 230 modelos, 229 protocolos de espera y parada, 229-232 TCP, 541-543 Est\u00e1ndar de facto, 71 de jure, 71 internacional, 75 Est\u00e1ndar Borrador, 77 Est\u00e1ndar de Encriptaci\u00f3n Avanzada, 741-745 Rijndael, 743-745 Est\u00e1ndar de Encriptaci\u00f3n de Datos, 738-741, 751 modo EDE, 741 EEE, 741 triple DES, 740-741 Est\u00e1ndar Propuesto, 77 Est\u00e1ndares de Firmas Digitales, 758-759 Estandarizaci\u00f3n, 71-77 Esteganograf\u00eda, 824-825 Estrella pasiva, 98 Ethernet, 17, 65-68, 271-292 (vea tambi\u00e9n Fast Ethernet, Gigabit Ethernet) 10BASE-F, 273 10BASE-T, 272 cable de derivaci\u00f3n, 272 cableado, 271-274 cl\u00e1sica, 327 codificaci\u00f3n Manchester, 274-275 conmutada, 281-283, 328-336 delgado, 272 derivaciones vampiro, 271 desempe\u00f1o, 279-281 difusi\u00f3n, 276 DIX, 67, 275-276, 278 dominio de colisi\u00f3n, 282 Fast, 283-285 formato de trama, 276 Gigabit, 286-290 grueso, 271 historia, 65-67 multidifusi\u00f3n, 276 protocolo, 275-279 repetidor, 274 retroceso exponencial binario, 278-279 retrospectiva, 291-292 Etiquetas conmutaci\u00f3n de, multiprotocolo, 415-417\n877\nHTML, 630 Expresi\u00f3n, libertad de, 822-826 Extensi\u00f3n de portadora, Gigabit Ethernet, 287-288 encabezados de, 469 Extensiones Multiprop\u00f3sito de Correo Internet, 596-602\nF FAQ (vea preguntas m\u00e1s frecuentes) Fase, modulaci\u00f3n de, 126 Fast Ethernet, 283-286 4B/5B, 285 8B/6T, 285 100Base-FX, 285 100Base-T4, 285 100Base-TX, 284-285 cableado, 284-286 concentradores, 285-286 conmutadores, 286 d\u00faplex completo, 285 FDD (vea Duplexaci\u00f3n por Divisi\u00f3n de Frecuencia) FDDI (vea Interfaz de Datos Distribuidos por Fibra) FDM (vea Multiplexi\u00f3n por Divisi\u00f3n de Frecuencia) FEC (vea Clase de Equivalencia de Reenv\u00edo) Felten, Edward, 827 FHSS (vea Espectro Disperso con Salto de Frecuencia) Fibra(s) hasta la acera, 709-710 hasta la casa, 710 nodos de, 170 \u00f3ptica, 93-99 dispersi\u00f3n crom\u00e1tica, 95 en comparaci\u00f3n con el alambre de cobre, 98-99 en comparaci\u00f3n con sat\u00e9lites, 117-118 monomodo, 94 multimodo, 94 solitones, 96 redes de, 97-98 Filtros, correo electr\u00f3nico, 609 Firewalls, 776-779 filtro de paquete, 777 puerta de enlace, 778 Firmas digitales, 755-765 ataque de cumplea\u00f1os, 763-764 clave p\u00fablica, 757-759 sim\u00e9trica, 756-757 compendios de mensaje, 759-762 Fluctuaci\u00f3n, 395-396\n878 Flujo, 397 ataque de reutilizaci\u00f3n de, de claves, 749 audio de, continuo, 679-683 metaarchivos, 680 reproductor de medios, 680-683 servidor pull, 681-682 servidor push, 682 tipos MIME, 679-680 control de, 31, 192, 506-510 basado en retroalimentaci\u00f3n, 192 basado en tasa, 192 especificaci\u00f3n de, 407 medios de, continuo, 674 Ford-Fulkerson, algoritmo de enrutamiento, 357-360 Formularios HTML, 634-638 PHP, 645-646 Web, 634-638 Fotones, 732 Fourier serie de, 86-87 transformaci\u00f3n de, 676 Fragmentaci\u00f3n, interred, 427-431 Fragmentos, r\u00e1faga de, 298 Frame relay, 61 Frecuencia, 100 enmascaramiento de, 677 modulaci\u00f3n de, 126 FTP (vea Protocolo de Transferencia de Archivos) FTTC (vea fibra(s), hasta la acera) FTTH (vea fibra(s), hasta la casa) Fuerza de Trabajo para la Ingenier\u00eda de Internet, 76 Fuerza de Trabajo para la Investigaci\u00f3n de Internet, 76 Funci\u00f3n de Coordinaci\u00f3n Distribuida, 296, 298-299 Fuzzball, 54\nG G.711, PCM, 686 G.723.1, 687 Gatekeeper, H.323, 686 Generaci\u00f3n de p\u00e1ginas Web din\u00e1micas en el cliente, 647-651 Generaci\u00f3n del informe, correo electr\u00f3nico, 590 Gigabit Ethernet, 286-290 8B/10B, 289 10 Gbps, 290 1000Base-CX, 288 1000Base-LX, 288 1000Base-SX, 288 1000Base-T, 288 cableado, 288 extensi\u00f3n de portadora, 287-288\n\u00cdNDICE modos de funcionamiento, 287 r\u00e1fagas de trama, 288 UTP, 288 Gigabits, protocolos, 569-570 Globalstar, 115-116 Gopher, 624 GPRS (vea Servicio de Radio de Paquetes Generales) GPS (vea Sistema de Posicionamiento Global) Granja de servidores, Web, 621-622 Gray, c\u00f3digo de, 294 Gray, Elisha, 119 Grupo de Expertos en Pel\u00edculas, 700 Grupo, maestro, 138 Grupo Unido de Expertos en fotograf\u00eda, 697 GSM (vea Sistema Global para Comunicaciones M\u00f3viles)\nH H.225, 687 H.245, 687 H.323, 683-689 (vea tambi\u00e9n voz sobre IP) gatekeeper, 686 Haces reducidos, 112 Hacia arriba, multiplexi\u00f3n, 510 Hamming c\u00f3digo de, 193-195, 307 distancia de, 193 HDLC (vea Control de Enlace de Datos de Alto Nivel) HDTV (vea televisi\u00f3n, de alta definici\u00f3n) Hertz, 100 Hertz, Heinrich, 100 Hipertexto, 612 Hiperv\u00ednculos, 612 HMAC (vea C\u00f3digo de Autenticaci\u00f3n de Mensajes basado en Hash) Hojas de estilo, HTML, 634 Hombre de en medio, ataque de, 792 Hosts, 19 m\u00f3viles, 372 enrutamiento para, 372-375 HTML compacto ejemplo, 670 en comparaci\u00f3n con HTML 1.0, 668 din\u00e1mico, 647 vea Lenguaje de Marcado de Hipertexto HTTP seguro, 813 Huella, 112 Hz (vea Hertz)\n\u00cdNDICE\nI IAB (vea Consejo de Actividades de Internet) ICANN (vea Corporaci\u00f3n de Internet para la Asignaci\u00f3n de Nombres y N\u00fameros) ICMP (vea Protocolo de Mensajes de Control en Internet) IDEA (vea Algoritmo Internacional de Encriptaci\u00f3n de Datos) Identificador de nodo, 381 IEEE (vea Instituto de Ingenieros El\u00e9ctricos y Electr\u00f3nicos) IEEE 802.1Q, 333-336 IEEE 802.2, 290-291 IEEE 802.3u, 284 IEEE 802.11, 292-302 802.11a, 294-295 802.11b, 295 802.11g, 295 capa f\u00edsica, 293-295 C\u00f3digos Walsh/Hadamard, 295 CSMA/CA, 296-297 CTS, 297-298 en comparaci\u00f3n con 802.16, 303-304 Espaciado Corto Entre Tramas, 299 Espaciado Entre Tramas DCF, 299 Espaciado Entre Tramas Extendido, 299 Espacio Entre Tramas PCF, 299 Espectro Disperso con Salto de Frecuencia, 294 Espectro Disperso de Secuencia Directa, 294 Espectro Disperso de Secuencia Directa de Alta Velocidad, 295 formato de trama, 299-300 Funci\u00f3n de Coordinaci\u00f3n Distribuida, 296, 298-299 Funci\u00f3n de Coordinaci\u00f3n Puntual, 296, 298-299 Multiplexi\u00f3n por Divisi\u00f3n de Frecuencias Ortogonales, 294-295 pila de protocolos, 292-293 Privacidad Inal\u00e1mbrica Equivalente, 300 problema de la estaci\u00f3n expuesta, 296 problema de la estaci\u00f3n oculta, 296 protocolo de subcapa MAC, 295-299 r\u00e1faga de fragmentos, 298 RTS, 297-298 secuencia Barker, 294 seguridad, 781-783 servicios, 301-302 asociaci\u00f3n, 301 autenticaci\u00f3n, 302 desautenticaci\u00f3n, 302 distribuci\u00f3n, 301 entrega de datos, 302 integraci\u00f3n, 301 privacidad, 302 reasociaci\u00f3n, 301 tiempo de permanencia, 294\n879\ntrama de beacon, 298 Vector de Asignaci\u00f3n de Red, 297 WAP, 673 IEEE 802.12, 293 IEEE 802.15 (vea Bluetooth) IEEE 802.16, 135, 302-310 capa f\u00edsica, 306-307 clases de servicio, 308-309 Duplexaci\u00f3n por Divisi\u00f3n de Frecuencia, 307 Duplexaci\u00f3n por Divisi\u00f3n de Tiempo, 307 en comparaci\u00f3n con 802.11, 303-304 estructura de trama, 309-310 pila de protocolos, 305-306 seguridad, 307-308 servicio de mejor esfuerzo, 308 de tasa de bits constante, 308 de tasa de bits variable en tiempo real, 308 subcapa MAC, 307-309 IETF (vea Fuerza de Trabajo para la Ingenier\u00eda de Internet) If-Modified-Since, encabezado de solicitud, 659 IGMP (vea Protocolo de Administraci\u00f3n de Grupo de Internet) IGP (vea Puerta de enlace interior, protocolo de) Igual a igual, 7-9 Igualdad privada, 59 Iguales, 27 IKE (vea Intercambio de Claves de Internet) ILEC (vea LEC Obligada) IMAP (vea Protocolo de Acceso a Mensajes de Internet) I-mode, 665-670 aceptaci\u00f3n en occidente, 667 cHTML, 668-670 emoji, 669 en comparaci\u00f3n con WAP, 671 estructura del software, 667-668 facturaci\u00f3n, 666 microtel\u00e9fonos, 667 modelo de negocios, 666 pila de protocolos, 672 servicios, 666 oficiales, 666 IMP, 52 IMT (vea Uni\u00f3n Internacional de Telecomunicaciones) IMTS (vea Sistema Mejorado de Telefon\u00eda M\u00f3vil) Inal\u00e1mbrica fija, 10, 135 (vea tambi\u00e9n IEEE 802.16) m\u00f3vil, 10 \u00cdndice, HTML, 633-634 Inetd, 533 Information-mode, 665-670 Infraestructura de Clave P\u00fablica, 768-770 Inicio de sesi\u00f3n remota, 57 Instituto de Ingenieros El\u00e9ctricos y Electr\u00f3nicos, 75\n880 Instituto Nacional de Est\u00e1ndares Nacionales, 74 Instituto Nacional de Est\u00e1ndares y Tecnolog\u00eda, 75, 741 Integraci\u00f3n, servicios, 802.11, 301 Intercambio de Claves de Internet, 773 Interconectividad, 418-431 circuitos virtuales, 422-423 enrutamiento, 426-427 entunelamiento, 425-426 fragmentaci\u00f3n, 427-431 local, 322-323 Interconectividad no orientada a la conexi\u00f3n, 423-425 Interfaz, 27 Interfaz de Datos Distribuidos por Fibra, 283 Interfaz de Puerta de Enlace Com\u00fan, 644-645 Internet, 25, 50-59, 237-242, 431-473, 524-556 a trav\u00e9s de cable, 170-176 en comparaci\u00f3n con ADSL, 175-176 arquitectura, 58-59 capa de, 42 capa de red, 431-473 demonio de, 533 direcciones, 436-448 historia, 50-56 introducci\u00f3n, 56-58 multidifusi\u00f3n de, 461-462 principios de dise\u00f1o, 431-432 proveedor de servicios de, 56 radio en, 683-685 sociedad de, 77 Interredes, 25-26 Intranets, 59 Intruso, 725 Inundaci\u00f3n algoritmo, 355, 357 selectiva, 355 IP, 432-444, 464-473 m\u00f3vil, 462-464 seguridad, 772-776 encabezado de autenticaci\u00f3n, 774-775 Encapsulado de Carga \u00datil de Seguridad, 775-776 modo de transporte, 773 modo de t\u00fanel, 773 IPv4, 432-444 direcciones, 436-448 clases A, B, C, D, 437 con clases, 437 encabezado, 433-436 m\u00e1scara de subred, 439-441 opciones, 436 sin clases, 441-444 IPv5, 433 IPv6, 464-473 controversias, 471-473 encabezado principal, 466-469 encabezados de extensi\u00f3n, 469-471\n\u00cdNDICE Iridium, 114-116 IRTF (vea Fuerza de Trabajo para la Investigaci\u00f3n de Internet) IS (vea est\u00e1ndar, internacional) ISAKMP (vea Asociaci\u00f3n para Seguridad en Internet y Administraci\u00f3n de Claves) IS-IS (vea sistema intermedio-sistema intermedio) ISM (vea bandas industriales, m\u00e9dicas y cient\u00edficas) ISO, 74 ISP (vea Internet, proveedor de servicios de) ITU (vea Uni\u00f3n Internacional de Telecomunicaciones) IV (vea vector de inicializaci\u00f3n) IXC (vea portadora entre centrales)\nJ Japanese Telephone and Telegraph Company, 665-670 Java, seguridad de subprogramas de, 817 Java Server Pages, 646 JavaScript, 647-651 seguridad, 818 Jerarqu\u00eda Digital S\u00edncrona, 144 JPEG, compresi\u00f3n, 697-700 codificaci\u00f3n de longitud de ejecuci\u00f3n, 699 cuantizaci\u00f3n, 698-699 DCT, 698 preparaci\u00f3n del bloque, 697 vea Grupo Unido de Expertos en Fotograf\u00eda JSP (vea Java Server Pages) Juicio Final Modificado, 122 Jumbogramas, 470, 472 JVM (vea M\u00e1quina Virtual de Java)\nK Karn, algoritmo de, 552 KDC (vea Centro de Distribuci\u00f3n de Claves) Kerberos, 796-798 Kerckhoff, principio, 726 Knudsen, Lars, 742\nL Lamarr, Hedy, 102 LAN inal\u00e1mbrica, protocolo, 265-270 LAN (vea red, de \u00e1rea local) LAN virtual, 328-336 LAP (vea Procedimiento de Acceso de Enlace)\n\u00cdNDICE LAPB, 234-235 Last-Modified, encabezado, 658-659 LATA (vea \u00e1rea(s), de acceso y transporte local) LCP (vea Protocolo de Control de Enlace) LDAP (vea Protocolo Ligero de Acceso al Directorio) LEC (vea portadora, de intercambio local) LEC Competitiva, 134 LEC Obligada, 134 Leche, pol\u00edtica, 394 Lenguaje de Hojas de estilo Extensible, 639-642 Lenguaje de Marcado de Hipertexto, 629-639 atributos, 630 celdas, 633 directivas, 630 encabezado, 630 etiquetas, 630 formularios, 634-638 hiperv\u00ednculos, 632-633 hoja de estilo, 634 \u00edndice, 633-634 t\u00edtulo, 630 Lenguaje de Marcado de Hipertexto Extendido, 642 Lenguaje de Marcado Extensible, 639-642 Lenguaje de Marcado Inal\u00e1mbrico, 664 Lenguajes de marcado, 629 LEO (vea Sat\u00e9lites de \u00d3rbita Terrestre Baja) Ley de Propiedad Intelectual para el Milenio Digital, 827-828 Libre para Env\u00edo, 269 Libres de colisiones, protocolos, 259-270 Libro de C\u00f3digo Electr\u00f3nico, modo de, 745-746 L\u00ednea de Fases Alternas, 694 L\u00ednea Digital Asim\u00e9trica de Suscriptor, 130-134 en comparaci\u00f3n con cable, 175-176 Lista de correo, 591 Lista de Revocaci\u00f3n de Certificados, 771 Little endian, m\u00e1quina, 433 Llamada a Procedimiento Remoto, 526-529 marshaling, 527-529 stub del cliente, 527-529 del servidor, 527-529 LLC (vea Control L\u00f3gico de Enlace) LMDS (vea Servicio Local de Distribuci\u00f3n Multipunto) Localidad base, 373 Localizaci\u00f3n, canal de, 161 Localizadores Uniformes de Recursos, 614, 622-625 Longitud de ejecuci\u00f3n, codificaci\u00f3n de, 699 LTP (vea Protocolo de Transporte de Carga Ligera) Lugar, red de Petri, 232 Luminancia, 694 Luz, velocidad de la, 100\n881\nM MAC, subcapa, 247-342 asignaci\u00f3n del canal, 248-251 din\u00e1mica de canales, 249-251 est\u00e1tica de canales, 248-249 Bluetooth, 310-317 conmutaci\u00f3n de la capa de enlace de datos, 317-336 Ethernet, 271-292 LAN inal\u00e1mbrica, 292-302 protocolos de acceso m\u00faltiple, 251-270 MACA inal\u00e1mbrico, 270-271 MACA (vea Acceso M\u00faltiple con Prevenci\u00f3n de Colisiones) Macrobloques, 702 MAHO (vea Transporte Asistido M\u00f3vil de Celda) MAN inal\u00e1mbrica (vea IEEE 802.16) MAN (vea red, de \u00e1rea metropolitana) Manchester, codificaci\u00f3n, 274-275 MANET (vea Redes ad hoc M\u00f3viles) Mantenimiento de rutas, redes ad hoc, 379-384 Mapa de bits, protocolo de, 259-260 M\u00e1quina Virtual de Java, 650, 817 Marca(s) aleatorias, 786 de agua alta, 682 baja, 682 Marconi, Guglielmo, 21 MARS, 742 Marshaling, par\u00e1metro, 527-529 M\u00e1scaras, reproductor de medios, 680 Matsunaga, Mari, 665 Maxwell, James Clerk, 66 Mbone, 711-714 MD5, 760 Medios continuos, 674 de transmisi\u00f3n guiados, 90-99 f\u00edsicos, 27 Mensaje(s) compendios de, 759-762 MD5, 760 SHA-1, 761-762 instant\u00e1neos, 7 MEO (vea Sat\u00e9lites de \u00d3rbita Terrestre Media) Merkle, Ralph, 755 Metaarchivo, 680 Metcalfe, Bob, 23, 66 M\u00e9todos, 652 MFJ (vea Juicio Final Modificado) Michelson-Morley, experimento, 66 Microceldas, 154 Middleware, 2\n882 MIME, tipos, 599-602, 617-618 MIME (vea Extensiones Multiprop\u00f3sito de Correo Internet) Minirranuras, 174 MMDS (vea Servicio de Distribuci\u00f3n Multipunto y Multicanal) Mockapetris, Paul, 47 Modelo cliente-servidor, 4-5 Modelo de Referencia OSI de ISO, 37 M\u00f3dems, 125-130 Modo de Transferencia As\u00edncrona, 61-65 Modo(s) de cifrado, 745-750 de transporte, IPsec, 773 de t\u00fanel, IPsec, 773 promiscuo, 319 Modulaci\u00f3n, 142 amplitud, 126 cuadratura, 127 delta, 143 fase, 126 frecuencia, 126 QAM, 127 Modulaci\u00f3n de Amplitud en Cuadratura, 127, 710 Modulaci\u00f3n por Codificaci\u00f3n de Impulsos, 140 Modulaci\u00f3n por Codificaci\u00f3n de Malla, 128 Mosaic, 611 MOSPF, 714 MP3, 676-679 MPEG capa de audio 3 de, 676-679 compresi\u00f3n, 700-704 MPEG-1, 700-703 MPEG-2, 700-704 sincronizaci\u00f3n de audio/v\u00eddeo, 701 tipos de tramas, 701-702 vea Grupo de Expertos en Pel\u00edculas MPLS dirigido por control, 417 orientado a datos, 417 MSC (vea Centro de Conmutaci\u00f3n M\u00f3vil) MTSO (vea Oficina de Conmutaci\u00f3n de Telefon\u00eda M\u00f3vil) MTU (vea Unidad M\u00e1xima de Transferencia) Multiacceso canales, 247 red de, 455 Multidifusi\u00f3n, 15, 276, 370 Internet, 461-462, 712-714 enrutamiento por, 370 Multidifusi\u00f3n Independiente del Protocolo, 714 Multidrop, cable, 66 Multimedia, 674-714 audio, 674-692 (vea tambi\u00e9n audio) de flujo continuo, 679-683 digital, 674-676\n\u00cdNDICE compresi\u00f3n de audio, 676-679 de v\u00eddeo, 696-704 en red, 674-714 introducci\u00f3n al v\u00eddeo, 692-696 Mbone, 711-714 MP3, 676-679 radio en Internet, 683-685 reproductor de medios, 680-683 RTSP, 680-683 servidor de medios, 680-683 telefon\u00eda de Internet, 685-692 v\u00eddeo bajo demanda, 704-711 voz sobre IP, 685-692 (vea tambi\u00e9n voz sobre IP) M\u00faltiples trayectorias, desvanecimiento por, 69, 104 Multiplexi\u00f3n, 31, 510-511 hacia abajo, 511 hacia arriba, 510 Multiplexi\u00f3n Densa por Divisi\u00f3n de Longitud de Onda, 267 Multiplexi\u00f3n por Divisi\u00f3n de Frecuencia, 137-140 Multiplexi\u00f3n por Divisi\u00f3n de Frecuencias Ortogonales, 294 Multiplexi\u00f3n por Divisi\u00f3n de Longitud de Onda, 138-140 Multiplexi\u00f3n por Divisi\u00f3n de Tiempo, 137, 140-143 Multiplexor de Acceso de L\u00ednea Digital de Suscriptor, 134 MultiTono Discreto, 132\nN Nagle, algoritmo de, 545-547 NAP (vea Punto de Acceso a la Red) NAV (vea Vector de Asignaci\u00f3n de Red) Navajo, c\u00f3digo, 724 Navegador Web, 612, 614-618 aplicaci\u00f3n auxiliar, 617-618 Mosaic, 611 plug-in, 616-617 NCP (vea Protocolo de Control de Red) Needham-Schroeder, autenticaci\u00f3n de, 794-795 Negaci\u00f3n de Servicio Distribuida, ataque, 778 Negociaci\u00f3n, 32 NID (vea Dispositivo de Interfaz de Red) NIST (vea Instituto Nacional de Est\u00e1ndares y Tecnolog\u00eda) Nivel(es), 26 acuerdo de, de servicio, 400 dominios de, superior, 580 NNTP (vea Protocolo de Transferencia de Noticias en Red) No repudio, 756 Nombres Universales de Recursos, 625 Nombres asignaci\u00f3n segura, 806-813 servidor de, 495 DNS, 586-588\n\u00cdNDICE Notaci\u00f3n de Sintaxis Abstracta 1, 768 Notaci\u00f3n decimal con puntos, 437 Noticias, 57 NSA (vea Agencia Nacional de Seguridad) NSAP (vea Punto de Acceso al Servicio de Transporte) NSFNET, 55 NTSC (vea Comit\u00e9 Nacional de Est\u00e1ndares de Televisi\u00f3n) NTT DoCoMo, 665-670 Nyquist, Henry, 89\nO OFDM (vea Multiplexi\u00f3n por Divisi\u00f3n de Frecuencias Ortogonales) Oficina de Conmutaci\u00f3n de Telefon\u00eda M\u00f3vil, 155 Oficina(s) central local, 120 de arrancado de cinta de papel, 149 interurbanas, 120 t\u00e1ndem, 120 Olsen, Ken, 6 Onda(s) infrarrojas, 106-107 longitud de, 100 milim\u00e9tricas, 106-107 transmisi\u00f3n por, de luz, 107-108 ONU (vea Unidad de Red \u00d3ptica) Oprimir para hablar, sistema de, 153 Organizaci\u00f3n de Est\u00e1ndares Internacionales, 74-75 Oryctolagus cuniculus, 28 OSI, modelo de referencia, 37-41 cr\u00edtica, 46-48 en comparaci\u00f3n con TCP/IP, 44-46 OSPF (vea Protocolo Abierto de Ruta m\u00e1s Corta) Otway-Rees, protocolo de autenticaci\u00f3n, 795-796\nP P\u00e1ginas Web din\u00e1micas en el servidor, generaci\u00f3n de, 643-647 PAL (vea L\u00ednea de Fases Alternas) Palabra codificada, 193 Paquete(s), 15 calendarizaci\u00f3n de, 408-409 conmutaci\u00f3n de, 150-151, 344 filtro de, 777 reguladores, 391-394 PAR (vea Confirmaci\u00f3n de Recepci\u00f3n Positiva con Retransmisi\u00f3n) Par trenzado sin blindaje, 91-92 categor\u00eda, 3-5, 91-92\nParada y espera, protocolo, 206-211 Paridad, bit de, 194 PCF (vea Funci\u00f3n de Coordinaci\u00f3n Puntual) PCM (vea Modulaci\u00f3n por Codificaci\u00f3n de Impulsos) PCS (vea Servicios de Comunicaciones Personales) PEM (vea Correo con Privacidad Mejorada) Perfil(es) Bluetooth, 312-313 de usuario, correo electr\u00f3nico, 593 Perl, secuencia de comandos de, 644 Perlman, Radia, 324 Persistencia, temporizador de, 552 Petri, red de, 232 PGP (vea Privacidad Bastante Buena) PHP (vea Procesador de Hipertexto) Piconet, 311 PIFS (vea Espacio Entre Tramas PCF) PIM (vea Multidifusi\u00f3n Independiente del Protocolo) P\u00edxel, 695 PKI (vea Infraestructura de Clave P\u00fablica) Plug-in, 616 Polinomio generador, 197-200 POP (vea Punto de Presencia) POP3 (vea Protocolo de Oficina de Correos Versi\u00f3n 3) Portadora de intercambio local, 122 de onda senoidal, 126 entre centrales, 122 Portadores comunes, 72 hoteles de, 59 Portal, 70 Posici\u00f3n orbital, control de la, 111 POTS (vea Servicio Telef\u00f3nico Convencional) PPP (vea Punto a Punto, Protocolo) Predicci\u00f3n, codificaci\u00f3n por, 143 Preguntas m\u00e1s frecuentes, 610 Presentaci\u00f3n, capa de, 41 Primitivas, 34 Principio(s) criptogr\u00e1ficos, 735-736 actualizaci\u00f3n, 736 Kerckhoff, 726 redundancia, 735-736 de dise\u00f1o, Internet, 431-432 de optimizaci\u00f3n, 352-353 Privacidad, 302, 819-820 amplificaci\u00f3n de, 734 Privacidad Bastante Buena, 799-804 claves, 802 formato de mensaje, 802 funcionamiento, 801 IDEA, 799 Privacidad Inal\u00e1mbrica Equivalente, 300, 781-783\n883\n884 Procedimiento Avanzado de Control de Comunicaci\u00f3n de Datos, 234 Procedimiento de Acceso de Enlace, 234 Procesador de Hipertexto, 645-646 Procesadores de Mensajes de Interfaz, 52 Procesos, servidor de, 495 Producto, cifrado de, 738 Progresiva, v\u00eddeo, 693 Propiedad intelectual, 826 Protocolo Abierto de Ruta m\u00e1s Corta, 454-459 Protocolo de Acceso a Mensajes de Internet, 608-609 en comparaci\u00f3n con POP3, 609 Protocolo de Administraci\u00f3n de Grupo de Internet, 462, 713 Protocolo de Aplicaciones Inal\u00e1mbricas (vea WAP) Protocolo de Configuraci\u00f3n de Host Din\u00e1mico, 453-454 Protocolo de Control de Enlace, 239-242 Protocolo de Control de Red, 239, 242 Protocolo de Control de Transmisi\u00f3n, 42, 532-556, (vea tambi\u00e9n TCP) Protocolo de Control de Transporte en Tiempo Real, 531-532, 687 Protocolo de Control S\u00edncrono de Enlace de Datos, 234 Protocolo de Datagrama de Usuario, 43, 524-532 (vea tambi\u00e9n UDP) Protocolo de Datagrama Inal\u00e1mbrico, 664 Protocolo de Enrutamiento Multidifusi\u00f3n de Vector de Distancia, 712-713 Protocolo de Inicio de Sesi\u00f3n, 689-692 (vea tambi\u00e9n voz sobre IP) Protocolo de Internet (IP), 432-444, 464-473 (vea tambi\u00e9n IPv4 e IPv6) Protocolo de Mensajes de Control en Internet, 449-450 Protocolo de Oficina de Correos Versi\u00f3n 3, 605-608 en comparaci\u00f3n con IMAP, 609 Protocolo de Puerta de Enlace de Frontera, 549-461 Protocolo de Resoluci\u00f3n de Direcciones, 450-452 ARP gratuito, 463 proxy, 452 Protocolo de Sesi\u00f3n Inal\u00e1mbrica, 664 Protocolo de Transacciones Inal\u00e1mbricas, 664 Protocolo de Transferencia de Archivos, 448, 624 Protocolo de Transferencia de Hipertexto, 41, 623, 651-656 conexiones, 652 persistentes, 652 encabezados de mensaje, 654-656 de respuesta, 654-656 de solicitud, 654-656 m\u00e9todos, 652-654 uso de ejemplo, 656 Protocolo de Transferencia de Noticias en Red, 624 Protocolo de Transmisi\u00f3n de Control de Flujo, 556 Protocolo de Transmisi\u00f3n en Tiempo Real, 680-683 Protocolo de Transporte de Carga Ligera, 667\n\u00cdNDICE Protocolo de Transporte en Tiempo Real, 529-532, 680-683 Protocolo Ligero de Acceso al Directorio, 588 Protocolo Simple de Acceso a Objetos, 642 Protocolo Simple de Internet Mejorado, 465 Protocolo Simple de Transporte de Correo, 602-605 Protocolo(s), 27 1 (utop\u00eda), 204-206 2 (parada y espera), 206-211 3 (PAR), 208-211 4 (ventana corrediza), 211-216 5 (retroceso n), 216-223 6 (repetici\u00f3n selectiva), 223 AODV, 375 ARP, 450-452 ARQ, 209-211 BGP, 459-461 BOOTP, 453 CSMA, 255 CSMA/CA, 296-297 CSMA/CD, 257-258 de enlace de datos, ejemplo de, 204-228 de multidifusi\u00f3n DVMRP, 712 MOSPF, 714 PIM, 714 PIM-DM, 714 PIM-SM, 714 de transporte, 492 c\u00f3digo C, 518-521 ejemplo, 513-524 entidad de transporte, 515-522 m\u00e1quina de estados finitos, 522-524 primitivas, 513-515 DHCP, 453-454 DVMRP, 712-713 Ethernet, 275-279 FTP, 448 H.323, 683-689 HDLC, 234-237 HTTP, 41, 623, 651-656 ICMP, 449-450 IGMP, 462 IKE, 773 IMAP, 608-609 inicial de conexi\u00f3n, 495 IPv4, 433-444 IPv6, 464-473 IS-IS, 365-366 ISAKMP, 773 jerarqu\u00eda de, 26-30 LAP, 234 LAPB, 234-235 LCP, 239-242 LDAP, 588\n\u00cdNDICE LTP, 667 MACA, 269-270 MACAW, 269-270 m\u00e1quina de, 229 MOSPF, 714 NCP, 239, 242 NNTP, 624 OSPF, 454-459 PAR, 209-211 pila de, 28 802.11, 292-293 Bluetooth, 313-314 H.323, 687 i-mode, 668 IEEE 802.16, 305-306 OSI, 39 TCP/IP, 43 WAP 1.0, 664 WAP 2.0, 672 PIM, 714 POP3, 605-608 PPP, 268-242 RARP, 453 RSVP, 410-412 RTCP, 531-532 RTP, 529-532 RTSP, 680-683 SCTP, 556 SDLC, 234 SIPP, 465 SMTP, 602-605 SOAP, 642 TCP, 532-566 UDP, 524-632 verificaci\u00f3n de, 229-234 WAP, 663-665, 670-673 WDMA, 265-267 WDP, 664 Protocolos de Acceso M\u00faltiple por Divisi\u00f3n de Longitud de Onda, 265-267 Protocolos de Control en Internet, 449-454 Proxy, Web, 657-659 Psicoac\u00fastica, 677 PSTN (vea Red Telef\u00f3nica P\u00fablica Conmutada) PTT (vea Correos, Tel\u00e9grafos y Tel\u00e9fonos, administraci\u00f3n) Puentes, 317, 319-322 aprendizaje hacia atr\u00e1s, 323 con \u00e1rbol de expansi\u00f3n, 323-325 remotos, 325-326 transparentes, 322-326 Puerta de enlace, 25, 326-328 de aplicaci\u00f3n, 778 H.323, 686 interred, 422 protocolo de, exterior, 427, 454\n885\nPuerta de enlace interior, protocolo de, 427, 454 Puerto(s), 494, 533 bien conocidos, 533 de origen, 447 Punto a Punto, protocolo, 238-242 Punto a punto, redes, 15 Punto de acceso, 68 Punto de Acceso a la Red, 56 Punto de Acceso al Servicio de Transporte, 494 Punto de Presencia, 58, 122\nQ Q.931, 687 QAM (vea Modulaci\u00f3n de Amplitud en Cuadratura) QoS (vea calidad, del servicio) QPSK (vea Codificaci\u00f3n por Desplazamiento de Fase en Cuadratura) Qubits, 733\nR Radiotransmisi\u00f3n, 103-104 R\u00e1fagas de trama, Gigabit Ethernet, 288 RAID (vea arreglo redundante de discos baratos) RARP, 453 RAS (vea Registro/Admisi\u00f3n/Estado, canal) RC4, 751, 781, 815 RC5, 751 RC6, 742 Reasociaci\u00f3n, servicio, 802.11, 301 Recorrido de \u00e1rbol adaptable, protocolo, 263-265 Recuperaci\u00f3n de errores, multimedia, 681 Recursos compartici\u00f3n de, 3 reservaci\u00f3n de, 405-406 Red \u00d3ptica S\u00edncrona, 144-146 Red Telef\u00f3nica P\u00fablica Conmutada, 118-151 Red (vea computadoras, redes de) RED (vea detecci\u00f3n, temprana aleatoria) Redacci\u00f3n, correo electr\u00f3nico, 590 Red(es) \u00e1rea de, dorsal, 456 de \u00e1rea amplia, 19-21 de \u00e1rea local, 16-17, 317-323 de \u00e1rea metropolitana, 18 inal\u00e1mbrica (vea IEEE 802.16) de orilla, 460 dom\u00e9sticas, 6-9, 23-25\n886 dorsal de multidifusi\u00f3n, 711-714 hardware de, 14-26 inal\u00e1mbricas, 21-23 interconexi\u00f3n, 420-422 multiconectadas, 460 privadas virtuales, 779-780 seguridad en, 721-834 Redes ad hoc M\u00f3viles, 375 Redes de Entrega de Contenido, 660-662 proxy, 662 Redes y Servicios Avanzados, 55 Redundancia c\u00edclica, c\u00f3digo de, 196 Reenv\u00edo, 350 asegurado, 414-415 expedito, 413-414 por ruta invertida, 369-370 Referencia, modelo de, 37-49 comparaci\u00f3n, 444-446 OSI, 37-41 TCP/IP, 41-44 Reflexi\u00f3n, ataque de, 787-790 Regiones, 366 Registro/Admisi\u00f3n/Estado, canal, 687 Registro(s) autorizado, DNS, 587 de recursos, DNS, 582-586 Rellenos de una sola vez, 730-734 Repetici\u00f3n ataque de, 794 selectiva, protocolo, 223-228 Repetidor, 274, 326-327 activo, 98 Reproductor de medios, 680-683 Reservaci\u00f3n de recursos, protocolo de, 260, 410-412 Resolvedor, 580 Respuesta, encabezados de, 654 Retransmisi\u00f3n, temporizador de, 550 Retransmisores de correo an\u00f3nimos, 820-821 Retroalimentaci\u00f3n control de flujo basado en, 192 de cifrado, modo de, 747-748 Retroceso exponencial binario, algoritmo de, 278-279 protocolo que usa, n, 216-223 RFC (vea Comentarios, solicitudes de) 768, 525 793, 532 821, 589, 594 822, 421, 589-590, 594-597, 599, 651, 716, 801, 804, 821 903, 453 951, 453 1034, 580 1048, 453\n\u00cdNDICE 1058, 360 1084, 453 1106, 539 1112, 462 1323, 532, 539, 570 1379, 556 1424, 803 1519, 442 1550, 465 1644, 556 1661, 238, 241 1662, 239 1663, 239-240 1700, 435 1771, 461 1889, 529 1939, 605 1958, 431 2045, 597, 599 2060, 608-609 2109, 626 2131, 453 2132, 453 2141, 625 2205, 409-410 2210, 407 2211, 407 2246, 816 2251, 588 2326, 680, 682 2328, 455 2362, 714 2401, 772 2410, 772 2440, 800 2459, 767 2460, 466 2535, 809, 811 2597, 414-415 2616, 651, 654, 659 2617, 785 2632, 804 2806, 669 2821, 605, 715 2822, 594 2993, 448 3003, 600 3022, 445 3023, 599 3119, 681 3168, 549 3174, 762 3194, 469 3246, 413\n\u00cdNDICE 3261, 689 3280, 767 Rijmen, Vincent, 742 Rijndael, 743-745, 751 Rivest, Ronald, 302, 751, 754-755, 781 Roberts, Larry, 51 Rondas, 738 RPC (vea Llamada a Procedimiento Remoto) Rrsets (vea Conjuntos de Registro de Recursos) RSA, algoritmo, 753-755 RSVP (vea reservaci\u00f3n de recursos, protocolo de) RTCP (vea Protocolo de Control de Transporte en Tiempo Real) RTP (vea Protocolo de Transporte en Tiempo Real) RTS (vea Solicitud de Env\u00edo) RTSP (vea Protocolo de Transmisi\u00f3n en Tiempo Real) Ruido, 125 Ruta m\u00e1s corta, 353 enrutamiento, 353-356\nS SA (vea seguridad, asociaci\u00f3n de) SAFER+, 784 Sal\u00f3n de conversaci\u00f3n, 7 Sat\u00e9lites de comunicaciones, 109-117 en comparaci\u00f3n con fibra \u00f3ptica, 117-118 GEO, 109-113 Globalstar, 115-116 Iridium, 114-115 LEO, 114-116 MEO, 113-114 Teledesic, 116 VSAT, 112-113 Sat\u00e9lites de \u00d3rbita Terrestre Baja, 114-116 Sat\u00e9lites de \u00d3rbita Terrestre Media, 113-114 Scatternet, 311 Schneier, Bruce, 742 SCTP (vea Protocolo de Transmisi\u00f3n de Control de Flujo) SDH (vea Jerarqu\u00eda Digital S\u00edncrona) SDLC (vea Protocolo de Control S\u00edncrono de Enlace de Datos) SECAM (vea color secuencial con memoria) Segmentaci\u00f3n y reensamble, 65 Segmentos, UDP, 525 Seguir con vida, temporizador de, 552 Segunda generaci\u00f3n, tel\u00e9fonos m\u00f3viles de, 157-166 Seguridad, 721-834 ActiveX, 817-818 administraci\u00f3n de claves p\u00fablicas, 765-772\nalgoritmos de clave p\u00fablica, 752-755 sim\u00e9trica, 737-751 asociaci\u00f3n de, 773 certificados, 765-771 c\u00f3digo m\u00f3vil, 816-819 comunicaci\u00f3n, 772-785 correo electr\u00f3nico, 799-804 criptograf\u00eda, 724-736 DNS, 806-811 firewalls, 776-779 firmas digitales, 755-765 inal\u00e1mbrica, 780-785 802.11, 781-783 Bluetooth, 783-784 WAP, 785 IPsec, 772-776 JavaScript, 818 PGP, 799-803 PKI, 769 problemas sociales, 819-828 protocolos de autenticaci\u00f3n, 785-799 SSL, 813-816 subprogramas de Java, 817 VPN, 779-780 Web, 805-819 Semid\u00faplex, 129 Se\u00f1al a ruido, relaci\u00f3n, 89 Se\u00f1al S\u00edncrona de Transporte, 145 Serpent, 742, 751 Servicio de Distribuci\u00f3n Multipunto y Multicanal, 135 Servicio de Mensajes Cortos, 666 Servicio de Radio de Paquetes Generales, 168 Servicio Local de Distribuci\u00f3n Multipunto, 135 Servicio Telef\u00f3nico Convencional, 132 Servicio(s) basado en clase, 412-415 capa de enlace de datos, 184-192 de datagramas confirmados, 33 de mejor esfuerzo, IEEE 802.16, 308 de tasa de bits constante, IEEE 802.16, 308 variable no en tiempo real, 308 diferenciados, 412-415 eternidad, 823 integrados, 409-412 no orientado a la conexi\u00f3n, 32-33, 345-347 orientado a la conexi\u00f3n, 32-33, 347-348 primitivas, 34-36 transporte, 481-482 red, 344-345 relaci\u00f3n a protocolos, 36-37 Servicios de Comunicaciones Personales, 157\n887\n888 Servidor(es), 4 de directorio, 495 de medios, 680-683 de v\u00eddeo, 706-709 arquitectura, 707-708 ejemplo de, de archivos de Internet, 488-492 granja de, 621-622 pull, multimedia, 681 push, multimedia, 682 replicaci\u00f3n del, 659-660 Web, 618-622 espejo, 659-660 replicaci\u00f3n, 659-660 transferencia TCP, 622 Sesi\u00f3n, 40 clave de, 816 enrutamiento de, 350 Shannon, Claude, 89-90 SIFS (vea Espaciado Corto Entre Tramas) SIG, Bluetooth, 310-311 S\u00edmbolo, 127 S\u00edmplex, 129 Sincronizaci\u00f3n, 41 S\u00edncrono Orientado a la Conexi\u00f3n, canal, Bluetooth, 316 SIP (vea Protocolo de Inicio de Sesi\u00f3n) (vea tambi\u00e9n voz sobre IP) SIPP (vea Protocolo Simple de Internet Mejorado) Sistema aut\u00f3nomo, 427, 432, 456-458 Sistema Avanzado de Telefon\u00eda M\u00f3vil, 154-157 Sistema de Archivos Seguro, 811 Sistema de Nombres de Dominio, 54, 579-588 espacio de nombres, 580-582 falsificaci\u00f3n, 806-808 registro autorizado, 587 seguridad, 809-811 servidores de nombres, 586-588 zonas, 586 Sistema de Posicionamiento Global, 114 Sistema de Terminaci\u00f3n de Cable M\u00f3dem, 173 Sistema Global para Comunicaciones M\u00f3viles, 159-162 Sistema intermedio-sistema intermedio, 365-366 Sistema Mejorado de Telefon\u00eda M\u00f3vil, 153 Sistema Universal de Telecomunicaciones M\u00f3viles, 167 Sistema(s) con p\u00e9rdidas, v\u00eddeo, 696 distribuido, 2 sin p\u00e9rdidas, v\u00eddeo, 696 telef\u00f3nico, 118-151 circuito local, 124-137 estructura, 119-121 multiplexi\u00f3n por divisi\u00f3n de frecuencia, 137-138 Multiplexi\u00f3n por Divisi\u00f3n de Longitud de Onda, 138-140 Multiplexi\u00f3n por Divisi\u00f3n de Tiempo, 140-143\n\u00cdNDICE pol\u00edticas, 122-123 troncales, 137-143 telef\u00f3nico m\u00f3vil, 152-169 primera generaci\u00f3n, 153-157 segunda generaci\u00f3n, 157-166 tercera generaci\u00f3n, 166-169 tr\u00e1fico entre, aut\u00f3nomos, 459 Sitio Web del libro, 79 Sitios espejo, 660 S/MIME, 804 SMTP (vea Protocolo Simple de Transporte de Correo) SOAP (vea Protocolo Simple de Acceso a Objetos) Sobre, correo electr\u00f3nico, 591 Socket, 487-492 Sockets seguros, capa de, 813-816 Solicitud Autom\u00e1tica de Repetici\u00f3n, 209 Solicitud de Env\u00edo, 269 Solicitud, encabezados de, 654 solicitud-respuesta, servicio, 33 Solitones, 96 SONET (vea Red \u00d3ptica S\u00edncrona) SPE (vea Contenedor o Sobre de Carga \u00datil S\u00edncrona) SSL (vea sockets seguros, capa de) STS (vea Se\u00f1al S\u00edncrona de Transporte) Stub del servidor, 527-529 Subred, 19, 439 circuitos virtuales, 347-348 comparaci\u00f3n entre datagramas y circuitos virtuales, 348-350 comunicaci\u00f3n, 344 datagramas, 345-347 m\u00e1scara de, 439 Subprocesos de color, 417 Supergrupo, 138 Superposici\u00f3n, 212 Supervisi\u00f3n, Trama, 235 Sustituci\u00f3n monoalfab\u00e9tica, 728\nT T1, portadora, 140-143, 709 T2-T4, portadoras, 143 Tarifa, 72 Tasa de datos m\u00e1xima de un canal Nyquist, 89 Shannon, 89-90 TCM (vea Modulaci\u00f3n por Codificaci\u00f3n de Malla) TCP (Protocolo de Control de Transmisi\u00f3n), 532-556 administraci\u00f3n de temporizadores, 550-553 algoritmo de Jacobson, 549-550 de Karn, 552 de Nagle, 545-547\n\u00cdNDICE control de congestionamiento, 547-548 datos urgentes, 535 encabezado, 535-539 establecimiento de una conexi\u00f3n, 539-540 inal\u00e1mbrico, 553-555 indirecto, 553-554 liberaci\u00f3n de una conexi\u00f3n, 541 m\u00e1quina de estados finitos, 541-543 modelado de administraci\u00f3n de conexiones, 541-543 modelo del servicio, 533-535 pol\u00edtica de transmisi\u00f3n, 543-547 radio en Internet, 684-685 segmentos, 535-539 s\u00edndrome de ventana tonta, 545-547 transaccional, 555-556 transferencia, 622 TCPA (vea Alianza para una Plataforma Inform\u00e1tica Confiable) TCP/IP, modelo de referencia, 41-44 cr\u00edtica, 48-49 en comparaci\u00f3n con OSI, 44-46 TDD (vea Duplexaci\u00f3n por Divisi\u00f3n de Tiempo) TDM (vea Multiplexi\u00f3n por Divisi\u00f3n de Tiempo) Teledesic, 116 Telefon\u00eda de Internet, 685-692 (vea tambi\u00e9n voz sobre IP) Tel\u00e9fono(s) celular, 154 inal\u00e1mbrico, 152 m\u00f3vil, 152 m\u00f3viles de primera generaci\u00f3n, 153-157 Televisi\u00f3n de alta definici\u00f3n, 694-695 por antena comunal o com\u00fan, 169-170 por cable, 169-175, 710 Temas sociales, 12-14, 819-828 Temporizaci\u00f3n, rueda de, 569 Tercera generaci\u00f3n, sistema telef\u00f3nico m\u00f3vil de, 166-169 Terminador, enlace de datos, 184, 200 Terminal, 249, 686 Terminales de Apertura Muy Peque\u00f1a, 112 Texto cifrado, 725 llano, 725 conocido, 727 seleccionado, 727 Tiempo continuo, supuesto, 250 de permanencia, 294 protocolos en, real, 574 ranurado, supuesto, 250 TLS (vea capa, de transporte, seguridad de) Token, 67 administraci\u00f3n de, 40 red de Petri, 232 TPDU (vea Unidad de Datos del Protocolo de Transporte)\n889\nTPDUs, procesamiento r\u00e1pido de las, 566-569 Trabajo, factor de, 727 Tracto vocal, 676 Tr\u00e1fico an\u00e1lisis de, 774 modelado de, 399-400 supervisi\u00f3n de, 400 Tramado, 187-191 Trama(s) B, MPEG, 701, 703 D, MPEG, 701, 703 datos, 184 de confirmaci\u00f3n de recepci\u00f3n, 38 encabezado de la, 201-203 I, MPEG, 701-702 informaci\u00f3n, 235 no numeradas, 235 P, MPEG, 701-702 v\u00eddeos, 692 Transceptor, cable de, 272 Transferencia de mensajes, agentes de, 590 Transformaci\u00f3n por Coseno Discreto, 698-700 Transici\u00f3n, 232 m\u00e1quina de estado finito, 229 Tr\u00e1nsito, redes de, 460 Transmisi\u00f3n inal\u00e1mbrica, 100-108 l\u00edneas de, 19 Transpondedor(es) sat\u00e9lites, 109 tubo doblado, 109 Transporte direcciones de, 493-496 entidad de, 482 servicio de, 481-492 primitivas, 483-486 proveedor, 483 punto de acceso, 494 usuario, 483 Transporte Asistido M\u00f3vil de Celda, 159 Tres osos, problema de los, 441 Tres v\u00edas, acuerdo de, 500-502, 539-540 Trigramas, 728 Triple DES, 740-741, 751 Troncales de conexi\u00f3n interurbanas, 120 tel\u00e9fonos, 137-143 Trudy, 732 TSAP (vea Transporte, servicio de, punto de acceso) Twofish, 742, 751\nU UDP (Protocolo de Datagrama de Usuario), 43, 524-532 encabezado, 526\n890 inal\u00e1mbrico, 553-555 segmentos, 525-526 UMTS (vea Sistema Universal de Telecomunicaciones M\u00f3viles) Unidad de Datos del Protocolo de Transporte, 485 Unidad de Red \u00d3ptica, 709 Unidad M\u00e1xima de Transferencia, 535 Unidades m\u00e9tricas, 77-78 Unidifusi\u00f3n, 15 Uni\u00f3n Internacional de Telecomunicaciones, 72-74, 166 URL autocertificable, 811-813 URL (vea Localizadores Uniformes de Recursos) URL, Web, 614, 622-625 URN (vea Nombres Universales de Recursos) Usuarios m\u00f3viles, 9-12, 372 UTP (vea par trenzado sin blindaje)\nV V.32, bis de m\u00f3dem, 128 V.34, bis de m\u00f3dem, 128 V.90, bis de m\u00f3dem, 130 V.92, bis de m\u00f3dem, 130 Vacaciones, demonio de, 610 VC (vea circuito(s), virtual) Vecinos activos, 379 Vector de Asignaci\u00f3n de Red, 297 Vector de Distancia ad hoc bajo Demanda, 375-380 Vector de inicializaci\u00f3n, 746 Velocidades de Datos para la Evoluci\u00f3n del GSM, 168 Ventana de congestionamiento, TCP, 548-550 emisora, 212 protocolo, corrediza, 211-228 1 bit, 211-214 repetici\u00f3n selectiva, 223-228 retroceso n, 216-223 receptora, 212 s\u00edndrome de, tonta, 545-547 Verificaci\u00f3n, suma de, 197 V\u00eddeo, 692-711 (vea tambi\u00e9n compresi\u00f3n de v\u00eddeo) bajo demanda, 704-711 red de distribuci\u00f3n, 709-711 campo, 693 codificaci\u00f3n, 696 compuesto, 695 crominancia, 694 introducci\u00f3n al, digital, 692-696 entrelazado, 693 HDTV, 694-695 luminancia, 694 NTSC, 693-694\n\u00cdNDICE PAL, 693-694 par\u00e1metros de barrido, 693, 695 progresiva, 693 SECAM, 693-694 trama, 693 Vino, pol\u00edtica, 394 Virus, 818-819 Visualizaci\u00f3n, correo electr\u00f3nico, 590 VLAN (vea LAN virtual) Vocoder, 158 Voz humana, 676 sobre IP, 685-692 comparaci\u00f3n entre H.323 y SIP, 691-692 establecer la llamada, 687-689 G.711, 686 G.723.1, 687 gatekeeper, H.323, 686 H.245, 687 H.323, 683-689 m\u00e9todos SIP, 690 n\u00fameros telef\u00f3nicos de SIP, 689 pila de protocolos, H.323, 687 protocolos SIP, 690 Q.931, 687 RAS, 687 RTCP, 687 RTP, 687 SIP, 689-692 VPN (vea red(es), privadas virtuales) VSAT (vea Terminales de Apertura Muy Peque\u00f1a)\nW W3C (vea World Wide Web Consortium) WAE (vea Entorno de Aplicaciones Inal\u00e1mbricas) Walsh, c\u00f3digo de, 164 Walsh/Hadamard, c\u00f3digos, 295 WAN (vea red, de \u00e1rea amplia) WAP, 11, 663-665, 670-673 arquitectura, 665 capa del portador, 664 Capa Inal\u00e1mbrica de Seguridad de Transporte, 664 emoji, 672 en comparaci\u00f3n con 802.11, 673 con i-mode, 671 Entorno de Aplicaciones Inal\u00e1mbricas, 664 pila de protocolos, 664, 672 Protocolo de Datagrama Inal\u00e1mbrico, 664 Protocolo de Sesi\u00f3n Inal\u00e1mbrica, 664 Protocolo de Transacciones Inal\u00e1mbricas, 664\n\u00cdNDICE seguridad, 785 uso de XHTML b\u00e1sico, 673 de XML, 664 WAP 1.0, 663-665 arquitectura, 664-665 pila de protocolos, 664 WAP 2.0, 670-673 emoji, 672 en comparaci\u00f3n con WAP 1.0, 671-672 en competencia con 802.11, 673 pila de protocolos, 672 XHTML b\u00e1sico, 673 Watermarking, 826 Watson, Thomas, J., 23 WDM (vea Multiplexi\u00f3n por Divisi\u00f3n de Longitud de Onda) WDMA (vea Protocolos de Acceso M\u00faltiple por Divisi\u00f3n de Longitud de Onda) WDP (vea Protocolo de Datagrama Inal\u00e1mbrico) Web (World Wide Web), 2, 611-673 aglomeraci\u00f3n instant\u00e1nea, 660 cliente, 614-618 cookie, 625-629 correo de, 610-611 desempe\u00f1o, 662 esquemas, 623-625 formularios, 634-638 hiperv\u00ednculo, 612 historia, 57-58, 611-612 HTML, 615, 629-639 HTTP, 41, 623, 651-656 i-mode (vea i-mode) inal\u00e1mbricas, 662-673 segunda generaci\u00f3n, 670-673 WAP 1.0, 663-665 WAP 2.0, 670-673 p\u00e1gina, 612 panorama de la arquitectura, 612-629 Redes de Entrega de Contenido, 660-662 seguridad, 805-819 amenazas, 805-806 asignaci\u00f3n de nombres segura, 806-813 c\u00f3digo m\u00f3vil, 816-819 SSL, 813-816 XML, 639-642 XSL, 639-642 WEP (vea Privacidad Inal\u00e1mbrica Equivalente) WiFi (vea IEEE 802.11) WLL (Circuito Local Inal\u00e1mbrico) (vea IEEE 802.16) WML (Lenguaje de Marcado Inal\u00e1mbrico) World Wide Wait, 660 World Wide Web (vea Web) World Wide Web Consortium, 612 WSP (vea Protocolo de Sesi\u00f3n Inal\u00e1mbrica)\n891\nWTLS (vea Capa Inal\u00e1mbrica de Seguridad de Transporte) WTP (vea Protocolo de Transacciones Inal\u00e1mbricas) WWW (vea Web)\nX X.25, 61 X.400, 589-590 X.500, 588 X.509, 767-768 XDSL, 130 XHTML, 642-643 XHTML Basic, 673 XHTML (vea Lenguaje de Marcado de Hipertexto Extendido) XML (vea Lenguaje de Marcado Extensible) XSL (vea Lenguaje de Hojas de estilo Extensible)\nZ Zimmermann, Phil, 799 Zipf, ley de, 706 Zona, 686 DNS, 586 prohibida, 499-500\nACERCA DEL AUTOR Andrew S. Tanenbaum tiene una licenciatura en ciencias del M.I.T. y un doctorado en filosof\u00eda por la University of California en Berkeley. Actualmente es profesor de ciencias de la computaci\u00f3n en la Vrije Universiteit de \u00c1msterdam, Pa\u00edses Bajos, donde encabeza el Grupo de Sistemas de Computadoras. Tambi\u00e9n es decano de la Escuela Avanzada de Computaci\u00f3n y Procesamiento de Im\u00e1genes, una escuela interuniversitaria de posgrado en la que se llevan a cabo investigaciones sobre sistemas paralelos avanzados, distribuidos y de procesamiento de im\u00e1genes. No obstante, hace un gran esfuerzo para no convertirse en bur\u00f3crata. Tambi\u00e9n ha efectuado investigaciones sobre compiladores, sistemas operativos, conectividad de redes y sistemas distribuidos de \u00e1rea local. Sus investigaciones actuales se enfocan principalmente en el dise\u00f1o e implementaci\u00f3n de sistemas distribuidos de \u00e1rea amplia en la escala de millones de usuarios. Estas investigaciones, realizadas junto con el profesor Maarten van Steen, se describen en www.cs.vu.nl/globe. Estos proyectos de investigaci\u00f3n han conducido a m\u00e1s de 100 art\u00edculos evaluados por expertos en publicaciones peri\u00f3dicas y actas de congresos, as\u00ed como a cinco libros. Por otra parte, el profesor Tanenbaum ha producido una cantidad considerable de software; fue el arquitecto principal del Amsterdam Compiler Kit, un conjunto de herramientas de amplio uso para escribir compiladores port\u00e1tiles, y de MINIX, un peque\u00f1o sistema operativo tipo UNIX para cursos de sistemas operativos. Este sistema fue la inspiraci\u00f3n y base en la que se desarroll\u00f3 Linux. Junto con sus estudiantes de doctorado y programadores, ayud\u00f3 a dise\u00f1ar Amoeba, un sistema operativo distribuido de alto desempe\u00f1o basado en micron\u00facleo. MINIX y Amoeba ahora est\u00e1n disponibles gratuitamente en Internet. Los estudiantes de doctorado del profesor Tanenbaum han cosechado grandes triunfos tras recibir sus t\u00edtulos. \u00c9l est\u00e1 muy orgulloso de ellos. El profesor Tanenbaum es socio del ACM, miembro senior del IEEE, miembro de la Academia Real Holandesa de Ciencias y Artes, ganador en 1994 del premio Karl V. Karlstrom del ACM para educadores sobresalientes, ganador en 1997 del Premio ACM/SIGCSE por contribuciones sobresalientes en la educaci\u00f3n sobre ciencias de la computaci\u00f3n y ganador en 2002 del premio Texty por su excelencia en libros de texto. Tambi\u00e9n est\u00e1 listado en Web en el Who\u2019s Who in the World. Su p\u00e1gina principal de World Wide Web se encuentra en http://www.cs.vu.nl/~ast/.", "language": null, "image": "https://epdf.tips/assets/img/epdf_logo.png", "pagetype": "website", "links": ["https://epdf.tips/", "https://epdf.tips/", null, null, "https://epdf.tips/register", "https://epdf.tips/", "https://epdf.tips/redes-de-computadoras-cuarta-edicion.html", "https://epdf.tips/author/Andrew+S.+Tanenbaum", null, "https://epdf.tips/dmca-form/redes-de-computadoras-cuarta-edicion", "https://epdf.tips/download/redes-de-computadoras-cuarta-edicion.html", "https://www.facebook.com/sharer.php?u=https://epdf.tips/redes-de-computadoras-cuarta-edicion.html", "http://www.linkedin.com/shareArticle?mini=true&url=https://epdf.tips/redes-de-computadoras-cuarta-edicion.html", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "/cdn-cgi/l/email-protection", "https://epdf.tips/fundamentos-del-diseo-cuarta-edicion.html", "https://epdf.tips/fundamentos-del-diseo-cuarta-edicion.html", "https://epdf.tips/arquitectura-de-computadoras.html", "https://epdf.tips/arquitectura-de-computadoras.html", "https://epdf.tips/redes-de-computadores3fbf6067dda476c745598362194e8f0c16833.html", "https://epdf.tips/redes-de-computadores3fbf6067dda476c745598362194e8f0c16833.html", "https://epdf.tips/computadoras-componentes.html", "https://epdf.tips/computadoras-componentes.html", "https://epdf.tips/curso-de-redes.html", "https://epdf.tips/curso-de-redes.html", "https://epdf.tips/cableado-de-redes.html", "https://epdf.tips/cableado-de-redes.html", "https://epdf.tips/redes-de-area-local.html", "https://epdf.tips/redes-de-area-local.html", "https://epdf.tips/analisis-de-redes.html", "https://epdf.tips/analisis-de-redes.html", "https://epdf.tips/manual-de-redes.html", "https://epdf.tips/manual-de-redes.html", "https://epdf.tips/redes-de-computadores.html", "https://epdf.tips/redes-de-computadores.html", "https://epdf.tips/eneada-cuarta.html", "https://epdf.tips/eneada-cuarta.html", "https://epdf.tips/curso-de-redes-de-area-local.html", "https://epdf.tips/curso-de-redes-de-area-local.html", "https://epdf.tips/manual-de-redes-y-transmision-de-datos.html", "https://epdf.tips/manual-de-redes-y-transmision-de-datos.html", "https://epdf.tips/organizacion-de-computadoras-un-enfoque-estructurado.html", "https://epdf.tips/organizacion-de-computadoras-un-enfoque-estructurado.html", "https://epdf.tips/curso-de-redes-comunicacion-de-datos.html", "https://epdf.tips/curso-de-redes-comunicacion-de-datos.html", "https://epdf.tips/sistema-de-transporte-de-datos-redes-inalambricas.html", "https://epdf.tips/sistema-de-transporte-de-datos-redes-inalambricas.html", "https://epdf.tips/mecanica-de-materiales-3-edicion.html", "https://epdf.tips/mecanica-de-materiales-3-edicion.html", "https://epdf.tips/administracion-y-operacion-de-redes.html", "https://epdf.tips/administracion-y-operacion-de-redes.html", "https://epdf.tips/curso-de-frame-relay-redes.html", "https://epdf.tips/curso-de-frame-relay-redes.html", "https://epdf.tips/guia-de-administracion-de-redes-con-linux0d4f75beeffeabf6c93c26eb43be063395192.html", "https://epdf.tips/guia-de-administracion-de-redes-con-linux0d4f75beeffeabf6c93c26eb43be063395192.html", "https://epdf.tips/guia-de-administracion-de-redes-con-linux.html", "https://epdf.tips/guia-de-administracion-de-redes-con-linux.html", "https://epdf.tips/la-cuarta-k.html", "https://epdf.tips/la-cuarta-k.html", "https://epdf.tips/la-cuarta-cripta.html", "https://epdf.tips/la-cuarta-cripta.html", "https://epdf.tips/diseno-de-estructuras-de-concreto-12-edicion.html", "https://epdf.tips/diseno-de-estructuras-de-concreto-12-edicion.html", "https://epdf.tips/la-cuarta-mano.html", "https://epdf.tips/la-cuarta-mano.html", "https://epdf.tips/analisis-activo-y-pasivo-de-redes.html", "https://epdf.tips/analisis-activo-y-pasivo-de-redes.html", "https://epdf.tips/la-cuarta-criptabdb4618db80ae2a684ae66f7834b9bc636530.html", "https://epdf.tips/la-cuarta-criptabdb4618db80ae2a684ae66f7834b9bc636530.html", "https://epdf.tips/la-cuarta-mano5ed02ed5068abdfbcbe041048602308a79848.html", "https://epdf.tips/la-cuarta-mano5ed02ed5068abdfbcbe041048602308a79848.html", "https://epdf.tips/redes-atm.html", "https://epdf.tips/redes-atm.html", "https://epdf.tips/tratamiento-integral-de-las-quemaduras-3-edicion.html", "https://epdf.tips/tratamiento-integral-de-las-quemaduras-3-edicion.html", "https://epdf.tips/fundamentos-del-diseo-cuarta-edicion.html", "https://epdf.tips/fundamentos-del-diseo-cuarta-edicion.html", "https://epdf.tips/arquitectura-de-computadoras.html", "https://epdf.tips/arquitectura-de-computadoras.html", "https://epdf.tips/redes-de-computadores3fbf6067dda476c745598362194e8f0c16833.html", "https://epdf.tips/redes-de-computadores3fbf6067dda476c745598362194e8f0c16833.html", "https://epdf.tips/computadoras-componentes.html", "https://epdf.tips/computadoras-componentes.html", "https://epdf.tips/curso-de-redes.html", "https://epdf.tips/curso-de-redes.html", "https://epdf.tips/cableado-de-redes.html", "https://epdf.tips/cableado-de-redes.html", "https://epdf.tips/redes-de-area-local.html", "https://epdf.tips/redes-de-area-local.html", "https://epdf.tips/analisis-de-redes.html", "https://epdf.tips/analisis-de-redes.html", "https://epdf.tips/manual-de-redes.html", "https://epdf.tips/manual-de-redes.html", "https://epdf.tips/redes-de-computadores.html", "https://epdf.tips/redes-de-computadores.html", "https://epdf.tips/about", "https://epdf.tips/privacy", "https://epdf.tips/term", "https://epdf.tips/copyright", "https://epdf.tips/dmca", "https://epdf.tips/contact", "https://epdf.tips/cookie_policy", "https://epdf.tips/forgot", "https://epdf.tips/login/facebook", "https://epdf.tips/cookie_policy", "#"]}