{"title": "PDF", "author": "PDF", "url": "https://core.ac.uk/download/pdf/50524795.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "id": "PDF", "license": "PDF", "body": "PDF", "comments": "PDF", "commentsbody": "PDF", "raw_text": "PDF", "text": " \n \n \n      \n \n \n \n \nTrabajo Final de Carrera TFC  \n \n \nSistema electr\u00f3nico de calibraci\u00f3n de \nfruta por di\u00e1metro \n  \nErico Cruz Lemus \n       \n \n   \nIngenier\u00eda  T\u00e9cnica Industrial. Especialidad en Electr\u00f3nica \nIndustrial  \nDirector: Pere Mart\u00ed Puig  \nVic, Octubre de 20 12  \nRESUMEN TFC  \n \n \n \nResumen de Trabajo Final de Carrera TFC  \nIngenier\u00eda  T\u00e9cnica Industrial Especialidad  en Electr\u00f3nica Industrial  \n \nT\u00edtulo: Sistema electr\u00f3nico de calibraci\u00f3n de fruta por di\u00e1metro  \nPalabras Clave : Visi\u00f3n artificial, calibradora, medici\u00f3n di\u00e1metro, clasificac i\u00f3n de \nfrutas, verduras y/o hortalizas, l\u00ednea de producci\u00f3n alimentaria, c\u00e1maras infrarrojo, luz \nLED, b\u00e1sculas, cooperativas agricultoras.  \nAutor : Erico Cruz  Lemus  \nDirecci\u00f3 n: Pere Mart\u00ed Puig  \nFecha:  Junio 2013 \n \nRESUMEN  \n \nEn la actualidad, l as cooperativas recolectan, seleccionan, tratan y separan la \nfruta seg\u00fan su calibre ( peso, di\u00e1metro m\u00e1ximo, medio y/o m\u00ednimo) para que esta llegue \nal consumidor final seg\u00fan la categor\u00eda (calibre) . Para poder competir en un mercado \ncada vez m\u00e1s exigente en calidad y precios, se requieren sistemas de clasificaci\u00f3n \nautom\u00e1ticos que nos permitan obtener \u00f3ptimos resultados con altos niveles  de \nproducci\u00f3n y productividad. \nPara realizar estas tareas existen calibradoras industriales que pesan la fruta \nmediante  c\u00e9lulas de carga y con el peso obtenido las clasifica n asigna ndo las piezas a su \nsalida correspondiente (mesa de confecci\u00f3n) a trav\u00e9s de un sistema de electroimanes.  \nDesafortunadamente el proceso de calibraci\u00f3n de la fruta por peso no es en absoluto \nfiable ya que en este proceso  no se considera el grosor de la piel , contenido de agua , de \naz\u00facar  u otros factores altamente relevantes que influyen considerablemente en los \nresultados finales.  \nEl objeto de este proyecto es el de evolucionar las existentes calibradoras de \nfruta instala ndo un sistema industrial de visi\u00f3n artificial (r\u00e1pido y robusto) que trabaje \nen un rango de espectro Infrarrojo (mayor fiabilidad) proporciona ndo \u00f3ptimos \nresultados  finales en la clasificaci\u00f3n de l as frutas,  verduras y hortalizas.  \nDe este modo, el present e proyecto ofrece la oportunidad de mejorar el \nrendimiento de la l\u00ednea de clasificaci\u00f3n de frutas, aumentando la velocidad, \ndisminuyendo p\u00e9rdidas en tiempo y error humano y mejorando indiscutiblemente la calidad del producto final deseada por los consumidores.   \nSUMMARY TFC \n \n \n \nFinal career work summary  TFC \nIndustrial Technical Engineering Industrial Electronic S pecialty  \n \nTitle: Diameter fruit electronic calibration system \nKey Works : Artificial vision,  calibrator, diameter measurement,  vegetables and fruits \nclassification , food production line , infrared cameras, LED lights , load cells, scales, \nfarmers cooperatives.  \nAuthor: Erico Cruz  Lemus  \nDirector : Pere Mart\u00ed Puig  \nDate : June  2013 \n \nSUMMARY \n \nAt present, the cooperatives collect, select, treat and separate fruit accordin g to \nits gauge (weight, maximum , medium or minimum  diameter) to get this to the final \nconsumer according to the category (caliber). To compete in a market more and more \ndemanding in quality and prices, are required for automatic classification systems that \nwill allow us to obtain excellent results with high levels of production and productivity. \nTo perform these tasks, there are sorting industrial machines weighting the fruit \nby load cells and sort the fruit by the weight obtained to the operator configured output (preparation table) through a set of solenoids . Unfortunately the calibration process  by \nweight i t is not at all reliable because this process do not consider the skin thickness , \neater content, sugar o ther highly relevant factors that significantly influen ce the final \nresults.  \nThe purpose of this project is to  evolve the existing fruits sorting systems by \ninstalling an industrial vision system machine (fast and robust)  work ing in the infrared \nspectral range (more reliable) providing optimal final results in  the fruits and vegetables \nclassification process.  \nThus, this project offers the opportunity to improve the performance of the fruit \nline classification, increasing speed, reducing losses in time and human error and \nimproving the desired final product quality by consumers . \u00cdNDICE  \n \n1. INTRODUCCI\u00d3N  ...................................................................................................... 4 \n1.1. Antecedentes  .................................................................................................... 4 \n1.1.1. Cadena del tratam iento y proceso de la fruta  ............................................ 4 \n1.2. Objeto del proyecto ........................................................................................... 5 \n1.3. Especificaciones y abasto ................................................................................. 5 \n2. VISI\u00d3N GLOBAL  ....................................................................................................... 6 \n2.1. Introducci\u00f3n  ....................................................................................................... 6 \n2.1.1. Antecedentes en la calibraci\u00f3n de la fruta ................................................. 6 \n2.1.2. Calibraci\u00f3n por di\u00e1metro m\u00e1ximo  .............................................................. 7 \n2.1.3. Calibraci\u00f3n por di\u00e1metro m\u00ednimo  ............................................................... 7 \n2.1.4. Calibraci\u00f3n por di\u00e1metro medio .................................................................  8 \n2.2. Proceso global calibraci\u00f3n ................................................................................. 8 \n3. VISI\u00d3N ARTIFICIAL ................................................................................................ 16 \n3.1. Descripci\u00f3n  ...................................................................................................... 16 \n3.2. Hardware  ......................................................................................................... 17 \n3.2.1. Visi\u00f3n global  ............................................................................................ 17 \n3.2.2. C\u00e1maras y \u00f3pticas  ................................................................................... 18 \n3.2.3. Sistema de iluminaci\u00f3n  ............................................................................ 20 \n3.2.4. Sistema estrobosc\u00f3pico  .......................................................................... 21 \n3.2.5. Procesador industrial  ............................................................................... 23 \n3.2.6. Sistema de comunicaci\u00f3n ........................................................................ 23 \n3.2.7. Alojamiento de las c\u00e1maras  .................................................................... 24 \n3.3. Software .......................................................................................................... 26 \n3.3.1. C\u00f3digo del programa  ............................................................................... 26 \n3.3.2. Inicio del programa  .................................................................................. 27 \n3.3.3. Adquisici\u00f3n de im\u00e1genes  ......................................................................... 27 \n3.3.4. Env\u00edo de los datos al PC de la calibradora .............................................. 32 \n3.3.5. Resumen de programaci\u00f3n  ..................................................................... 35 \n3.3.6. Calibraci\u00f3n de las c\u00e1maras  ..................................................................... 35 \n4. CALIBRADORA  ....................................................................................................... 37 \n4.1. Descripci\u00f3n  ...................................................................................................... 37 \n4.2. Hardware  ......................................................................................................... 38 \n4.2.1. Visi\u00f3n global  ............................................................................................ 38 \n4.2.2. Distribuci\u00f3n del hardware ........................................................................ 44 ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n4.2.3. Procesador Industrial  ............................................................................... 46 \n4.3. Software .......................................................................................................... 48 \n4.3.1. Configuraci\u00f3n del Hardware .................................................................... 48 \n4.3.2. M\u00f3dulos de programaci\u00f3n ....................................................................... 49 \n4.3.3. Bloque Pantalla  ....................................................................................... 49 \n4.3.4. Clock 1 segundo ...................................................................................... 53 \n4.3.5. C\u00e1lculo c\u00e1maras  ...................................................................................... 54 \n4.3.6. Layaut salidas  .......................................................................................... 59 \n4.3.7. Alarmas  ................................................................................................... 81 \n4.3.8. Estad\u00edsticas  ............................................................................................. 84 \n4.3.9. C\u00e1lculos estad\u00edsticas  ............................................................................... 89 \n4.3.10. Bloque Server  .......................................................................................... 91 \n5. PRESUPUESTO  ..................................................................................................... 97 \n5.1. Presupuesto mec\u00e1nico  .................................................................................... 97 \n5.1.1. Conjunto caja c\u00e1maras  ............................................................................ 97 \n5.1.2. Conjunto caja de CPU  ............................................................................. 98 \n5.2. Presupuesto el\u00e9ctrico electr\u00f3nico  .................................................................... 98 \n5.2.1. Material visi\u00f3n artific ial ............................................................................ 98 \n5.2.2. Cuadro el\u00e9ctrico visi\u00f3n artificial  ............................................................... 99 \n5.2.3. Electr\u00f3nica PLC  ....................................................................................... 99 \n5.2.4. Cuadro el\u00e9ctrico PLC  .............................................................................. 99 \n5.3. Presupuesto TOTAL  ...................................................................................... 100 \n6. CONCLUSIONES  .................................................................................................. 100 \n6.1. Futuros proyectos  .......................................................................................... 100 \n7. BIBLIOGRAF\u00cdA  ..................................................................................................... 101 \n7.1. Calibraci\u00f3n y envases de fruta ...................................................................... 101 \n7.2. Visi\u00f3n artificial  ................................................................................................ 101 \n7.3. Sistemas de iluminaci\u00f3n  ................................................................................ 102 \n7.4. Hardware  ....................................................................................................... 102 \n7.5. Software ........................................................................................................ 104 \n7.6. Sistemas de comunicaci\u00f3n ............................................................................ 104 \n8. ANEXOS  ............................................................................................................... 105 \n8.1. ANEXO 1: Esquemas el\u00e9ctricos  .................................................................... 105 \n8.2. ANEXO 2: Planos mec\u00e1nicos  ........................................................................ 105 \n8.2.1. Soportes c\u00e1maras  ................................................................................. 105 \nTRABAJO FINAL DE CARRERA  \n2 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n8.2.2. Soportes barras de LED  ........................................................................ 105 \n8.2.3. Estructura campana c\u00e1maras  ................................................................ 105 \n8.2.4. Conjunto campana c\u00e1maras  .................................................................. 105 \n8.2.5. Conjunto caja pantalla PLC A  ................................................................ 105 \n8.2.6. Conjunto caja pantalla PLC B  ................................................................ 105 \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \nTRABAJO FINAL DE CARRERA  \n3 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n1. INTRODUCCI\u00d3N  \n1.1. Antecedentes \nPocos somos conscientes de que el producto agroalimentario final que adquirimos en \nlos establecimientos, las fruter\u00edas, antes de que l legue a manos del consumidor final, \neste ha tenido que ser procesado a trav\u00e9s de diversas etapas cuyas actuales exigencias \ndel mercado requieren de altos est\u00e1ndares de calidad y productividad (alta producci\u00f3n a \nun muy bajo costo).  \n1.1.1. Cadena del tratamiento y proceso de la fruta \nEsta cadena de tratamiento y proceso de la fruta la podemos resumir de la siguiente \nmanera:  \n \n \n \n \n \n \n \n \n  \n \n  \n \n  \n \n \n  \n \n \n  \nCosecha del producto  \n \nRecolecci\u00f3n / Almacenamiento  \n \nCalibraci\u00f3n / Envase \n \nDistribuci\u00f3n  \n \nConsumidor final  FASE 1  \nFASE 2  \nFASE 3  \nFASE 4  \nFASE 5  \nTRABAJO FINAL DE CARRERA  \n4 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nLas cooperativas industriales que tratan y separan la fruta seg\u00fan su calibre (peso, color \ny di\u00e1metro), para poder competir en un mercado cada vez m\u00e1s exigente requieren de \nlos m\u00e1s adecuados m\u00e9todos para evitar quedarse atr\u00e1s y por lo tanto enfrentarse a \np\u00e9rdidas nocivas para el negocio. Hoy en d\u00eda la fruta se separa seg\u00fan su peso, color, \ndefecto (da\u00f1os visuales  externos) , di\u00e1metro e incluso por su contenido de az\u00facar, pero \npara poder procesar correctamente la fruta se requiere de un sistema altamente \nsofisticado cuya visi\u00f3n artificial ser\u00e1 objeto de este proyecto. \n1.2. Objeto  del proyecto  \nAs\u00ed pues, el objeto de este proyecto es el de dise\u00f1ar un sistema de visi\u00f3n artificial que permita diferenciar la fruta seg\u00fan su di\u00e1metro proporcionando a la l\u00ednea de producci\u00f3n \nlas siguientes ventajas competitivas: \n\u2022 Reducci\u00f3n de la mano de obra \n\u2022 Altas velocidades en el proceso de calibraci\u00f3n  \n\u2022 Fiabilidad (con un margen de error de +/- 1mm)  \nEl objeto de este proyecto es el de dise\u00f1ar un dispositivo que pueda trabajar de manera \nautom\u00e1tica sin la necesidad de la presencia humana, de modo que la industria gane en \nproducci\u00f3n y productividad adem\u00e1s de mejorar el est\u00e1ndar de calidad del producto final \ngracias a una adecuada manipulaci\u00f3n de la fruta y una reducci\u00f3n del error humano \ndurante la adquisici\u00f3n de las medidas realizadas. \n1.3. Especificaciones y abasto \nEl sector hortofrut\u00edcola, dependiendo del  tipo de fruta que se procese, requiere poder \nseleccionar la fruta seg\u00fan su di\u00e1metro m\u00ednimo, m\u00e1ximo y/o medio.  \nLas funciones espec\u00edficas que llevar\u00e1 a t\u00e9rmino la unidad de visi\u00f3n artificial dise\u00f1ada en \nel presente proyecto ser\u00e1n las de capturar im\u00e1genes de las frutas y hortalizas que \npasan por las citas de producci\u00f3n (hasta una velocidad m\u00e1xima de 7 piezas por \nsegundo), realizar los c\u00e1lculos necesarios para determinar el di\u00e1metro m\u00ednimo, m\u00e1ximo \ny medio, y enviar los valores resultantes al computador princi pal que activar\u00e1 las salidas \n(por electroim\u00e1n) que previamente haya configurado el operario de la m\u00e1quina.  \n \n \nTRABAJO FINAL DE CARRERA  \n5 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n2. VISI\u00d3N GLOBAL  \n2.1. Introducci\u00f3n \nTal y c\u00f3mo hemos visto en el apartado \u201c1.1.1. Cadena del tratamiento y proceso de la \nfruta\u201d, existen diversas fases cuyas funciones son las de gestionar las frutas y hortalizas \nde manera eficiente para que dichos productos lleguen al alcance del consumidor final \nsatisfactoriamente. \nComo hemos mencionado en el apartado de especificaciones y abasto, nosotros nos \ncentraremos en la FASE 3 (Calibraci\u00f3n y almacenamiento), aunque lo que en realidad a \nnosotros nos concierne es la calibraci\u00f3n de la fruta (en este caso, la calibraci\u00f3n de la \nfruta por di\u00e1metro).  \n2.1.1. Antecedentes en la calibraci\u00f3n de la fruta \nAnteriormente, las frutas y hor talizas se calibraban  manualmente utilizando diversos \ninstrumentos como los de las siguientes ilustraciones : \n \n \nIlustraci\u00f3n 1 \n \n \nIlustraci\u00f3n 2 \nSeg\u00fan el tipo de fruta y/o hortaliza que se desee pr ocesar y el embase a utilizar, las \npiezas se seleccionan por di\u00e1metro m\u00e1ximo, m\u00ednimo, o di\u00e1metro medio (ver siguiente \nilustraci\u00f3n):  \nTRABAJO FINAL DE CARRERA  \n6 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 3 \n Donde la medici\u00f3n A mide el di\u00e1metro m\u00e1ximo, y las figuras B y C miden el di\u00e1metro \nm\u00ednimo.  \n2.1.2. Calibraci\u00f3n por di\u00e1metro m\u00e1ximo \nUn claro ejemplo de calibraci\u00f3n por di\u00e1metro m\u00e1ximo lo podemos tener en alguna \nvariedad de mandarinas, ya que estas son de forma achatada y necesitamos que en el embase, estas piezas queden derechas vi\u00e9ndose solo la parte superior (ver siguiente \nilustraci\u00f3n).  \n \nIlustraci\u00f3n 4 \n2.1.3. Calibraci\u00f3n por di\u00e1metro m\u00ednimo \nSin embargo, para otros tipos de frutas y hortalizas con su embase utilizado para la \nsalida al mercado, se requiere la medici\u00f3n del di\u00e1metro m\u00ednimo, como en el ejemplo de \nlas dos siguientes ilustraciones:  \n \nIlustraci\u00f3n 5 Di\u00e1metro m\u00e1ximo  \nDi\u00e1metro m\u00ednimo  \nTRABAJO FINAL DE CARRERA  \n7 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 6 \n2.1.4. Calibraci\u00f3n por di\u00e1metro medio \nPor \u00faltimo, tambi\u00e9n se calibran las piezas, cuando estas son mucho mas redondas, \nutilizando el di\u00e1metro medio, por ejemplo con la naranjas de la siguiente ilustraci\u00f3n.  \n \nIlustraci\u00f3n 7 \n \n2.2. Proceso global calibraci\u00f3n \nTal y como hemos mencionado anteriormente, el proceso de calibraci\u00f3n se realizar\u00e1 a \ntrav\u00e9s de unas c\u00e1maras de visi\u00f3n artificial cuya instalaci\u00f3n se realizar\u00e1 en l\u00ednea con y \nde manera continua. En la siguiente ilustraci\u00f3n se puede apreciar la l\u00ednea global de \ncalibraci\u00f3n.  Di\u00e1metro medio  \nTRABAJO FINAL DE CARRERA  \n8 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 8 \n \nEn la siguiente tabla se describe cada una de las partes de l\u00ednea de calibraci\u00f3n.  \n \nPos. Descripci\u00f3n  Unidades  \n1 VOLCADOR DE BINS  1 \n2 VOLCADOR MANUAL CAJAS DE LLENAS  1 \n3 TRAMO RODILLOS  1 \n4 PLATAFOR MA ELEVADA  1 \n5 CINTA RETORNO DESTRIO  1 \n6 MESA DESTRIO  1 \n7 CEPILLAD ORA BYPASS  1 \n8 T\u00daNEL ENCERADO  1 \n9 TAPIZ M\u00daLTIPLE  1 \n10 T\u00daNEL SECADO  1 \n11 PRE-ALINEADOR  1 \n12 ALINEADOR  1 \n13 ROTACI\u00d3N ENTRADAS C\u00c1MARAS  1 \n14 VISI\u00d3N ARTIFICIAL  1 \n15 C\u00c9LULAS DE CARGA  1 \nTRABAJO FINAL DE CARRERA  \n9 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n16 MESAS DE CONFECCI\u00d3N  2 \n17 CALIBRADORA 2 LINEAS, 16+1 SALIDAS  1 \n18 TRANSPORTADOR SALIDA DE CAJAS LLENAS  2 \n19 TRAMO DE RODILLOS  2 \nTabla 1 \n \n(1) Volcador de bins:  \nEn la anterior ilustraci\u00f3n podemos comprender como la fruta llega desde las c\u00e1maras de \nrefrigeraci\u00f3n en el interior de unos  recipientes industriales conocidos con el nombre de \npalots (ver siguiente ilustraci\u00f3n)  \n \n \n  \nIlustraci\u00f3n 9 \n \nPosteriormente estos palots son volcados semiautom\u00e1ticamente de modo que las \npiezas entran en la l\u00ednea de calibraci\u00f3n.  \n(2) Volcador manual de cajas llenas:  \nEn ocasiones, en la misma l\u00ednea de producci\u00f3n se introducen las piezas manualmente \nen cajas convencionales. \n(3) Tramo de rodillos  y (6) Mesa de destr\u00edo:  \nEn la zona \u201ctramo de rodillos\u201d diversos operarios extraen de la l\u00ednea de calibraci\u00f3n aquellas piezas que visualmente se consideran da\u00f1adas (destr\u00edo de la fruta defectuosa) .  \n(4) Plataforma elevada:  \nPara efectuar el destr\u00edo de la fruta mencionado los operarios subir\u00e1n a plataformas especialmente dise\u00f1adas para evitar ac cidentes y soportar el peso necesario.  \n \n \n \nTRABAJO FINAL DE CARRERA  \n10 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(5) Cinta retorno destr\u00edo:  \nMediante una cinta transportadora, la fruta destriada por los operarios retornar\u00e1 a un \npalot vac\u00edo cuyo contenido ser\u00e1 enviado a plantas especializadas en el proceso y producci\u00f3n de zumos . \n(7) Cepilladora Bypass:  \nMediante unos cepillos de dureza especialmente dise\u00f1ada para no da\u00f1ar el g\u00e9nero limpiamos la fruta. \n(8) T\u00fanel encerado:  \nPosteriormente mediante unos aspersores y unos cepillos se aplica una capa de cera \nespecial y un pulido consiguiendo un brillo atractivo en la fruta para el consumidor final. \n(9) Tapiz m\u00faltiple:  \nA trav\u00e9s de un conjunto de tapices m\u00faltiples introducimos la fruta en el t\u00fanel de secado. \n(10) T\u00fanel de secado:  \nCon un sistema de ventiladores de alta presi\u00f3n y resistenci as t\u00e9rmicas, secamos la fruta \nantes de que esta sea calibrada (ver siguiente ilustraci\u00f3n).  \n \n \nIlustraci\u00f3n 10 \n \n(11) Pre-alineador  y (12) Alineador:  \nUn sistema de tapices funcionando a diversas velocidades se encargan de alinear  la \nfruta para que esta llegue individualmente a la zona de visi\u00f3n artificial sin general falsas \ncapturas de im \u00e1genes (ver siguiente ilustraci\u00f3n).  \nTRABAJO FINAL DE CARRERA  \n11 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 11 \n \n(13) Rotaci\u00f3n entrada c\u00e1maras:  \nPara conseguir captar im\u00e1genes en todo su per\u00edmetro, debe ir en un soporte que \npermita rotar las piezas mientras estas se desplazan horizontalmente. Para eso, hemos \ndise\u00f1ado un sistema de manos o \u201ccazoletas\u201d que mediante unos rodillos y unas cintas \ntransportadoras con velocidad lineal  ajustable mediante un variador de frecuencia \npermite la rotaci\u00f3n de la fruta y hortaliza requerida (ver siguiente ilustraci\u00f3n). \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n \nTRABAJO FINAL DE CARRERA  \n12 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n  \n \n  \nIlustraci\u00f3n 12 \n(14) Visi\u00f3n artificial:  \nEn el m\u00f3dulo de visi\u00f3n artificia l, alojaremos las c\u00e1maras y luces estrobosc\u00f3picas que \ncaptar\u00e1n las im\u00e1genes necesarias para realizar los c\u00e1lculos de di\u00e1metro mencionados  \n(ver siguiente ilustraci\u00f3n). \n \nIlustraci\u00f3n 13 \nTRABAJO FINAL DE CARRERA  \n13 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(15) C\u00e9lulas de carga:  \nOpcionalmente, en algunas l\u00edneas de calibraci\u00f3n, podemos incluir un m\u00f3dulo de c\u00e9lulas \nde carga para adquirir los pesos de las piezas. De esto modo podemos calibrar la fruta con di\u00e1metro, con peso, o con peso y di\u00e1metro.  \n \n(16) Mesas de confecci\u00f3n:  \nEn las mesas de confecci\u00f3n l os operarios reciben la fruta calibrada para que puedan \nembasarla manualmente en las cajas especialmente dise\u00f1adas para ello (ver siguiente ilustraci\u00f3n).  \n \nIlustraci\u00f3n 14 \n \n(17) Calibradora:  \nDespu\u00e9s de obtener los resultados de tama\u00f1os de las piezas, mediante una cadena, \nsistema de \u201ccazoletas\u201d (antes mencionado) y electroimanes, la calibradora expulsar\u00e1 la \nfruta a las mesas de confecci\u00f3n seleccionadas previamente por el operador en el PC de \nm\u00e1quina principal (ver siguientes ilus traciones ). \n \nTRABAJO FINAL DE CARRERA  \n14 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 15 \n \n \nIlustraci\u00f3n 16 \n \n(18) Transportador de cajas llenas  y (19) Tramo de rodillos:  \nFinalmente, las cajas confeccionadas de frutas con sus diversos tama\u00f1os calibrados , \nsalen a trav\u00e9s de un circuito de transportadores y tramos de rodillos donde un \u00faltimo \noperario los agrega a un palet para que cuando este se compl ete pueda ser \nalmacenado en c\u00e1maras de refrigeraci\u00f3n y/o maduraci\u00f3n o incluso enviarse a los \ncamiones para ser distribuido a sus correspondientes destinatarios.  \n C\u00e9lulas de carga  Cazoletas + cadena  \nElect roimanes  C\u00e9lulas de carga  \nTRABAJO FINAL DE CARRERA  \n15 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n  \nIlustraci\u00f3n 17 \n3. VISI\u00d3N ARTIFICIAL  \n3.1. Descripci\u00f3n \nEl sistema de visi\u00f3n artificial autom\u00e1tico de calibraci\u00f3n de fruta por di\u00e1metro debe \nejecutar las siguientes tareas: \n \n1. Adquisici\u00f3n de las im\u00e1genes en la l\u00ednea de producci\u00f3n (hardware)  \n2. Procesamiento de la im\u00e1genes (hardware / software)  \n3. Gesti\u00f3n de los resultados (hardware / software)  \n4. Comunicaci\u00f3n con la unidad principal calibradora (hardware / software)  \n As\u00ed pues, para la ejecuci\u00f3n de estas tareas, el proyecto requiere de un hardware y un \nsoftware que nos permita obtener \u00f3ptimos resultados.  \nEl objetivo del sistema de calibraci\u00f3n es poder trabajar con las siguientes \ncaracter\u00edsticas: \n\u2022 Velocidad de calibraci \u00f3n: 5 unidades /segundo  \n\u2022 Margen de error: +-1mm  \n\u2022 Di\u00e1metro m\u00e1ximo: 79mm  \n\u2022 Fruta a calibrar: ciruelas  y nectarinas  \n\u2022 N\u00famero de l\u00edneas de calibraci\u00f3n: 4 l\u00edneas  \n\u2022 \u00c1rea total de visi\u00f3n: 780 x 316mm  \n \nTRABAJO FINAL DE CARRERA  \n16 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n1 2\nSalida frutaLinea 1\nLinea 23.2. Hardware  \n3.2.1. Visi\u00f3n global \nEl m\u00f3dulo de visi\u00f3n artificial objeto del presente proyecto requiere del siguiente \nhardware: \n\u2022 C\u00e1maras y  \u00f3pticas  \n\u2022 Sistema de iluminaci\u00f3n  \n\u2022 Procesador industrial  \n\u2022 Sistema de comunicaci\u00f3n \nDe este modo, el hardware mencionado tendr\u00eda la siguiente configuraci\u00f3n en m\u00e1quina:  \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n  \n \n \n  \n \n \nIlustraci\u00f3n 18 21Electroim\u00e1n\nC\u00e1mara visi\u00f3n\nPanel led\nB\u00e1scula\nCuadro el\u00e9ctrico\nconjunto c\u00e1maras\nCuadro el\u00e9ctrico\nentradas y salidas\nConjunto PC\nConexiones\nTRABAJO FINAL DE CARRERA  \n17 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n3.2.2. C\u00e1maras y \u00f3pticas \nDebido a que necesitamos trabajar con fruta lo suficientemente oscura, necesitamos un \nsistema de visi\u00f3n artificial sofisticado que sea capaz de diferenciar las  piezas  cuyas \ncazoletas (sistema de manos que transporta la fruta en la l\u00ednea de producci\u00f3n) tambi\u00e9n \nson oscuras . \nActualmente, el m\u00e9todo utilizado para la detecci\u00f3n de di\u00e1metro de fruta oscura es \nutilizando cazoletas de color claro (azul cian  para obtener un mayor contraste) y \nc\u00e1maras de color convencionales. El gran inconveniente de esta metodolog\u00eda es que las \ncazoletas se ensucian y la suciedad provocaba que las c\u00e1maras obtengan lecturas \nerr\u00f3neas que derivan en falsos valores de di\u00e1metro.  \nA este inconveniente cabe a\u00f1adirle que las c\u00e1maras de color convencionales son \ndemasiado delicadas al cambio de intensidad de luz. Debemos tener en cuenta que \npara trabajar con color, antes es necesario hacer un mapa de colores y as\u00ed discriminar (por software) el entorno a la fruta (la zona de cazoletas). Sin embargo, debido al \ncambio de intensidad de luz, el mapa de colores se ve negativamente afectado de modo \nque las lecturas obtenidas tampoco disponen de la fiabilidad requerida en un proceso \nindustrial.  \nActualmente existe tecnolog\u00eda que nos permite obtener \u00f3ptimos resultados en fiabilidad \ny velocidad de operaci\u00f3n. As\u00ed es, el presente proyecto ofrece una ventaja competitiva  de gran envergadura frente a las actuales tecnolog\u00edas utilizadas debido a que este propone trabajar con c\u00e1maras que detectan m\u00e1rgenes de longitudes de onda propias \ndel infrarrojo IR. Gracias a la utilizaci\u00f3n de c\u00e1maras infrarrojo podemos constatar las \nsiguientes ventajas competitivas:  \n\u2022 M\u00e9todo mucho m\u00e1s sencillo para el operario (no debe hacer mapa de colores)  \n\u2022 Longitud de onda que per mite diferenciar la fruta de fondos oscuros  \n\u2022 Tecnolog\u00eda mucho m\u00e1s fiable (no es tan delicado al cambio de colores)  \n\u2022 Menor mantenimiento (no requiere calibraciones)  \n\u2022 Mayor velocidad y menos requerimientos de hardware (sin mapa de colores el \nsoftware es mas com pacto)  \nAs\u00ed pues, Debido a la buena relaci\u00f3n calidad \u2013  precio que requerimos para el proyecto, \nhemos elegido unas c\u00e1maras con las siguientes caracter\u00edsticas:  \n\u2022 C\u00e1maras GENIE de 1063x1024 pixel  \n\u2022 Monocromo (visi\u00f3n en infrarrojo IR)  \n\u2022 Conexi\u00f3n por TCP/IP  \nTRABAJO FINAL DE CARRERA  \n18 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n3.2.2.1 Resoluci\u00f3n de las c\u00e1maras \nPara obtener la resoluci\u00f3n se debe de dividir el \u00e1rea que se desea observar entre el \nn\u00famero de pixeles del sensor. En realidad la divisi\u00f3n ser\u00eda entre el ancho/alto del \u00e1rea a observar entre el ancho/alto correspondiente del tama\u00f1o del sens or. En este caso \nestamos utilizando que para los 316mm tenemos el lado del sensor que tiene \n1024pixeles, haciendo la divisi\u00f3n 316/1024 tendr\u00edamos una resoluci\u00f3n de \n0.308mm/pixel. Es muy arriesgado decir que tenemos esta resoluci\u00f3n, normalmente se \nmultiplic a este valor por 2.5 para asegurarnos y no tener fallos por ruido. Entonces \nestar\u00edamos diciendo que tenemos una resoluci\u00f3n precisa de 0.308x2.5 = 0.77mm/pixel . \n3.2.2.2 Tiempo de exposici\u00f3n de las c\u00e1maras \nPara el tiempo de exposici\u00f3n tenemos que para las c\u00e1maras matriciales con iluminaci\u00f3n normal o est\u00e1ndar (que no sea de alta potencia) se utiliza un tiempo de exposici\u00f3n entre \nel rango de 2ms a 10ms para obtener im\u00e1genes no saturadas. Normalmente siempre \ntomamos un valor intermedio de unos 5 \u00f3 6 ms para asegurar y c omenzamos a \nmodificar el iris de la lente para obtener el contraste que buscamos. Adem\u00e1s con este tiempo podemos asegurar que se tiene una imagen excelente aun cuando se tenga \nmovimiento en el producto, como lo ser\u00eda en este caso que se mueve la l\u00ednea de transporte.  \n3.2.2.3 Elecci\u00f3n de las \u00f3pticas \n \n \nDe esta f\u00f3rmula despejaremos la distancia al objeto, que es el valor que nos interesa. Tomando en cuenta que la distancia focal ser\u00e1 8 o 12mm (valores comerciales \nexistentes en el mercado), que el tama\u00f1o del sensor es de 4.7616mm (Tama\u00f1o del alto \ndel sensor) y el tama\u00f1o del objeto ser\u00eda de 316, tenemos los siguientes resultados: con \nla \u00f3ptica de 8mm se tendr\u00eda una altura en la c\u00e1mara de aproximadamente 530mm, \nmientras que con la \u00f3ptica de 12mm tendr\u00edamos una altura de 795mm \naproximadamente. Debemos de tomar en cuenta que entre mayor sea la distancia focal \nmenor ser\u00e1 la distorsi\u00f3n, pero la iluminaci\u00f3n ser\u00eda m\u00e1s tenue as\u00ed que debido a que en \nnuestra aplicaci\u00f3n la iluminaci\u00f3n es cr\u00edtica utilizaremos una lente con las siguie ntes \ncaracter\u00edsticas: \n \nTRABAJO FINAL DE CARRERA  \n19 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n\u2022 Goyo Optical Inc.  \n\u2022 \u00d3ptica de alta resoluci\u00f3n de 8mm  \n\u2022 Rango del iris de F1.4  \n\u2022 Rosca C 2/3\u201d con tornillos de fijaci\u00f3n  \n \nIlustraci\u00f3n 19 \n \n3.2.3. Sistema de iluminaci\u00f3n \nPara obtener buenos resultados en la adquisici\u00f3n de las im\u00e1genes, uno de los \npar\u00e1metros decisivos es la utilizaci\u00f3n de un buen sistema de iluminaci\u00f3n. Actualmente \nexisten dos sistemas de iluminaci\u00f3n en el mercado que nos ofrecen la longitud de onda \ndeseada en infrarrojo (850nm): iluminaci\u00f3n por fluoresce ntes con un filtro a\u00f1adido e \niluminaci\u00f3n por LED que ya emiten la longitud de onda IR deseada (sin la necesidad de \na\u00f1adir filtros). En el presente proyecto utilizaremos iluminaci\u00f3n LED porque a pesar de \nque esta es m\u00e1s costosa no requiere filtros externos (que se ensucian y requieren \nmantenimiento) y la luz emitida var\u00eda muy poco con las horas de funcionamiento de \nestas. Este \u00faltimo factor es decisivo para nuestra aplicaci\u00f3n debido a que los fluorescentes var\u00edan su emisi\u00f3n de luz con la temperatura u horas de funcionamiento \nprovocando que las c\u00e1maras se descalibren y afecten a la calidad de imagen adquirida. \n \n \n \n \n \n \n \nTRABAJO FINAL DE CARRERA  \n20 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nCaracter\u00edsticas de las luces:  \n\u2022 Barra de LEDs de 400x25mm  \n\u2022 LEDs de 5mm a 12Vdc  \n\u2022 Tensi\u00f3n de alimentaci\u00f3n: 12Vdc / 11,76W \n\u2022 M\u00e9todo de refrigeraci\u00f3n: di sipador de potencia  \n\u2022 \u00c1rea de iluminaci\u00f3n: 400x16mm2  \n\u2022 Dimensiones: 422x24x23 \n\u2022 Material: aleaci\u00f3n de aluminio \n\u2022 Temperatura de trabajo: -5 a 45\u00b0C  \n \n \nIlustraci\u00f3n 20 \n3.2.4. Sistema estrobosc\u00f3pico \nPara alimentar las luces LED requerimos de un m\u00f3dulo estrobosc\u00f3pico cuya funci\u00f3n es \nla de gestionar la intensidad de salida que alimenta las barras LED cuando recibe un \npulso de entrada providente directamente del detector fotoc\u00e9lula de paso de cazoletas. \nEsta tarea la realizaremos a trav\u00e9s del m\u00f3dulo estrobe comercial modelo PP520 del \nfabricante Gardasoft Vision Ltd (ver siguiente ilustraci\u00f3n).  \n \nIlustraci\u00f3n 21 \nTRABAJO FINAL DE CARRERA  \n21 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nEste m\u00f3dulo programable permite configurar el nivel de intensidad que queremos dar a \nlas barras LED (nivel de br illo del 0 al 150%), tiempo de cada pulso en milisegundos, y \nretardo en milisegundos (en nuestra aplicaci\u00f3n no requerimos retardo), (ver siguiente \nilustraci\u00f3n).  \n \nIlustraci\u00f3n 22 \nTRABAJO FINAL DE CARRERA  \n22 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n3.2.5. Procesador industrial \nEl procesador o PC que requerimos para nuestra aplicaci\u00f3n debe ser car\u00e1cter industrial \npara disponer de alta fiabilidad y utilizar un Windows XP embeded con las aplicaciones b\u00e1sicas que requiere el software de control y c\u00e1lculo de las c\u00e1maras. \nPor eso que hemos elegido el siguiente controlador: \n \n\u2022 Procesador Geva, 320GB HD, 2GB RAM  \n\u2022 2.4GHz Dual Core \n\u2022 Inputs: 8 + 2 triggers  \n\u2022 Outputs: 8 + 2 strobes  \n\u2022 Power: 12-30V  / Temp: 0-45\u00b0 C \n\u2022 Comm: GigE, RS232, USB (x2)  \n\u2022 Camera Ports: GigE x2  \n\u2022 Mount: DIN Rail  \n\u2022 Storage: 120GB  \n \n \nIlustraci\u00f3n 23 \n3.2.6. Sistema de comunicaci\u00f3n \nNuestro sistema, despu\u00e9s de adquirir las im\u00e1genes y realizar los c\u00e1lculos deseados, \ndebe enviar los datos a trav\u00e9s de un protocolo de comunicaci\u00f3n r\u00e1pido y fiable. De \ntodos los sistemas de comunicaci\u00f3n disponibles en el procesador industrial GEVA y el \nsoftware de control de las c\u00e1maras (SHERLOCK), el m\u00e1s \u00fatil para nuestra aplicaci\u00f3n es \nel TCP/IP, que a pesar de que no es un sistema muy fiable, nos permite trabajar a las \nvelocidades deseadas y en la programaci\u00f3n podemos  mejorar la fiabilidad al nivel que \nrequiere nuestra aplicaci\u00f3n.  \nTRABAJO FINAL DE CARRERA  \n23 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nLos datos ser\u00e1n enviados al computador principal de la m\u00e1quina calibradora que junto \ncon los datos de las b\u00e1sculas asignar\u00e1 la fruta calibrada a la salida previamente \nconfigurada por el opera rio de la m\u00e1quina.  \n \n \nIlustraci\u00f3n 24 \n \n3.2.7. Alojamiento de las c\u00e1maras \nPara evitar vibraciones, acceso de la suciedad a las \u00f3pticas (polvo), manipulaci\u00f3n \nindebida por parte de alg\u00fan operario, etc. debemos ubicar las c\u00e1maras en un habit\u00e1culo \ncerrado, resistente a los golpes externos y vibraciones, permitiendo un correcto ajuste y f\u00e1cil instalaci\u00f3n del sistema con una altura variable seg\u00fan las necesidades reales del \nt\u00e9cnico durante la instalaci\u00f3n de las c\u00e1maras. \n \n \n \n  \n \n \n \n \n \n \nTRABAJO FINAL DE CARRERA  \n24 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n \nIlustraci\u00f3n 25 \nTRABAJO FINAL DE CARRERA  \n25 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n3.3. Software  \nPara el control de las c\u00e1maras y adquisici\u00f3n de las im\u00e1genes utilizaremos un software \ncomercial llamado SHERLOCK (Sherlock V7.1.6.0) debido a que es un entorno de \nprogramaci\u00f3n que ofrece una amplia gama de herramientas de medici\u00f3n y \nprocesamiento de datos que requeriremos para nuestra aplicaci\u00f3n.  \nA trav\u00e9s del  software realizaremos los siguientes procedimientos:  \n1. Inicio del programa  \n2. Adquisici\u00f3n de im\u00e1genes  \n3. C\u00e1lculo de di\u00e1metros  \n4. Env\u00edo de los datos al PC de la calibradora \n3.3.1. C\u00f3digo del programa  \nAntes de ver y explicar el c\u00f3digo del programa vea la siguiente ilustraci\u00f3n: \n \n \nIlustraci\u00f3n 26 \nEl funcionamiento del sistema de visi\u00f3n se basa en realizar fotos cada vez que un sensor fotoc\u00e9lula detecta el paso de la \u201ccazoleta\u201d. En el momento en que se produce \ndicha detecci\u00f3n la c\u00e1mara, junto con la luz estrobosc\u00f3pica LED, realiza una captura y ejecuta una secuencia completa del programa enviando los resultados al PLC de la \ncalibradora. En este PC el programa principal hace una media de resultados de las 4 \nposiciones por donde ha recorrido la fruta. De este modo, gracias al sistema de rotaci\u00f3n \ny a la captura de las 4 posiciones podemos obtener \u00f3ptimos resultados debido a que captamos  los 360\u00b0 de la fruta. \nAs\u00ed pues, la estructura del programa queda del siguiente modo: \n \nTRABAJO FINAL DE CARRERA  \n26 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n \nNota: El bloque de programaci\u00f3n \u201cimgA\u201d gestiona las l\u00edneas 1 y 2 de la c\u00e1mara 1 y el \nbloque \u201cimgB\u201d gestiona las l\u00edneas 3 y 4 de la c\u00e1mara 2.  \n3.3.2. Inicio del program a \n \n Tal y como hemos mencionado, el programa se ejecuta completa cada vez que el \nsensor fotoc\u00e9lula detecta el paso de las cazoletas. En este caso, tenemos configurado \nuna entrada digital de la tarjeta f\u00edsica electr\u00f3nica de entradas y salidas (digital input 17). \n \n3.3.3. Adquisici\u00f3n de im\u00e1genes \nTal y como hemos mencionado anteriormente, cada detecci\u00f3n de paso de cazoletas \ntomamos y gestionamos 4 im\u00e1genes por cada l\u00ednea. 1. Inicio del programa  \n1. Adquisici\u00f3n de im\u00e1genes  \n2. C\u00e1lculo de di\u00e1metros  \n3. Env\u00edo de los datos al PC de la \ncalibradora  \nTRABAJO FINAL DE CARRERA  \n27 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n \n \n L\u00ednea 1 / posici\u00f3n 1  \nL\u00ednea 1 / posici\u00f3n 2  \nL\u00ednea 1 / posici\u00f3n 3  \nL\u00ednea 1 / posici\u00f3n 4  \nL\u00ednea 2 / posici\u00f3n 1  \nL\u00ednea 2 / posici\u00f3n 2  \nL\u00ednea 2 / posici\u00f3n 3  \nL\u00ednea 2 / posici\u00f3n 4  \n \nLa c\u00e1mara 2 leer\u00e1 las \nl\u00edneas 3 y 4, y esta est\u00e1 programada en el bloque \n\u201cimgB\u201d del mismo modo \nque el bloque \u201cimgA\u201d.  \nTRABAJO FINAL DE CARRERA  \n28 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n \nIlustraci\u00f3n 27 \n \nL\u00ednea X / Posici\u00f3n Y  \n L\u00ednea 1 / posic i\u00f3n 2  L\u00ednea 1 / posici\u00f3n 3  L\u00ednea 1 / posici\u00f3n 4  L\u00ednea 1 / posici\u00f3n 5  \nDelimitamos el \u00e1rea de visi\u00f3n \nde \u201cLinea X / Posici\u00f3n Y) y \neliminamos ruido (posibles \nmanchas y/o falsas peque\u00f1as \n\u00e1reas), generamos filtros \n(threshold)  \nDentro del \u00e1rea delimitada \ncomp robamos si detectamos \nun \u00e1rea (de una fruta) y si es \nas\u00ed buscamos su centro  \nTRABAJO FINAL DE CARRERA  \n29 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n \nIlustraci\u00f3n 28 \nSi el \u00e1rea encontrada es \nmayor que 1 entonces \nlanzamos una herramienta \nllamada \u201ccoordspoke\u201d con el \ncentro en el centro antes \nencontrado y calculamos el \ndi\u00e1metro m\u00e1ximo, m\u00ednimo y \nmedio \nCoordSpoke  \nTRABAJO FINAL DE CARRERA  \n30 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nEn la siguiente ilustraci\u00f3n podemos ver el resultado de las herramientas utilizadas en el \nc\u00f3digo del programa.  \n \nIlustraci\u00f3n 29 \nEn la s siguientes  ilustraci ones  podemos ver la fruta despu\u00e9s de aplicar los respectivos \nfiltros aplicados en la herramienta de \u201cthreshold\u201d. \n \n \nIlustraci\u00f3n 30 \n \nTRABAJO FINAL DE CARRERA  \n31 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \nIlustraci\u00f3n 31 \n \n \n \n \n \n \n \n \n3.3.4. Env\u00edo de los datos al PC  de la calibradora  \nComo ya hemos descrito anteriormente, cada detecci\u00f3n de paso de cazoleta realizamos \nla captura y sus respectivos c\u00e1lculos de 16 im\u00e1genes (4 posiciones x 4 l\u00edneas). Por lo \ntanto necesitaremos enviar una secuencia en formato \u201cString\u201d que contenga 16 x 3 = 48 \nresultados (Di\u00e1metro M\u00e1ximo, Di\u00e1metro M\u00ednimo y Di\u00e1metro Medio de cada posici\u00f3n). \nPara realizar esta funci\u00f3n convertiremos los resultados de \u201cInteger\u201d a \u201cString\u201d, los sumaremos a una \u00fanica secuencia de \u201cString\u201d y por \u00faltimo enviaremos este \u00fanico \n\u201cString\u201d a trav\u00e9s de comunicaci\u00f3n Ethernet teniendo configurado el PC de las c\u00e1maras \ncomo \u201cserver\u201d y el PC de la calibradora como \u201cClient\u201d. \n  \n \nTRABAJO FINAL DE CARRERA  \n32 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n \n \n Convertimos las variables de \ndi\u00e1metros calculados a formato \n\u201cString\u201d \nGeneramos la secuencia: \nDi\u00e1metro Medio L\u00ednea 1 \nPosici\u00f3n 1 + Di\u00e1metro M\u00e1ximo L\u00ednea 1 Posici\u00f3n 1 + Di\u00e1metro \nM\u00ednimo L\u00ednea 1 Posici\u00f3n 1 \nEjecutamos la misma \nsecuencia con l a l\u00ednea 2  \nSumamos en la secuencia \nel \u201cString\u201d de la l\u00ednea 1 con \nel \u201cString\u201d de la l\u00ednea 2 y el \nresultado se almacena en el \n\u201cString\u201d de la l\u00ednea 2  \nL\u00ednea 2 + L\u00ednea 3 y \nel \u201cString\u201d de la l\u00ednea 3 almacena en esta \nposici\u00f3n todos los \nresultados \n \nTRABAJO FINAL DE CARRERA  \n33 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n \n \n \nIlustrac i\u00f3n 32 \n  \n \n \n Finalmente conseguimos todos \nlos resultados en el \u201cString\u201d 16 y \nlo enviamos a trav\u00e9s de la \ncomunicaci\u00f3n Ethernet \nTRABAJO FINAL DE CARRERA  \n34 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n3.3.5. Resumen de programaci\u00f3n \nComo la imagen que tenemos es en blanco y negro (visi\u00f3n monocromo infrarroja IR), \nprimero aplico una serie de filtros para resaltar solamente los di\u00e1metros que nos interesan y eliminar ruido que recibamos de la l\u00ednea de producci\u00f3n. Ya teniendo una \nimagen con los di\u00e1metros definidos se procede a realizar la b\u00fasqueda de los conjuntos \nde pixeles y sacar las medidas que nos interesan, \u00e1rea, tama\u00f1o de elipse mayor y \ncoordenadas en el \u00e1rea de inter \u00e9s para identificarlos.  \nComo se puede observar el software nos entrega todos estos valores y solo nos hace falta pasar estos valores a Strings y enviar toda la secuencia de resultados al ordenador \nprincipal de la calibradora que junto con los par\u00e1metros c onfigurados por pantalla por el \noperador, la calibradora asignar\u00e1 la fruta a la salida requerida. \nEl dato que nos interesa es que toda la secuencia del programa se ejecuta en un tiempo \nde procesamiento de 36ms, hay que tomar en cuenta que el equipo donde s e ha \nrealizado esta prueba tiene un procesador de un solo n\u00facleo y el equipo que se incluye \nen este proyecto (procesador GEVA descrito en el apartado 3.1.3.) es de doble n\u00facleo \nde 2.4GHz y 2Gb de memoria RAM.  \nConsiderando que necesitamos trabajar a  una velocidad de 5 unidades por segundo, \ntenemos lo siguiente:  \n \n \n \n\u2022 Vcalib.: Velocidad de procesamiento de datos del ordenador principal de la \ncalibradora  \nDe este modo se confirma que no tendremos inconvenientes de velocidad para la \ngesti\u00f3n de las im\u00e1genes a la v elocidad m\u00e1xima de calibraci\u00f3n. \n3.3.6. Calibraci\u00f3n de las c\u00e1maras \nPara la realizaci\u00f3n de la correcta medici\u00f3n necesitamos calibrar las c\u00e1maras de modo \nque estas sepan convertir las distancias que visualizan en unidades m\u00e9tricas (mm). \nPara ello, necesitamos dise\u00f1ar una plantilla que abarque toda el \u00e1rea de visi\u00f3n de cada \nuna de las l\u00edneas (ver siguiente ilustraci\u00f3n) y la situemos bajo la c\u00e1mara para realizar la \ncalibraci\u00f3n.  \n \n \nTRABAJO FINAL DE CARRERA  \n35 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 33 \nEn nuestra aplicaci\u00f3n, el entorno de programaci\u00f3n Sherlock dispone de una funci\u00f3n de \ncalibraci\u00f3n de modo que solo debemos indicar el tama\u00f1o de las cuadr\u00edculas (19,3mm) y \nel software realiza una auto calibraci\u00f3n.  \n \nIlustraci\u00f3n 34 \n \nTRABAJO FINAL DE CARRERA  \n36 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nDicha calibraci\u00f3n debemos realizarla c uando las c\u00e1maras sean f\u00edsicamente instaladas y \nfijadas en la m\u00e1quina y solo ser\u00e1 necesario realizar otra calibraci\u00f3n en el caso en que \nestas se hayan movido. \n4. CALIBRADORA  \n4.1. Descripci\u00f3n \nSi nos fijamos en la siguiente ilustraci\u00f3n, la unidad de calibraci\u00f3n dispone de una etapa \nde alimentaci\u00f3n de la fruta (m\u00f3dulos 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 y 12), etapa de visi\u00f3n \nartificial (m\u00f3dulos 13 y 14), etapa de calibraci\u00f3n (m\u00f3dulos 15 y 17) y por \u00faltimo la etapa \nde salida y clasificaci\u00f3n (m\u00f3dulos 16, 18 y 19). \n \nIlustraci\u00f3n 35 \nEn este apartado describiremos la etapa de calibraci\u00f3n, cuya funci\u00f3n es la de recibir los \ndatos del m\u00f3dulo de visi\u00f3n artificial, procesarlos y por \u00faltimo clasificar las piezas seg\u00fan \nlos resultados. \nCabe mencionar que el punto que m\u00e1s nos interesa es la recepci\u00f3n de los datos del \nm\u00f3dulo de visi\u00f3n artificial, el procesamiento de estos y por \u00faltimo el c\u00e1lculo de la salida \nasignada, es por este motivo que ser\u00e1 donde dedicaremos gran parte del contenido del \npresente proy ecto. \n \nTRABAJO FINAL DE CARRERA  \n37 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n1 2\nSalida frutaLinea 1\nLinea 24.2. Hardware  \n4.2.1. Visi\u00f3n global \nSi recordamos en los anteriores apartados, la distribuci\u00f3n del hardware de la calibradora \nresulta del siguiente modo: \n \n \n \n \n  \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nIlustraci\u00f3n 34  \n \n 21Electroim\u00e1n\nC\u00e1mara visi\u00f3n\nPanel led\nB\u00e1scula\nCuadro el\u00e9ctrico\nconjunto c\u00e1maras\nCuadro el\u00e9ctrico\nentradas y salidas\nConjunto PC\nConexiones\nTRABAJO FINAL DE CARRERA  \n38 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nElectroimanes:  \nMediante unos electroimanes de 24Vdc activados directamente de la salida del PLC \nconseguimos volcar las \u201ccazoletas\u201d de modo que la fruta sale a las mesas de confecci\u00f3n a trav\u00e9s de unos tapices inferiores.  \n \nIlustraci\u00f3n 36 \nTal y como podemos apreciar en la presente ilustrac i\u00f3n, la bobina de 24Vdc es excitada \na trav\u00e9s del m\u00f3dulo de salidas del PLC y esta levanta la palanca naranja que vuelca las \ncazoletas que contienen la fruta que requerimos expulsar por esa salida. \nB\u00e1sculas : \nA pesar de que el sistema propuesto en el presente proyecto basa su funcionamiento en \nla visi\u00f3n artificial, opcionalmente la calibradora dispone de dos m\u00f3dulos de c\u00e9lulas de \ncarga por cada l\u00ednea (uno a cada costado del paso de la cazoleta) , cuya medi a entre \nambas es la que nos resulta el peso din\u00e1mico total de cada fruta (ver siguientes ilustraciones) . \n \n \n \nIlustraci\u00f3n 37 \n \n \n \n \n \nTRABAJO FINAL DE CARRERA  \n39 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nCuadro el\u00e9ctrico c\u00e1maras:  \nEl cuadro el\u00e9ctrico de las c\u00e1maras aloja el m\u00f3dulo estrobe que alimenta las luces LED \ngenerando pulsos cada vez que recibe l a se\u00f1al de la fotoc\u00e9lula que detecta el paso de \ncada cazoleta. Este tambi\u00e9n alimenta las c\u00e1maras y la alimentaci\u00f3n de 24Vdc la recibe \ndel cuadro el \u00e9ctrico general. \nCuadro el\u00e9ctrico entradas y salidas  \nEste cuadro el\u00e9ctrico aloja los m\u00f3dulos de entradas y salidas del PLC que interact\u00faan \nentre los elementos expuestos en la m\u00e1quina calibradora y el procesador industrial PLC. \nDebido a la necesidad de utilizar electr\u00f3nica flexible, de alta gama, robusta, que trabaje \na altas velocidades y que permita un elevado ni vel de programaci\u00f3n, he elegido la \nelectr\u00f3nica  que ofrece el fabricante de PLC\u2019s, \u201cBernecker and Rainer, B&R\u201d  \n1. M\u00f3dulo de comunicaci\u00f3n X2X: \nPara la comunicaci\u00f3n entre los m\u00f3dulos de entradas y salidas y el PLC, requerimos de \nun m\u00f3dulo de comunicaci\u00f3n propia de B&R (comunicaci\u00f3n X2X , RS232). Este m\u00f3dulo \nes el  \u201cX20 PS 9400\u201d (ver siguiente ilustraci\u00f3n).  \n \n  \n \nIlustraci\u00f3n 38 \n \n2. M\u00f3dulos de entradas digitales:  \nPara la lectura de las fotoc\u00e9lulas de detecci\u00f3n de paso de cazoleta utilizamos un \nm\u00f3dulo de 4 entradas digitales \u201cX20 DI 4371\u201d (ver siguientes ilustraciones). \nTRABAJO FINAL DE CARRERA  \n40 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n  \nIlustraci\u00f3n 39 \n \n3. M\u00f3dulos de salidas anal\u00f3gicas:  \nMediante los m\u00f3dulos de salidas anal\u00f3gicas obtendremos una se\u00f1al de 4-20mA que \nutilizaremos para el control de los variadores de frecuencia \u201cAltivar 31\u201d de la marca \nTelemecanique (se\u00f1al de entrada entre \u201cCOM\u201d y \u201cAI3\u201d) . Estos variadores de frecuencia \nser\u00e1n los que controlen las velocidades de la calibradora, tramos de rodillos, \ncepilladora, alineador, pre-alineador, etc. mencionados en el apartado \u201c2.2. Proceso \nglobal calibraci\u00f3n\u201d. El m\u00f3dulo de salida anal\u00f3gica es el \u201cX20 AO 4022\u201d  (ver siguientes \nilustraciones). \n \n \nIlustraci\u00f3n 40 \nTRABAJO FINAL DE CARRERA  \n41 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 41 \n \n4. M\u00f3dulos de entradas anal\u00f3gicas:  \nB&R dispone de unos m\u00f3dulos especialmente dise\u00f1ados para la lectura de c\u00e9lulas de \ncarga ideal para nuestra aplicaci\u00f3n en la conexi\u00f3n de las b\u00e1sculas mencionadas \nanteriormente. Cada m\u00f3dulo permite la conexi\u00f3n de dos c\u00e9lulas de carga que por software podemos configurar que el resultado obtenido sea la media de la lectura de \nambas entradas. \nEl m\u00f3dulo mencionado es el \u201cX20 AI 1744\u201d (ver siguientes ilustraciones).  \n \n  \nIlustraci\u00f3n 42 \n \n5. M\u00f3dulo de alimentaci\u00f3n: \nDebido al consumo de los electroimanes, requerimos del empleo de unos m\u00f3dulos \ndise\u00f1ados por B&R que proporcionan m\u00e1s capacidad de carga (mA) en la salidas \ndigitales. Este m\u00f3dulo es el \u201cX20 PS 2100\u201d (ver siguiente ilustraci\u00f3n)  \n \nTRABAJO FINAL DE CARRERA  \n42 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n  \nIlustraci\u00f3n 43 \n \n6. M\u00f3dulos de salidas digitales:  \nLos m\u00f3dulos de salidas digitales nos proporcionar\u00e1n la alimentaci\u00f3n de 24Vdc de los \nelectroimanes para la activaci\u00f3n de estos en la salida deseada de la fruta. El m\u00f3dulo \nque utilizaremos es el \u201cX20 DO 8332\u201d (ver siguientes ilustraciones). \n \n  \nIlustraci\u00f3n 44 \n \n7. Otros elementos:  \nEl cuadro el\u00e9ctrico de entradas y salidas tambi\u00e9n dispondr\u00e1 de una Fuente de \nalimentaci\u00f3n de 24Vdc que alimentar\u00e1 la electr\u00f3nica de toda la calibradora (PLC, \niluminaci\u00f3n y c\u00e1maras, m\u00f3dulos de entradas y salidas, etc.), magnetot\u00e9rmicos, bornes \nde conexi\u00f3n, etc.  \nTRABAJO FINAL DE CARRERA  \n43 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n8. Configuraci\u00f3n de los m\u00f3dulos de entrada y salida de PLC  \nSeg\u00fan lo expuesto anteriormente, los m\u00f3dulos de entradas y salidas quedar \u00edan \ninstalados con la siguiente configuraci\u00f3n (ver Anexo 1, esquemas el\u00e9ctricos)  \n \n \nIlustraci\u00f3n 45 \n \nIlustraci\u00f3n 46 \n4.2.2. Distribuci\u00f3n del hardware \nAs\u00ed pues, la distribuci\u00f3n del hardware mencionado en el presente apartado, quedar\u00eda \ncomo la siguiente ilustraci\u00f3n (ver tambi\u00e9n esquemas el\u00e9ctricos del Anexo 1). \n \nTRABAJO FINAL DE CARRERA  \n44 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 47 \nTRABAJO FINAL DE CARRERA  \n45 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n4.2.3. Procesador Industrial \nTal y c\u00f3mo hemos mencionado utilizaremos la electr\u00f3n ica de Bernecker and Rainer \nB&R que nos ofrece las caracter\u00edsticas que necesitamos en nuestra aplicaci\u00f3n. En el \ncaso del procesador industrial he elegido el Power Panel PP4 20 (4PP420.1043-75) que \nadem\u00e1s de CPU tambi\u00e9n dispone de una pantalla t\u00e1ctil de 10 pulgadas TFT cuya  \nfunci\u00f3n es la de permitir que el operario interact\u00fae con la m\u00e1quina.  \n \n Caracter\u00edsticas t\u00e9cnicas:  \n\u2022 N\u00famero de serie: 4PP4 20.1043-75 \n\u2022 Power Panel 420 10 \" XGA TFT \ndisplay con pantalla t\u00e1ctil (resistiva)  \n\u2022 Resoluci\u00f3n: XGA, 1024 x 768 pixels  \n\u2022 Conexiones para 1x RS232, 3x U SB \n2.0, 1x Ethernet 10/100/1000 \n\u2022 Protecci\u00f3n IP65 (en la parte frontal)  \n\u2022 Alimentaci\u00f3n: 24 VDC \u00b125%, 1A \n(31W)  \n\u2022 Mem\u00f3ria R AM: DDR2 SDRAM 2GB  \n\u2022 Mem\u00f3ria de programa: tarjeta SD  \n \nIlustraci\u00f3n 48 \n Para el montaje de la pantalla he mos dise\u00f1ado una caja mec\u00e1nica gui\u00e1ndome por las \nmedidas de la pantalla y la inclinaci\u00f3n necesaria facilitada por el fabr icante para la \ncorrecta visualizaci\u00f3n de esta  \n(Ver siguientes ilustraciones). \nTRABAJO FINAL DE CARRERA  \n46 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 49 \n \n \nIlustraci\u00f3n 50 15\u00b0 35\u00b0 \n40\u00b0 \n50\u00b0 \nTRABAJO FINAL DE CARRERA  \n47 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n4.3. Software  \n4.3.1. Configuraci\u00f3n del Hardware  \nTal y como hemos expuesto en el apartado \u201c4.2. Hardware\u201d la electr\u00f3nica de B&R \ndispone de una pantalla t\u00e1ctil con CPU incorporada que se comunica por X2X a trav\u00e9s \nde una tarjeta de comunicaci\u00f3n \u201c 3IF789.9-1 \u201d a una cabecera \u201cX20 PS21 00\u201d que a su vez \nse encuentra conectada a todos los m\u00f3dulos de entrad as y salidas del PLC (ver \nsiguiente ilustraci\u00f3n).  \n \nIlustraci\u00f3n 51 \n \nTRABAJO FINAL DE CARRERA  \n48 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n4.3.2. M\u00f3dulos de programaci\u00f3n \nEl programa dispone de los siguientes bloques de programaci\u00f3n que vamos a detallar a \ncontinuaci\u00f3n: \n \nIlustraci\u00f3n 52 \n4.3.3. Bloque P antalla \nEl m\u00f3dulo de pantalla es utilizado para programar la configuraci\u00f3n de la pantalla t\u00e1ctil \nseg\u00fan los par\u00e1metros introducidos por el t\u00e9cnico que configura la calibradora durante la \ninstalaci\u00f3n (ver comentarios introducidos durante la programaci\u00f3n resaltado en \namarillo).  \n(********************************************************************  \n * COPYRIGHT --    \n ********************************************************************  \n * Program: Pantalla \n * File: PantallaCyclic.st \n * Author : Erico Cruz  \n * Created: February 23, 2010  \n ********************************************************************  \n * Implementation of program Pantalla \n ********************************************************************)  \nTRABAJO FINAL DE CARRERA  \n49 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nPROGRAM _CYCLIC  \n(*--------------- --------------------------- Escoger pantalla para configurar electroimanes ---------------------------------------*)   \n IF (Pantalla_Actual=200 OR Pantalla_Actual=202 OR Pantalla_Actual=203 OR Pantalla_Actual=204 OR \nPantalla_Actual=205 OR Pantalla_Actual=206 OR Pantalla_Actual=207 OR Pantalla_Actual=208) THEN \n   Cambiar_Pantalla:=Pantalla_Config_Electroimanes; \n  END_IF  \n IF Config_Numero_Lineas=1 THEN  \n  Pantalla_Select_Conf_Electroiman[1]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[1]:=1; \n END_IF  \n IF Config_Numero_Lineas=2 THEN  \n  Pantalla_Select_Conf_Electroiman[2]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[2]:=1; \n END_IF  \n IF Config_Numero_Lineas=3 THEN    Pantalla_Select_Conf_Electroiman[3]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[3]:=1; \n END_IF  \n IF Config_Numero_Lineas=4 THEN    Pantalla_Select_Conf_Electroiman[4]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[4]:=1; \n END_IF  \n IF Config_Numero_Lineas=5 THEN  \n  Pantalla_Select_Conf_Electroiman[5]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[5]:=1; \n END_IF  \n IF Config_Numero_Lineas=6 THEN  \n  Pantalla_Select_Conf_Electroiman[6]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[6]:=1; \n END_IF  \n IF Config_Numero_Lineas=7 THEN    Pantalla_Select_Conf_Electroiman[7]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[7]:=1; \n END_IF  \n IF Config_Numero_Lineas=8 THEN  \n  Pantalla_Select_Conf_Electroiman[8]:=0; \n ELSE \n  Pantalla_Select_Conf_Electroiman[8]:=1; \n END_IF  \n  \n \nTRABAJO FINAL DE CARRERA  \n50 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(*------------------------------------ Pantallas emergentes avisos calibraci\u00f3n b\u00e1sculas --------------------------------------*)  \n IF EDGEPOS (Config_Reset_Basculas) THEN \n  Pantalla_Emergente_basc_Reset:=0; \n ELSIF EDGEPOS (gControl.User.Reset) THEN  \n  Pantalla_Emergente_basc_Reset:=1; \n END_IF  \n  \n IF EDGEPOS(Config_Cero_Basculas) THEN  \n  Pantalla_Emergente_vel_trabajo:=0; \n END_IF  \n (*------------------------------------------ Guardar y leer memoria de las diferentes variedades ------ ---------------------*)  \n  IF EDGEPOS(Button_Variedad_UP) THEN  \n    Numero_Variedad:=Numero_Variedad+1;  \n ELSIF EDGEPOS(Button_Variedad_DOWN) THEN \n     Numero_Variedad:=Numero_Variedad- 1; \n END_IF  \n  \n //Leer la variedad de la memoria  \n IF (Button_Leer_Variedad=TRUE OR EDGEPOS(Button_Variedad_UP) OR EDGEPOS(Button_Variedad_DOWN)) THEN  \n  Variedad_de_la_Fruta_Lectura:=Variedad_de_la_Fruta_Memoria[Numero_V ariedad];    \n    END_IF  \n  //Guardar la variedad en la memoria \n IF Button_Guardar_Variedad=TRUE THEN  \n  Variedad_de_la_Fruta_Memoria[Numero_Variedad]:=Variedad_de_la_Fruta_Lectura; \n Pantalla_Emerg_Guardar_Variedad:=1; \n    END_IF  \n (*-------------------------- ---------------- Guardar y leer memoria de los diferentes grados ----------------------------------------*)  \n IF (EDGEPOS(Button_Grado_UP)) THEN  \n    Numero_Grado:=Numero_Grado+1; \n ELSIF (EDGEPOS(Button_Grado_DOWN)) THEN  \n     Numero_Grado:=Numero_Grado- 1; \n    END_IF  \n   \n IF (Button_Leer_Grado=TRUE OR EDGEPOS(Button_Grado_UP) OR EDGEPOS(Button_Grado_DOWN)) THEN  \n  Grado_de_la_Fruta_Lectura:=Grado_de_la_Fruta_Memoria[Numero_Grado];  \n    END_IF  \n   IF Button_Guardar_Grado=TRUE THEN  \n  Grado_de_la_Fruta_Memoria[Numero_Grado]:=Grado_de_la_Fruta_Lectura;  \n Pantalla_Emerg_Guardar_Grado:=1; \n    END_IF  \n(*------------------------------------------------ CONTROL CONTRASE\u00d1AS ---------------------------------------- --------------------------*)  \n// Button_Mantenimiento, Button_Cancelar_Password y Pantalla_Emergente_Password se utilizan en las pantallas del \noperario  \n IF EDGEPOS(Button_Mantenimiento) AND Nivel_Password_Actual>=1 THEN  \n  Cambiar_Pantalla:=300;  \n ELSIF EDGEPOS(Button_Mantenimiento) AND Nivel_Password_Actual=0 THEN  \n  Pantalla_Emergente_Password:=0; \nTRABAJO FINAL DE CARRERA  \n51 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n ELSIF EDGEPOS(Button_Mantenimiento_Avanzado) THEN  \n Pantalla_Emergente_Password_2:=0; \n END_IF   \n// Button_Mantenimiento_Avanzado, Button_Cancelar_Password_2 y Pantalla_Emergente_Password_2 se utilizan en las \npantallas de configur aci\u00f3n  \n IF EDGEPOS(Button_Cancelar_Password) THEN \n  Nivel_Password_Actual:=0; \n Pantalla_Emergente_Password:=1; \n ELSIF EDGEPOS(Button_Cancelar_Password_2) THEN  \n  Nivel_Password_Actual:=0; \n Pantalla_Emergente_Password_2:=1; \n  END_IF  \n// Temporizador para pone r el nivel del Password a cero  \n IF Nivel_Password_Actual > 0 THEN \n  Password_Activado:=TRUE;  \n END_IF  \n IF EDGEPOS(Timer_Password.Q) THEN  \n  Nivel_Password_Actual:=0; \n Password_Activado:=FALSE;  \n    END_IF  \n IF Config_Tiempo_Password < 20000 THEN  \n  Config_Tiempo_Password := 20000; \n END_IF  \n  Timer_Password(IN := Password_Activado, PT := UDINT_TO_TIME(Config_Tiempo_Password));  \n  \n (*---------------------------------------- MEMORIZAR LOS DATOS DEL AGRICULTOR --------------------------------------------------*)  \n IF EDGEPOS(Button_Agricultor_UP) THEN  \n Numero_Agricultor:=Numero_Agricultor+1; \n Leer_Agricultor:=TRUE;  \n ELSIF EDGEPOS(Button_Agricultor_DOWN) THEN \n  Numero_Agricultor:=Numero_Agricultor -1; \n Leer_Agricultor:=TRUE;  \n ELSIF EDGEPOS(Button_Leer_Agricultor) THEN  \n Leer_Agricultor:=TRUE;  \n END_IF  \n   IF EDGEPOS(Button_Guardar_Agricultor) THEN  \n Pantalla_Emerg_Guarda_Agricultor :=1;  \n Guardar_Agricultor:=TRUE;  \n END_IF  \n (*----------------------------------------- GUARDAR LOS DATOS DEL AGRICULTOR --------- ------------------------------------------- *) \n IF Guardar_Agricultor=TRUE THEN \n   \n Datos_Agricultor[Numero_Agricultor].Nombre_del_Agricultor := Estadisticas_por_Calibre.Nombre_Agricultor; \n Datos_Agricultor[Numero_Agricultor].Finca                 := Estadisticas_por_Calibre. Nombre_Finca;  \n Datos_Agricultor[Numero_Agricultor].Variedad_de_la_Fruta  := Estadisticas_por_Calibre.Nombre_Variedad;  \n Datos_Agricultor[Numero_Agricultor].Modo_de_Calibracion   := \nEstadisticas_por_Calibre.Modo_de_Calibracion;   \nTRABAJO FINAL DE CARRERA  \n52 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Pantalla_Emerg_Guarda_Agric ultor:=1;  \n Guardar_Agricultor:=FALSE;  \n END_IF  \n (*----------------------------------------- LEER LOS DATOS DEL AGRICULTOR ------------------------------------------------------------*)  \n IF Leer_Agricultor=TRUE THEN  \n   \n Estadisticas_por_Calibre.Nombre_Agricultor   := Datos_Agricultor[Numero_Agricultor].Nombre_del_Agricultor; \n Estadisticas_por_Calibre.Nombre_Finca        := Datos_Agricultor[Numero_Agricultor].Finca;  \n Estadisticas_por_Calibre.Nombre_Variedad     := Datos_Agricultor[Numero_Agricultor].Variedad_ de_la_Fruta;  \n Estadisticas_por_Calibre.Modo_de_Calibracion := Datos_Agricultor[Numero_Agricultor].Modo_de_Calibracion; \n Leer_Agricultor:=FALSE; \n END_IF  \nEND_PROGRAM  \n4.3.4. Clock 1 segundo \nCon este m\u00f3dulo generamos pulsaciones en un bit con un periodo de 1 segundo para \nutilizarlo en numerosas ocasiones en la implementaci\u00f3n de todo el programa. Para ello \nrequeriremos programar este m\u00f3dulo para que se ejecute cada 1000ms (1 segundo).  \n \nIlustraci\u00f3n 53 \n \n \n \n \n \nTRABAJO FINAL DE CARRERA  \n53 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(********************************************************************  \n * COPYRIGHT --    \n ********************************************************************  \n * Program: Clock_1seg \n * File: Clock_1segCyclic.st \n * Author: Erico Cruz  \n * Created: February 23, 2010  \n ********************************************************************  \n * Implementation of program Clock_1seg \n ********************************************************************)  \n(*--------------------------- GENERAMOS LOS PULSOS CADA VEZ QUE SE EJECUTA EL PROGRAMA---------------- ------*)  \nPROGRAM _CYCLIC  \nClock_1seg := NOT Clock_1seg;  \nEND_PROGRAM  \n4.3.5. C\u00e1lculo c\u00e1maras \nEste es uno de los m\u00f3dulos m\u00e1s importantes que requerimos para nuestra aplicaci\u00f3n \ndebido a que este m\u00f3dulo, con los datos recibidos de la CPU de las c\u00e1maras, cada vez \nque reciba los pulsos de detecci\u00f3n de paso de cazoleta (a trav\u00e9s de las fotoc\u00e9lulas) \nrealizar\u00e1 los c\u00e1lculos necesarios para asignarle a la fruta la salida seg\u00fan lo configurado \npor el operario en la pantalla t\u00e1ctil.  \n(********************************************************************  \n * COPYRIGHT --  Bernecker + Rainer  \n ********************************************************************  \n * Program: Caluculo_Camaras  \n * File: Caluculo_Camaras.st  \n * Author: Erico Cruz  \n * Created: March 12, 2010  \n ********************************************************************  \n * Implementation of program Caluculo_Camaras  \n ********************************************************************)  \nPROGRAM _INIT  \n(*------------------------------------------ INICIALIZAMOS LAS VARIABLES --- --------------------------------------*)  \n  FOR j:=1 TO (Config_Numero_Lineas) DO  \n     contador_posicion_1[j]:=1; \n   contador_posicion_2[j]:=1; \n   contador_posicion_3[j]:=1; \n   contador_posicion_4[j]:=1; \n  END_FOR  \nEND_PROGRAM  \n \nPROGRAM _CYCLIC  \n(*--------- EJ ECUTAMOS CUANDO RECIBIMOS SE\u00d1AL DE DETECCIC\u00d3N DE PASO DE CAZOLETA ---------------------*)  \nIF EDGEPOS(gControl.User.WeighPerformed) THEN \n  \n \nTRABAJO FINAL DE CARRERA  \n54 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(* ----------------------------------- C\u00c1LCULO C\u00c1MARAS LINEA 1- 4 ------------------------------------------------------------------------ *)    \n  IF (Pantalla_Layaut.Modo_de_Calibracion=3 OR Pantalla_Layaut.Modo_de_Calibracion=6) THEN // Calibramos con \ndi\u00e1metro  \n    FOR j:=1 TO (Config_Numero_Lineas) DO //Para el n\u00famero de l\u00ednea \n (* Calibraci\u00f3n por di\u00e1metro Mayor *)  \n    IF Select_Modo_Diametro=0 THEN // calibraci\u00f3n por di\u00e1metro mayor  \n      \n IF Camaras_Grado.Linea[j].Posicion_4.Diametro_Max > Average.Linea[j].Posicion_3.Diametro THEN \nAvera ge.Linea[j].Posicion_4.Diametro:=Camaras_Grado.Linea[j].Posicion_4.Diametro_Max+ \nDesviacion_Diametro[j].Diametro_Maximo;  \n ELSIF Camaras_Grado.Linea[j].Posicion_4.Diametro_Max <= Average.Linea[j].Posicion_3.Diametro THEN \n        Average.Linea[j].Posicion_4.Diametro:=Average.Linea[j].Posicion_3.Diametro + \nDesviacion_Diametro[j].Diametro_Maximo;  \n     END_IF  \n  IF Camaras_Grado.Linea[j].Posicion_3.Diametro_Max > Average.Linea[j].Posicion_2.Diametro THEN \n        Average.Linea[j].Posicion_3.Diametro := \nCamaras_Grado.Linea[j].Posicion_3.Diametro_Max;  \n ELSIF Camaras_Grado.Linea[j].Posicion_3.Diametro_Max <= Average.Linea[j].Posicion_2.Diametro THEN \n        Average.Linea[j].Posicion_3.Diametro:=Average.Linea[j].Posicion_2.Diametro;  \n     END_IF  \n IF Camaras_Grado.Linea[j].Posicion_2.Diametro_Max > Average.Linea[j].Posicion_1.Diametro THEN \n        Average.Linea[j].Posicion_2.Diametro := \nCamaras_Grado.Linea[j].Posicion_2.Diametro_Max;  \n ELSIF Camaras_Grado.Linea[j].Posicion_2.Diametro_Max <= Average.Linea[j].Posicion_1.Diametro THEN \n        Average.Linea[j].Posicion_2.Diametro:=Average.Linea[j].Posicion_1.Diametro;  \n     END_IF   \n Average.Linea[j].Posicion_1.Diametro := Camaras_Grado.Linea[j].Posicion_1.Diametro_Max;     \n    END_IF  \n  \n (* Calibraci\u00f3n por di\u00e1metro Menor *)   \n       IF Select_Modo_Diametro=1 THEN // calibraci\u00f3n por di\u00e1metro menor      \n      \n IF (((Ca maras_Grado.Linea[j].Posicion_4.Diametro_Min < Average.Linea[j].Posicion_3.Diametro) OR \n(Average.Linea[j].Posicion_3.Diametro = 0)) AND (Camaras_Grado.Linea[j].Posicion_4.Diametro_Min >= \nDiametroMinimo)) THEN  \n Average.Linea[j].Posicion_4.Diametro := Camaras_Grado.Linea[j].Posicion_4.Diametro_Min + \nDesviacion_Diametro[j].Diametro_Minimo; \n ELSIF Camaras_Grado.Linea[j].Posicion_4.Diametro_Min >= Average.Linea[j].Posicion_3.Diametro THEN \n Average.Linea[j].Posicion_4.Diametro :=Average.Linea[j].Posicion_3.Diametro + \nDesviacion_Diametro[j].Diametro_Minimo;      END_IF  \n     \n  IF (((Camaras_Grado.Linea[j].Posicion_3.Diametro_Min < Average.Linea[j].Posicion_2.Diametro) OR \n(Average.Linea[j].Posicion_2.Diametro = 0)) AND (Camaras_Grado.Linea[j].Posicion_3.Diametro_Min >= DiametroMinimo)) THEN  \n Average.Linea[j].Posicion_3.Diametro := Camaras_Grado.Linea[j].Posicion_3.Diametro_Min;  \n ELSIF Camaras_Grado.Linea[j].Posicion_3.Diametro_Min >= Camaras_Grado.Linea[j].Posicion_2.Diametro \nTHEN  \n Average.Linea[j].Posicion_3.Diametro := Average.Linea[j].Posicion_2.Diametro;  \nTRABAJO FINAL DE CARRERA  \n55 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n     END_IF  \n IF (((Camaras_Grado.Linea[j].Posicion_2.Diametro_Min < Average.Linea[j].Posicion_1.Diametro) OR \n(Average.Linea[j].Posicion_1.Diametro = 0)) AND (Camaras_Grado.Linea[j].Posicion_2.Diametro_Min >= \nDiametroMinimo)) THEN  \n Average.Linea[j].Posicion_2.Diametro := Camaras_Grado.Linea[j].Posicion_2.Diametro_Min;  \n ELSIF Camaras_Grado.Linea[j].Posicion_2.Diametro_Min >= Average.Linea[j].Posicion_1.Diametro THEN \n        Average.Linea[j].Posicion_2.Diametro := Aver age.Linea[j].Posicion_1.Diametro;  \n     END_IF  \n IF (Camaras_Grado.Linea[j].Posicion_1.Diametro_Min >= DiametroMinimo) THEN  \n Average.Linea[j].Posicion_1.Diametro := Camaras_Grado.Linea[j].Posicion_1.Diametro_Min;  \n     ELSE  \n     Average.Linea[j].Posicion_1.Diametro := 0;  \n     END_IF   \n     END_IF  \n \n (* Calibraci\u00f3n por di\u00e1metro Medio*)  \n     IF Select_Modo_Diametro=2 THEN // calibraci\u00f3n por di\u00e1metro Medio \n           (* POSICION CAZOLETA 4 *) \n     IF (Camaras_Grado.Linea[j].Posicion_4.Diametro_Avg >= DiametroMinimo) THEN  \n       contador_posicion_4[j] := contador_posicion_3[j] + 1; \n        Average.Linea[j].Posicion_4.Diametro := \n(Camaras_Grado.Linea[j].Posicion_4.Diametro_Avg + Average.Linea[j].Posicion_3.Diametro)/(contador_posicion_4[j]) + Desviacion_Diametro[j].Diametro_Medio;     \n           ELSE \n       contador_posicion_4[j] := contador_posicion_3[j]; \n     Average.Linea[j].Posicion_4.Diametro := \n(Average.Linea[j].Posicion_3.Diametro)/(contador_posicion_4[j]) + Desviacion_Diametro[j].Diametro_Medio;      END_IF  \n           (* POSICION CAZOLETA 3 *) \n     IF (Camaras_Grado.Linea[j].Posicion_3.Diametro_Avg >= DiametroMinimo) THEN  \n        Average.Linea[j].Posicion_3.Diametro := \n(Camaras_Grado.Linea[j].Posicion_3.Diametro_Avg + Average.Linea[j].Posicion_2.Diametro);  \n        contador_posicion_3[j] := contador_posicion_2[j] + 1; \n     ELSE \n       Average.Linea[j].Posicion_3.Diametro := Average.Linea[j].Posicion_2.Diametro;  \n       contador_posicion_3[j] := contador_posicion_2[j]; \n     END_IF  \n           (* POSICION CAZOLETA 2 *) \n     IF (Camaras_Grado.Linea[j].Posicion_2.Diametro_Avg >= DiametroMinimo) THEN  \n       Average.Linea[j].Posicion_2.Diametro := \n(Camaras_Grado.Linea[j].Posicion_2.Diametro_Avg + Average.Linea[j].Posicion_1.Diametro);  \n        contador_posicion_2[j] := c ontador_posicion_1[j] + 1; \n     ELSE \n       Average.Linea[j].Posicion_2.Diametro := Average.Linea[j].Posicion_1.Diametro;  \n     contador_posicion_2[j] := contador_posicion_1[j]; \n     END_IF  \n   \nTRABAJO FINAL DE CARRERA  \n56 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n  (* POSICION CAZOLETA 1 *)  \n     IF (Camaras_Grado.Linea[j].Posi cion_1.Diametro_Avg >= DiametroMinimo) THEN  \n      Average.Linea[j].Posicion_1.Diametro := \n(Camaras_Grado.Linea[j].Posicion_1.Diametro_Avg); \n      contador_posicion_1[j] := 1; \n     ELSE \n        Average.Linea[j].Posicion_1.Diametro := 1;  \n     END_IF  \n           END_IF  \n   END_FOR  \n   Hacer_Calculos:=TRUE;  \n(*****************************************************************************************************************************)  \n(* Guardamos el di\u00e1metro esperando el n\u00famero de posiciones para llegar a las b\u00e1sculas y calcular la salida *)  \n(*****************************************************************************************************************************)  \n  PositionOffset := UINT_TO_REAL((gLine[p].ActPosition- 1)) + \nINT_TO_REAL(gControlExit[p].User.Positi onExit[0].NumberPulses); (* PositionOffset = (ActPos -1) + PosExit(0) *)  \n             \n        IF PositionOffset >= gLine[p].User.NumPositions THEN  (* (ActPos -1) + PosExit(0) > MaxPos *)     \n           Offset := ( INT_TO_REAL(gControlExit[p].User.PositionEx it[0].NumberPulses) + \nUINT_TO_REAL(gLine[p].ActPosition- 1) ) - UINT_TO_REAL(gLine[p].User.NumPositions)  ;  (* Offset = (PosExit(i) + \n(ActPos -1)) - MaxPos *)             \n        ELSE                            Offset := UINT_TO_REAL(gLine[p].ActPosition- 1) + \nINT_TO_REAL(gControlExit[p].User.PositionExit[0].NumberPulses); (* Offset = (ActPos -1) + PosExit(i) *)       \n        END_IF   \n     IF Average.Linea[p].Posicion_4.Diametro >= DiametroMinimo THEN  \n     gControlExit[p].User.Grado[REAL_TO_UINT(Offset)]    := \nINT_TO_USINT(Average.Linea[p].Posicion_4.Diametro); // Para visualizar en la tarea Visu1- Visu8 los di\u00e1metros  \n     gControlExit[p].User.Diametro[REAL_TO_UINT(Offset)] :=  Average.Linea[p].Posicion_4.Diametro;  \n  ELSIF Average.Linea[p].Posicion_4.Diametro < DiametroMinimo THEN \n        gControlExit[p].User.Grado[REAL_TO_UINT(Offset)]    := 0; // Para visualizar en la tarea Visu1- Visu8 los \ndi\u00e1metros  \n     gControlExit[p].User.Diametro[REAL_TO_UINT(Offset)] := 0;  \n  END_IF  \n (*******************************************************************************************************************)    \n    END_FOR  \n END_IF        \n Trigger_Camaras:=FALSE;  END_IF  \n(**************************************** calculos calibres y salidas ******************************************************************)  \n   FOR p:=1 TO (Config_Numero_Lineas) DO       \n    Calculos_Linea[p].Peso_Actual:= REAL_TO_INT((gLine[p].WeighPosition[gLine[p].ActPosition- 1])*1000);  \n    Diametro[p]:= gControlExit[p].User.Diametro[gLine[p].ActPosition- 1]; \n    Calculos _Linea[p].Salida_Asignada:=FALSE    \n    IF Hacer_Test_Completo=TRUE THEN  \n       FOR i:=1 TO 4 DO  \n           Calculos_Linea[p].Numero_de_Salida:=0; \n    END_FOR  \n    END_IF  \nTRABAJO FINAL DE CARRERA  \n57 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n    END_FOR   \n(*-------------------------------------------------- C\u00c1LCULO DEL CALIBRE ---- --------------------- -------------------------------------------*)  \nIF Hacer_Test_Completo=FALSE AND Button_Test_por_Salida=FALSE THEN  \n// C\u00e1lculo del calibre por DI\u00c1METRO   \n IF (Pantalla_Layaut.Modo_de_Calibracion=3 OR Pantalla_Layaut.Modo_de_Calibracion=4) THEN   \n FOR p:=1 TO (Config_Numero_Lineas) DO //Para n\u00famero de l\u00ednea    \n  FOR m:=1 TO (INT_TO_USINT(Variedad_de_la_Fruta_Lectura.Numero_de_Grados) + 1) DO //Para \nn\u00famero del calibre    \n   IF m < (Variedad_de_la_Fruta_Lectura.Numero_de_Grados + 1) THEN \n      IF (Diametro[p] >= Variedad_de_la_Fruta_Lectura.Diametro_del_Grado[m]) AND \n(Diametro[p] < Variedad_de_la_Fruta_Lectura.Diametro_del_Grado[m+1] AND Calculos_Linea[p].Peso_Actual > \n(1000*Config_TarasOffset)) THEN             Calculos_Linea[p].Numero_de_Calibre:=m;  \n      // sumamos los valores para las estad\u00edsticas     \n      \nEstadisticas_por_Calibre.Peso_por_Calibre_Gramos[m]:=Estadisticas_por_Calibre.Peso_por_Calibre_Gramos[m]+Calculos_Linea[p].Peso_Actual;         \nEstadisticas_por_Calibre.Piezas_por_Calibr e[m]:=Estadisticas_por_Calibre.Piezas_por_Calibre[m]+1;         \n      END_IF  \n   END_IF  \n   IF m = (Variedad_de_la_Fruta_Lectura.Numero_de_Grados) AND (Diametro[p] >= \nVariedad_de_la_Fruta_Lectura.Diametro_del_Grado[m]) AND Calculos_Linea[p].Peso_Actual > 15 THEN  \n      Calculos_Linea[p].Numero_de_Calibre:=m; \n      // sumamos los valores para las estad\u00edsticas  \n              \nEstadisticas_por_Calibre.Peso_por_Calibre_Gramos[m]:=Estadisticas_por_Calibre.Peso_por_Calibre_Gramos[m]+Calcul\nos_Linea[p].Peso_Actual;         \nEstadisticas_por_Calibre.Piezas_por_Calibre[m]:=Estadisticas_por_Calibre.Piezas_por_Calibre[m]+1; \n        END_IF  \n  END_FOR  \n END_FOR   \n END_IF  \n(*----------------------------------------------------------- ENVIAR LOS DATOS DE LAS SALIDAS ---------------------------------------*)   \n     FOR p:=1 TO (Config_Numero_Lineas) DO  \n   gControlExit[p].User.ExitForcedPosition_Auto := Calculos_Linea[p].Numero_de_Salida; \n  IF Calculos_Linea[p].Salida_Asignada = TRUE THEN \n     gVisu[p].LastExit[0] := USINT_TO_REAL(Calcul os_Linea[p].Numero_de_Salida);  \n  END_IF  \n  gLine[p].User.GetData:=TRUE;  \n  END_FOR  \n gControl.User.WeighPerformed:=FALSE; \n  FOR p:=1 TO 4 DO  \n      Calculos_Linea[p].Numero_de_Salida:=0; \n  END_FOR   \n FOR p:=1 TO 16 DO  \n      Calculos_Linea[p].Numero_de_Calibre:= 0; \n  END_FOR   \n END_IF     \nEND_PROGRAM  \nTRABAJO FINAL DE CARRERA  \n58 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n4.3.6. Layaut salidas \nEste modulo ser\u00e1 el que contenga el c\u00f3digo de programa para la gesti\u00f3n de la pantalla \n(que interact\u00faa con el operario de la calibradora) de asignaci\u00f3n de las salidas de cada \ncalibre.  \n \n(****************** **************************************************  \n * COPYRIGHT --    \n ********************************************************************  \n * Program: Layaut_Salidas  \n * File: Layaut_Salidas.st  \n * Author: Erico Cruz  \n * Created: March 17, 2010  \n ************* *******************************************************  \n * Implementation of program Layaut_Salidas  \n ********************************************************************)  \n \nPROGRAM _INIT  \n(*---------------------------------- INICIALIZAMOS VARIABLES -------------------------*)  \nGrado[1]:='A';  \nGrado[2]:='B';  \nGrado[3]:='C';  \nGrado[4]:='D';  \nGrado[5]:='E';  \nGrado[6]:='T';  \n \nEND_PROGRAM  \n PROGRAM _CYCLIC  \n(*---- SI EL OPERARIO PULSA UN BOTON DE ASIGNACI\u00d3N DE SALIDA SE RESETEAN LOS OTROS BOTONES ---*)  \n IF EDGEPOS(Button_S elect_Salida[1]) THEN  \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \nTRABAJO FINAL DE CARRERA  \n59 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n IF EDGEPOS(Button_Select_Salida[2]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=F ALSE;  \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[3]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Sal ida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[4]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_S elect_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE ; \n Button_Select_Salida[13]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n60 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[5]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[6]) THEN  \n Button_Select_Salida[1]:=FALSE;  \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_S alida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n   IF EDGEPOS(Button_Selec t_Salida[7]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n61 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE;  \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[8]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE ; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Sal ida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n   IF EDGEPOS(Button_Select_Salida[9]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n   IF EDGEPOS(Button_Select_Salida[10]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n62 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[11]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=F ALSE;  \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n   IF EDGEPOS(Button_Select_Salida[12]) THEN  \n Button_Select_Salida[1]:=F ALSE;  \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Sali da[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n63 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[13]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE;  \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[14]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE; \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[15]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Salida[15]) THEN  \n Button_Select_Salida[1]:=FALSE; \n Button_Select_Salida[2]:=FALSE; \n Button_Select_Salida[3]:=FALSE; \n Button_Select_Salida[4]:=FALSE; \n Button_Select_Salida[5]:=FALSE;  \n Button_Select_Salida[6]:=FALSE; \n Button_Select_Salida[7]:=FALSE; \n Button_Select_Salida[8]:=FALSE; \n Button_Select_Salida[9]:=FALSE; \n Button_Select_Salida[10]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n64 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Salida[11]:=FALSE; \n Button_Select_Salida[12]:=FALSE; \n Button_Select_Salida[13]:=FALSE; \n Button_Select_Salida[14]:=FALSE; \n Button_Select_Salida[16]:=FALSE; \n END_IF  \n(*---- PROGRAMACI\u00d3N DE COLORES PARA CADA LETRA SEG\u00daN LO SELECCIONADO POR EL OPERARIO ---*) \n// Para boton de salida 1 \n IF Button_Select_Salida[1]=TRUE THEN  \n  Indice_Numero_Salida:=1; \n Salida_Activada[1]:=50; //Color rojo \n ELSE Salida_Activada[1]:=70; //Color negro  \n END_IF  \n// Para boton de salida 2  \n IF Button_Select_Salida[2] THEN  \n  Indice_Numero_Salida:=2; \n Salida_Activada[2]:=50; //Color rojo \n ELSE Salida_Activada[2]:=70; //Color negro  \n END_IF  \n// Para boton de salida 3  \n IF Button_Select_Salida[3]=TRUE THEN  \n  Indice_Numero_Salida:=3; \n Salida_Activada[3]:=50; //Color rojo \n ELSE Salida_Activada[3]:=28; //Color negro  \n END_IF   \n// Para boton de salida 4  \n IF Button_Sel ect_Salida[4]=TRUE THEN  \n  Indice_Numero_Salida:=4; \n Salida_Activada[4]:=50; //Color rojo \n ELSE Salida_Activada[4]:=28; //Color negro  \n END_IF   \n// Para boton de salida 5  \n IF Button_Select_Salida[5]=TRUE THEN  \n  Indice_Numero_Salida:=5; \n Salida_Activada[5]:=50; //Color rojo \n ELSE Salida_Activada[5]:=70; //Color negro  \n END_IF    \n// Para boton de salida 6  \n IF Button_Select_Salida[6]=TRUE THEN  \n  Indice_Numero_Salida:=6; \n Salida_Activada[6]:=50; //Color rojo \n ELSE Salida_Activada[6]:=70; //Color negro  \n END_IF   \n// Para boton de salida 7  \n IF Button_Select_Salida[7]=TRUE THEN  \n  Indice_Numero_Salida:=7; \n Salida_Activada[7]:=50; //Color rojo \n ELSE Salida_Activada[7]:=28; //Color negro  \n END_IF   \nTRABAJO FINAL DE CARRERA  \n65 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n// Para boton de salida 8  \n IF Button_Select_Salida[8]=TRUE THEN  \n  Indice_Numero_Salida:=8; \n Salida_Activada[8]:=50; //Color rojo \n ELSE Salida_Activada[8]:=28; //Color negro  \n END_IF   \n// Para boton de salida 9  \n IF Button_Select_Salida[9]=TRUE THEN  \n  Indice_Numero_Salida:=9; \n Salida_Activada[9]:=50; //Color rojo \n ELSE Salida_Activada[9]:=70; //Color negro  \n END_IF   \n// Para boton de salida 10  \n IF Button_Select_Salida[10]=TRUE THEN  \n  Indice_Numero_Salida:=10; \n Salida_Activada[10]:=50; //Color rojo \n ELSE Salida_Activada[10]:=70; //Color negro  \n END_IF   \n// Para boton de salida 11  \n IF Bu tton_Select_Salida[11]=TRUE THEN  \n  Indice_Numero_Salida:=11; \n Salida_Activada[11]:=50; //Color rojo \n ELSE Salida_Activada[11]:=28; //Color negro  \n END_IF   \n// Para boton de salida 12  \n IF Button_Select_Salida[12]=TRUE THEN  \n  Indice_Numero_Salida:=12; \n Salida_Activada[12]:=50; //Color rojo \n ELSE Salida_Activada[12]:=28; //Color negro  \n END_IF   \n// Para boton de salida 13  \n IF Button_Select_Salida[13]=TRUE THEN  \n  Indice_Numero_Salida:=13; \n Salida_Activada[13]:=50; //Color rojo \n ELSE Salida_Activada[13]:=70; //Col or negro  \n END_IF   \n// Para boton de salida 14  \n IF Button_Select_Salida[14]=TRUE THEN  \n  Indice_Numero_Salida:=14; \n Salida_Activada[14]:=50; //Color rojo \n ELSE Salida_Activada[14]:=70; //Color negro  \n END_IF   \n// Para boton de salida 15  \n IF Button_Select_Sali da[15]=TRUE THEN  \n  Indice_Numero_Salida:=15; \n Salida_Activada[15]:=50; //Color rojo \n ELSE Salida_Activada[15]:=28; //Color negro  \n END_IF   \n \nTRABAJO FINAL DE CARRERA  \n66 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(*------------------------------------- Pulsadores de seleccionar el calibre -----------------------------------*)  \n IF EDGEPOS(Button_Select_Calibre[1]) THEN  \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Sel ect_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[2]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibr e[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n   IF EDGEPOS(Button_Select_Calibre[3]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[4]:=FALS E; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Selec t_Calibre[12]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n67 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[4]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \nIF EDGEPOS(Button_Select_Calibre[5]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[6]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n68 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[7]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[8]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE ; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[9]) THEN  \n Button_Select_Calibre[1]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n69 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE;  \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[10]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[11]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Sel ect_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE;  \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n70 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[12]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibr e[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[13]) THEN  \n Button_Select_Calibre[1]:=FALS E; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[14]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \nTRABAJO FINAL DE CARRERA  \n71 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[15]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Select_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:=FALSE; \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_C alibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[16]:=FALSE; \n END_IF  \n  \n IF EDGEPOS(Button_Select_Calibre[16]) THEN  \n Button_Select_Calibre[1]:=FALSE; \n Button_Select_Calibre[2]:=FALSE; \n Button_Select_Calibre[3]:=FALSE; \n Button_Sel ect_Calibre[4]:=FALSE; \n Button_Select_Calibre[5]:=FALSE; \n Button_Select_Calibre[6]:=FALSE; \n Button_Select_Calibre[7]:=FALSE; \n Button_Select_Calibre[8]:=FALSE; \n Button_Select_Calibre[9]:=FALSE; \n Button_Select_Calibre[10]:=FALSE; \n Button_Select_Calibre[11]:= FALSE;  \n Button_Select_Calibre[12]:=FALSE; \n Button_Select_Calibre[13]:=FALSE; \n Button_Select_Calibre[14]:=FALSE; \n Button_Select_Calibre[15]:=FALSE; \n END_IF  \n// Para boton de Calibre 1  \n IF Button_Select_Calibre[1]=TRUE THEN  \n  Indice_Numero_Calibre:=1; \n Calibr e_Activado[1]:=46; //Color morado  \n ELSE Calibre_Activado[1]:=88; //Color negro  \n END_IF  \nTRABAJO FINAL DE CARRERA  \n72 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n// Para boton de Calibre 2  \n IF Button_Select_Calibre[2]=TRUE THEN  \n  Indice_Numero_Calibre:=2; \n Calibre_Activado[2]:=46; //Color morado  \n ELSE Calibre_Activado[2]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 3  \n IF Button_Select_Calibre[3]=TRUE THEN  \n  Indice_Numero_Calibre:=3; \n Calibre_Activado[3]:=46; //Color morado  \n ELSE Calibre_Activado[3]:=88; //Color negro  \n END_IF  \n // Para boton de Calibre 4  \n IF Button_Select_Cal ibre[4]=TRUE THEN  \n  Indice_Numero_Calibre:=4; \n Calibre_Activado[4]:=46; //Color morado  \n ELSE Calibre_Activado[4]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 5  \n IF Button_Select_Calibre[5]=TRUE THEN  \n  Indice_Numero_Calibre:=5; \n Calibre_Activado[5]:= 46; //Color morado  \n ELSE Calibre_Activado[5]:=88; //Color negro  \n END_IF  \n // Para boton de Calibre 6  \n IF Button_Select_Calibre[6]=TRUE THEN  \n  Indice_Numero_Calibre:=6; \n Calibre_Activado[6]:=46; //Color morado  \n ELSE Calibre_Activado[6]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 7  \n IF Button_Select_Calibre[7]=TRUE THEN  \n  Indice_Numero_Calibre:=7; \n Calibre_Activado[7]:=46; //Color morado  \n ELSE Calibre_Activado[7]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 8  \n IF Button_Select_Calibre[8]=TRUE THEN  \n  Indice_Numero_Calibre:=8; \n Calibre_Activado[8]:=46; //Color morado  \n ELSE Calibre_Activado[8]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 9  \n IF Button_Select_Calibre[9]=TRUE THEN  \n  Indice_Numero_Calibre:=9; \n Calibre_Activado[9]:=46; //Color mor ado \n ELSE Calibre_Activado[9]:=88; //Color negro  \n END_IF  \n \nTRABAJO FINAL DE CARRERA  \n73 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n// Para boton de Calibre 10  \n IF Button_Select_Calibre[10]=TRUE THEN  \n  Indice_Numero_Calibre:=10;  \n Calibre_Activado[10]:=46; //Color morado  \n ELSE Calibre_Activado[10]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 11  \n IF Button_Select_Calibre[11]=TRUE THEN  \n  Indice_Numero_Calibre:=11;  \n Calibre_Activado[11]:=46; //Color morado  \n ELSE Calibre_Activado[11]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 12  \n IF Button_Select_Calibre[12]=TRUE THEN  \n  Indice_Numero_Calibre:=12;  \n Calibre_Activado[12]:=46; //Color morado  \n ELSE Calibre_Activado[12]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 13  \n IF Button_Select_Calibre[13]=TRUE THEN  \n  Indice_Numero_Calibre:=13;  \n Calibre_Activado[13]:=46; //Color  morado  \n ELSE Calibre_Activado[13]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 14  \n IF Button_Select_Calibre[14]=TRUE THEN  \n  Indice_Numero_Calibre:=14;  \n Calibre_Activado[14]:=46; //Color morado  \n ELSE Calibre_Activado[14]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 15  \n IF Button_Select_Calibre[15]=TRUE THEN  \n  Indice_Numero_Calibre:=15;  \n Calibre_Activado[15]:=46; //Color morado  \n ELSE Calibre_Activado[15]:=88; //Color negro  \n END_IF  \n// Para boton de Calibre 16  \n IF Button_Select_Calibre[16]=TRUE T HEN  \n  Indice_Numero_Calibre:=16;  \n Calibre_Activado[16]:=46; //Color morado  \n ELSE Calibre_Activado[16]:=88; //Color negro  \n END_IF  \n  \n(*------------------------------------------------------------ ASIGNAR SALIDAS ---------------------------------------------- -----------*)  \n IF EDGEPOS(Button_Asignar_Salida) THEN  \n  Asignar_Salida:=TRUE;  \n Valor_Existe:=0;  \n Valor_Guardado:=0; \n END_IF  \nTRABAJO FINAL DE CARRERA  \n74 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n IF Asignar_Salida=TRUE THEN  \n FOR g:=1 TO 20 DO  \n//comprobamos que el valor no est\u00e9 ya asignado en la salida \n     IF Layaut_Salida[Indice_Numero_Salida].Calibre[g]=Indice_Numero_Calibre THEN  \n   \n//en el caso de que calibremos solo por peso o por di\u00e1metro  \n     IF (Pantalla_Layaut.Modo_de_Calibracion=0 OR Pantalla_Layaut.Modo_de_Calibracion=3) THEN  \n         Valor_Existe:=TRUE;  \n     END_IF           \n        FOR h:=1 TO 20 DO  \n            IF Layaut_Salida[Indice_Numero_Salida].Grado[h]=Grado[Indice_Numero_Grado] THEN  \n             Valor_Existe:=TRUE;      \n            END_IF  \n        END_FOR  \n        END_IF  \n END_FOR  \n \n    FOR k:=1 TO 20 DO  \n//si el v alor no existe en la lista entonces lo asignamos  \n      IF (Layaut_Salida[Indice_Numero_Salida].Calibre[k]=0) AND Valor_Existe=FALSE AND \nValor_Guardado=FALSE THEN  \n     Layaut_Salida[Indice_Numero_Salida].Calibre[k]:=Indice_Numero_Calibre;  \n   Layaut_Salida[Indice_Numero_Salida].Grado[k]:=Grado[Indice_Numero_Grado];  \n   Valor_Guardado:=TRUE;  \n  END_IF  \n END_FOR     \n END_IF  \n IF Valor_Guardado=TRUE OR Valor_Existe=TRUE THEN  \n  Asignar_Salida:=FALSE; \n  END_IF   \n \n(*----------------------------------------------------------- BORRAR TODA LA SALIDA ----------------------------- -----------------------------*)     \n IF EDGEPOS(Button_Borrar_Todo) THEN  \n  FOR m:=1 TO 20 DO  \n  Layaut_Salida[Indice_Numero_Salida].Calibre[m]:=0; \n Layaut_Salida[Indice_Numero_Salida].Grado[m]:=' ';  \n END_FOR  \n END_IF  \n     \n IF Valor_Existe=1 THEN  \n  Pantalla_Emerg_Valor_Existente:=0; \n ELSE \n  Pantalla_Emerg_Valor_Existente:=1; \n END_IF  \n     \n(*------------------------------------------------------------ BORRAR DE  LA SALIDA --------------------------------- ---------------------------- *) \n IF EDGEPOS(Button_Borrar_Salida) THEN  \n  Borrar_de_Salida:=TRUE;  \n Borrado_de_Salida:=FALSE;  \nTRABAJO FINAL DE CARRERA  \n75 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Salida_no_Asignada:=FALSE;  \n END_IF  \n  \n IF Borrar_de_Salida=TRUE THEN \n  FOR a:=1 TO 20 DO  \n      IF (Layaut_Salida[Indice_Numero_Salida].Calibre[a]=Indice_Numero_Calibre AND \nBorrado_de_Salida=FALSE) THEN \n                               \n        FOR b:=1 TO 20 DO  \n            IF Layaut_Salida[Indice_Numero_Salida].Grado[b]=Grado[Indice_Numero_Grado] AND \nBorrado_de_Salida=FALSE THEN \n                 Layaut_Salida[Indice_Numero_Salida].Calibre[a]:=0;  \n         Layaut_Salida[Indice_Numero_Salida].Grado[a]:=' ';  \n         Borrado_de_Salida:=TRUE;  \n            END_IF             \n         END_FOR  \n     END_IF    \n     END_FOR  \n  \n END_IF  \n  \n IF Borrado_de_Salida=TRUE OR Salida_no_Asignada=TRUE THEN \n  Borrar_de_Salida:=FALSE; \n END_IF  \n   IF Borrar_de_Salida=TRUE AND Borrado_de_Salida=FALSE THEN \n  Salida_no_Asignada:=TRUE;  \n END_IF  \n   IF Salida_no_Asignada=TRUE THEN \n  Pantalla_Emerg_Salida_no_Asig:=0; \n ELSE \n  Pantalla_Emerg_Salida_no_Asig:=1; \n END_IF  \n \n(*--------------- PASAR TODAS LOS CALIBRES ASIGNADOS A STRING PARA VISUALIZAR EN PANTALLA ----------- *) \n IF EDGEPOS(Button_Asignar_Salida) OR EDGEPOS(Button_Borrar_Salida) OR EDGEPOS(Button_Borrar_Todo) THEN  \n strcp y(ADR(strSalida[Indice_Numero_Salida]),ADR(''));  \n FOR i:=1 TO 20 DO                       \n IF Layaut_Salida[Indice_Numero_Salida].Calibre[i]<>0 THEN    \n      \nstrcat(ADR(strSalida[Indice_Numero_Salida]),ADR(Variedad_de_la_Fruta_Lectura.Nombre_del_Grado[Layaut_Salida[Indice_Numero_Salida].Calibre[i]]));               \n      IF (Pantalla_Layaut.Modo_de_Calibracion=1 OR \nPantalla_Layaut.Modo_de_Calibracion=2 OR Pantalla_Layaut.Modo_de_Calibracion=4 OR Pantalla_Layaut.Modo_de_Calibracion=5) THEN  \n  \nTRABAJO FINAL DE CARRERA  \n76 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n// Modo de calibraci\u00f3n: 1=Peso y color, 2=Peso color y di\u00e1metro, 4=Di\u00e1metro y color, y 5= solo color)  \n         strcat(ADR(strSalida[Indice_Numero_Salida]),ADR('/'));  \n         \nstrcat(ADR(strSalida[Indice_Numero_Salida]),ADR(Layaut_Salida[Indice_Numero_Salida].Grado[i])); \n      END_IF  \n      strcat(ADR(strSalida[Indice_Numero_Salida]),ADR(';'));  \n      END_IF  \n     END_FOR  \n END_IF   \n(*-- bloqueamos la opci\u00f3n de la pantalla de layaut seg\u00fan lo que tenemos configurado en el modo de calibraci\u00f3n ---------*)  \n// bloquemaos la opci\u00f3n de grado si solo tenemos peso o di\u00e1metro  \n IF (Pantalla_Layaut.Modo_de_Calibracion=0 OR Pantalla_Layaut.Modo_de_Calibracion=3) THEN  \n    Bloquear_grado:=1;  ELSE \n  Bloquear_grado:=0; \n END_IF  \n  IF (Pantalla_Layaut.Modo_de_Calibracion=0 OR Pantalla_Layaut.Modo_de_Calibracion=1 OR Pantalla_Layaut.Modo_de_Calibracion=5) THEN  \n    Bloquear_diametro:=0;  \n  ELSE \n  Bloquear_diametro:=1;  \n END_IF  \n  IF (Pantalla_Layaut.Modo_de_Calibracion=3 OR Pantalla_Layaut.Modo_de_Calibracion=4 OR Pantalla_Layaut.Modo_de_Calibracion=5) THE N \n    Bloquear_peso:=0;   ELSE \n  Bloquear_peso:=1; \n END_IF  \n \n(*--------------------- MEMORIZAR LOS DATOS DE LA PANTALLA LA YAUT EN LA MEMORIA -- ---------------------------*)  \n IF EDGEPOS(Button_Layaut_UP) THEN  \n Numero_Layaut:=Numero_Layaut+1; \n Leer_Layaut:=TRUE;  \n ELSIF EDGEPOS(Button_Layaut_DOWN) THEN  \n  Numero_Layaut:=Numero_Layaut- 1; \n Leer_Layaut:=TRUE;  \n ELSIF EDGEPOS(Button_Leer_Layaut) THEN  \n Leer_Layaut:=TRUE;  \n END_IF  \n   IF EDGEPOS(Button_Guardar_Layaut) THEN  \n Pantalla_Emerg_Guardar_Layaut:=1; \n Guardar_Laya ut:=TRUE;  \n END_IF  \n   \nTRABAJO FINAL DE CARRERA  \n77 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n(*----------------------------------- GUARDAR LAYAUT EN MEMORIA -------------------------------------*)  \n IF Guardar_Layaut=TRUE THEN \n   \n Pantalla_Layaut_Memoria[Numero_Layaut].Nombre_Layaut:=Pantalla_Layaut.Nombre_Layaut;  \n Pantalla_Lay aut_Memoria[Numero_Layaut].Modo_de_Calibracion:=Pantalla_Layaut.Modo_de_Calibracion; \n Pantalla_Layaut_Memoria[Numero_Layaut].Numero_de_Variedad:=Numero_Variedad; \n Pantalla_Layaut_Memoria[Numero_Layaut].Numero_de_Grado:=Numero_Grado;  \n  \n FOR j:=1 TO (Config_Numero_Salidas + 1) DO //Para todas las salidas  \n   \n  Pantalla_Layaut_Memoria[Numero_Layaut].Salidas_Asignadas[j].Conteo:=Layaut_Salida[j].Conteo; \n   \n  FOR i:=1 TO 20 DO //Para la posici\u00f3n de cada salida \n    \n         Pantalla_Layaut_Memoria[Numero_Layaut].S alidas_Asignadas[j].Calibre[i]:=Layaut_Salida[j].Calibre[i]; \n  \n Pantalla_Layaut_Memoria[Numero_Layaut].Salidas_Asignadas[j].Grado[i]:=Layaut_Salida[j].Grado[i]; \n  END_FOR  \n    END_FOR  \n Guardar_Layaut:=FALSE;  \n END_IF  \n(*------------------------------------ LEER EL LAYAUT DE LA MEMORIA ----------------------------------*)  \n IF Leer_Layaut=TRUE THEN  \n  Numero_Variedad:=Pantalla_Layaut_Memoria[Numero_Layaut].Numero_de_Variedad; \n Variedad_de_la_Fruta_Lectura:=Variedad_de_la_Fruta_Memoria[Numero_Variedad]; \n  \n Numero_Grado:=Pantalla_Layaut_Memoria[Numero_Layaut].Numero_de_Grado;  \n Grado_de_la_Fruta_Lectura:=Grado_de_la_Fruta_Memoria[Numero_Grado];  \n  \n Pantalla_Layaut.Nombre_Layaut:=Pantalla_Layaut_Memoria[Numero_Layaut].Nombre_Layaut;  \n Pantalla_Layaut.Modo_de_Calibracion:=Pantalla_Layaut_Memoria[Numero_Layaut].Modo_de_Calibracion; \n  \n FOR j:=1 TO (Config_Numero_Salidas + 1) DO //Para todas las salidas  \n   \n  Layaut_Salida[j].Conteo:=Pantalla_Layaut_Memoria[Numero_Layaut].Salidas_Asignadas[j].Conteo;  \n   \n  FOR i:=1 TO 20 DO //Para la posici\u00f3n de cada salida \n    \n         Layaut_Salida[j].Calibre[i]:=Pantalla_Layaut_Memoria[Numero_Layaut].Salidas_Asignadas[j].Calibre[i]; \n  \n Layaut_Salida[j].Grado[i]:=Pantalla_Layaut_Memoria[Numero_Layaut].Salidas_Asignadas[j].Grado[i]; \n  END_FOR  \n    END_FOR  \n  \n//   Despu\u00e9s de leer todos los datos de la memoria escribimos los strings de las salidas para la visualizaci\u00f3n    \n  FOR j:=1 TO (Config_Numero_Salidas + 1) DO //Para todas las salidas  \n   \n  strcpy(ADR(strSalida[j]),ADR('')); //Ponemos a cero c ada salida antes de escribir el valor de las \nsalidas  \nTRABAJO FINAL DE CARRERA  \n78 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n     FOR i:=1 TO 20 DO //Para la posici\u00f3n de cada salida  \n    \n         IF Layaut_Salida[j].Calibre[i]<>0 THEN  \n         \nstrcat(ADR(strSalida[j]),ADR(Variedad_de_la_Fruta_Lectura.Nombre_del_Grado[Layaut_Sal ida[j].Calibre[i]]));  \n// si el modo de calibraci\u00f3n tambi\u00e9n es con grado entonces tambi\u00e9n leemos el grado  \n      IF (Pantalla_Layaut.Modo_de_Calibracion=1 OR \nPantalla_Layaut.Modo_de_Calibracion=2 OR Pantalla_Layaut.Modo_de_Calibracion=4 OR \nPantalla_Layaut.Modo_de_Calibracion=5) THEN  \n//         Modo de calibraci\u00f3n: 1=Peso y color, 2=Peso color y di\u00e1metro, 4=Di\u00e1metro y color, y 5= \nsolo color, )  \n         strcat(ADR(strSalida[j]),ADR('/'));  \n         strcat(ADR(strSalida[j]),ADR(Layaut_Salida[j].Grado[i]));  \n      END_IF  \n      strcat(ADR(strSalida[j]),ADR(';')); \n       \n   END_IF  \n     END_FOR  \n   END_FOR   \n Leer_Layaut:=FALSE;  \n END_IF  \n \n(*------------------------- COMPROVAR SI LOS CALIBRES TIENEN ALGUNA SALIDA ASIGNADA --- -------------------*)   \n IF EDGEPOS(Button_Asignar_Salida) OR EDGEPOS(Button_Borrar_Salida) OR EDGEPOS(Button_Borrar_Todo) OR EDGEPOS(Button_Leer_Layaut) OR EDGEPOS(Button_Layaut_UP) OR EDGEPOS(Button_Layaut_DOWN) THEN    \n    FOR j:=0 TO 16 DO // Para cada calibre \n        Calibre_Asignado[j]:=0;  \n END_F OR  \n FOR j:=1 TO (Config_Numero_Salidas + 1) DO //Para n\u00famero de salidas  \n     FOR i:=1 TO 20 DO //Para cada posici\u00f3n de cada salida \n    \n      IF Layaut_Salida[j].Calibre[i] = 1  THEN  \n         Calibre_Asignado[1] := Calibre_Asignado[1] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 2  THEN  \n         Calibre_Asignado[2] := Calibre_Asignado[2] + 1;  \n   ELSIF Layaut_Salida[j].Calibre[i] = 3  THEN  \n          Calibre_Asignado[3] := Calibre_Asignado[3] + 1;  \n    ELSIF Layaut_Salida[j].Calibre[i] = 4  THEN  \n         Cali bre_Asignado[4] := Calibre_Asignado[4] + 1;  \n         ELSIF Layaut_Salida[j].Calibre[i] = 5  THEN  \n         Calibre_Asignado[5] := Calibre_Asignado[5] + 1;  \n         ELSIF Layaut_Salida[j].Calibre[i] = 6  THEN  \n         Calibre_Asignado[6] := Calibre_Asignado[6] + 1;  \n         ELSIF Layaut_Salida[j].Calibre[i] = 7  THEN  \n         Calibre_Asignado[7] := Calibre_Asignado[7] + 1;  \n         ELSIF Layaut_Salida[j].Calibre[i] = 8  THEN  \n         Calibre_Asignado[8] := Calibre_Asignado[8] + 1;  \n   ELSIF Layaut_Salida[j].Calibre[i] = 9  THEN  \nTRABAJO FINAL DE CARRERA  \n79 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n         Calibre_Asignado[9] := Calibre_Asignado[9] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 10  THEN  \n         Calibre_Asignado[10] := Calibre_Asignado[10] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 11  THEN  \n         Calibre_Asi gnado[11] := Calibre_Asignado[11] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 12  THEN  \n         Calibre_Asignado[12] := Calibre_Asignado[12] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 13  THEN  \n         Calibre_Asignado[13] := Calibre_Asignado[13] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 14  THEN  \n         Calibre_Asignado[14] := Calibre_Asignado[14] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 15  THEN  \n         Calibre_Asignado[15] := Calibre_Asignado[15] + 1; \n   ELSIF Layaut_Salida[j].Calibre[i] = 16  THEN  \n         Calibre_Asignado[16] := Calibre_Asignado[16] + 1;      \n         END_IF  \n     END_FOR  \n END_FOR   \n  \n FOR j:=1 TO 16 DO  \n     IF  Calibre_Asignado[j]>0 THEN //Si no hemos encontrado el calibre en ninguna posici\u00f3n (de 0 a 20) en \nninguna salida, entonc es cambiamos el texto de color  \n   Color_Calibre_Asignado[j]:=15; //fondo de color blanco (significa salida asignada)  \n  ELSIF Calibre_Asignado[j]=0 AND Variedad_de_la_Fruta_Lectura.Numero_de_Grados >= j THEN  \n   Color_Calibre_Asignado[j]:=50; //Texto de la pantalla del calibre de color rojo (significa que \nno tiene ninguna salida asignada). Tambien se verifica en la rutina de alarmas  \n  END_IF  \n END_FOR  \n END_IF  \nEND_PROGRAM  \n \nAs\u00ed pues, la pantalla de configuraci\u00f3n de asignaci\u00f3n de salidas del operario quedar\u00eda de l \nsiguiente modo: \n \n \n \n \n \n \n \n  \n \nTRABAJO FINAL DE CARRERA  \n80 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \nIlustraci\u00f3n 54 \n4.3.7. Alarmas  \nCon el m\u00f3dulo de alarmas gestionamos todas  las alarmas que notificaremos por la \npantalla t\u00e1ctil a operario e incluso seg\u00fan que alarma sea pararemos la calibradora a \ntrav\u00e9s de una salida digital del PLC y un rel\u00e9 conectado al variador de frecuencia del \nmotor principal de la calibradora. \n(********************************************************************  \n * COPYRIGHT --    \n ********************************************************************  \n * Program: Alarms  \n * File: Alarms.st  \n * Author: Erico Cruz  \n * Created: March 20, 2010  \n ********************************************************************  \n * Implementation of program Alarms  \n ********************************************************************)  \nPROGRAM _INIT  \n(* TODO : Add your code here *)  \nEND_PROGRAM  \nTRABAJO FINAL DE CARRERA  \n81 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nPROGRAM _CYCLIC  \n// comprovar si hay alguna alarma activada y parpadear un aviso en la pantalla \n Alarma_Activada:=1; \n   FOR i:=0 TO 50 DO  \n       IF Alarma[i]=TRUE THEN  \n       IF Clock_1seg=TRUE THEN  \n       Alarma_Activada:=0;  \n    ELSE \n       Alarma_Activada:=1;  \n    END_IF  \n    END_IF      \n   END_FOR  \n \n// Alarma [0], fallo magnetot\u00e9rmico de electroimanes  \n IF DI2_Magneto_Electroimanes=FALSE THEN  \n  Alarma[0]:=TRUE; \n    END_IF    \n \n// Alarma [1] modo de calibraci\u00f3n con m\u00e1quina en funcionamiento  \n IF EDGEPOS (gControl.User.di_Trigger) AND (Config_Modo_Calibracion=1 OR Config_Modo_Calibracion=2) THEN   Alarma[1]:=TRUE; \n    ELSIF Config_Modo_Calibracion=0 THEN  \n  Alarma[1]:=FALSE; \n    END_IF   \n     \n// Alarma [2] c\u00e1maras en estado de error  \n IF DI4_Camaras_Estado_Error=TRUE THEN  \n  Alarma[2]:=FALSE; \n    END_IF  \n    \n// Alarma [4] calibres sin salida asignada \n IF EDGEPOS(gControl.User.di_Trigger) AND Alarma[4]=FALSE THEN   FOR k:=1 TO Variedad_de_la_Fruta_Lectura.Numero_de_Grados DO  \n      IF Color_Calibre_Asignado[k] = 50 THEN  \n          Alarma[4]:=TRUE;        \n     END_IF  \n END_FOR  \n END_IF  \n  \n// Alarma [5] paso cazoletas en l\u00ednea 1  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[1].Peso_Actual  < Config_Peso_Minimo_Cazoleta AND \nConfig_Numero_Lineas >= 1) THEN \n  Alarma[5]:=TRUE; \n  END_IF  \n  \n// Alarma [6] paso cazoletas en l\u00ednea 2  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[2].Peso_Actual < Config_Peso_Minimo_Cazoleta AND \nConfig_Numer o_Lineas >= 2) THEN \n  Alarma[6]:=TRUE; \nTRABAJO FINAL DE CARRERA  \n82 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n  END_IF  \n  \n// Alarma [7] paso cazoletas en l\u00ednea 3  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[3].Peso_Actual < Config_Peso_Minimo_Cazoleta AND \nConfig_Numero_Lineas >= 3) THEN \n  Alarma[7]:=TRUE; \n  END_IF  \n  \n// Alarma [8] paso cazoletas en l\u00ednea 4  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[4].Peso_Actual < Config_Peso_Minimo_Cazoleta AND Config_Numero_Lineas >= 4) THEN   Alarma[8]:=TRUE; \n  END_IF  \n  \n// Alarma [9] paso cazoletas en l\u00ednea 5  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[5].Peso_Actual < Config_Peso_Minimo_Cazoleta AND \nConfig_Numero_Lineas >= 5) THEN   Alarma[9]:=TRUE; \n  END_IF  \n  \n// Alarma [10] paso cazoletas en l\u00ednea 6  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calcul os_Linea[6].Peso_Actual < Config_Peso_Minimo_Cazoleta AND \nConfig_Numero_Lineas >= 6) THEN \n  Alarma[10]:=TRUE; \n  END_IF  \n // Alarma [11] paso cazoletas en l\u00ednea 7  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[7].Peso_Actual < Config_Peso_Minimo_Cazoleta AND \nConfig_Numero_Lineas >= 7) THEN \n  Alarma[11]:=TRUE; \n  END_IF  \n  \n// Alarma [12] paso cazoletas en l\u00ednea 8  \n IF (EDGEPOS(gControl.User.di_Trigger) AND Calculos_Linea[8].Peso_Actual < Config_Peso_Minimo_Cazoleta AND \nConfig_Numero_Lineas >= 8) THEN \n  Alarma[12]:=TRUE; \n  END_IF  \n  \n(*---------------------------------------------- RESETEAMOS TODAS LAS ALARMAS -----------------------------------------------------*)  \n IF EDGEPOS(Aceptar_Alarmas) THEN  \n  FOR i:=0 TO 50 DO  \n      Alarma[i]:=FALSE; \n    END_FOR  \n END_IF  \n  \n IF (Alarma[0]=TRUE OR Alarma[5]=TRUE OR Alarma[6]=TRUE OR Alarma[7]=TRUE OR Alarma[8]=TRUE OR \nAlarma[9]=TRUE OR Alarma[10]=TRUE OR Alarma[11]=TRUE OR Alarma[12]=TRUE) AND \nButton_Desactivar_Alarma=FALSE THEN  \n Rele_Seguridad_Calibradora:= FALSE; \n ELSE \nTRABAJO FINAL DE CARRERA  \n83 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n  Rele_Seguridad_Calibradora:= TRUE;  \n END_IF  \nEND_PROGRAM  \n4.3.8. Estad\u00edsticas \nEl m\u00f3dulo de estad\u00edsticas lo requerimos para imprimir y guardar todos los datos de de la \nfruta que ha procesado la calibradora durante un trabajo (nombre del cliente, n\u00famero de \npiezas  por calibre, n\u00famero de piezas por salida, etc.)  \n \n(********************************************************************  \n * COPYRIGHT --    \n ********************************************************************  \n * Program: Estadisticas  \n * File: Estadisticas.s t \n * Author: Erico Cruz  \n * Created: March 24, 2010  \n ********************************************************************  \n * Implementation of program Estadisticas  \n ********************************************************************)  \nPROGRAM _INIT  \nRecipe.V ariable[0] := 0; \nRecipe.Variable[1] := 1; \nEND_PROGRAM  \nPROGRAM _CYCLIC  \n(*-------------------------------------------  INICIO DE ESTAD\u00cdSTICAS ---------------------------------------------------------------------*)  \n IF EDGEPOS(Button_Iniciar_Estadisticas) THEN \n  Estadisticas_por_Calibre.Nombre_Variedad:=Variedad_de_la_Fruta_Lectura.Nombre_Variedad;  \n CASE Pantalla_Layaut.Modo_de_Calibracion OF  \n      0:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Peso'; \n  1:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Pes o y Color'; \n  2:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Peso, Color y Diametro';  \n  3:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Diametro';  \n  4:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Diametro y Color';  \n  5:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Color';  \n  6:  Estadisticas_por_Calibre.Modo_de_Calibracion:='Peso y Diametro';  \n END_CASE  \n FOR i:=1 TO 16 DO  \n Estadisticas_por_Calibre.Nombre_del_Calibre[i]:=Variedad_de_la_Fruta_Lectura.Nombre_del_Grado[i]; \n END_FOR   \n  \n    FOR i:=0 T O 16 DO  \n END_FOR   \n  \n(* LEER LA FECHA Y HORA DEL PLC  *)   \n DTGetTime_0(enable := 1);  \n Date_Time := DTGetTime_0.DT1;  \n (* The Date and Time type is broken independly *)  \nTRABAJO FINAL DE CARRERA  \n84 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n DT_TO_DTStructure(Date_Time, ADR(Date_Time_Structure));  \n \n (* To each part of the Date and Time is assigned a string *)  \n itoa(Date_Time_Structure.day,ADR(strDay));  \n itoa(Date_Time_Structure.month,ADR(strMonth));  \n itoa(Date_Time_Structure.year,ADR(strYear));  \n itoa(Date_Time_Structure.hour,ADR(strHour));  \n itoa(Date_Time_Structure.minute, ADR(strMinute));  \n itoa(Date_Time_Structure.second,ADR(strSecond));  \n \n// Copiamos los datos de fecha y hora en las variables de estad\u00edsticas  \n    // Hora de inicio \n strcpy(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR(''));  \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR(strHour)); \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR(':'));  \n IF Date_Time_Structure.minute < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR('0'));  \n    END_IF  \n strcat(ADR(Estadisticas_por_Calibr e.Hora_de_Inicio),ADR(strMinute));  \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR(':'));  \n IF Date_Time_Structure.second < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR('0'));  \n    END_IF  \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Inicio),ADR(strSecond));  \n \n // Fecha de inicio \n strcpy(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR(''));  \n IF Date_Time_Structure.day < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR('0')); \n    END_IF  \n strcat(ADR(Estadistic as_por_Calibre.Fecha_de_Inicio),ADR(strDay));  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR('/'));  \n IF Date_Time_Structure.month < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR('0')); \n    END_IF  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR(strMonth));  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR('/'));  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Inicio),ADR(strYear));  \n  \n strcpy(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR(''));  \n strcpy(ADR(Est adisticas_por_Calibre.Hora_de_Fin),ADR(''));  \n  \n DTGetTime_0(enable := 0);   \n \n(* BORRAR ESTAD\u00cdSTICAS *)  \n FOR i:=0 TO 20 DO  \n   Estadisticas_por_Calibre.Piezas_por_Calibre[i]:=0;  \n  Estadisticas_por_Calibre.Peso_por_Calibre_Gramos[i]:=0; \n  END_FOR  \nTRABAJO FINAL DE CARRERA  \n85 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Estadistica s_por_Calibre.Peso_Total:=0; \n Estadisticas_por_Calibre.Piezas_Total:=0;   \n END_IF  \n  \n(*------------------------------------------------- FIN DE ESTAD\u00cdSTICAS -----------------------------------------------*)  \n(*--------- con el fin de estad\u00edsticas imprimimos todos los dtos a trav\u00e9s de una impresora ----------------------------*)  \n IF EDGENEG(Button_Iniciar_Estadisticas) THEN \n  \n(* LEER LA FECHA Y HORA DEL PLC  *)   \n DTGetTime_0(enable := 1);  \n Date_Time := DTGetTime_0.DT1;  \n (* The Date and Time type is broken independly *)  \n DT_TO_DTStructure(Date_Time, ADR(Date_Time_Structure));  \n \n (* Para cada una de las partes de la fecha y hora es asignada una palabra STRING  *)  \n itoa(Date_Time_Structure.day,ADR(strDay));  \n itoa(Date_Time_Structure.month,ADR(strMonth));  \n itoa(Date_Time_Structure.year,ADR(strYear));  \n itoa(Date_Time_Structure.hour,ADR(strHour));  \n itoa(Date_Time_Structure.minute,ADR(strMinute));  \n itoa(Date_Time_Structure.second,ADR(strSecond));  \n \n// Copiamos los datos de fecha y hora en las variables de estad\u00edsticas  \n strcpy(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR(''));  \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR(strHour));  \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR(':'));  \n IF Date_Time_Structure.minute < 10 THEN  \n    strcat(ADR(Estadi sticas_por_Calibre.Hora_de_Fin),ADR('0'));  \n    END_IF   \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR(strMinute)); \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR(':'));  \n IF Date_Time_Structure.second < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR('0'));  \n    END_IF  \n strcat(ADR(Estadisticas_por_Calibre.Hora_de_Fin),ADR(strSecond));  \n  \n // Fecha de fin  \n strcpy(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR(''));  \n IF Date_Time_Structure.day < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR('0'));  \n    END_IF  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR(strDay));  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR('/'));  \n IF Date_Time_Structure.month < 10 THEN  \n    strcat(ADR(Estadisticas_por_Calibre.F echa_de_Fin),ADR('0'));  \n    END_IF  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR(strMonth));  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR('/'));  \n strcat(ADR(Estadisticas_por_Calibre.Fecha_de_Fin),ADR(strYear)); \nTRABAJO FINAL DE CARRERA  \n86 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n DTGetTime_0(enable := 0) ;   \n Recipe:=Estadisticas_por_Calibre; \n Guardar_Estadisticas:=TRUE; \n  \n  END_IF  \n  \n(* -------------------------------------- GUARDAMOS LAS ESTAD\u00cdSTICAS EN MEM\u00d3RIA ----------------------------*)  \nIF Guardar_Estadisticas=TRUE THEN \n FOR a:=0 TO 99 DO  \n  IF (Nombr e_Fichero[a]='ero') OR (Nombre_Fichero[a]='Nuevo fichero') THEN  \n       x:=a;  \n  END_IF  \n END_FOR  \n END_IF  \n  \n// Enviamos nombre y numero de fichero  \n IF EDGEPOS(Guardar_Estadisticas) THEN  \n  Step_1:=TRUE;  \n Step_2:=FALSE;  \n    Step_3:= FALSE; \n END_IF  \n    IF Step_1=TRUE THEN  \n  Indice_Fichero:=x;  \n  strcpy(ADR(NuevoNombre),ADR(''));  \n  \n  IF Date_Time_Structure.day < 10 THEN  \n   strcat(ADR(NuevoNombre),ADR('0'));  \n   strcat(ADR(NuevoNombre),ADR(strDay));  \n  ELSE \n   strcat(ADR(NuevoNombre),ADR(strDay));  \n  END_IF  \n  strcat( ADR(NuevoNombre),ADR('_'));  \n   \n  IF Date_Time_Structure.month < 10 THEN  \n   strcat(ADR(NuevoNombre),ADR('0'));  \n   strcat(ADR(NuevoNombre),ADR(strMonth));  \n  ELSE \n   strcat(ADR(NuevoNombre),ADR(strMonth));  \n  END_IF  \n   \n  strcat(ADR(NuevoNombre),ADR('_'));  \n   \n  IF strYear='2010' THEN  \n   strcat(ADR(NuevoNombre),ADR('10'));  \n    ELSIF strYear='2011' THEN  \n   strcat(ADR(NuevoNombre),ADR('11'));  \n  ELSIF strYear='2012' THEN  \nTRABAJO FINAL DE CARRERA  \n87 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n   strcat(ADR(NuevoNombre),ADR('12'));  \n  ELSIF strYear='2013' THEN  \n   strcat(ADR(NuevoNombre),ADR('13'));  \n  ELSIF strYear='2014' THEN  \n   strcat(ADR(NuevoNombre),ADR('14'));  \n  ELSIF strYear='2015' THEN  \n   strcat(ADR(NuevoNombre),ADR('15'));  \n  ELSIF strYear='2016' THEN  \n   strcat(ADR(NuevoNombre),ADR('16'));  \n  ELSIF strYear='2017' THEN  \n   strcat(ADR(NuevoNombre),ADR('17'));  \n  ELSIF strYear='2018' THEN  \n   strcat(ADR(NuevoNombre),ADR('18'));  \n  ELSIF strYear='2019' THEN  \n   strcat(ADR(NuevoNombre),ADR('19'));  \n  ELSIF strYear='2020' THEN  \n   strcat(ADR(NuevoNombre),ADR('20'));  \n  END_IF  \n   \n  strcat(ADR(NuevoNom bre),ADR('_'));  \n  \n  IF Date_Time_Structure.hour < 10 THEN  \n   strcat(ADR(NuevoNombre),ADR('0'));  \n   strcat(ADR(NuevoNombre),ADR(strHour));  \n  ELSE \n   strcat(ADR(NuevoNombre),ADR(strHour));  \n  END_IF  \n  \n  strcat(ADR(NuevoNombre),ADR('h'));  \n   \n  IF Date_Time_Str ucture.minute < 10 THEN  \n   strcat(ADR(NuevoNombre),ADR('0'));  \n   strcat(ADR(NuevoNombre),ADR(strMinute));  \n  ELSE \n   strcat(ADR(NuevoNombre),ADR(strMinute));  \n  END_IF  \n   \n  strcat(ADR(NuevoNombre),ADR('m'));  \n   \n  IF Date_Time_Structure.second < 10 THEN  \n   strcat(ADR(NuevoNombre),ADR('0'));  \n   strcat(ADR(NuevoNombre),ADR(strSecond));  \n  ELSE \n   strcat(ADR(NuevoNombre),ADR(strSecond));  \n  END_IF  \n  \n  strcat(ADR(NuevoNombre),ADR('s'));  \n  strcat(ADR(NuevoNombre),ADR('_'));  \n  strcat(ADR(NuevoNombre),ADR(Estadisticas_por_Calibre.Nombre_Agricultor));   \nTRABAJO FINAL DE CARRERA  \n88 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n   \n END_IF  \n// Enviamos se\u00f1al de guardar   \n IF (Step_1=TRUE AND CSV_Signal_1=TRUE) THEN \n  Step_2:=TRUE;  \n    Step_1:=FALSE; \n  Step_3:=FALSE;  \n END_IF  \n  \n IF Step_2=TRUE THEN  \n  CMDEscribir:=TRUE;  \n    END_IF    \n  \n // Reseteamos bi ts  \n IF (Step_2=TRUE AND CSV_Signal_2=TRUE) THEN \n  Step_2:=FALSE;  \n    Step_1:=FALSE; \n  Step_3:=TRUE;  \n END_IF  \n  \n IF Step_3=TRUE THEN  \n  CMDEscribir:=FALSE;  \n Guardar_Estadisticas:=FALSE;  \n    Step_2:=FALSE;     Step_1:=FALSE;   Step_3:=FALSE;  \n END_IF  \n(*----------------------------------------- RECUPERAMOS ESTAD\u00cdSTICAS D E LA BASE DE DATOS -- -----------------------------*)  \n IF EDGEPOS(Leer_Recipe) THEN     Esperar_Datos:=TRUE;  \n    END_IF  \n   TON_0(IN:=Esperar_Datos, PT := T#4s);  \n   \n IF (Esperar_Datos=TRUE AND EDG EPOS(TON_0.Q)) THEN  \n   Estadisticas_por_Calibre:=Recipe;    Esperar_Datos:=FALSE; \n   END_IF  \n \nEND_PROGRAM  \n4.3.9. C\u00e1lculos estad\u00edsticas \nCon el m\u00f3dulo de c\u00e1lculos de estad\u00edsticas calculamos los valores que posteriormente \nguardamos en el bloque  \u201cEstad\u00edsticas\u201d antes descrito.  \n \n \nTRABAJO FINAL DE CARRERA  \n89 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n \n(********************************************************************  \n * COPYRIGHT --    \n ********************************************************************  \n * Program: Calculos_Estadisticas  \n * File: Calculos_Estadisticas.st  \n * Author: Erico Cruz  \n * Created: April 17, 2010  \n ********************************************************************  \n * Implementation of program Calculos_Estadisticas  \n ********************************************************************)  \nPROGRAM _INIT  \n(* TODO : Add your code here *)  \nEND_PROGRAM  \n \nPROGRAM _CYCLIC  \n(*-------------------------- ------ CALCULAMOS TODOS LOS VALORES DE LAS ESTAD\u00cdSTICAS -----------------------------*)  \nEstadisticas_por_Calibre.Piezas_Total:=Estadisticas_por_Calibre.Piezas_por_Calibre[1] + Estadistic as_por_Calibre.Piezas_por_Calibre[2] + Estadisticas_por_Calibre.Piezas_por_Calibre[3] + \nEstadisticas_por_Calibre.Piezas_por_Calibre[4] + Estadisticas_por_Calibre.Piezas_por_Calibre[5] + \nEstadisticas_por_Calibre.Piezas_por_Calibre[6] + Estadisticas_por_Cali bre.Piezas_por_Calibre[7] + \nEstadisticas_por_Calibre.Piezas_por_Calibre[8] + Estadisticas_por_Calibre.Piezas_por_Calibre[9] + \nEstadisticas_por_Calibre.Piezas_por_Calibre[10] + Estadisticas_por_Calibre.Piezas_por_Calibre[11] + Estadisticas_por_Calibre.Piezas_por_Calibre[12] + Estadisticas_por_Calibre.Piezas_por_Calibre[13] + \nEstadisticas_por_Calibre.Piezas_por_Calibre[14] + Estadisticas_por_Calibre.Piezas_por_Calibre[15] + \nEstadisticas_por_Calibre.Piezas_por_Calibre[16];  \n  Estadisticas_por_Calibre.Peso_Total :=Estadisticas_por_Calibre.Peso_por_Calibre[1] + \nEstadisticas_por_Calibre.Peso_por_Calibre[2] + Estadisticas_por_Calibre.Peso_por_Calibre[3] + Estadisticas_por_Calibre.Peso_por_Calibre[4] + Estadisticas_por_Calibre.Peso_por_Calibre[5] + \nEstadisticas_por_Calibre.Peso_por_Calibre[6] + Estadisticas_por_Calibre.Peso_por_Calibre[7] + \nEstadisticas_por_Calibre.Peso_por_Calibre[8] + Estadisticas_por_Calibre.Peso_por_Calibre[9] + Estadisticas_por_Calibre.Peso_por_Calibre[10] + Estadisticas_por_Calibre.Peso_por_Calibre[11] + \nEstadisticas_por_Calibre.Peso_por_Calibre[12] + Estadisticas_por_Calibre.Peso_por_Calibre[13] + \nEstadisticas_por_Calibre.Peso_por_Calibre[14] + Estadisticas_por_Calibre.Peso_por_Calibre[15] + \nEstadisticas_por_Calibre.Peso_por_Calibre[16];  \n   Peso_Total:=Estadisticas_por_Calibre.Peso_Total;   Piezas_Total:=Estadisticas_por_Calibre.Piezas_Total; \n \n FOR i:=1 TO 16 DO  \n  IF Peso_Total > 0 THEN  \n        Estadisticas_por_Calibre.Porcentaje_Peso_por_Calibre[i]:=100*Estadisticas_por_Calibre.Peso_por_Calibre[i ] / \nPeso_Total;      ELSE \n     Estadisticas_por_Calibre.Porcentaje_Peso_por_Calibre[i]:=0; \n  END_IF  \n   \n  IF Piezas_Total > 0 THEN  \nTRABAJO FINAL DE CARRERA  \n90 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n     \nEstadisticas_por_Calibre.Porcentaje_Piezas_por_Calibre[i]:=100*Estadisticas_por_Calibre.Piezas_por_Calibre[i] / \nPiezas_Total; \n     ELSE \n     Estadisticas_por_Calibre.Porcentaje_Piezas_por_Calibre[i]:=0;  \n  END_IF  \n  Estadisticas_por_Calibre.Peso_por_Calibre[i]:=Estadisticas_por_Calibre.Peso_por_Calibre_Gramos[i]/1000; \n END_FOR  \nEND_PROGRAM  \n4.3.10. Bloque Server  \nEl bloque de programa server contiene el c\u00f3digo que abre el puerto de comunicaci\u00f3n \nTCP server, recibe los datos de la CPU de las c\u00e1maras y los convierte a variables del \ntipo real para que posteriormente las gestionamos en el bloque \u201cC\u00e1lculo C\u00e1maras\u201d \nantes descrito. \n \n(********************************************************************  \n * COPYRIGHT --  Bernecker + Rainer  \n ********************************************************************  \n * Program: Server  \n * File: Server.st \n * Author: Erico Cruz  \n * Created: February 21, 2008  \n ********************************************************************  \n * Implementation of program Server  \n ********************************************************************)  \n PROGRAM _CYCLIC  \n CASE Server.sStep OF  \n  0:  (* PASO 0: ABRIMOS LA INTERFAZ DE ETHERNET *)  \n   Server.TcpOpen_0.enable := 1;   \n   Server.TcpOpen_0.pIfAddr := 0;  (* Listen on all TCP/IP Interfaces*)  \n   Server.TcpOpen_0.port := 9600;  (* Port to listen*)  \n   Server.TcpOpen_0.options := 0;  \n   Server.TcpOpen_0;  (* Call the Function*)  \n       \n   IF Server.TcpOpen_0.status = 0 THEN  (* TcpOpen successfull*)  \n    Server.sStep := 5;  \n   ELSIF Server.TcpOpen_0.status = ERR_FUB_BUSY THEN  (* TcpOpen not finished - > \nredo *)      \n   ELSE  (* VAMOS AL PASO DE ERROR *)  \n    Server.sStep := 100; \n   END_IF  \n   \n  5: \n   Server.linger_opt.lLinger := 0; (* linger Time = 0 *)  \nTRABAJO FINAL DE CARRERA  \n91 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n   Server.linger_opt.lOnOff := 1;  \n   Server.TcpIoctl_0.enable := 1;  \n   Server.TcpIoctl_0.ident := Server.TcpOpen_0.ident;  \n   Server.TcpIoctl_0.ioctl := tcpSO_LING ER_SET;  \n   Server.TcpIoctl_ 0.pData := ADR(Server.linger_opt); \n   Server.TcpIoctl_0.datalen := SIZEOF(Server.linger_opt);  \n      Server.TcpIoctl_0;      \n   \n   IF Server.TcpIoctl_0.status = 0 THEN  ( *TCP FINALIZADO  *) \n    Server.sStep := 10;       \n     \n   ELSIF Server.TcpIoctl_0.status  = ERR_FUB_BUSY THEN  (* TCP NO FINALIZADO  *) \n    \n     (* OCUPADO *) \n   ELSE  (* VAMOS A PASO ERROR  *) \n    Server.sStep := 100; \n   END_IF  \n   \n  10: (* ESPERAMOS PARA CONEXI\u00d3N CLIENTE *)  \n   Server.TcpServer_0.enable := 1;  \n   Server.TcpServer_0.ident := Server .TcpOpen_0.ident;  (*CONEXI\u00d3N IDENT DE \nAsTCP.TCP_Open *)  \n   Server.TcpServer_0.backlog := 1;  (* VARIOS CLIENTES ESPERANDO CONEXI\u00d3N \nSIMULTANEA *) \n   Server.TcpServer_0.pIpAddr := ADR(Server.client_address);  (* DONDE ESCRIBIR LA \nDIRECCI\u00d3N IP DEL CLIENTE *) \n   Server.TcpServer_0;  (* LLAMAR FUNCI\u00d3N*)  \n    \n   IF Server.TcpServer_0.status = 0 THEN  (* Status = 0 SI UN CLIENTE CONECTADO A \nSERVIDOR *)  \n    Server.sStep := 15; \n   ELSIF Server.TcpServer_0.status = ERR_FUB_BUSY THEN  (* TCP SERVER NO \nFINALIZADO  *)    \n     (* OCUPADO  *)  \n   ELSE  (* VAMOS A PASO ERROR, PASO 100  *) \n    Server.sStep := 100; \n   END_IF  \n    \n  15: \n    Server.TcpIoctl_0.enable := 1;  \n   Server.TcpIoctl_0.ident := Server.Tc pServer_0.identclnt; \n   Server.TcpIoctl_0.ioctl := tcpSO_LINGE R_SET;  \n   Server.TcpIoctl_0.pData := ADR(Server.linger_opt); \n   Server.TcpIoctl_0.datalen := SIZEOF(Server.linger_opt);  \n      Server.TcpIoctl_0;      \n   \n   IF Server.TcpIoctl_0.status = 0 THEN  (* TCP FINALIZADO  *) \n    Server.sStep := 20;       \n     \nTRABAJO FINAL DE CARRERA  \n92 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n   ELSIF Server.Tc pIoctl_0.status = ERR_FUB_BUSY THEN  (* TCP NO FINALIZADO *) \n    \n     (* OCUPADO  *) \n   ELSE  (* VAMOS A PASO ERROR  *) \n    Server.sStep := 100; \n   END_IF  \n    \n  20: (* ESPERAMOS DATOS *)  \n   Server.TcpRecv_0.enable := 1;  \n   Server.TcpRecv_0.ident := Server.Tcp Server_0.identclnt;   \n   Server.TcpRecv_0.pData  := ADR(Server.data_buffer) ;  (* DONDE ALMACENAMOS \nLOS DATOS RECIBIDOS  *) \n   Server.TcpRecv_0.datamax := SIZEOF(Server.data_buffer);  (* LONGITUD DEL BUFFER \nDE LOS DATOS RECIBIDOS  *) \n   Server.TcpRecv_0.flags := 0; \n   Server. TcpRecv_0;  (* LLAMAR LA FUNCI\u00d3N*)  \n   \n   IF Server.TcpRecv_0.status = 0 THEN  (* DATOS RECIBIDOS  *) \n    Server.sStep :=20; \n    counter := counter + 1;  \n    //Server.sStep := 30; \n    Server.recv_timeout := 0;  \n     \n    IF counter > 8 THEN   \n (*----------------- CONVERTIMOS TODOS LOS DATOS DE STRING RECIBIDOS A REAL ----------------------*)\n Camaras_Grado_REAL.Linea[1].Posicion_1.Diametro_Avg :=atof(ADR(Server.data_buffer[0]));  \n Camaras_Grado_REAL.Linea[1].Posicion_1.Diametro_Max :=atof(ADR(Server .data_buffer[1]));  \n Camaras_Grado_REAL.Linea[1].Posicion_1.Diametro_Min :=atof(ADR(Server.data_buffer[2]));  \n Camaras_Grado_REAL.Linea[1].Posicion_2.Diametro_Avg :=atof(ADR(Server.data_buffer[3]));  \n Camaras_Grado_REAL.Linea[1].Posicion_2.Diametro_Max :=atof (ADR(Server.data_buffer[4]));  \n Camaras_Grado_REAL.Linea[1].Posicion_2.Diametro_Min :=atof(ADR(Server.data_buffer[5]));  \n Camaras_Grado_REAL.Linea[1].Posicion_3.Diametro_Avg :=atof(ADR(Server.data_buffer[6]));  \n Camaras_Grado_REAL.Linea[1].Posicion_3.Diametro_Max :=atof(ADR(Server.data_buffer[7]));  \n Camaras_Grado_REAL.Linea[1].Posicion_3.Diametro_Min :=atof(ADR(Server.data_buffer[8]));  \n Camaras_Grado_REAL.Linea[1].Posicion_4.Diametro_Avg :=atof(ADR(Server.data_buffer[9]));  \n Camaras_Grado_REAL.Linea[1].Posicion_4.Diametro_Max :=atof(ADR(Server.data_buffer[10]));  \n Camaras_Grado_REAL.Linea[1].Posicion_4.Diametro_Min :=atof(ADR(Server.data_buffer[11]));  \n Camaras_Grado_REAL.Linea[2].Posicion_1.Diametro_Avg :=atof(ADR(Server.data_buffer[12]));  \n Camaras_Grado_REAL.Linea[2].Posicion_1.Diametro_Max :=atof(ADR(Server.data_buffer[13]));  \n Camaras_Grado_REAL.Linea[2].Posicion_1.Diametro_Min :=atof(ADR(Server.data_buffer[14]));  \n Camaras_Grado_REAL.Linea[2].Posicion_2.Diametro_Avg :=atof(ADR(Server.data_buffer[15]));  \n Camaras_ Grado_REAL.Linea[2].Posicion_2.Diametro_Max :=atof(ADR(Server.data_buffer[16]));  \n Camaras_Grado_REAL.Linea[2].Posicion_2.Diametro_Min :=atof(ADR(Server.data_buffer[17]));  \n Camaras_Grado_REAL.Linea[2].Posicion_3.Diametro_Avg :=atof(ADR(Server.data_buffer[18]));  \n Camaras_Grado_REAL.Linea[2].Posicion_3.Diametro_Max :=atof(ADR(Server.data_buffer[19]));  \n Camaras_Grado_REAL.Linea[2].Posicion_3.Diametro_Min :=atof(ADR(Server.data_buffer[20]));  \n Camaras_Grado_REAL.Linea[2].Posicion_4.Diametro_Avg :=atof(ADR(Server.data_buffer[21]));  \n Camaras_Grado_REAL.Linea[2].Posicion_4.Diametro_Max :=atof(ADR(Server.data_buffer[22]));  \n Camaras_Grado_REAL.Linea[2].Posicion_4.Diametro_Min :=atof(ADR(Server.data_buffer[23]));  \nTRABAJO FINAL DE CARRERA  \n93 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n Camaras_Grado_REAL.Linea[3].Posicion_1.Diametro_Avg :=atof(ADR(Server.data_buffer[24]));  \n Camaras_Grado_REAL.Linea[3].Posicion_1.Diametro_Max :=atof(ADR(Server.data_buffer[25]));  \n Camaras_Grado_REAL.Linea[3].Posicion_1.Diametro_Min :=atof(ADR(Server.data_buffer[26]));  \n Camaras_Grado_REAL.Linea[3].Posicion_2.Diametro_Avg :=atof(ADR(Server.data_buffer[27]));  \n Camaras_Grado_REAL.Linea[3].Posicion_2.Diametro_Max :=atof(ADR(Server.data_buffer[28]));  \n Camaras_Grado_REAL.Linea[3].Posicion_2.Diametro_Min :=atof(ADR(Server.data_buffer[29]));  \n Camaras_Grado_REAL.Linea[3]. Posicion_3.Diametro_Avg :=atof(ADR(Server.data_buffer[30]));  \n Camaras_Grado_REAL.Linea[3].Posicion_3.Diametro_Max :=atof(ADR(Server.data_buffer[31]));  \n Camaras_Grado_REAL.Linea[3].Posicion_3.Diametro_Min :=atof(ADR(Server.data_buffer[32]));  \n Camaras_Grado_REAL.Linea[3].Posicion_4.Diametro_Avg :=atof(ADR(Server.data_buffer[33]));  \n Camaras_Grado_REAL.Linea[3].Posicion_4.Diametro_Max :=atof(ADR(Server.data_buffer[34]));  \n Camaras_Grado_REAL.Linea[3].Posicion_4.Diametro_Min :=atof(ADR(Server.data_buffer[35]));  \n Camaras_Grado_REAL.Linea[4].Posicion_1.Diametro_Avg :=atof(ADR(Server.data_buffer[36]));  \n Camaras_Grado_REAL.Linea[4].Posicion_1.Diametro_Max :=atof(ADR(Server.data_buffer[37]));  \n Camaras_Grado_REAL.Linea[4].Posicion_1.Diametro_Min :=atof(ADR(Server.data_buffer[38]));  \n Camaras_Grado_REAL.Linea[4].Posicion_2.Diametro_Avg :=atof(ADR(Server.data_buffer[39]));  \n Camaras_Grado_REAL.Linea[4].Posicion_2.Diametro_Max :=atof(ADR(Server.data_buffer[40]));  \n Camaras_Grado_REAL.Linea[4].Posicion_2.Diametro_Min :=atof(ADR(Server.data_buffer[41]));  \n Camaras_Grado_REAL.Linea[4].Posicion_3.Diametro_Avg :=atof(ADR(Server.data_buffer[42]));  \n Camaras_Grado_REAL.Linea[4].Posicion_3.Diametro_Max :=atof(ADR(Server.data_buffer[43]));  \n Camaras_Grado_REAL.Linea[4].Posicion_3.Diametro_Min :=atof(ADR(Server.data_buffer[44]));  \n Camaras_Grado_REAL.Linea[4].Posicion_4.Diametro_Avg :=atof(ADR(Server.data_buffer[45]));  \n Camaras_Grado_REAL.Linea[4].Posicion_4.Diametro_Max :=atof(ADR(Server.data_buffer[46]));  \n Camaras_Grado_REAL.Linea[4].Posici on_4.Diametro_Min :=atof(ADR(Server.data_buffer[47]));  \n i:=1; \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_RE AL.Linea[i].Posicion_1.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Min := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Min);  \nCamaras_Gr ado.Linea[i].Posicion_3.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Min);  \nTRABAJO FINAL DE CARRERA  \n94 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n        \ni:=2; \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Max := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Max := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Min := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Avg := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Avg);  \nCamaras_Grado.Linea[i].P osicion_3.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Max := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Min := \nREAL_TO_INT(Camaras_Gr ado_REAL.Linea[i].Posicion_4.Diametro_Min);  \n       \ni:=3; Camaras_Grado.Linea[i].Posicion_1.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Li nea[i].Posicion_1.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Avg := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Max := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Avg);  \nTRABAJO FINAL DE CARRERA  \n95 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Min);  \n      \ni:=4; Camaras_Grado.Linea[i].Posicion_1.Diametro_Avg := REAL_TO_INT(Camaras_Grado _REAL.Linea[i].Posicion_1.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_1.Diametro_Min := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_1.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_2.Diametro_Max := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Max);  \nCamaras _Grado.Linea[i].Posicion_2.Diametro_Min := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_2.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Avg := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion _3.Diametro_Max := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_3.Diametro_Min := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_3.Diametro_Min);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Avg := \nREAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Avg);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Max := REAL_TO_INT(Camaras_Grado_REAL.Linea[i].Posicion_4.Diametro_Max);  \nCamaras_Grado.Linea[i].Posicion_4.Diametro_Min := \nREAL_TO_INT(Camaras_Grado_REA L.Linea[i].Posicion_4.Diametro_Min);     \n      \ncounter := 0;  \nTrigger_Camaras := TRUE;  \nEND_IF        \n  100:  (* EN ESTE PASO IMPLEMENTAMOS LO QUE QUEREMOS EN CASO DE ERROR DE \nCOMUNICACI\u00d3N *)  \nServer.sStep := 100; (*INICIALIZAMOS OTRA VEZ LA COMUNICACI\u00d3N, PASO 0*)  \n END_CASE  \nEND_PROGRAM  \n \n \nTRABAJO FINAL DE CARRERA  \n96 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n5. PRESUPUESTO \n5.1. Presupuesto mec\u00e1nico \nPara la instalaci\u00f3n del equipo electr\u00f3nico en la calibradora requerimos de una caja \nmec\u00e1nica donde ubicar las c\u00e1maras y otra donde ubicar la CPU con pantalla t\u00e1ctil.  \n5.1.1. Conjunto caja c\u00e1maras \n \nDescri pci\u00f3n  Proveedor  Unidades  P. Unitario  P. Total  \nCONJUNTO MEC\u00c1NICO CAJA DE CAMARAS  \nPerfil Bosch 45x45L R L=850mm  Alutecman  4,00 20,27  81,08  \nPerfil Bosch 45x45L R L=610mm  Alutecman  2,00 16,51  33,02  \nPerfil Bosch 45x45L R L=1200mm  Alutecman  4,00 25,91  103,64  \nPerfil Bosch 30x30 L=610mm  Alutecman  4,00 9,69 38,76  \nPerfil Bosch 30x30 L=865mm  Alutecman  1,00 11,76  11,76  \nPerfil Bosch 30x30 L=850mm  Alutecman  2,00 11,76  23,52  \nPerfil Bosch 30x30 L=625mm  Alutecman  3,00 9,69 29,07  \nRinconera esf\u00e9rica  Bosch 45x45  Alute cman  4,00 6,40 25,60  \nTapa rinconera esf\u00e9rica  Bosch 45x45  Alutecman  4,00 1,78 7,12 \nEsquadra  Bosch V ariofix S40/45 M8x25 \nR10 Alutecman  20,00  5,18 103,60  \nBosch Variofix -block S40/45  Alutecman  8,00 2,37 18,96  \nEsquadra  Bosch 30x30 M6x14 R8  Alutecman  16,00  2,97 47,52  \nCabeza de martillo Bosch M6x25 R8  Alutecman  9,00 0,50 4,50 \nTuerca para cab.  martillo Bosch M6  Alutecman  9,00 0,13 1,17 \nTuerca de martillo M8 R10  Alutecman  8,00 0,44 3,52 \nTornillo din 912 M8x16  Ferreter\u00eda  Puig 8,00 0,04 0,28 \nArandela din 125 M8 Ferreter\u00eda  Puig 8,00 0,02 0,16 \nArandela DIN 127B M3  Ferreter\u00eda  Puig 8,00 0,02 0,16 \nTuerca DIN 934 M4  Ferreter\u00eda  Puig 12,00  0,04 0,48 \nTornillo DIN 912 M4x8  Ferreter\u00eda  Puig 8,00 0,06 0,46 \nTornillo DIN 912 M4x25  Ferreter\u00eda  Puig 12,00  0,03 0,30 \nPlatina  uni\u00f3n perfiles armario  ELPA  4,00 5,00 20,00  \nSoporte c\u00e1maras  Infaimon  ELPA  2,00 8,00 16,00  \nArandela de presi\u00f3n din -127B M4  Ferreter\u00eda  Puig 42,00  0,02 0,84 \nTornillo A llen din 912 M4x10  Ferreter\u00eda  Puig 18,00  0,04 0,63 \nSoporte Iluminaci\u00f3n Infaimon  ELPA  3,00 12,00  36,00  \nCarenado 1 caja de c\u00e1maras  ELPA  2,00 47,00  94,00  \nCarenado 2 caja de c\u00e1maras  ELPA  2,00 43,50  87,00  \nCarenado 3 caja de c\u00e1maras  ELPA  1,00 38,50  38,50  \nTornillo  ISO 7380 M5x25  Ferreter\u00eda  Puig 20,00  0,27 5,39 \n  PRECIO TOTAL:  833,05 \u20ac  \nTabla 2 \n \n \n \nTRABAJO FINAL DE CARRERA  \n97 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n5.1.2. Conjunto caja de CPU  \nDescripci\u00f3n  Proveedor  Unidades  P. Unitario  P. Total  \nCON JUNTO MEC\u00c1NICO CAJA PANTALLA T\u00c1CTIL + CPU  \nCaja pantalla B&R PP420 10,4\"  ELPA  1,00 175,00  175,00  \nTapa caja pantalla B&R PP420 10,4\"  ELPA  1,00 15,00  15,00  \nAsa 160B20 Alumini o anodizado  EMKA  1,00 8,43 8,43 \nCaja CPU  ELPA  1,00 200,00  200,00  \nTapa caja CPU  ELPA  1,00 20,00  20,00  \nRacor el\u00e9ctrico  M20x1,5  E. Importados  2,00 0,70 1,40 \nRacor el\u00e9ctrico  M25x1,5  E. Importados  1,00 0,70 0,70 \nTornillo ISO 7380 M4x8  Ferreter\u00eda  Puig 8,00 0,16 1,32 \nArandela D in 125 M6  Ferreter\u00eda  Puig 2,00 0,02 0,04 \nTornillo Din 912 M6x10  Ferreter\u00eda  Puig 2,00 0,06 0,11 \nVentilador extractor 24Vdc  E. Importados  2,00 12,00  24,00  \n  PRECIO TOTAL:  446,00 \u20ac  \nTabla 3 \n5.2. Presupuesto el\u00e9ctrico electr\u00f3nico \nPara la implementaci\u00f3n de la parte electr\u00f3nica trabajaremos con tres proveedores: \n\u2022 JasVision : Material de visi\u00f3n artificial  \n\u2022 Cuadro el\u00e9ctrico c\u00e1maras: ACE Aparellajes y Cuadros El\u00e9ctricos  \n\u2022 Bernecker & Reiner  B&R: Electr\u00f3nica PLC  \n\u2022 Cuadro el\u00e9ctrico m\u00f3dulos PLC : ACE Aparell ajes y Cuadros El\u00e9ctricos  \n5.2.1. Material visi\u00f3n artificial \nDescripci\u00f3n  Proveedor  Unidades  P. Unitario  P. Total  \nMATERIAL VISI\u00d3N ARTIFICIAL  \nSherlock 7.x Prof. Lic. USB  JasVision  1,00 2.534,49  2.534,49  \nCamara M1024 -1/3\"Monocromo  JasVision  2,00 1.035,63  2.071,26  \nBarra de LEDs IR400x25mm  JasVision  4,00 365,20  1.460,80  \nMounting Bracket  JasVision  2,00 44,63  89,26  \nOptica alta resolucion 8mm  JasVision  2,00 222,16  444,32  \nCable Gige 10M RJ45  JasVision  2,00 46,22  92,44  \nConector Hirose 12hembra+cable  JasVision  2,00 45,90 91,80  \nFuente alimentacion 12V Genie  JasVision  1,00 43,28  43,28  \nFiltro IBP850 para M27x0.5  JasVision  2,00 67,00  134,00  \nStrobe para iluminacion LED  JasVision  1,00 782,00  782,00  \nConector CCS 12V + cable  JasVision  4,00 17,00  68,00  \nFuente alimentacion 12V JasVision  1,00 97,75  97,75  \n  PRECIO TOTAL:  7.909,40 \u20ac  \nTabla 4 \n \n \nTRABAJO FINAL DE CARRERA  \n98 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n5.2.2. Cuadro el\u00e9ctrico visi\u00f3n artificial \nDescripci\u00f3n  Proveedor  Unidades  P. Unitario  P. Total  \nCUADRO EL\u00c9CTRICO VISI\u00d3N ARTIFICIAL  \nMagnetot\u00e9rmico  ACE 1,00 67,00  67,00  \nBornes de contacto  ACE 20,00 0,70 14,00  \nDisyuntor  ACE 1,00 24,72  24,72  \nVentilador extractor  ACE 1,00 18,00  18,00  \nCuadro el\u00e9ctrico  ACE 1,00 180,00  180,00  \nh. t\u00e9cnico el\u00e9ctrico  ACE 15,00  18,00  270,00  \n  PRECIO TOTAL:  573,72 \u20ac  \n5.2.3. Electr\u00f3nica PLC  \nDescripci\u00f3n  Proveedor  Unidades  P. Uni tario  P. Total  \nELECTR\u00d3NICA PLC  \nPOWER PANEL PP4 20 10\" TFT  B&R 1,00 1.457,47  1.457,47  \nPOWERLINK V1/V2 interface  B&R 1,00 67,20  67,20  \nX20 supply moduler bus control (X20PS9400)  B&R 1,00 29,40  29,40  \nX20 bus base (X20BB80)  B&R 1,00 15,30  15,30  \nX20 termina l block 12 -pin 24V (X20TB12)  B&R 1,00 4,25 4,25 \nX20, 4 digital inputs 24Vdc (X20DI4371)  B&R 1,00 17,68  17,68  \nX20,1 analog input,full -bridge (X20AI1744)  B&R 3,00 133,28  399,84  \nX20 Analog output module (X20AO4622)  B&R 2,00 122,40  244,80  \nX20 8 Digital Out , 24VDC,2.0A (X20DO8332)  B&R 10,00  65,96  659,60  \nX20 supply module for I/O (X20PS2100)  B&R 5,00 14,28  71,40  \nX20 supply bus module (X20BM01)  B&R 5,00 6,80 34,00  \nX20 supply bus module 24V (X20BM11)  B&R 16,00  6,80 108,80  \nX20 terminal block 12 -pin 24V (X20T B12)  B&R 21,00  4,25 89,25  \n  PRECIO TOTAL:  3.198,9 9 \u20ac \nTabla 5 \n5.2.4. Cuadro el\u00e9ctrico PLC  \nDescripci\u00f3n  Proveedor  Unidades  P. Unitario  P. Total  \nCUADRO EL\u00c9CTRICO M\u00d3DULOS ENTRADAS Y SALIDAS PLC  \nSeccionador  ACE 1,00 13,15  13,15  \nPulsador luminoso verde  ACE 1,00 20,25  20,25  \nPulsador de emergencia  ACE 1,00 12,05  12,05 \nIndicador luminoso blanco  ACE 1,00 20,25  20,25  \nIndicador luminoso amarillo  ACE 1,00 20,25  20,25  \nIndicador luminoso rojo  ACE 1,00 20,25  20,25  \nFuente de alimentaci\u00f3n 24Vdc  ACE 1,00 170,50  170,50  \nPulsador negro  ACE 1,00 8,90 8,90 \nSirena  ACE 1,00 65,96 65,96  \nBornes de 2,5mm  ACE 80,00  0,70 56,00  \nCuadro el\u00e9ctrico  ACE 1,00 320,00  320,00  \nm cable 1x0,75  ACE 25,00  0,95 23,75  \nm cable 1x1,5  ACE 25,00  1,15 28,75  \nVentilador extractor  ACE 16,00  6,80 108,80  \nHoras t\u00e9cnico el\u00e9ctrico  ACE 25,00  4,25 106,25  \n  PRECIO TOTAL:  995,11 \u20ac  \n \nTRABAJO FINAL DE CARRERA  \n99 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n5.3. Presupuesto TOTAL \nDescripci\u00f3n  Proveedor  Unidades  P. Unitario  P. Total  \nPRESUPUESTO TOTAL  \nConjunto caja de c\u00e1maras  ELPA  1,00 833,05  833,05  \nConjunto caja de CPU  ELPA  1,00 446,00  446,00  \nMaterial visi\u00f3n artificial  JasVision  1,00 7.909,40 7.909,40  \nCuadro el\u00e9ctrico visi\u00f3n artificial  ACE 1,00 573,72  573,72  \nElectr\u00f3nica PLC  B&R 1,00 3.198,99  3.198,99  \nCuadro el\u00e9ctrico m\u00f3dulos I/O PLC  ACE 1,00 995,11  995,11  \n  PRECIO TOTAL:  13.956,27 \u20ac  \n \nComo podemos apreciar, el costo total de la impleme ntaci\u00f3n del sistema de visi\u00f3n \nartificial y el control autom\u00e1tico de la calibradora ( visi\u00f3n artificial y CPU principal) \nasciende a 14.000\u20ac . Conociendo el mercado, sabemos que un sistema que calibraci\u00f3n \nde la fruta solo por peso tiene un valor medio de 25.00 0\u20ac, con lo que estimo que el \npresente proy ecto podr\u00edamos estar ofreci\u00e9ndolo por 35.000\u20ac disponiendo, por lo tanto, \nde un margen de  contribuci\u00f3n de 21.000\u20ac , es decir, con este proyecto estamos \nconsiguiendo una rentabilidad del 250%. \n6. CONCLUSIONES  \nCon todo l o explicado en el presente documento, se pueden considerar definidas las \ncaracter\u00edsticas y condiciones que reunir\u00e1 el m\u00f3dulo de visi\u00f3n artificial en la parte el\u00e9ctrica, mec\u00e1nica y autom\u00e1tica para la consecuci\u00f3n del proyecto. Es importante tener \nmuy presente que con el proyecto desarrollado podemos superar sin el menor \ninconveniente los objetivos en producci\u00f3n, productividad, y el est\u00e1ndar de calidad \nreduciendo considerablemente los costos en la mano de obra. Cabe destacar que \nadem\u00e1s de la reducci\u00f3n de la mano de obra y costos fijos tambi\u00e9n conseguimos un trato \nmejorado con la fruta resultando en una mayor calidad de esta en el producto final \nembasado y calibrado.  \nAs\u00ed pues, gracias a este proyecto podemos obtener mayores velocidades de calibraci\u00f3n, \ncon menor es costos de producci\u00f3n, mayor fiabilidad en los resultados de calibraci\u00f3n y \nun mejor trato con el producto ya que no es necesario el empleo de la mano de obra \npara la consecuci\u00f3n de la debida calibraci\u00f3n de la fruta, verdura y hortalizas.  \n6.1. Futuros proyectos  \nUna buena idea para la consecuci\u00f3n de futuros proyectos es la de desarrollar sistemas \nde visi\u00f3n artificial que detecten el da\u00f1o en la fruta causado por golpes durante la cadena \nde procesamiento de esta,  que al ojo humano no es detectable hasta que esta y a se \nTRABAJO FINAL DE CARRERA  \n100 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \nencuentra al final de la cadena, es decir, cuando esta ya se encuentra en la fase de \ndistribuci\u00f3n final (los puntos de distribuci\u00f3n, tiendas, accesibles al consumidor final). \nCon el empleo de esta tecnolog\u00eda se podr\u00edan evitar grandes p\u00e9rdidas econ\u00f3mic as y una \nmejora altamente significativa en la calidad del producto final accesible al consumidor. \nOtro proyecto considerado altamente \u00fatil podr\u00eda ser la de desarrollar sistemas de visi\u00f3n \nartificial que detecten el nivel de az\u00facar en la fruta de modo que nos permita que esta \nsea seleccionada y/o clasificada seg\u00fan su contenido de az\u00facar. \n7. BIBLIOGRAF\u00cdA  \n7.1. Calibraci\u00f3n y envases de fruta  \n- Hortyfruta; Junta de Andaluc\u00eda (2008). Tipificaci\u00f3n, Requisitos m\u00ednimos de calidad \nde frutas y hortalizas  \nDisponible en: \nhttp://hortyfruta.es/Images/folletotipificacion.pdf  \n \n- InfoAgro Systems, S.L. (2010). Calibre universal para fruta  \nhttp://www.paletplastic.es/articulos.php?tipo=palots&subtipo=0  \n \n- Ministerio de Agricultura, Alimentaci\u00f3n y Medio Ambiente (2012). Maquinaria \nAgricola  \nhttp://www.magrama.gob.es/app/mecanizacion/fichamaquinaria.aspx?n1=8&n2=2&\nn3=0&n4=0  \n \n- Palet Plastic (2011). Cat\u00e1logo de palots.  \nhttp://www.paletplastic.es/articulos.php?tipo=palots&subtipo=0  \n7.2. Visi\u00f3n artificial  \n- JasVisio (2010). Visi\u00f3n artificial aplicada a la industria.  \nhttp://www.jasvisio.com/aplicaciones -vision -artificial -industria.html  \n \n- Faico, Contro de innovaci\u00f3n y tecnolog\u00eda (2011). \u00c1rea de tecnolog\u00edas de visi\u00f3n \nartificial.  \nhttp://www.faico.org/seccion/visionartificial/  \n \nTRABAJO FINAL DE CARRERA  \n101 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n- Universidad de C\u00f3rdoba; Prof. Dr. Fern\u00e1ndez N. L. (2011). Introducci\u00f3n a l a visi\u00f3n \nartificial. Visi\u00f3n Artificial Avanzada \nDisponible en: \nhttp://www.uco.es/users/ma1fegan/2011-2012/vision/Temas/Vision-artificial.pdf  \n7.3. Sistemas de iluminaci \u00f3n \n- As\u00ed Funciona, SL (2004). Que es un LED  \nhttp://www.asifunciona.com/fisica/ke_led/ke_led_5.htm  \n \n- Ofiled (2013). Ventajas de la iluminaci\u00f3n LED  \nhttp://www.ofiled.com/led/ventajas -de-la -iluminacion-led  \n \n- Led Planet, S.L. (2007). Las 5 Ventajas LED  \nhttp://www.ofiled.com/led/ventajas -de-la -iluminacion-led  \n \n- TodaCultura (2009). Luz Infrarroja \nhttp://www.todacultura.com/glosarioacuarela/luzinfrarroja.htm  \n \n- Spitzer (2009). \u00bfQu\u00e9 es el infrarrojo?  \nhttp://legacy.spitzer.caltech.edu/espanol//edu/ir/infrared.html  \n \n- Bachelor of Science in Public Health, BSPH ; Prof. Colon de Jorge  C. M. (2009). \nAplicaciones de la radiaci\u00f3n infrarroja. Disponible en: \nhttp://www.slideshare.net/naturopatia/aplicaciones -de-la -luz-infra-roja  \n7.4. Hardware  \n- Teledyne Dalsa (2013). Cat\u00e1logo c\u00e1maras Genie \nhttp://www.teledynedalsa.com/imaging/products/cameras/area-scan/genie/  \n \n- Teledyne Dalsa (2013). Cat\u00e1logo PC Geva  \nhttp://www.teledynedalsa.com/imaging/products/va/  \n \n- Machine Building (2010). GEVA compact vision PC supports multiple cameras  \nhttp://www.machinebuilding.net/p/p3539.htm  \nTRABAJO FINAL DE CARRERA  \n102 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n- Electan (2006). Solenoide / Electroim\u00e1n  \nhttp://www.electan.com/datasheets/cebek/C -6092.pdf  \n \n- National Instruments Corporation (2008). C\u00f3mo hacer medidas con c\u00e9lulas de \ncarga o transductores de presi\u00f3n  \nhttp://www.ni.com/white-paper/7138/es  \n \n- HBM Espa\u00f1a  (2010). C\u00e9lulas de carga de HBM: la soluci\u00f3n correcta para cualquier \naplicaci\u00f3n  \nhttp://www.hbm.com/es/menu/productos/celulas -de-carga/  \n \n- B&R (2012). 4PP420.1043-75, Datasheet  \nhttp://www.br -automation.com/en-us/products/visualization- and-operation/power -\npanel -300400/power -panel -400-embedded/4pp4201043-75/  \n \n- B&R (2012). X20PS9400, Datasheet \nhttp://www.br -\nautomation.com/downloads_br_productcatalogue/BRP44400000000000000103125/\nX20PS9400 -GER.pdf  \n \n- B&R (2012). X20DI4371, Datasheet \nhttp://www.br -\nautomation.com/downloads_br_productcatalogue/BRP44400000000000000100211/\nX20DI4371-GER.pdf  \n \n- B&R (2012). X20AI1744, Datasheet \nhttp://www.br -\nautomation.com/downloads_br_productcatalogue/BRP44400000000000000123269/\nX20AI1744- GER.pdf  \n \n- B&R (2012). X20AO4622, Datasheet \nhttp://www.br -\nautomation.com/downloads_br_productcatalogue/BRP44400000000000000104357/\nX20AO4622 -ENG.pdf  \n \nTRABAJO FINAL DE CARRERA  \n103 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n- B&R (2012). X20DO8332, Datasheet \nhttp://www.br -\nautomation.com/downloads_br_productcatalogue/BRP44400000000000000168312/\nX20DO8332 -ENG.pdf  \n \n- B&R (2012). X20PS2100, Datasheet \nhttp://www.br -\nautomation.com/downloads_br_productcatalogue/BRP44400000000000000104445/\nX20PS2100 -ENG.pdf  \n7.5. Software  \n- Teledyne Dalsa (2013). Sherlock Vision System Software \nhttp://www.teledynedalsa.com/imaging/products/software/sherlock/  \n \n- Stemmer Imaging, Ltd. (2013). DALSA Sherlock - Machine vision software for \nindustry  \nhttp://www.stemmer -imaging.co.uk/en/products/line/dalsa.sherlock  \n \n- B&R (2012). Automation Studio \nhttp://www.br -automation.com/en/products/software/  \n7.6. Sistemas de comunicaci\u00f3n  \n- Gale on (2011 ). Protocolo TCP/IP  \nhttp://protocolotcpip.galeon.com/  \n \n- Microsoft (2013). Componentes de red y protocolos TCP/IP de nueva generaci\u00f3n  \nhttp://technet.microsoft.com/es -es/library/cc754287(v=ws.10).aspx  \n \nTRABAJO FINAL DE CARRERA  \n104 \n ERICO CRUZ LEMUS  SISTEMA ELECTR\u00d3NICO DE CALIBRACI\u00d3N DE FRUTA \nPOR DI\u00c1METRO  \n \n8. ANEXOS  \n8.1. ANEXO 1: Esquemas el\u00e9ctricos  \n8.2. ANEXO 2: Planos  mec\u00e1nicos  \n8.2.1. Soportes c\u00e1maras \n8.2.2. Soportes barras de LED  \n8.2.3. Estructura campana c\u00e1maras \n8.2.4. Conjunto campana c\u00e1maras \n8.2.5. Conjunto caja pantalla PLC  A \n8.2.6. Conjunto caja pantalla PLC B  \nTRABAJO FINAL DE CARRERA  \n105 \n  \n \n \n    \n \n \nANEXOS  \n \nANEXO 1: Esquemas el\u00e9ctricos  \nANEXO 2: Planos  mec\u00e1nicos  \nSoportes c\u00e1maras  \nSoportes barras de LED  \nEstructura campana  c\u00e1maras  \nConjunto campana c\u00e1maras  \nConjunto caja pantalla PLC  A \nConjunto caja pantalla PLC B  \n &3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$&3*$0\u0001$36;\u0001-&.645'$\u000167*$(\u001d\u0003\u0014\u0012\u0015\u0015\u0019\n\u0016\u0018\n\u0017\n\u0014\n1\u00bcPHUR 'HVFULSFLyQ &yGLJR &DQWLGDG\n\u0014 &\u00a3PDUD\u0003*HQLH\u00030\u0014\u0013\u0015\u0017\u0010\u0014\u0012\u0016\u0005\u00030RQRFURPR (\u0013\u0018\u0013\u0013\u0013\u0013\u0013\u0014\u0014 \u0014\n\u0015 6RSRUWH\u0003FDPDUD V\u0013\u0013\u0013\u0014\u001a\u0017 \u0014\n\u0016 $UDQGHOD\u0003GH\u0003SUHVL\u00b5Q\u0003',1\u0003\u0014\u0015\u001a%\u00030\u0016\u0003 7\u0013\u001b\u0013\u0013\u0013\u0013\u0013\u0013\u0017 \u0017\n\u0017 7RUQLOOR\u0003',1\u0003\u001c\u0014\u0015\u00030\u0016[\u0014\u0013 7\u0013\u0017\u0013\u0013\u0013\u0013\u0013\u0015\u0019 \u0017\n\u0018 &DEH]D\u0003GH\u0003PDUWLOOR\u0003%RVFK\u00030\u0019[\u0015\u0018\u00035\u001b\u0003 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0014 \u0014\n\u0019 7XHUFD\u0003FDE\u0011PDUWLOOR\u0003%RVFK\u00030\u0019 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0015 \u0014\nGH(\u0011\u0003&UX]\n\u0014\u0015\u0014\u0012\u0013\u001c\u0012\u0015\u0013\u0014\u0013\n\u0014\u001d\u00141|\n3/$12 9(5,),&$'225'(1\n02'\u0011(6&$/$ \u0003180(52\u0003'(\u0003$57,&8/2',%8-$'2$1(;2\u0003\u0015\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n\u001b\u0011\u0015\u0011\u0014\u0011\u00036RSRUWHV\u0003&iPDUDV\n7)&\u000389,&0$48,1$120%5( )(&+$&21-8172\u0003\u00036LQ\u0003\u0003LQGLFDFLRQ\u0003H[SUHVD\u0003URVFDV\n\u0003\u0003GH\u0003FDOLGDG\u0003\u0019\u0003\u000bPHGLD\f\n\u0003\u00037XHUFDV\u0003\u0003\u0003\u0003\u0019+\u0003\\\u00037RUQLOORV\u0003\u0003\u0019J\u0011\u0003/DV\u0003PHGLGDV VHUDQ\u0003H[SUHV\u0011\u0003YHULILFDGDV\u0011\n\u0003/DV\u0003PHGLGDV\u0003\u000b\u0003\u0003\u0003\u0003\f\u0003QR\u0003WLHQHQ\u0003LPSRUWDQFLD\u0011\n\u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003HVTXLQDV\u0003VHUDQ\u0003D\u0003\u0013\u000f\u0018PP\u00035\u0011\n\u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003DULVWDV\u0003VHUDQ\u0003\u0013\u000f\u0018PP\u0003D\u0003\u0017\u0018r\u0011 \u0010 \u0010 )(&+$\u0010120%5(\u0010 \u0010 \u001018(92\u00031r 1r\u00036867,78,'2 3/$12\u0003'(\u00035()(5(1&,$s\u0016 s\u0015 s\u0014\u000f\u0015 s\u0013\u000f\u001b s\u0013\u000f\u0018 s\u0013\u000f\u0016 s\u0013\u000f\u0015 s\u0013\u000f\u0014',1\u0003\u001a\u0014\u0019\u001b\n3UHFLVLRQ\u0003PHGLD6,*126\n$\u0003(;7,1*8,5PDV\u0003GH\n\u0017\u0013\u0013\u0013\nKDVWD\n\u001b\u0013\u0013\u0013PDV\u0003GH\n\u0015\u0013\u0013\u0013\nKDVWD\n\u0017\u0013\u0013\u0013PDV\u0003GH\n\u0014\u0013\u0013\u0013\nKDVWD\n\u0015\u0013\u0013\u0013PDV\u0003GH\n\u0016\u0014\u0018\nKDVWD\n\u0014\u0013\u0013\u0013PDV\u0003GH\n\u0014\u0015\u0013\nKDVWD\n\u0016\u0014\u0018PDV\u0003GH\n\u0016\u0013\nKDVWD\n\u0014\u0015\u0013PDV\u0003GH\n\u0019\nKDVWD\n\u0016\u0013KDVWD\n\u0019\u0003'LIHUHQFLDV\u0003DGPLVLEOHV\n\u0003SDUD\u0003PHGLGDV\u0003VLQ\n\u0003LQGLFDFLRQ\u0003GH\u0003\u0003WROHUDQFLD\u0003\u0013\u000f\u0013\u0014\u0019\u0010\u0013\u000f\u0015 \u0003\u0003\u0003\u0013\u000f\u0015\u0010\u0013\u000f\u001b \u0003\u0003\u0003\u0013\u000f\u001b\u0010\u0016\u000f\u0015 \u0003\u0003\u0016\u000f\u0015\u0010\u0014\u0015\u000f\u001858*26,'$'\n5D\n,62\u00125\u0003\u0017\u0019\u001b\n+RMD\n\u0014'(6&5,3&,\u00951\nH\u0013\u0013\u0013\u0014\u001a\u0018&3*$0\u0001$36;\u0001-&.64\u001a\n\u0014\n\u0018\u0017\n\u0016\u0015\u0019\n\u0016\n1\u00bcPHUR 'HVFULSFLyQ &yGLJR &DQWLGDG\n\u0014 \u0003%DUUD\u0003/('V\u0003\u0003LQIUD\u0011\u0003,5\u0017\u0013\u0013[\u0015\u0018PP\u0003\u0003 (\u0013\u0018\u0013\u0013\u0013\u0013\u0013\u0014\u0015 \u0014\n\u0015 6RSRUWH\u0003OHGV V\u0013\u0013\u0013\u0014\u001a\u0018 \u0014\n\u0016 $UDQGHOD\u0003GH\u0003SUHVL\u00b5Q\u0003GLQ\u0003\u0014\u0015\u001a\u0003%\u00030\u0017 7\u0013\u001b\u0013\u0013\u0013\u0013\u0013\u0013\u0016 \u001b\n\u0017 7RUQLOOR\u0003',1\u0003\u001c\u0014\u0015\u00030\u0017[\u0015\u0018 7\u0013\u0017\u0013\u0013\u0013\u0013\u0013\u0015\u0014 \u0017\n\u0018 7XHUFD\u0003',1\u0003\u001c\u0016\u0017\u00030\u0017 7\u0013\u0016\u0013\u0013\u0013\u0013\u0013\u0013\u001b \u0017\n\u0019 &DEH]D\u0003GH\u0003PDUWLOOR\u0003%RVFK\u00030\u0019[\u0015\u0018\u00035\u001b\u0003 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0014 \u0014\n\u001a 7XHUFD\u0003FDE\u0011PDUWLOOR\u0003%RVFK\u00030\u0019 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0015 \u0014\nGH(\u0011&UX]\n\u0014\u0015\u0014\u0012\u0013\u001c\u0012\u0015\u0013\u0014\u0013\n\u0014\u001d\u00151|\n3/$12 9(5,),&$'225'(1\n02'\u0011(6&$/$ \u0003180(52\u0003'(\u0003$57,&8/2',%8-$'2$1(;2\u0003\u0015\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n\u001b\u0011\u0015\u0011\u0015\u0011\u00036RSRUWHV\u0003%DUUDV\u0003GH\u0003/('\n7)&\u000389,&0$48,1$120%5( )(&+$&21-8172\u0003\u00036LQ\u0003\u0003LQGLFDFLRQ\u0003H[SUHVD\u0003URVFDV\n\u0003\u0003GH\u0003FDOLGDG\u0003\u0019\u0003\u000bPHGLD\f\n\u0003\u00037XHUFDV\u0003\u0003\u0003\u0003\u0019+\u0003\\\u00037RUQLOORV\u0003\u0003\u0019J\u0011\u0003/DV\u0003PHGLGDV VHUDQ\u0003H[SUHV\u0011\u0003YHULILFDGDV\u0011\n\u0003/DV\u0003PHGLGDV\u0003\u000b\u0003\u0003\u0003\u0003\f\u0003QR\u0003WLHQHQ\u0003LPSRUWDQFLD\u0011\n\u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003HVTXLQDV\u0003VHUDQ\u0003D\u0003\u0013\u000f\u0018PP\u00035\u0011\n\u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003DULVWDV\u0003VHUDQ\u0003\u0013\u000f\u0018PP\u0003D\u0003\u0017\u0018r\u0011 \u0010 \u0010 )(&+$\u0010120%5(\u0010 \u0010 \u001018(92\u00031r 1r\u00036867,78,'2 3/$12\u0003'(\u00035()(5(1&,$s\u0016 s\u0015 s\u0014\u000f\u0015 s\u0013\u000f\u001b s\u0013\u000f\u0018 s\u0013\u000f\u0016 s\u0013\u000f\u0015 s\u0013\u000f\u0014',1\u0003\u001a\u0014\u0019\u001b\n3UHFLVLRQ\u0003PHGLD6,*126\n$\u0003(;7,1*8,5PDV\u0003GH\n\u0017\u0013\u0013\u0013\nKDVWD\n\u001b\u0013\u0013\u0013PDV\u0003GH\n\u0015\u0013\u0013\u0013\nKDVWD\n\u0017\u0013\u0013\u0013PDV\u0003GH\n\u0014\u0013\u0013\u0013\nKDVWD\n\u0015\u0013\u0013\u0013PDV\u0003GH\n\u0016\u0014\u0018\nKDVWD\n\u0014\u0013\u0013\u0013PDV\u0003GH\n\u0014\u0015\u0013\nKDVWD\n\u0016\u0014\u0018PDV\u0003GH\n\u0016\u0013\nKDVWD\n\u0014\u0015\u0013PDV\u0003GH\n\u0019\nKDVWD\n\u0016\u0013KDVWD\n\u0019\u0003'LIHUHQFLDV\u0003DGPLVLEOHV\n\u0003SDUD\u0003PHGLGDV\u0003VLQ\n\u0003LQGLFDFLRQ\u0003GH\u0003\u0003WROHUDQFLD\u0003\u0013\u000f\u0013\u0014\u0019\u0010\u0013\u000f\u0015 \u0003\u0003\u0003\u0013\u000f\u0015\u0010\u0013\u000f\u001b \u0003\u0003\u0003\u0013\u000f\u001b\u0010\u0016\u000f\u0015 \u0003\u0003\u0016\u000f\u0015\u0010\u0014\u0015\u000f\u001858*26,'$'\n5D\n,62\u00125\u0003\u0017\u0019\u001b\n+RMD\n\u0014'(6&5,3&,\u00951\nH\u0013\u0013\u0013\u0014\u001a\u0019&3*$0\u0001$36;\u0001-&.64$\n&\n(%\n'\n\u0017\u0014\u0016\n\u0017\u001c\u0015\n\u0014\u001c \u0014\u001c\n\u0014\u001a \u0015\u0013\u0015\u0013 \u0015\u0013\u0014\u001b\u0014\u001b\n\u0014\u001b'(7$//(\u0003$\u0003\n(6&$/$\u0003\u0014\u0003\u001d\u0003\u0018\u001b \u0019\n'(7$//(\u0003&\u0003\n(6&$/$\u0003\u0014\u0003\u001d\u0003\u0018\u0014\u0017\u0014\u0016\n\u0014\u0019\u0014\u0018\u0014\u0014\n\u0014\u0015\n'(7$//(\u0003(\u0003\n(6&$/$\u0003\u0014\u0003\u001d\u0003\u0018\u00186XVWLWXLU\u0003&DEH]D\u0003PDUWLOOR\u0003\\\u0003WXHUFD\nSRU\u00030\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0014\u0003\\\u00030\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0015\n'(7$//(\u0003%\u0003\n(6&$/$\u0003\u0014\u0003\u001d\u0003\u0018\u001a\n\u0018\n'(7$//(\u0003'\u0003\n(6&$/$\u0003\u0014\u0003\u001d\u0003\u0018\u0014\u0013\n8QLRQ\u0003SHUILOHV\u0003\u0017\u0018[\u0017\u0018\u0003FRQ\u0003\u0016\u0013[\u0016\u00133LH]D\u0003Q|\u001a\u0003ILMDFL\u00b5Q\u0003UH\\QRERQG\n( \u0003\u0014\u001d\u00181\u00bcPHUR 'HVFULSFL\u00b5Q &\u00b5GLJR &DQWLGDG\n\u0014 3HUILO\u0003%RVFK\u0003\u0017\u0018;\u0017\u0018/\u00035\u0003/ \u001b\u0018\u0013PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u0013 \u0017\n\u0015 3HUILO\u0003%RVFK\u0003\u0017\u0018[\u0017\u0018/\u00035\u0003/ \u0019\u0014\u0013PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u0014 \u0015\n\u0016 3HUILO\u0003%RVFK\u0003\u0017\u0018[\u0017\u0018/\u00035\u0003/ \u0014\u0015\u0013\u0013PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u0015 \u0017\n\u0017 3HUILO\u0003%RVFK\u0003\u0016\u0013[\u0016\u0013\u0003/ \u0019\u0014\u0013PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u0016 \u0017\n\u0018(VFXDGUD\u0011%RVFK\u00039DULRIL[\u0010EORFN\u00036\u0017\u0013\u0012\u0017\u0018\u00030\u001b[\u0015\u0018\u0003\n5\u0014\u00130\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u001b \u0015\u0013\n\u0019 5LQFRQHUD\u0003HVIHULFD\u0003%RVFK\u0003\u0017\u0018[\u0017\u0018 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u0019 \u0017\n\u001a %RVFK\u00039DULRIL[\u0010EORFN\u00036\u0017\u0013\u0012\u0017\u0018 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u001c \u001b\n\u001b 7DSD\u0003ULQFRQHUD\u0003HVIHULFD\u0003%RVFK\u0003\u0017\u0018[\u0017\u0018 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u001a \u0017\n\u001c 3HUILO\u0003%RVFK\u0003\u0016\u0013[\u0016\u0013\u0003/ \u001b\u0019\u0018PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0014\u0017 \u0014\n\u0014\u0013 (VFXDGUD\u0003%RVFK\u0003\u0016\u0013[\u0016\u0013\u00030\u0019[\u0014\u0017\u00035\u001b 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0013 \u0014\u0019\n\u0014\u0014 3ODWLQD\u0003XQLRQ\u0003SHUILOHV\u0003DUPDULR V\u0013\u0013\u0013\u0013\u001b\u0013 \u0017\n\u0014\u0015 7XHUFD\u0003GH\u0003PDUWLOOR\u00030\u001b\u00035\u0014\u0013 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0013\u0014 \u001b\n\u0014\u0016 $UDQGHOD\u0003',1\u0003\u0014\u0015\u0018\u0010%\u00030\u001b 7\u0013\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0017 \u001b\n\u0014\u0017 7RUQLOOR\u0003',1\u0003\u001c\u0014\u0015\u00030\u001b[\u0014\u0019 7\u0013\u0017\u0013\u0013\u0013\u0013\u0013\u0013\u001b \u001b\n\u0014\u0018 &DEH]D\u0003GH\u0003PDUWLOOR\u0003%RVFK\u00030\u0019[\u0015\u0018\u00035\u001b\u0003 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0014 \u0017\n\u0014\u0019 7XHUFD\u0003FDE\u0011PDUWLOOR\u0003%RVFK\u00030\u0019 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0015 \u0017\n\u0014\u001a 3HUILO\u0003%RVFK\u0003\u0016\u0013[\u0016\u0013\u00035\u001b\u0003/ \u001b\u0018\u0013PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0018 \u0015\n\u0014\u001b 3HUILO\u0003%RVFK\u0003\u0016\u0013[\u0016\u0013\u00035\u001b\u0003/ \u0019\u0015\u0018PP 0\u0014\u0013\u0013\u0013\u0013\u0013\u0013\u0015\u0019 \u0016\n\u0014\u001c &RQMXQWR\u0003&DP\u0011\u0003,QIDLPRQ\u0003\u000e\u0003VRSRUWH V\u0013\u0013\u0013\u0013\u001b\u0019 \u0015\n\u0015\u0013 &RQMXQWR\u0003LOXPLQDFL\u00b5Q\u0003,QIDLPRQ\u0003\u000e\u0003VRSRUWH V\u0013\u0013\u0013\u0013\u001b\u001a \u0016\nH\u0013\u0013\u0013\u0014\u001a\u001a'(6&5,3&,\u00951\n\u0014+RMD58*26,'$'\n5D\n,62\u00125\u0003\u0017\u0019\u001b\u0003\u0003\u0016\u000f\u0015\u0010\u0014\u0015\u000f\u0018 \u0003\u0003\u0003\u0013\u000f\u001b\u0010\u0016\u000f\u0015 \u0003\u0003\u0003\u0013\u000f\u0015\u0010\u0013\u000f\u001b \u0003\u0013\u000f\u0013\u0014\u0019\u0010\u0013\u000f\u0015\u0003'LIHUHQFLDV\u0003DGPLVLEOHV\n\u0003SDUD\u0003PHGLGDV\u0003VLQ\n\u0003LQGLFDFLRQ\u0003GH\u0003\u0003WROHUDQFLDKDVWD\n\u0019PDV\u0003GH\n\u0019\nKDVWD\n\u0016\u0013PDV\u0003GH\n\u0016\u0013\nKDVWD\n\u0014\u0015\u0013PDV\u0003GH\n\u0014\u0015\u0013\nKDVWD\n\u0016\u0014\u0018PDV\u0003GH\n\u0016\u0014\u0018\nKDVWD\n\u0014\u0013\u0013\u0013PDV\u0003GH\n\u0014\u0013\u0013\u0013\nKDVWD\n\u0015\u0013\u0013\u0013PDV\u0003GH\n\u0015\u0013\u0013\u0013\nKDVWD\n\u0017\u0013\u0013\u0013PDV\u0003GH\n\u0017\u0013\u0013\u0013\nKDVWD\n\u001b\u0013\u0013\u0013\n6,*126\n$\u0003(;7,1*8,5',1\u0003\u001a\u0014\u0019\u001b\n3UHFLVLRQ\u0003PHGLDs\u0013\u000f\u0014 s\u0013\u000f\u0015 s\u0013\u000f\u0016 s\u0013\u000f\u0018 s\u0013\u000f\u001b s\u0014\u000f\u0015 s\u0015 s\u0016\n3/$12\u0003'(\u00035()(5(1&,$ 1r\u00036867,78,'2 18(92\u00031r\n\u0010\u0010 \u0010\n)(&+$\u0010120%5( \u0010\u0010 \u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003DULVWDV\u0003VHUDQ\u0003\u0013\u000f\u0018PP\u0003D\u0003\u0017\u0018r\u0011\u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003HVTXLQDV\u0003VHUDQ\u0003D\u0003\u0013\u000f\u0018PP\u00035\u0011\u0003/DV\u0003PHGLGDV\u0003\u000b\u0003\u0003\u0003\u0003\f\u0003QR\u0003WLHQHQ\u0003LPSRUWDQFLD\u0011\u0003/DV\u0003PHGLGDV VHUDQ\u0003H[SUHV\u0011\u0003YHULILFDGDV\u0011 \u0003\u00036LQ\u0003\u0003LQGLFDFLRQ\u0003H[SUHVD\u0003URVFDV\n\u0003\u0003GH\u0003FDOLGDG\u0003\u0019\u0003\u000bPHGLD\f\n\u0003\u00037XHUFDV\u0003\u0003\u0003\u0003\u0019+\u0003\\\u00037RUQLOORV\u0003\u0003\u0019J\u0011\n&21-8172\n)(&+$ 120%5(\n0$48,1$$1(;2\u0003\u0015\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n\u001b\u0011\u0015\u0011\u0016\u0011\u0003(VWUXFWXUD\u0003&DPSDQD\u0003&iPDUDV\n7)&\u000389,&\n',%8-$'2\n\u0003180(52\u0003'(\u0003$57,&8/2 (6&$/$25'(1\n02'\u0011\n9(5,),&$'21|\n3/$12 \u0014\u001d\u0015\u0013\u0013\u0015\u0012\u0013\u0015\u0012\u0015\u0013\u0014\u0013\n\u0014(\u0011&UX]\nGH&3*$0\u0001$36;\u0001-&.64$\u0015\n\u0014\u0016\u0017\n'(7$//(\u0003$\u0003\n(6&$/$\u0003\u0014\u0003\u001d\u0003\u0015\u00181\u00bcPHUR 'HVFULSFL\u00b5Q &\u00b5GLJR &DQWLGDG\n\u0014&RQM\u0011\u0003HVWUXFWXUD\u0003FDPSDQD\u0003FDPDUDV\u0003YLVL\u00b5Q\u0003\u0017\u0003\nOLQHDVV\u0013\u0013\u0013\u0013\u001b\u001b \u0014\n\u0015 \u0003&DUHQDGR\u0003\u0014\u0003FDMD\u0003GH\u0003FDPDUDV V\u0013\u0013\u0013\u0013\u001b\u0016 \u0015\n\u0016 &DUHQDGR\u0003\u0015\u0003FDMD\u0003GH\u0003FDPDUDV V\u0013\u0013\u0013\u0013\u001b\u0017 \u0015\n\u0017 &DUHQDGR\u0003\u0016\u0003FDMD\u0003GH\u0003FDPDUDV\u0003 V\u0013\u0013\u0013\u0013\u001b\u0018 \u0014\n\u0018 7RUQLOOR\u0003,62\u0003\u001a\u0016\u001b\u0013\u00030\u001b[\u0015\u0013 7\u0013\u0019\u0013\u0013\u0013\u0013\u0013\u0013\u0015 \u0014\u001c\n\u0019 7RUQLOOR\u0003,62\u0003\u001a\u0016\u001b\u0013\u00030\u001b[\u0015\u0013 7\u0013\u0019\u0013\u0013\u0013\u0013\u0013\u0013\u0015 \u0014\nH\u0013\u0013\u0013\u0014\u001a\u001b'(6&5,3&,\u00951\n\u0014+RMD58*26,'$'\n5D\n,62\u00125\u0003\u0017\u0019\u001b\u0003\u0003\u0016\u000f\u0015\u0010\u0014\u0015\u000f\u0018 \u0003\u0003\u0003\u0013\u000f\u001b\u0010\u0016\u000f\u0015 \u0003\u0003\u0003\u0013\u000f\u0015\u0010\u0013\u000f\u001b \u0003\u0013\u000f\u0013\u0014\u0019\u0010\u0013\u000f\u0015\u0003'LIHUHQFLDV\u0003DGPLVLEOHV\n\u0003SDUD\u0003PHGLGDV\u0003VLQ\n\u0003LQGLFDFLRQ\u0003GH\u0003\u0003WROHUDQFLDKDVWD\n\u0019PDV\u0003GH\n\u0019\nKDVWD\n\u0016\u0013PDV\u0003GH\n\u0016\u0013\nKDVWD\n\u0014\u0015\u0013PDV\u0003GH\n\u0014\u0015\u0013\nKDVWD\n\u0016\u0014\u0018PDV\u0003GH\n\u0016\u0014\u0018\nKDVWD\n\u0014\u0013\u0013\u0013PDV\u0003GH\n\u0014\u0013\u0013\u0013\nKDVWD\n\u0015\u0013\u0013\u0013PDV\u0003GH\n\u0015\u0013\u0013\u0013\nKDVWD\n\u0017\u0013\u0013\u0013PDV\u0003GH\n\u0017\u0013\u0013\u0013\nKDVWD\n\u001b\u0013\u0013\u0013\n6,*126\n$\u0003(;7,1*8,5',1\u0003\u001a\u0014\u0019\u001b\n3UHFLVLRQ\u0003PHGLDs\u0013\u000f\u0014 s\u0013\u000f\u0015 s\u0013\u000f\u0016 s\u0013\u000f\u0018 s\u0013\u000f\u001b s\u0014\u000f\u0015 s\u0015 s\u0016\n3/$12\u0003'(\u00035()(5(1&,$ 1r\u00036867,78,'2 18(92\u00031r\n\u0010\u0010 \u0010\n)(&+$\u0010120%5( \u0010\u0010 \u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003DULVWDV\u0003VHUDQ\u0003\u0013\u000f\u0018PP\u0003D\u0003\u0017\u0018r\u0011\u00036LQ\u0003LQGLFDFLRQ\u0003ODV\u0003HVTXLQDV\u0003VHUDQ\u0003D\u0003\u0013\u000f\u0018PP\u00035\u0011\u0003/DV\u0003PHGLGDV\u0003\u000b\u0003\u0003\u0003\u0003\f\u0003QR\u0003WLHQHQ\u0003LPSRUWDQFLD\u0011\u0003/DV\u0003PHGLGDV VHUDQ\u0003H[SUHV\u0011\u0003YHULILFDGDV\u0011 \u0003\u00036LQ\u0003\u0003LQGLFDFLRQ\u0003H[SUHVD\u0003URVFDV\n\u0003\u0003GH\u0003FDOLGDG\u0003\u0019\u0003\u000bPHGLD\f\n\u0003\u00037XHUFDV\u0003\u0003\u0003\u0003\u0019+\u0003\\\u00037RUQLOORV\u0003\u0003\u0019J\u0011\n&21-8172\n)(&+$ 120%5(\n0$48,1$$1(;2\u0003\u0015\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n\u001b\u0011\u0015\u0011\u0017\u0011\u0003&RQMXQWR\u0003&DPSDQD\u0003&iPDUDV\n7)&\u000389,&\n',%8-$'2\n\u0003180(52\u0003'(\u0003$57,&8/2 (6&$/$25'(1\n02'\u0011\n9(5,),&$'21|\n3/$12 \u0014\u001d\u0014\u0013\u0013\u0015\u0012\u0013\u0015\u0012\u0015\u0013\u0014\u0013\n\u0014(\u0011&UX]\nGH&3*$0\u0001$36;\u0001-&.6427\n8\n6\n93\n110\n5 44N\u00famero Descripci\u00f3n C\u00f3digo Cantidad\n1 Caja pantalla B&R PP420 10.4\" s000091 1\n2  Power Panel B&R PP420 10.4\" E040000021 1\n3 Tapa caja pantalla B&R PP420 10.4\" s000092 1\n4 Montage TEG Racord electric M20x1.5 2\n5 Montage TEG Racord electric M25x1.5 1\n6 Tornillo ISO 7380  M4x8 T060000007 4\n7 Emka Asa 160B20 Aluminio anodizado M090000013 1\n8 Arandela DIN 125-B  M6 T010000003 2\n9 Tornillo DIN 912  M6x10 T040000017 2\n10 Montage TEG Ventilador 1\nH000\u0014\u001a\u001cDESCRIPCI\u00d3N\n1HojaRUGOSIDAD\nRa\nISO/R 468  3,2-12,5    0,8-3,2    0,2-0,8  0,016-0,2 Diferencias admisibles\n para medidas sin\n indicacion de  toleranciahasta\n6mas de\n6\nhasta\n30mas de\n30\nhasta\n120mas de\n120\nhasta\n315mas de\n315\nhasta\n1000mas de\n1000\nhasta\n2000mas de\n2000\nhasta\n4000mas de\n4000\nhasta\n8000\nSIGNOS\nA EXTINGUIRDIN 7168\nPrecision media\u00b10,1 \u00b10,2 \u00b10,3 \u00b10,5 \u00b10,8 \u00b11,2 \u00b12 \u00b13\nPLANO DE REFERENCIA N\u00b0 SUSTITUIDO NUEVO N\u00b0\n-- -\nFECHA-NOMBRE --  Sin indicacion las aristas seran 0,5mm a 45\u00b0. Sin indicacion las esquinas seran a 0,5mm R. Las medidas (    ) no tienen importancia. Las medidas seran expres. verificadas.   Sin  indicacion expresa roscas\n  de calidad 6 (media)\n  Tuercas    6H y Tornillos  6g.\nCONJUNTO\nFECHA NOMBRE\nMAQUINA$1(;2\u0003\u0015\n8.2.5. &RQMXQWR\u0003&DMD\u0003SDQWDOOD\u00033/&\u0003$  \n7)&\u000389,&\nDIBUJADO\n NUMERO DE ARTICULO ESCALAORDEN\nMOD.\nVERIFICADON\u00ba\nPLANO 1:1001/02/2010\n1(.\u0003&UX]\nde&3*$0\u0001$36;\u0001-&.64445303 0.5\n243 0.5 10071AA\nMagnitud sobre plano inclinado\n412\nR32,5105,00\u00b090\ne.c.150e.c.90\nD277,567,571,5\n71,5\n80C\n223,5160 142,5 142,5\n45\n6,5160\n3902032,5 B SECCI\u00d3N A-APlancha e=2.5mm soldada parte interior\n300300310310\n222,5 222,560 60\n222228\n22,5AFW M4R8\nDETALLE A \nESCALA 2 : 5\n6,5\nDETALLE B \nESCALA 2 : 5\n4,5\nDETALLE C \nESCALA 2 : 5\n20\n20 10103\nDETALLE D \nESCALA 2 : 5Taladro diam.3mm (16 columnas x 10 filas)FW: Taladro flow drillPintura:\n50% Gris blau pantone 5415\n50% Blanc RAL 9010\nMaterial Acabado Fabricaci\u00f3n Peso Cantidad\n1023 Chapa de acero al carbono \n(SS)Pintado Plancha 2.5mm 9.5 kg 1\nH000\u0014\u001b\u0013 0DESCRIPCI\u00d3N\n1HojaRUGOSIDAD\nRa\nISO/R 468  3,2-12,5    0,8-3,2    0,2-0,8  0,016-0,2 Diferencias admisibles\n para medidas sin\n indicacion de  toleranciahasta\n6mas de\n6\nhasta\n30mas de\n30\nhasta\n120mas de\n120\nhasta\n315mas de\n315\nhasta\n1000mas de\n1000\nhasta\n2000mas de\n2000\nhasta\n4000mas de\n4000\nhasta\n8000\nSIGNOS\nA EXTINGUIRDIN 7168\nPrecision media\u00b10,1 \u00b10,2 \u00b10,3 \u00b10,5 \u00b10,8 \u00b11,2 \u00b12 \u00b13\nPLANO DE REFERENCIA N\u00b0 SUSTITUIDO NUEVO N\u00b0\n-- -\nFECHA-NOMBRE --  Sin indicacion las aristas seran 0,5mm a 45\u00b0. Sin indicacion las esquinas seran a 0,5mm R. Las medidas (    ) no tienen importancia. Las medidas seran expres. verificadas.   Sin  indicacion expresa roscas\n  de calidad 6 (media)\n  Tuercas    6H y Tornillos  6g.\nCONJUNTO\nFECHA NOMBRE\nMAQUINA$1(;2\u0003\u0015\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n\u001b\u0011\u0015\u0011\u0019\u0011\u0003&RQMXQWR\u0003&DMD\u00033DQWDOOD\u00033/&\u0003%\n7)&\u000389,&\nDIBUJADO\n NUMERO DE ARTICULO ESCALAORDEN\nMOD.\nVERIFICADON\u00ba\nPLANO 1:529/01/2010\n1(.\u0003&UX]\nde&3*$0\u0001$36;\u0001-&.64", "language": "PDF", "image": "PDF", "pagetype": "PDF", "links": "PDF"}