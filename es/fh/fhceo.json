{"title": "PDF", "author": "PDF", "url": "https://openaccess.uoc.edu/bitstream/10609/45763/10/miglesiasjTFG0116memoria.pdf", "hostname": "PDF", "description": "PDF", "sitename": "PDF", "date": "PDF", "id": "PDF", "license": "PDF", "body": "PDF", "comments": "PDF", "commentsbody": "PDF", "raw_text": "PDF", "text": " \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nTRABAJO FINAL  \n \n \nGRADO  \n \n \nDise\u00f1o e implementaci\u00f3n de un Dron  \nPara la detecci\u00f3n de incendios forestales  \n \n \n \n  \n \n  \n \n \n \n \n  \n  \nAlumno Miguel \u00c1ngel Iglesias Jim\u00e9nez \nGrado Ingenier\u00eda Telecomunicaciones, especialidad Sistemas de Telecomunicaci\u00f3n  \n \nProfesor: Xavi Villajosana Guillen  \nConsultor: Pere Tuset Peir\u00f3  \n \n10 enero  2016 rev(27/01/16)  \n \n \n \n \n \n \n \n \n \n \n  \n \n                     \n              \n \n \n \nEsta obra est\u00e1 sujeta a una licencia de  \nReconocimiento- No comercial - Sin Obra Derivada 3.0 \nEspa\u00f1a de Creative C ommos  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     2 de 374  \n \n               \nA MIS PADRES, HERMANOS Y FAMILIA, as\u00ed como   \na mi pareja POR EL APOYO DADO A LO LARGO DE ESTOS A\u00d1OS \nQUE HA HECHO  POSIBLE LLEGAR HASTA AQUI.  \n \nAgradecer este proyecto:  \nA profesores de la UOC  y en especial a Co nsultores por su ayuda, \npaciencia y  respuestas siempre que l as he necesitado, serian muchos \npara poder citarlos debido a lo largo de estos a\u00f1os.  \n \nA la especial figura de mi Tutor, Gracias Joaqu\u00edn por esos consejos \nimportantes en cada momento y que siempre me has dado.  \n A compa\u00f1eros que igualmente serian muchos , el m\u00e1s reciente Jordi   \ngracias por ejercer en apoyo para facilitarme el tener un punto de vista cr\u00edtico siempre una inestimable ayuda para ver y localizar mejoras.  \n   \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     3 de 374  \nFICHA DEL TRABAJO FINAL  \nT\u00edtulo del trabajo:  Dise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales  \n \nNombre del Autor:  Miguel \u00c1ngel Iglesias Jim\u00e9nez  \nNombre del consultor:  Pere Tuset Peir\u00f3  \nFecha del libramiento (mm/aaaa):  Enero/2016  \n\u00c1rea del trabajo Final:  Sistemas Arduino  \nTitulaci\u00f3n:  Grado Ingenier\u00eda Telecomunicaciones (Sistemas Telecomunicaci\u00f3n)  \nAbstrac  \nThe serious damage caused by forest fires and the enormous size that reach them, make public \nadministrations spend and increase economic resources in prevention on fire fighting as well as to remedy \nthe negative consequences that these bring with them. Forest fires can cause irreparable damage to the \nenvironment as well as human losses and evictions of people who are reached by them.  \n \nAn important aspect in fire preventio n is its quick detection, since all the operating of extinction depends \non the detection of the initial focus to act immediately and prevent it from becoming a large fire. It is \ntherefore very necessary to detect the focus of a fire and determine the extension as soon as possible as \nwell as to determine exactly the location of the same.  \n \nDifferent technologies have been used for these purposes, which include the use of cameras, optical and \ninfrared satellite images as well as the use of the Integration Geog raphic (IGS) System. There are also \nother methods based on active laser (Salas, 2003), with very fast response times and ability to indicate \nthe \"actual location of the fire together with its intensity or virulence\", whose main difference from the \ninfrared is that this system is based on detecting smoke columns, getting faster in detention, while the \ninfrared to detect heat.  \n \nThere are basically two methods of detecting fires one based on the detection of the fire and another based on the detection of smoke \nin the use of cameras. The fire detection is simple but with the disadvantage \nthat when an optical camera detects a fire, this is already at an advanced stage. On the other hand, smoke detection allows you to detect forest fires in the early stages while the analysis of the images is much more \ncomplex since the algorithms responsible for the analysis should include: background subtraction, filtering \nof quick elements, and detection by colour and analysis of related components. Thus from the images by analy sing pixel to pixel you can see the smoke from controlled fires that corresponds to possible fire.  \n \nA system based on infrared and optical cameras, as it is the forest in Andaluc\u00eda (SPAIN), (which entered \ninto operation with the forest 2000 plan), consists of a series of infrared and optical cameras placed \nstrategically throughout the territory to control, a central monitoring with monitoring and image processing \nunit monitors. Each checkpoint situated in different towers has devices of cameras that provide a view of \n360 degrees, which sent the recorded images to the image- processing unit responsible for detecting a \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     4 de 374  \npossible fire. When a possible fire is automatically detected the camera will stop at that position and the \nalarm is sent to the monitor's supervision.  \nFrom the initial study a system of Imaging for Assembly is proposed in mobile unit (Dron) for surveillance \nof areas which fall outside the scope of systems as described previously (by scheduled flight).  \n \nOn the other hand the system provides some interesting new features since it integrates a number of \nsensors for the collection of meteorological data (atmospheric pressure, relative humidity, temperature...) \nthat are important in subsequently determining a plan of attack against fire (such as using specific software \nSIDAEX).  \n \nThus, with these objectives, and taking into account that we want the system to be mobile, various sensors \nare studied. We are looking for precision and low power consumption, which s hould be standard and if \npossible with minimum requirements of signal adaptation. They should have some of the communication systems that implement the node Coordinator integrated (Arduino).  \n \nThe described platform will be equipped with various communicati on systems including radio control by \nRF (2.4 GHz) and the possibility of communication via GSM modem which makes it useful to use as a \nsupport unit for extinction once teams are located in the area. They can use it to display areas in the \ndeclared fire where people cannot access, while allowing contact control center to extinguishing equipment \nand lines of possibles it. This gives this project a special appeal since the unit may become a \"patrol\" fire \nservice, while it can be used as a support unit by exti nction equipment s. \n \nKey Word  \nEmbedded systems, IGS (Systems Integration Geographic), forest fires, sensor network (WSN), systems \nwireless, Arduino and Dron.  \n \n \n         \n \n  \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     5 de 374  \n\u00cdndice de Contenidos  \n \n \n1. INTRODUCCION............................................................................................................................. 10 \n1.1. Justificaci\u00f3n y contexto  ................................ ................................ .....................  ................. 10 \n1.2. Descripci\u00f3n del proyecto  ................................ ................................ ................................ ...... 11 \n1.3. Objetivos principales  ................................ ................................ ................................ ............   12 \n1.4. Enfoque y metodolog\u00eda   ................................ ................................ ................................ ........  13 \n1.5. Planificaci\u00f3n   ................................ ................................ ................................ .........................  13 \n1.5.1.  Planteamiento inicial y seguimiento   ................................ ................................ ...........  13 \n1.5.2.  Diagrama de Gantt ...................................................................................  ..................  15 \n1.5.3.  Metodolog\u00eda de Memoria  .......................................................................... .................  15 \n1.5.4.  Metodolog\u00eda de aplicaci\u00f3n .........................................................................  .................  15 \n1.6. Breve descripci\u00f3n de los cap\u00edtulos de la memoria  ................................ ............................  17 \n2. ANTECEDENTES ..........................................................................................................  18 \n2.1. Estado del arte  ................................ ................................ ................................ ...................  18 \n2.2. Estudio de Mercado  ................................ ................................ ................................ ...........  19 \n3. DESCRIPCION TEORICA  Y FUNCIONAL............................................................. ........  21 \n3.1. Modelo UAV Quad -Rotor  ................................ ................................ ................................ ... 21 \n3.2. Componentes UAV  modelo Quad -Rotor  ................................ ................................ ...........  22 \n3.2.1.  Estructura  ................................ ................................ ................................ .................  22 \n3.2.2.  Motores y H\u00e9lices  ................................ ................................ ................................ ..... 22 \n3.2.3.  Controlador electr\u00f3nico de velocidad  ................................ ................................ ........  22 \n3.2.4.  Controlador (UAV)  ................................ ................................ ................................ .... 23 \n3.2.5.  Sensores IMU (Unidades Medici\u00f3n Inercial)  ................................ .............................  23 \n3.2.6.  Radio Control   ................................ ................................ ................................ ...........  23 \n3.2.7.  Telemetr\u00eda  ................................ ................................ ................................ .................  23 \n3.2.8.  Bater\u00eda  ................................ ................................ ................................ ......................  23 \n3.3. Detecci\u00f3n del Fuego  ................................ ................................ ................................ ..........  24 \n3.3.1.  Detecci\u00f3n del fuego mediante su C olor ................................ ................................ ... 24 \n3.3.2.  Detecci\u00f3n del fuego por Humo  ................................ ................................ .................  25 \n3.4. Descripci\u00f3n Funcional UAV en la detecci\u00f3n de incendios forestales  ................................  25 \n3.4.1.  Diagrama de Bloques de la aplicaci\u00f3n  ................................ ................................ ...... 26 \n3.4.2.  Posicionamiento y Comunicaci\u00f3n en la Red  ................................ .............................  27 \n3.4.3.  Interacci\u00f3n entre los diferentes Sub-Sistema s ................................ .........................  29 \n3.5. Aplicaci\u00f3n control y monitorizaci\u00f3n   ................................ ................................ ...................  30 \n3.5.1.  Dise\u00f1os interfaces usuarios   ................................ ................................ .....................  30 \n3.5.2.  Diagrama de Bloques Aplicaci\u00f3n WEB   ................................ ................................ .... 31 \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     6 de 374  \n                        [Ir al \u00edndice]  \n4. DESCRIPCION DETALLADA HARDWARE.................................................................3 2 \n4.1. Requisitos m\u00ednimos S istema Central y Controlador de Vuelo   ................................ ............  33 \n4.2. Descripci\u00f3n de m\u00f3dulos seleccionados   ................................ ................................ ..............  33 \n4.2.1.  CPU Sistema Centra l y Captura -Procesado de video .............................................. 35 \n4.2.2.  MCU controlador vuelo  ................................ ................................ .............................  35 \n4.2.3.  Estructura Quap- rotor ................................ ................................ ...............................  36 \n4.2.4.  Motores Propulsores  ................................ ................................ ................................ . 36 \n4.2.5.  H\u00e9lices  ................................ ................................ ................................ ......................  37 \n4.2.6.  Regulador velocidad Motores  ................................ ................................ ...................  38 \n4.2.7.  Modulo GPS y Br\u00fajula  HMC5883Ll   ................................ ................................ ..........  38 \n4.2.8.  Modem GSM -GPRS 900A  ................................ ................................ ........................  38 \n4.2.9.  Sistema Radio- Contro l (2.4GHz)  ................................ ................................ ..............  38 \n4.2.10.  Transmisor - Receptor Audio- Video( 5.8GHz)  ................................ .......................  39 \n4.2.11.  Visualizador datos en pantalla (OSD)  ................................ ................................ ... 39 \n4.2.12.  Sensor presi\u00f3n atmosf\u00e9rica  ................................ ................................ ..................  39 \n4.2.13.  Sensor iluminaci\u00f3n y proximidad  ................................ ................................ ..........  40 \n4.2.14.  Sensor Humedad relativa y temperatura   ................................ .............................  40 \n4.2.15.  Sistema Estabilizador C\u00e1mara Video (Gimbal)  ................................ ....................  42 \n4.3. Sistema de Alimentacion .................................................................................................. 43 \n4.3.1.  Selecci\u00f3n Bater\u00eda  ................................ ................................ ................................ ..... 43 \n4.3.2.  Adaptaci\u00f3n niveles tensi\u00f3n  ................................ ................................ .......................  44 \n4.3.3.  Estaci\u00f3n base  ................................ ................................ ................................ ...........  45 \n \n5. DESCRIPCION DETALLADA SOFTWARE........................... ..................................... 46 \n5.1. Sistema Operativo Central  ................................ ................................ ................................ .. 46 \n5.2. Lenguaje programaci\u00f3n Python  ................................ ................................ ..........................  47 \n5.3. Biblioteca de visi\u00f3n artificial OpenCV  ................................ ................................ .................  49 \n5.4. Software Misi\u00f3n Planner  ................................ ................................ ................................ ..... 50 \n5.5. Casos de Uso  ................................ ................................ ................................ .....................  52 \n \n6. VIABILIDAD TECNICA................................................................................................ .. 53 \n6.1. Estudio Viabilidad Proyecto  ................................ ................................ ................................  53 \n7. COSTES  ....................................................................................................................... 55 \n7.1. Presupuesto prototipo  ................................ ................................ ................................ .........  55 \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     7 de 374  \n                        [Ir al \u00edndice]  \n8. CONCLUSIONES  .......................................................................................................... 56 \n8.1. Objetivos  alcanzados  ................................ ................................ ................................ ............  56 \n8.2. Ampliaci\u00f3n y opciones de mejora  ................................ ................................ .........................  56 \n8.3. Impacto  ambiental  ................................ ................................ ................................ .................  57 \n8.4. Autoevaluaci\u00f3n  ..................................................................................................................... 57 \n9. GLOSARIO  .................................................................................................................. 58 \n10. BIBLIOGRAFIA  ........................................................................................................... 59 \n11. ANEXOS  ...................................................................................................................... 60 \nAnexo A Manual de Usuario   ................................ ................................ ................................ ....... 61 \nAnexo B Procedimiento montaje   ................................ ................................ ................................  72 \nAnexo C Esquemas el\u00e9ctricos Sistema   ................................ ................................ .....................  84 \nAnexo D Hojas caracter\u00edsticas Componentes electr\u00f3nicos   ................................ .......................  92 \n \n \n \n \n \n  \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n  \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     8 de 374  \n\u00cdndice de Figuras  \nFigura 1 Diagrama de Gantt   ................................ ................................ ................................ .... 15 \nFigura 2 UAV de combate Barracuda  ................................ ................................ ....................  18 \nFigura 3 UAV Predator  (Fuente Wikipedia ................................ ................................ ............  18 \nFigura 4 Esquema ejes rotaci\u00f3 n y fuerzas rotores estructura Q uad-rotor ............................  21 \nFigura 5 Esquema de control de lazo cerrado  ................................ ................................ ....... 21 \nFigura 6 Esquema motor Brushless  (Fuente:[7])  ................................ ................................ ... 22 \nFigura 7 Diagrama bloque aplicaci\u00f3n  ................................ ................................ ....................  27 \nFigura 8 Servicio WEB Unidad Dron  ................................ ................................ ........................  28 \nFigura 9 Aplicativo WEB  ................................ ................................ ................................ ...........  28 \nFigura 10 Diagrama Bloques interacci\u00f3n objetos del sistema  ................................ ...............  29 \nFigura 11 Interfaz opci\u00f3n men\u00fa Localizaci\u00f3n Unidad.  ................................ .............................  30 \nFigura 12 Interfaz Opci\u00f3n Men\u00fa Servicios NAS.  ................................ ................................ ...... 31 \nFigura 13 Interfaz Opci\u00f3n Men\u00fa Configuraci\u00f3n Red  ................................ ................................  31 \nFigura 14 Diagrama Estructura Aplicaci\u00f3n WEB  ................................ ................................ ..... 32 \nFigura 15 Sistema embebido Raspberry  PI 2 B  ................................ ................................ ....... 35 \nFigura 16 Arduino AMP (Ardu Copter 2.6)  ................................ ................................ ...............  35 \nFigura. 17 Estructura TAROT IRON 650  ................................ ................................ ...............  36 \nFigura 18 Motor  Brushless   A2212/13T (1000Kv)  ................................ ................................ . 36 \nFigura.19 ESC EMAX 4In1 30A  ................................ ................................ .............................  38 \nFigura.20 Modulo GPS y Brujula HMC5883L  ................................ ................................ ........  38 \nFigura 21 Modulo GPS NEO -6M ................................ ................................ ...........................  38 \nFigura 22 Emisor RF Turnigy 9x Pro ................................ ................................ .....................  38 \nFigura 23 M\u00f3dulos Transmisor y Receptor Fr Sky 8Ch ................................ ........................  39 \nFigura 24 M\u00f3dulos Transmisor Audio- Video 5\u20198Gh  ................................ ...............................  39 \nFigura 25 M\u00f3dulo Receptor Audio- Video 5\u20198Gh  ................................ ................................ .... 39 \nFigura 26 OSD (On Screen Display ) ................................ ................................ .....................  39 \nFigura 27 Sensor Presi\u00f3n MPL115A  ................................ ................................ .....................  40 \nFigura. 28 Sensor Iluminaci\u00f3n- Proximid ad Caracter\u00edsticas  ................................ ...................  41 \nFigura 29 Sensor Temperatura Humedad Relativa DHT22  ................................ ..................  42 \nFigura 30 Sistema estabilizado DJI (Gimbal)  ................................ ................................ ........  42 \nFigura 31 PI Camera Rev 1.3 ................................ ................................ ................................  42 \nFigura 32 Consumo Sistemas  ................................ ................................ ................................  43 \nFigura 33 Relaci\u00f3n consumo- rpm y fuerza elevaci\u00f3n motores  ................................ .............  43 \nFigura.34 Bater\u00eda  Zippy 3S 8000mA.  ................................ ................................ ....................  44 \nFigura.35 Modulo de potencia V1.0  ................................ ................................ .......................  45 \nFigura 36. Lectura sensor Temperatura Presi\u00f3n MPL115A  ................................ ..................  48 \nFigura 37 C onexi\u00f3n remota mediante Mission Planner  ................................ .........................  51 \nFigura 38 Conexiones  a programaci\u00f3n plan de vuelo  ................................ ...........................  51 \nFigura 39 Diagramas  casos de us o ................................ ................................ .......................  52 \n \n\u00cdndice de Figuras  \n \nTabla 1 Comparativas Placas base sistemas embebidos  ................................ .......................  33 \nTabla 2 Proyector c ontroladores vuelo de c\u00f3digo abierto  ................................ ........................  34 \nTabla 3 Caracter\u00edsticas  sensor presi\u00f3n MPL115A  ................................ ................................ ... 40 \nTabla 4 Caracter\u00edsticas sensor iluminaci\u00f3n- Proximidad VCNL4010  ................................ ....... 41 \nTabla 5 Caracter\u00edsticas sensor temperatura- humedad relativa DHT22 ................................ .. 42 \nTabla 6 Relaci\u00f3n RPM Motor y Consumo ................................ ................................ ................  43 \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     9 de 374  \n1. Introducci\u00f3n                      [Ir al \u00edndice]  \n1.1 Justificaci\u00f3n y contexto \nLa necesidad de apoyo desde todos los \u00e1mbitos posibles  a los medios existentes en la actualidad para evitar \nlas cat\u00e1strofes  en el \u00e1mbito de los incendios forestales se hace cada vez m\u00e1s evidente. Los graves da\u00f1os \nque producen en el medio ambiente as\u00ed como el gran impacto social que llegan a alcanzar  han hecho que las \nadministraciones p\u00fablicas  dediquen importantes recursos econ\u00f3micos a la lucha y prevenci\u00f3n contra el fuego \ny a paliar en la medida de lo posible las consecuencias que producen es te tipo de incendios . Los incendios \nforestales no solo producen grandes da\u00f1os en el medio ambiente en muchas ocasiones irreparable,  sino que \nllegan incluso a producir el desalojo de zonas habitadas por la propagaci\u00f3n del incendio y en ocasiones \np\u00e9rdidas  de vidas  humanas.  \n \nPara evitar estos da\u00f1os los equi pos de extinci\u00f3n de incendios cuentan con numerosos  y modernos medios \ntanto terrestres como a\u00e9reos para la realizaci\u00f3n de las tares de lucha contra el fuego, por los que cada vez \nse hace m\u00e1s necesario el desarrollo de aplicaciones que utilizando l as nuevas  tecnolog\u00edas optimicen el uso \nde dichos medios , ayuden en la toma de decisiones a los responsables de la lucha contra incendios, permitan \nevaluar las consecuencias del incendio sobre las \u00e1reas implicadas y su m\u00e1s adecuada restauraci\u00f3n.  \n \nPara evitar que una alarma termine por ser un gran incendio forestal se pueden llevar a cabo tres acciones \nprincipales:  \n \n\u2022 Prevenci\u00f3n: Esta consiste en evitar que se provoque el incendio y minimizar las consecuencias en caso de que se produzca. Son acciones como por ejemplo l as quemas preventivas, o los cortafuegos . \n\u2022 Detecci\u00f3n: Consiste en alertar con la mayor celeridad posible de la existencia de un incendio con la finalidad de comenzar su extinci\u00f3n. Como puede ser la funci\u00f3n realizada por los guardias  forestales.  \n\u2022 Extinci\u00f3n : Es la acci\u00f3n directa contra el fuego que permite terminar con el incendio estas consisten \nen eliminar alguno de los tres elementos que lo constituyen el denominado tri\u00e1ngulos del fuego: combustible (vegetaci\u00f3n), comburente ( oxigeno) encargado de oxidar el c ombustible favoreciendo la \ncombusti\u00f3n y energ\u00eda (calor) necesaria para que se produzca la reacci\u00f3n.  \n \nDe otro lado en el sentido de detecci\u00f3n de incendios la Consejer\u00eda de Medio Ambiente a trav\u00e9s del Plan \nINFOCA\n[1], han llevado a cabo instalaciones y disponen de medios que han permitido desarrollar numerosas \naplicaciones basadas en las nuevas tecnolog\u00edas, a trav\u00e9s de convenios con universidades y centros de \ninvestigaci\u00f3n con la colaboraci\u00f3n de empresas especializadas as\u00ed como las aportaciones del Minis terio de \nMedio Ambiente.  \nEntre dichas aplicaciones se pueden citar:  \n\u2022 La detecci\u00f3n autom\u00e1tica de incendios forestales mediante el uso de c\u00e1maras infrarrojas situadas \nestrat\u00e9gicamente en puntos fijos. En este sentido existe el denominado \u201cSistema Bosque\u201d[1] instalado \nen Andaluc\u00eda y Galici a. Tambi\u00e9n existe el denominado \u201cPrograma Fuego\u201d en fase de experimentaci\u00f3n \nel cual las c\u00e1maras son situadas en mini sat\u00e9lites.  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     10 de 374  \n                        [Ir al \u00edndice]  \n\u2022 T\u00e9cnicas de medici\u00f3n durante el incendio, de \u00e1reas quemadas por el fuego, por medio del \u201cSistema \nSALEIF\u201d[2], el cual est\u00e1 basado en el vuelo de un helic\u00f3ptero provisto de un ordenador con GPS  que \nrecorre el contorno del incendio.  \n\u2022 T\u00e9cnicas de simulaci\u00f3n de la evoluci\u00f3n de un incendio con el \u201cPrograma CARDIN\u201d[2] basado en \nutilizaci\u00f3n de SIG (Sistemas de Informaci\u00f3n Geogr\u00e1fica)  \n \nLa aplicaci\u00f3n de procesado de im\u00e1genes  para llevar a cabo tareas de vigilancia es un campo ampliamente \nestudiado, por lo que deben de aplicarse esos conocimiento y la utilizaci\u00f3n de estas t\u00e9cnicas de procesado \nde im\u00e1genes en el \u00e1mbito de la detecci\u00f3n de incendios . Es en este contexto que el presente proyecto pretende \ncentrarse en la tarea de detecci\u00f3n de incendios forestales mediante t\u00e9cnicas de vigilancia y procesado de \nimagen.  \n 1.2 Descripci\u00f3n  del Proyecto \nDadas las grandes extensiones de terreno que son propensas a incendios, bien  sea por su vegetaci\u00f3n o bien \npor los factores clim\u00e1ticos de la zona,  hacen que sea muy dif\u00edcil cuando no imposible que las acciones de \ndetecci\u00f3n mediante las funciones de vigilancia puedan ser llevadas a cabo mediante persona s. De igual forma \nel despliegue de plataformas y redes de c\u00e1maras llegan a resultar proyectos altamente costos os y finalmente \nacaban por ser abandonad os o no dotad os de los recursos suficientes para llevar a cabo sus cometidos como \nha ocurrido con el  mencionado \u201cSistema Bosque\u201d en Andaluc\u00eda.  \n Esto lleva a proponer un UAV ( Unmanned Aerial Vehicle, veh\u00edculo de vuelo no tripulado ), tambi\u00e9n \ncom\u00fanmente denominado Dron , el cual permitir\u00e1 realizar las funciones de vigilancia cubriendo mayores \nextensiones de terreno. Dicha unidad m\u00f3vil estar\u00e1 dotada con un sistema de Geo-posicionamiento por GPS \n(Global Positioning System ), capacidad de realizar grabaciones de video, captura y transmisi\u00f3n de im\u00e1genes , \nque pondr\u00e1 a disposici\u00f3n del centro de control a trav\u00e9s de sus diversos sistemas de comunicaciones. De igual \nforma podr\u00e1 ser comandada en varias modalidades como son:  \n\u2022 Modalidad de vuelo programado: El sistema es programado para realizar planes de vuelo peri\u00f3dicos \ncon unos recorridos preestablecidos, durante dichos vuelos tendr\u00e1 la capacidad de realizar capturas \nde im\u00e1genes y/o video lo que permitir\u00e1 poder conocer mediante visi\u00f3n el estado de la zona.  \n\u2022 Modalidad de vuelo por control manual ( corto alcance ): Situado en una zona de incendio podr\u00e1 ser \npuesto a disposici\u00f3n de personal del equipo de extinci\u00f3n para ser pilotado manualmente y prestar funciones de apoyo que pudiera necesitar dicho equipo como puede ser : Visualizaci\u00f3n del incendio \nen zonas no accesibles por personas, toma de temperaturas, presi\u00f3n y humedad de esas zonas , \nextensi\u00f3n del incendio etc\u2026  \n \nDe esta forma mediante t\u00e9cnicas de procesado de imagen la unidad podr\u00e1 detectar situaciones de posibles \nincendios de forma autom\u00e1tica alertando al centro de control al que enviara los muestreos de datos \natmosf\u00e9ricos obtenidos  que podr\u00e1n ser recabados y analizados para ayuda en la determinaci\u00f3n de un plan \nde actuaci\u00f3n contra incendio.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     11 de 374  \n                        [Ir al \u00edndice]  \n1.3 Objetivos principales  \nEl objetivo principal  del presente proyecto es desarrollar una plataforma que permita dar un paso m\u00e1s en \nayudas a la prevenci\u00f3n de incendios forestales. Plantea las bases para llevar a cabo un sistema de detecci\u00f3n \nde incendios mediante un UAV el cual realizara la captura de im\u00e1genes  para posterior detecci\u00f3n autom\u00e1tica \nde incendios mediante t\u00e9cnicas de procesado de imagen. Dicha unidad incluir\u00e1 un sistema de sensores para \nmedidas de fen\u00f3menos atmosf\u00e9ricos con indicador de localizaci\u00f3n v\u00eda GPS  con la finalidad de ayudar  a la \ndeterminaci\u00f3n de un plan contra incendio y/o labores de prevenci\u00f3n de incendios . Su desarrollo es llev ado a \ncabo mediante sistemas embebidos , en el que podemos concretar cuatro bloques principales bloques \nprincipales:  \n\u2022 El Sistema Central : Lleva a cabo las funciones de coordinaci\u00f3n de todos los subsistemas de la \nunidad Dron, permitiendo l a interacci\u00f3n con el  usuario a trav\u00e9s de sus divers os interfaces y medios \nde comunicaci\u00f3n disponibles. Ya sea en largo alcance con los centros de control  o bien dando paso \nal enlace de corto alcance  (aprox. 1Km) como puede ser en el caso de uso de la unidad Dron por \nequipos de extinci\u00f3n de incendios para funciones de apoyo.  \n\u2022 Sistema Controlador de vuelo : Realiza las funciones de piloto de a bordo de la UAV ( Unmanned \nAerial Vehicle ). Este p odr\u00e1 ser programado de forma remota a trav\u00e9s del sistema central para realizar \nvuelos peri\u00f3dicos de duraci\u00f3n de 15 minutos. Aunque pueda parecer un tiempo corto dada la \nvelocidad que puede alcanzar permitir\u00e1 cubrir grandes extensiones de terreno. En modo de \noperaci\u00f3n manual el sistema de control de vuelo permitir\u00e1 ser controlado de h aciendo uso de un \nenlace de radio- control pudiendo ser pilotado el Dron de forma manual (p.e. por alg\u00fan miembro del \nequipo de extinci\u00f3n) . \n\u2022 Sistema Captaci\u00f3n video y Sensores atmosf\u00e9rico s: El sistema ser\u00e1 capaz de capturar im\u00e1genes \nen tiempo real as\u00ed como informar de coordenadas de posicionamiento y fen\u00f3menos atmosf\u00e9ricos \nconcretamente temperatura, presi\u00f3n atmosf\u00e9rica y luminosidad. Sobre dichas capturas se \nimplementa ra una monitorizaci\u00f3n de la geo- localizaci\u00f3n por GPS conociendo as\u00ed con exactitud las \ncoordenadas donde se producen el posible inicio del incendio.  Estos muestreos ser\u00e1n efectuados \nde forma peri\u00f3dica y los resultados obtenidos ser\u00e1n puestos a disposici\u00f3n del centro de control \ndonde podr\u00e1n ser analizados para la detecci\u00f3n autom\u00e1tica de i ncendios y disponiendo asi de los \ndatos que le sean de utilidad y ayuda para determinar un plan de actuaci\u00f3n.  \n\u2022 Sistema de estaci\u00f3n base: Esta suministrara la energ\u00eda el\u00e9ctrica necesaria para la recarga de las \nbater\u00edas de la unidad Dron  realiz\u00e1ndose mediante placas solares lo que hace que puedan instalarse \ndiversas bases  e incluso en lugares remotos, de dif\u00edcil acceso, donde la unidad pueda cargar \nbater\u00edas . \nDel alcance de este proyecto queda excluido el montaje de l as estaciones base donde la unidad Dron  \nefectuara su aterrizaje para recarga de bater\u00eda s y quedando a la espera de \u00f3rdenes de vuelo. Si bien se \naportara dise\u00f1o y requisitos de dichas bases (circuitos para carga y comunicaciones con centro de control).  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     12 de 374  \n                        [Ir al \u00edndice]  \n1.4. Enfoque y metodolog\u00eda \nEl presente proyecto est\u00e1 desarrollado con un enfoque did\u00e1ctico y se lleva a cabo en diferentes ciclos los \ncuales , se realizan de forma secuencial si bien en todo momento se ha tenido una visi\u00f3n global lo que permite \npoder realizar trabajos de forma transversal cuyos resultados han sido utilizados en ciclos posteriores \nfacilitando la soluci\u00f3n requerida.  \n As\u00ed en una primera fase de b\u00fasqueda e investigaci\u00f3n,  se realiza el estudio de la tecnolog\u00eda y herramient as \nrequeridas tanto en el \u00e1mbito del hardware ( micro -controladores , sensores, componentes electr\u00f3nicos y \nherramientas) como en software (sistemas operativos, lenguajes y entornos de programaci\u00f3n). Por ultimo esta \nfase permite la identificaci\u00f3n de los datos  a tratar y la determinaci\u00f3n de las metodolog\u00edas utilizadas para la \nobtenci\u00f3n del objetivo final.  \n \nLas fases de montaje,  de codificaci\u00f3n  y de testeo y verificaci\u00f3n  son llevadas a cabo de una forma transversal, \nmediante pruebas emp\u00edricas para ir obteniendo los resultados deseados en cada uno de los dispositivos y \nsistemas instalados.  \n \nPor \u00faltimo la fase de documentaci\u00f3n es llevada a cabo durante toda la duraci\u00f3n del proyecto, desde su inicio \nrecabando documentaci\u00f3n e informaci\u00f3n  y efectuando documentos tales como diagramas de bloques, \ndiagramas de flujos, esquemas el\u00e9ctricos, capturas de se\u00f1ales y pruebas efectuadas, que se aportan como \nanexos a esta memoria.   \nSe ha tenido presente la utilizaci\u00f3n de c\u00f3digo abierto, as\u00ed el proyecto se presenta en Open Source y de igual \nforma se beneficia de librer\u00edas de c\u00f3digo de otros autores el cual ha sido convenientemente modificado \nconseguir los objetivos.  \n \n1.5. Planificaci\u00f3n  \n1.5.1 Planteamiento inicial y seguimiento  \nEl proyecto queda divido en tres fases bien definidas: Fase de estudio, fase de implementaci\u00f3n y desarrollo y \nfase de pruebas y conclusiones. Estas fases en su mayor\u00eda son secuenciales aunque manteniendo una visi\u00f3n \nglobal del proyecto en ocasi\u00f3n se llevan a cabo de forma transversal interactuando entre ellas.  \n \nFase de estudio.  \nEn esta fase se realiza el estudio de la tecnolog\u00eda necesaria que se utilizara as\u00ed como de las herramientas de \nlas que haremos uso. Se identifican los dispositivos necesarios para la implementaci\u00f3n efectuando la \nselecci\u00f3n de estos para lo que se tiene en cuenta diversas consideraciones como calidad y precisi\u00f3n \ncomponentes sensores para que cumplan c on el m\u00ednimo requerido en las condiciones del proyecto, \nestandarizaci\u00f3n de los mismos, y cost e. De igual forma se determina el sistema operativo a utilizar, lenguajes \nde programaci\u00f3n y aplicaciones, quedando definida la metodolog\u00eda utilizada presentando todo el itinerario a \nseguir en una planificaci\u00f3n inicial para la obtenci\u00f3n del objetivo final.  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     13 de 374  \n                        [Ir al \u00edndice]  \nFase de implementaci\u00f3n y desarrollo.  \nUna vez determinada la tecnolog\u00eda a utilizar y seleccionados los componentes que se considerados como \nadecuados para el cumplimiento de requisitos se inicia la fase de montaje de un prototipo, que si bien se \nrealiza el estudio y un primer esquem\u00e1tico de todo el sistema completo, el montaje no es efectuado en su \ntotalidad en una \u00fanica vez, sino que aplicamos metodolog\u00eda modular compagin\u00e1ndola con la fase de \ncodificaci\u00f3n del sistema y en su inicio con la parte final de la fase de estudio.  \n As\u00ed se inicia el montaje con el dise\u00f1o y montaje de la estructura , motores y reguladores de potencia propulsi\u00f3n \npara proceder a su calibrado y ajuste. A continuaci\u00f3n se anexa el modulo sistema control de vuelo, as\u00ed como \nlos m\u00f3dulos receptores de radiofrecuencia (RF 2.4GHz) para el control de la UAV mediante transmisor de \nradiofrecuencia. Para verificar su correcto funcionamiento se aprovecha la fase de estudio de la aplicaci\u00f3n de \ncontrol de piloto autom\u00e1tico la cual nos permite verificar correctamente el funcionamiento de los m\u00f3dulos de \ncomunicaci\u00f3n de control, m\u00f3dulo de posicionamiento GPS, Modulo GSM -GPRS ( Global Sistem for Mobile \ncommunications -  General Packet Radio Service) y el bus de comunicaciones I2C a utilizar para sensores \nperif\u00e9ricos.  \n El siguiente paso ser\u00e1 efectuar la correspondiente programaci\u00f3n del m\u00f3dulo de comunicaciones de video y \nsu depuraci\u00f3n de forma independiente por considerar que este es el punto que puede resultar m\u00e1s vulnerable \ne importante en el proyecto.  \n Una vez obtenidos los resultados \u00f3ptim os y realizadas  todas las pruebas de comunicaciones  que permitan \ndisponer  de un c\u00f3digo de comunicaciones estable con un \u00f3ptimo  control de errores,  se realiza ra el ensamblaje \nde los distintos sensores y m\u00f3dulo s de transmisi\u00f3n de video con el  sistema central  quedando finalmente todos \nlos sistemas programados  e instalados sobre la estructura.  \n \nFase de pruebas y conclusiones . \nEn esta fase se llevan a cabo los test de pruebas para verificaci\u00f3n de todas las funciones descritas para este proyecto, se incluye en ella una parte de subsanaci\u00f3n de posibles errores o desviaciones de los objetivos que \npuedan darse, asegurando as\u00ed que las pruebas finales sean correctas.  \n \nSe termina con la verificaci\u00f3n de que se cumplen todos los requisitos marcados y llevando a cabo una  toma \nde datos para dejar constancia de ello y posterior aportaci\u00f3n a la Memoria del proyecto.  \n \nLa planificaci\u00f3n detallada puede verse en el siguiente diagrama de Gantt  \n  \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     14 de 374  \n                        [Ir al \u00edndice]  \n \n1.5.2. Diagrama de Gantt  \n \n \nFig. 1 Diagrama de Gantt  \n \nEsta planificaci\u00f3n puede decirse que dada la envergadura del proyecto ha sufrido algunos retrasos en hitos de entrega y mantener documentaci\u00f3n al d\u00eda si bien en su entrega final el retraso ha sido de 1 d\u00edas . Estos \nretrasos han sido mayormente por la carga de trabajo que supone el montaje de la unidad en su totalidad, \npruebas modulares para verificaci\u00f3n del correcto funcionamiento.  \nLas dificultades surgidas con proveedores los cuales indicaban plazos que finalmente no se han cumplido e \nincluso ha llevado a tener que realizar modificaciones en aspectos importantes del proyecto como ha sido en \nel sistema estabilizador de c\u00e1mara de video.  \n \n1.5.3. Metodolog\u00eda de la memoria  \n La realizaci\u00f3n de la memoria del proyecto se realiza mediante la fase de documentaci\u00f3n la cual es \nllevada a cabo a lo largo de todo el proyecto. As\u00ed en la fase de estudio se recopila documentaci\u00f3n, datasheet \nde componentes, referencias de bibliograf\u00eda. De igual forma en la fase de desarrollo se capturan tomas de \nse\u00f1ales, im\u00e1genes correspondientes al montaje de prototipo y capturas de pantalla de las pruebas de \nverificaci\u00f3n efectuadas as\u00ed como videos explicativos de cada uno de los subsistemas y montajes llevados a \ncabo. En la fase de codificaci\u00f3n se impl ementa la documentaci\u00f3n correspondiente a la programaci\u00f3n \nefectuada sobre el sistema que se aporta como anexo a la presente memoria.  \n \n1.5.3. Metodolog\u00eda de aplicaci\u00f3n  \n La implementaci\u00f3n de la aplicaci\u00f3n es realizada en cuatro fases que definimos como fase de an\u00e1lisis, \nfase de programaci\u00f3n, fase de codificaci\u00f3n, fase de depuraci\u00f3n y control de errores, las cuales se describen detalladamente a lo largo de la presente memoria, el cap\u00edtulo de Software.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     15 de 374  \n                        [Ir al \u00edn dice] \na) Fase de an\u00e1lisis  \n En esta fase se efect\u00faa el planteamiento del problema de una forma t\u00e9cnica, se determinan los \nsistemas y software a utilizar obteniendo tras el an\u00e1lisis un primer diagrama que aporta la informaci\u00f3n general \ndel sistema y los dispositivos hardware del sistem a que se utilizaran y un diagrama de flujo general de la \naplicaci\u00f3n.   Se pueden diferenciar dos aplicativos uno para la unidad Dron , en adelante Sistema Central , y \notro WEB para usuario. . \n \nAplicaci\u00f3n del Sistema Central  \nEn el sistema se requiere que el mi smo en su inicializaci\u00f3n efect\u00fae un auto chequeo y detecci\u00f3n de los \nrecursos disponibles (interfaces con usuario, interfaces de comunicaci\u00f3n, sensores del sistema), enviando un comunicado al usuario si existe incidencia. Verifica ra y establecer\u00e1 ser servidor proxy para la conexi\u00f3n con la \nunidad de Control de vuelo de abordo activando la comunicaci\u00f3n con la misma para ponerla a disposici\u00f3n del \nusuario. S i la inicializaci\u00f3n es correcta quedara en estado de reposo en espera de planes de vuelo o ser \ncontrolado mediante radio -control.  Si el usuario quiere podr\u00e1 activar muestreos peri\u00f3dicos de datos de los \ndistintos sensores para control de la zona donde est\u00e9 ubicado. A dquiridos estos efect\u00faa el env\u00edo a la base de \ndatos para su archivo y posterior tratamiento por  parte del usuario si lo requiere. Cuando el sistema no tenga \ntrabajo pasara a estado de bajo consumo dado que se encuentra alimentada por bater\u00edas o paneles solares \nen la base.  El sistema central ser\u00e1 accesible en todo momento mediante conexi\u00f3n SSH, al ig ual que mediante \nsoftware espec\u00edfico de aplicaci\u00f3n de realizaci\u00f3n de planes de vuelo. Igualmente ser\u00e1 accesible en todo \nmomento v\u00eda GSM disponiendo de servicio de voz  (N\u00ba telef\u00f3nico Movil) .  \n \nAplicaci\u00f3n WEB  \n Esta aplicaci\u00f3n Web monitoriza los datos obtenidos por el sistema central y los presenta al usuario \nen un formato comprensible. De otro lado realiza las funciones de interfaz de comunicaci\u00f3n usuario -sistema  \ncuando se requiera configurar par\u00e1metros del sist ema como puede ser activaci\u00f3n de servicios NAS como \npuede ser servidores media, o servidores Cloud que la unidad pudiera utilizar, o tambi\u00e9n la configuraci\u00f3n de \npuntos de acceso de red inal\u00e1mbricos (esta es opcional implementada en parte para mejoras ). \n \nb) Fase de programaci\u00f3n  \nEn esta fase se instalan los sistemas y entornos de programaci\u00f3n a utilizar, se determinan finalmente las \nestructuras y se realiza un diagrama de flujo detallado de las aplicaciones que ser\u00e1 la base para la fase de \ncodificaci\u00f3n de las  mismas. En este proyecto se utilizara:  \n   -Sistema operativo Raspbian para Raspberry Pi \n  -Protocolo MAVLink para control y programaci\u00f3n de planes de vuelo.  \n  -Lenguaje Python para programaci\u00f3n  \n  -Openc Cv para tratamiento de im\u00e1genes.  \n  -Lenguaje html y php para programaci\u00f3n de aplicaci\u00f3n WEB  \n  -Lenguaje MySql para tratamiento de base de datos  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     16 de 374  \n                        [Ir al \u00edndice]  \n1.6 Breve descripci\u00f3n de los cap\u00edtulos de la memoria \nLa presente memoria se estructura de la siguiente forma. En primer lugar, el Cap\u00edtulo 2 sirve al lector para \ndar a conocer la trayectoria que ha tenido la tecnolog\u00eda que se pretende implementar en la soluci\u00f3n a lo largo \nde los \u00faltimos a\u00f1os y contextualizar la en la problem\u00e1tica que se aborda, exponiendo tambi\u00e9n la situaci\u00f3n \nactual y posibles ventajas e inconvenientes que esta tecnolog\u00eda puede presentar.  \n \nEl cap\u00edtulo tres sirve al lector para familiarizarse con los conceptos te\u00f3ricos que se mencionan en este trabajo, \nal igual que para mostrar  un estudio de la plataforma a utilizar y del problema que se pretende abordar \nponiendo un especial \u00e9nfasis en la problem\u00e1tica existente. As\u00ed  en un primer apartado se hace una introducci\u00f3n \nal modelo de la din\u00e1mica del cuatri -motor desde el punto de vista del control de sistema, para pasar a det allar \ntodos los componentes en su configuraci\u00f3n b\u00e1sica. Pasando a describir la funcionalidad de los distintos \nsistemas que puede finalmente ser de utilidad en el \u00e1mbito del problema al que se pretende dar soluci\u00f3n, \ndescribiendo detalladamente la interacci\u00f3n entre los distintos sub -sistemas que componen la posible soluci\u00f3n \nas\u00ed como las opciones que puede ofrecer la aplicaci\u00f3n de control y monitorizaci\u00f3n para la interacci\u00f3n con el \nusuario y llevar a cabo el control de la UAV.  \n El Cuarto cap\u00edtulo entra a describir los requisitos necesarios que deber\u00e1 reunir el hardware para la soluci\u00f3n \npasando al an\u00e1lisis de las distintas opciones y la selecci\u00f3n de cada uno de los m\u00f3dulos o c omponentes que \nconformaran finalmente la unidad Dron  justificando y verificando en los casos que se requiere que las \nselecci\u00f3n cumpla los requisitos necesarios para su selecci\u00f3n.  \n \nEl Quinto cap\u00edtulo entra en la selecci\u00f3n y descripci\u00f3n del software, sistema  operativo que se utilizara, dado \nque muchas de las necesidades quedan cubiertas por el propio sistema operativo instalado y son simplemente \ninstalaciones y uso de los m\u00f3dulos correspondientes del sistema o aplicaciones que solo requieren instalaci\u00f3n \ny apr endizaje de manejo, estos se han llevado a un anexo como Manual de Instalaci\u00f3n  y Uso de aplicaciones \nPor lo que se entra directamente a ver algunos de los ejemplos de programaci\u00f3n del uso de las interfaces \ncomo puede ser en lenguaje Phyton o la exposici\u00f3n de la conexi\u00f3n con protocolos de control de vuelo , para \npasar finalmente a exponer las t\u00e9cnicas de procesado de video con Open CV que pueden ser de utilidad para la detecci\u00f3n de incendios.  \n El cap\u00edtulo 6 realiza un estudio de la viabilidad t\u00e9cnica exponi endo los principales inconvenientes observados \nas\u00ed como sus puntos fuertes. El cap\u00edtulo 7 presenta el presupuesto para finalmente en el cap\u00edtulo 8 presentar \nlas conclusiones y futuros trabajos.  \n  \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     17 de 374  \n2. Antecedentes                     [Ir al \u00edndice]  \n2.1 Estado del Arte  \nLos UAV ( Unmanned Aerial Vehicle) o veh\u00edculo s a\u00e9reos  no tripulados  tienen su origen en fines militares dado \nque con ellos se puede tanto vigilar una zona de conflicto como atacar sin necesidad de poner en peligro vidas \nhumanas. El UAV puede estar controlado remotamente por los operadores en tierra o pueden ser aut\u00f3nomos \nsiguiendo una trayectoria previamente definida en su sistema de vuelo. Se pueden definir por tanto dos \nestaciones que pueden manejar la informaci\u00f3n del Dron , la estaci\u00f3n de tierra y la estaci\u00f3n de a bordo de la \naeronave.  \n \nExisten diversos tipos de UAV los hay de tipo avi\u00f3n, tipo helic\u00f3ptero,  tipo dirigible etc\u2026 en las siguientes \nfiguras podemos ver algunos de los utilizados para fines militares:  \n \n                  \nFigura 2 UAV de combate Barracuda (Fuente:Wikipedia  Enlace )  \n Figura 3 UAV  Predator  (Fuente Wikipedia Enlace ) \n \nSin embargo estas aeronaves tambi\u00e9n tienen  uso en el \u00e1mbito civil, actualmente se trabaja en este sentido \npara desarrollar veh\u00edculos c ada vez m\u00e1s peque\u00f1os y ligeros, con menor nivel tecnol\u00f3gico que empiezan a \nutilizarse en aplicaciones civiles las cuales pueden resultar peligrosas para que sean lle vadas a cabo por \ntripulaciones, como es el caso de los incendios forestales.  \n \nEn este \u00e1mbito en Espa\u00f1a existen diferentes proyectos de veh\u00edculos no tripulados orientados a la lucha contra \nincendios.  As\u00ed la empresa FlightechSystem[3] ha llevado a cabo el desarrollo de diversas UAV para ayuda en \nproblemas de deforestaci\u00f3n causada por los incendios y para labores de vigilancia e incluso en detecci\u00f3n de \npersonas pir\u00f3manas , siendo capaz la aeronave de identificar actividad humana tanto de d\u00eda como de noche \na cas i 2.000 metros de distancia.  \n \nEl avance y desarrollo de la investigaci\u00f3n en el \u00e1rea de los UAV, desde los a\u00f1os 90, en una gran medida es \ndebido a la miniaturizaci\u00f3n de la tecnolog\u00eda, que ha permitido llevar a cabo diversos modelos y estudios de \nlos distintos tipos de naves  y su correcto control .  As\u00ed desde los a\u00f1os 2000 se vienen aplicando nuevas \nestrategias de control que junto con la posibilidad de construcci\u00f3n e implementaci\u00f3n de hardware y software \nm\u00e1s potente, con micro controladores capaces ejecutar millones de instrucciones por segundo,  y la reducci\u00f3n \ndel tama\u00f1o y por tanto peso de las bater\u00edas, principalmente ion- litio y Litio -Pol\u00edmero  han permitido una \nescalada en el \u00e1mbito de los Drones . \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     18 de 374  \n                        [Ir al \u00edndice]  \n \nLas publicaciones recientes centran estas investigaciones mayormente en:  \n\u2022 Creaci\u00f3n y validaci\u00f3n de modelos en distintos tipos de software como puede ser MATLAB, simulink u \notros de tipo CAD ( Computer Aided Desing, Dise\u00f1o Asistido por Computadora).  \n\u2022 Implementaci\u00f3n de diferentes estrategias de creaci\u00f3n y seguimiento de trayectorias incluyendo \ndetecci\u00f3n y evasi\u00f3n de obtaculos.  \n\u2022 Control basado en sensores de visi\u00f3n (Camaras).  \n \nTodo ello ha llevado los \u00faltimos a\u00f1os a conseguir desarrollar veh\u00edculos cada vez m\u00e1s peque\u00f1os y ligeros para \nsu uso en el \u00e1mbito civil  (denominados de baja escala) , los cuales son utilizados para control de fronteras, \noperaciones contra narcotr\u00e1fico, control de tr\u00e1fico de carreteras, o en operaciones de emergencia de la cruz \nroja como es el caso del proyecto que la cruz roja lleva a cabo en cooperaci\u00f3n con la empresa Zerintia[4] la \ncual dispone de una flota de Drones  que pone a disposici\u00f3n de la Cruz Roja siempre que l os necesite, como \npuede ser en casos de b\u00fasqueda de s upervivientes o localizaci\u00f3n de equipos de rescate en grandes \ncat\u00e1strofes.  \n \n2.2 Estudio de Mercado  \nSe ha podido ver los veh\u00edculos a\u00e9reos  no tripulado s UAV se encuentran en expansi\u00f3n, pero igualmente existe \nun estricto control  y muchas limitaciones para su utilizaci\u00f3n con las actuales normativas , por tanto no es f\u00e1cil \nsu expansi\u00f3n  y comercializaci\u00f3n . Aun as\u00ed la agencia WinterGreen Research [5], famosa por sus estudios de \nmercado sobre sectores como puede ser el de la energ\u00eda, software o telecomunicaciones, ha hecho p\u00fablico  \nun estudio sobre la previsi\u00f3n de mercado de los D rones comerciales para los a\u00f1os 2015 a 2021. En este \nindica que la siguiente generaci\u00f3n de UAV conseguir\u00e1 un reemplazo total de los sistemas a\u00e9reos existentes \nen la actualidad en diversos sectores como pueden ser: Vigilancia de instalaciones , patrulla s fronterizas , envi\u00f3  \nde paqueter\u00eda, fotograf\u00eda y agricultura, apoyo en situaciones de cat\u00e1strofes . \n \nEstas unidades presenta claras ventajas como son: Mayor eficiencia energ\u00e9tica, mayor vida \u00fatil as\u00ed como un \nmenor coste de operaci\u00f3n que los actuales sistemas tripulados . \n \nEl mercado de las UAV (Unmanned Aerial Vehicle ) presenta una fuerte tendencia a crecer principalmente por  \nrazones como son el abaratamiento de los sistemas de navegaci\u00f3n y visualizaci\u00f3n, la experiencia de m\u00e1s de 3 millones de horas de vuelo que sistemas militares han llevado a cabo dotan a esta tecnol og\u00eda de la suficiente \ncredibilidad y confianza para sentar las bases en su uso comercial.  \n \nEn este sentido la citada agencia presenta unos datos de previsi\u00f3n de mercado para l as UAV el cual \nalcanzo los 609 millones de d\u00f3lares en el a\u00f1o 2014 y se espera alcance la cifra de 4.800 millones para \nel a\u00f1o 2021, debi\u00e9ndose este crecimiento principalmente a la venta en sectores como son: M apeo para \npetr\u00f3leo y gas, inspecci\u00f3n de infraestructuras energ\u00e9ticas, envi\u00f3 de paqueter\u00eda, aplicaciones agr\u00edcolas y \nservicios de apoyo a cat\u00e1strofes. Puede solicitarse una copia del citado informe en el siguiente  enlace\n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     19 de 374  \n                        [Ir al \u00edndice]  \nHay que indicar que al mencionado avance de las tecnolog\u00edas y reducci\u00f3n del tama\u00f1o unido a un menor coste \nha llevado a que estos dispositivos est\u00e9n al alcance de un mayor p\u00fablico objetivo con menor poder adquisitivo .  \nAs\u00ed actualmente se est\u00e1n comercializando un tipo muy particular de UAV multi- rotor en el que los motores \nest\u00e1n en el mismo plano, y pueden encontrarse disponibles en distintos modelos seg\u00fan su n\u00famero de motores  \nsea de cuatro, seis y ocho motores . \n \nEstos  Drones  de bajo coste se establecen para usos recreativos como pueden ser los modelos Parrot AR \nDron e 2.0   o DJI Phanton Profesional  los cuales est\u00e1n orientados al ocio y a la grabaci\u00f3n de video mediante \nel uso de c\u00e1maras.  \n Hay que indicar que en Espa\u00f1a est\u00e1 totalmente prohibido el uso de Drones  para actividades civiles as\u00ed \nlo ha puesto de manifiesto AESA (Agencia Estatal de Seguridad A\u00e9rea)  en diversas ocasiones mediante \ncomunicados, donde indica \u201c \u2026en Espa\u00f1a no est\u00e1 permitido, y nunca lo ha estado, el uso de aeronaves \npilotadas por control remoto con fines comerciales o profesionales , para realizar actividades \nconsideradas trabajos a\u00e9reos, como la fotogr ametr\u00eda, agricultura inteligente (detectar en una finca aquellas \nplantas espec\u00edficas que necesitar\u00edan de una intervenci\u00f3n, como riego, fumigaci\u00f3n, para optimizar el cultivo), \nreportajes gr\u00e1ficos de todo tipo, inspecci\u00f3n de l\u00edneas de alta tensi\u00f3n, ferroviar ias, vigilancia de fronteras, \ndetecci\u00f3n de incendios forestales, reconocimiento de los lugares afectados por cat\u00e1strofes naturales para \ndirigir las ayudas adecuadamente, etc.  \nLa realizaci\u00f3n de trabajos especializados (tambi\u00e9n llamados trabajos a\u00e9reos), com o son las filmaciones \na\u00e9reas, los de vigilancia, de detecci\u00f3n y / o extinci\u00f3n de incendios, de cartograf\u00eda, de inspecci\u00f3n, etc., tal como \nindican los art\u00edculos 150 y 151 de la Ley 48/1960 sobre Navegaci\u00f3n A\u00e9rea, requiere autorizaci\u00f3n por parte de \nAESA, y hasta que no est\u00e9 aprobada la nueva normativa espec\u00edfica que regule el uso de este tipo de aparatos, \nAESA no puede emitir dichas autorizaciones porque carece de base legal para ello \u201d[6]  \n \nPuede consultarse al respecto la citada legislaci\u00f3n sobre Navegaci\u00f3n A\u00e9rea en vigente en documento \nindicado en referencias [7].  \n Por tanto la posibilidades introducir un dise\u00f1o de una UAV, como puede ser e l presente proyecto para \nfines comerciales y/o profesionales no es posible en Espa\u00f1a est\u00e1 prohibido, la \u00fanica comercializaci\u00f3n \nposible de UAV en Espa\u00f1a se encontrar\u00eda en el \u00e1mbito de uso recreativo y actividades deportivas y realmente \nest\u00e1 muy limitado por la mencionada legislaci\u00f3n.  \n \n \n \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     20 de 374  \n3. Descripci\u00f3n te\u00f3rica  y funcional                  [Ir al \u00edndice]  \n3.1 Modelo UAV Quad- rotor \nEl presente capitulo se centrara en describir las partes que conforma un modelo de AUV, el quad -rotor, ya \nque es el modelo que se ha seleccionado para el presente proyecto por presentar  una gran versatilidad y \nmaniobrabilidad y ser actualmente la configuraci\u00f3n m\u00e1s utilizada debido a que posee la misma naturaleza \nno lineal del helic\u00f3ptero cl\u00e1sico y los mismos efectos aerodin\u00e1mi cos, pero con una mayor facilidad de control \npor tener los torques aerodin\u00e1micos bien definidos.  La estructura quad -rotor se corresponde con la de un \nmulti- c\u00f3ptero de 4 motores y 4 h\u00e9lices dispuestos en los extremos de unos brazos con la misma longitud. \nLas h\u00e9lices delantera y trasera giran en un sentido mientras que las h\u00e9lices derechas  e izquierdas  giran en \nel sentido opuesto. Esto lleva a una cancelaci\u00f3n de los efectos gir\u00f3scopos y torques aerodin\u00e1micos en estado \nde vuelo compensado.  \n \nFigura 4 Esquema ejes rotaci\u00f3n y fuerzas rotores estructura quad -rotor \n \nA groso modo l a estrategia de control del quad -rotor responder\u00e1 ante serie de entradas (acciones de control) \ncon una serie de salidas que corresponden a las coordenadas (x,y,z) y \u00e1ngulos de or ientaci\u00f3n ( \u03b8,\u03a8,\u03d5) , dicho \nsistema est\u00e1 sometido a perturbaciones externas v(t), por lo que un controlador deber\u00e1 calcular las acciones \na tomar para contrarrestar dichas perturbaciones puede representarse dicha estrategia de control mediante \nun es quema de co ntrol de lazo cerrado como se muestra en la siguiente figura  \n \nFigura 5 Esquema de control de lazo cerrado  \n \n \nPor tanto el c\u00e1lculo de la acci\u00f3n de control depender\u00e1 de las medidas tomadas por los sensores, por lo que \nlos rangos de tolerancias de dichos sensores har\u00e1n que un sistema de control sea o no aceptable para una \ndeterminada aplicaci\u00f3n.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     21 de 374  \n                        [Ir al \u00edndice]  \n3.2 Componentes UAV modelo Quad- Rotor  \nLa configuraci\u00f3n est\u00e1ndar para llevar a cabo la construcci\u00f3n y ensamblado de un Dron  de cuatro motores \nimplica los siguientes componentes.  \n3.2.1 Estructura  \nConforma el cuerpo de la UAV, sirviendo de esqueleto para la instalaci\u00f3n de componentes mec\u00e1nicos, \nel\u00e9ctricos y electr\u00f3nicos de la aeronave. Esta debe de minimizar su peso y maximizar en lo posible su rigidez \ny resistencia con la finalidad de soportar y transmitir las fuerzas que act\u00faan sobre la UAV. Es com\u00fan que se \nusen materiales como fibra de vidrio, aluminio, o pol\u00edmeros por su alta resistencia y bajo peso  \n3.2.2 Motores  y H\u00e9lices  \nEl motor m\u00e1s utilizado en las UAV de baja escala es de tipo el\u00e9ctricos  brushless  DC, ya que estos no \ncontemplan anillos de rozamiento para el cambio de polaridad en el rotor, realizando dicho cambio mediante \nla conmutaci\u00f3n de la polaridad en los electroimanes incorporados en el motor. Son motores que presentan \nuna reacci\u00f3n r\u00e1pida y son alimentados mediante corriente continua (DC) la cual es convertida en una se\u00f1al \nAC de tres fases que se aplica a los electroimanes  y resultan ser tener una larga duraci\u00f3n de uso[6]. \nRespecto de las h\u00e9lices se fabrican de materiales compuestos como pol\u00edmeros debido a las propiedades que le permiten resistir a fuerzas muy altas en ciertas direcciones. En el modelo Quad- rotor resulta muy \u00fatil \nya que se conocen de antemano las fuerzas a las que estar\u00e1n sometidas.  \n3.2.3 Controlador electr\u00f3nico de velocidad E SC (Electronic Speed Control ) \nEstos dispositivos son los encargados de transformar las se\u00f1ales PWM ( Pulse Width Modulation) en una \nse\u00f1al de corriente alterna (AC) trif\u00e1sica que es la que alimenta los motores. Cumplen tambi\u00e9n la funci\u00f3n de \nampli ficadores de voltaje salida a los valores nominales requeridos por el motor\n [7]. \nPara llevar a cabo la correcta regulaci\u00f3n de velocidad estos monitorean la posici\u00f3n del im\u00e1n permanente \nubicado en el motor, efectuando los cambios de polaridad en los electroimanes del estator.  \nEn la siguiente imagen se puede observar el esquema de un motor Bushless , donde el im\u00e1n permanente se \nubica en el rotor mientras que los electroimanes est\u00e1n fijados en el estator,  \n \nFigura 6 Esquema motor Brushless  (Fuente:[7])  \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     22 de 374  \n                        [Ir al \u00edndice]  \n3.2.4 Controlador  UAV \nRealiza las funciones de control de la posici\u00f3n, velocidad y aceleraci\u00f3n de la UAV, para ello cuentan con un \nmicroprocesador y unidades de medici\u00f3n inercial (IMU) y de forma general est\u00e1n  dotados de puertos de \ncomunicaciones con los diferentes protocolos c omo pueden ser I2C, UART, SPI, USB. Para el manejo de \nlos motores hacen uso de las salidas PWM ( pulse width modulation) de las que disponen.  Actualmente \nexisten una gran diversidad de controladores y diferentes comunidades que han colaborado para dise\u00f1os \nde m\u00f3dulos open- source , si bien por lo general las empresas comerciales de Drones  realizan sus propios \ndise\u00f1os de estos m\u00f3dulos de control.  \n3.2.5 Sensores IMU (Unidades Medici\u00f3n Inercial)  \nComo se ha indicado en el apartado 3.1 el control de lazo cerrado requiere de un muestreo de lecturas \nactualizado de las coordenadas (sensores) para poder efectuar los c\u00e1lculos de correcci\u00f3n. Los sensores \nm\u00e1s b\u00e1sicos que se utilizan en sistemas quad- rotor son los reunidos en las Unidades de Medici\u00f3n Inercial \n(IMU) que incluyen giroscopios y aceler\u00f3metro de tres ejes, lo que le permite obtener de una manera r\u00e1pida \nmediante integraci\u00f3n, la orientaci\u00f3n de la aeronave. Estas unidades IMU suelen cumplimentarse con \nalt\u00edmetros, sensores barom\u00e9tricos los cuales calculan la alti tud en base a las medidas de presi\u00f3n, estos son \ncostosos pero suelen presentar importantes desviaciones de precisi\u00f3n. Para aplicaciones que se requiera \nuna mayor precisi\u00f3n se utilizan tecnolog\u00edas sonar o laser entre otros.  Para obtener la posici\u00f3n suelen hacer \nuso del magnet\u00f3metro (comp\u00e1s) el cual facilita la orientaci\u00f3n respecto al sistema de referencia acoplado a la tierra, esto en conjunci\u00f3n con el uso de GPS permite obtener, en tiempo real, la posici\u00f3n hasta en 3 ejes \nseg\u00fan el n\u00famero de sat\u00e9lites disponibles en cada momento.  \n3.2.6 Radiocontrol  \nCon la finalidad de comunicar y controlar la aeronave se requiere un sistema de comunicaci\u00f3n por radio \nfrecuencia (Transmisor -Receptor) el cual deber\u00e1 disponer de un m\u00ednimo de canales igual al n\u00famero de \nmotores de la aeronave. Existen una gran variedad de m\u00f3dulos de comunicaciones y con distintos tipos de \nmodulaci\u00f3n. En el transmisor se deber\u00e1 disponer de una serie de mandos usualmente palancas o Sticks  de \ndos ejes  que permitan el control de la aceleraci\u00f3n ( throttle ) y la rotaci\u00f3n del angulo \u03a8 (yaw) por un lado y el \nde los \u00e1ngulos (roll) y (pitch). Actualmente existen dispositivos con mayor n\u00famero de canales para control \nde otras opciones como modos de vuelo, tren de aterrizaje plegable, etc.. Siendo comunes los sist emas de \n8, 16 y 32 canales.  \n3.2.7 Telemetr\u00eda  \nLos sistemas de telemetr\u00eda a bordo de la UAV como indica su propia definici\u00f3n permiten obtener datos f\u00edsicos \na bordo d e la aeronave en tiempo real  y enviarlos a la estaci\u00f3n de control en tierra. Estos  operan seg\u00fan la \nregulaci\u00f3n local en el las frecuencias de 433Mhz y 915 M Hz, realizando la comunicaci\u00f3n con el controlador \nde vuelo de abordo a trav\u00e9s de puerto de comunicaci\u00f3n serial UART ( Universal Asynchronous Receiver -\nTransmiter ).  \n3.2.8 Bater\u00eda  \nEstas unidades suelen utilizar para su autonom\u00eda de funcionamiento bater\u00edas de Pol\u00edmero de litio, (Li -Po) ya \nque ofrecen una mayor densidad de carga a las tradicionales de ion- litio, un tama\u00f1o m\u00e1s reducido y menor \npeso.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     23 de 374  \n                        [Ir al \u00edndice]  \n3.3 Detecci\u00f3n del fuego  \nComo se ha indicado en los primeros cap\u00edtulos existen sistemas para la detecci\u00f3n de incendios mediante \nc\u00e1maras situadas en el terreno y que hace uso de t\u00e9cnicas de procesado llevarla a cabo. Di cha detecci\u00f3n se \npuede realizar mediante la detecci\u00f3n del fuego o bien mediante la detecci\u00f3n del humo ya que ambos son \nindicadores de los incendios forestales.  \n  \nSin embargo son caracter\u00edsticas distintas ya que fuego se mantiene siempre en un mismo sitio pero este es \nmuy variante por el avance del fuego y sus colores tienen la caracter\u00edstica de ser muy vivos, mientras que el \nhumo tiende a moverse y expandirse hacia la atmosfera y sus colores son muy apagados, esto hace que la \ndetecci\u00f3n de uno u otro sean pr ocesos diferentes.  \n \nLa detecci\u00f3n del fuego se puede realizar de diversas formes en funci\u00f3n de la c\u00e1mara utilizada as\u00ed:  \n\u2022 Mediante C\u00e1mara IR (Infrarroja): Los infrarrojos son una banda del espectro radioel\u00e9ctrico por debajo \nde la luz visible sobre la que radi an los objetos al producir calor.  \n\u2022 Mediante c\u00e1mara de espectro visible: En estas el fuego presenta un color caracter\u00edstico y diferenciado \nde otros elementos que puede facilitar su detecci\u00f3n.  \n \nEn este sentido la c\u00e1mara infrarrojo presenta un nivel m\u00e1s altos de falsos positivos ya que la vegetaci\u00f3n tiende \na alcanzar mayores temperaturas los efectos solares acumulando calor y radiando un fuerte espectro \ninfrarrojo, igualmente se producen falsos negativos por que la atmosfera aten\u00faa la banda infrarroja en \ngrabac iones a distancia.  \n \n3.3.1 Detecci\u00f3n del fuego mediante su color  \nEl modelo m\u00e1s usual para el almacenamiento de im\u00e1genes es el modelo RGB (Red, Green, Blue) el cual se \nbasa en que cualquier color puede ser representado con una combinaci\u00f3n de los tres colores  denominados \nprimarios, rojo, verde y azul. Dada la caracter\u00edstica del color del fuego que var\u00eda entre naranja y amarillo  \nhace que en el modelo RGB presente grandes cantidades de muy grandes de rojo, grandes de verde y muy \nescasos de azul, esta caracteriza ci\u00f3n es la que permitir\u00e1 llevar a cabo su detecci\u00f3n entre los otros elementos \nde una imagen.  \nSin embargo el modelo RGB presenta el problema est\u00e1 en que la uni\u00f3n entre el fuego y otros elementos si \nbien es posible el establecer la frontera resulta altamente complejo. Para solucionar este problema se hace \nuso del modelo de color HSV el cual se compone de tres variables: tono ( Hue), saturaci\u00f3n y brillo (value ). \nAsi la saturaci\u00f3n indica lo alejado que esta el valor del eje blanco y neg\u00f3 mientras que el brillo representa la \naltura del valor dentro del eje blanco y negro. Este modelo de color permite establecer las del imitaciones de \nuna forma m\u00e1s sencill a y con un alto porcentaje de acierto permitiendo de una forma r\u00e1pida determinar qu\u00e9 \nelementos son fuego en una imagen.  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     24 de 374  \n                        [Ir al \u00edndice]  \n \n3.3.2 Detecci\u00f3n del fuego por humo  \nDebido a las problem\u00e1ticas expuestas puede ser m\u00e1s factible buscar humo que buscar fuego ya que este \npuede observarse desde una fase m uy precoz del incendio y a mayores distancias mientras que el fuego  \nLa detecci\u00f3n del humo se hace en base a cuatro caracter\u00edsticas:  \n\u2022 Novedad: El humo ser\u00e1 un elemento nuevo que aparece en una secuencia de video  \n\u2022 Velocidad: El Humo se mueve a baja velocidad frente a otros nuevos elementos  \n\u2022 Tonalidad: Su color tiende a ser blanco- gris \n\u2022 Volumen: El humo ser\u00e1 un elemento grande.  \nDe acuerdo a estas cuatro carac ter\u00edsticas el algoritmo para la detecci\u00f3n del humo se realiza mediante cuatro \netapas o procesos en la imagen que son:  \n\u2022 Sustracci\u00f3n de fondo: En una secuencia de video detectara aquellos elementos que sean nuevos.  \n\u2022 Eliminaci\u00f3n de elementos r\u00e1pidos : Se queda c on los elementos r\u00e1pidos  \n\u2022 Detecci\u00f3n de color: Descarta aquellos colores que sean distintos del humo  \n\u2022 An\u00e1lisis de componentes conexas: Los elementos deber\u00e1n ser suficientemente grandes  \nAdem\u00e1s existe una quinta etapa que es el no aprendizaje, lo que asegura que los elementos clasificados \ncomo humo no sean aprendidos por el algoritmo y dejen de ser detectado en la sustracci\u00f3n de fondo que \ndetecta los elementos nuevos.  \nLa detecci\u00f3n de humo es m\u00e1s factible en sistemas fijo ya los movimientos capara pueden hacer que la etapa \nde sustracci\u00f3n de fondo no sea validad al entender el movimiento como un elemento nuevo y los descarte. \nPara contrarrestar los movimientos r\u00e1pidos se pueden aplicar varias t\u00e9cnicas, existe una t\u00e9cnica que cosiste \nen eliminar las detecciones que no se producen de forma continuada.  \n3.4 Descripci\u00f3n Funcional  de la UAV en la detecci\u00f3n de incendios forestales  \nSe han visto en apartados anteriores los componentes b\u00e1sicos de la  unidad Dron, para explicar la \nfuncionalidad de la unidad se describen a continuaci\u00f3n las funciones b\u00e1sicas de cada uno de los subsistemas que se incorporaran a la aeronave para cumplir los objetivos de detecci\u00f3n de incendios forestales:  \n \n\u2022 Estructura y sist ema de propulsi\u00f3n: Su estructura , en fibra de carbono, permitir\u00e1 el acople del \nsistema de propulsi\u00f3n el cual se basa en el modelo de cuatro motores el\u00e9ctricos  descrito en apartados \nanteriores y debidamente regulados mediante dispositivos  ESC. A esta estruc tura se incorporara un \nsistema de anclaje y estabilizaci\u00f3n ( Gimbal ) donde ser\u00e1 instalada la unidad del sistema central la cual \nincorpora el dispositivo de captura de video (C\u00e1mara ). Dicho sistema de anclaje permite la rotaci\u00f3n \nsobre 2 ejes (opcional 3 ejes) proporcionando as\u00ed al sistema de captura de video la estabilidad \nnecesaria,  independientemente de las variaciones que pueda sufrir la aeronave como consecuencia \nde su navegaci\u00f3n,  para efectuar la grabaci\u00f3n y/o la visi\u00f3n imagen de video.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     25 de 374  \n                        [Ir al \u00edndice]  \n \n\u2022 Sistema Central : Esta es la encargada del control  y coordinaci\u00f3n de todos los subsistemas de la \nUAV. Para ello:  \no Realiza la gesti\u00f3n y control de los dispositivos de comunicaciones  que permit en a la unidad \nsu acceso a la red internet de forma inal\u00e1mbrica, as\u00ed como la interacci\u00f3n del sistema con el \nusuario final.  \no Estar\u00e1 dotada de diversos modos  de comunicaci\u00f3n como  son: Adaptador r ed inal\u00e1mbrica  (Wi-\nFi), sistema de radiocontrol de corto alcance (2.4Ghz) y modem  GSM -GPRS . (Global System \nMobile -General Packet Radio Service)  y sistema de transmisi\u00f3n de video (5.8GHz).    \no Realizara las funciones de captura de video y grabaci\u00f3n de im\u00e1genes , presentando dicha \ncaptura de video a trav\u00e9s de su salida AV compuesto (Audio- Video Compuesto), a la cual le \nser\u00e1 superpuesta en un paso previo mediante el sistema OSD ( On Screen Display ) todos los \ndatos de telemetr\u00eda. En su conjunto la se\u00f1al de video obtenida ser\u00e1 aplicada al transmisor de \nvideo con lo que se obtendr\u00e1 sobre dichas capturas el posicionamiento exacto de las mismas \npresent\u00e1ndolas en la propia transmisi\u00f3n de video realizada por la unidad.  \n \n\u2022 Sistema Controlador de Vuelo: Es ta realiza las funciones de piloto de abordo de la unidad, al igual \nque las funciones de obtenci\u00f3n de datos de geo-.posicionamiento y de telemetr\u00eda poni\u00e9ndolos a \ndisposici\u00f3n de la unidad central mediante su interface UART . Igualmente llevara a cabo los planes de \nvuelo programado que el usuario le asigne a trav\u00e9s de la unidad de sistema central  y permitir\u00e1 el \ncontrol manual de vuelo mediante radio enlace de corto alcance (aprox. 1Km).  \n \n\u2022 Sistema de sensores (US) estos ser\u00e1n los encargados de la medici\u00f3n de los factores atmosf\u00e9ricos \nde la zona poni\u00e9ndolos a disposici\u00f3n de la unidad central mediante su interface de comunicaciones \nI2C (Inter-Integrated Circuit ) \u00f3 SPI ( Serial Peripheral Interface) por los cuales disponen de \ncomunicaci\u00f3n con el sistema central.  \n \n\u2022 Aplicaci\u00f3n de Monitorizaci\u00f3n y Control por el usuario, dicha aplicaci\u00f3n est\u00e1 ubicada en servidor \nWEB remoto proporcionando al usuario una interfaz para interacci\u00f3n con la unidad y visualizaci\u00f3n de \nla informaci\u00f3n  en todo momento.  \n \n\u2022 Unidad de alimentaci\u00f3n (bater\u00eda) : Esta ser\u00e1 la encargada de dotar a la unidad de la energ\u00eda el\u00e9ctrica \nnecesaria para su correcto funcionamiento, proporcionando una autonom\u00eda de vuelo m\u00ednima de 15  \nminutos . \n Su funcionamiento es el siguiente: Posicionada la unidad Dron  en una estaci\u00f3n base esta quedara en modo \nde espera para ser comandada en alguno de sus posibles modos los cuales son:  \n \n\u2022 Modo manual mediante emisora de radio c ontrol (2.4GHz) de corto alcance.  \n\u2022 Modo remoto mediante conexi\u00f3n remota para realizaci\u00f3n de vuelo programado.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     26 de 374  \n                        [Ir al \u00edndice]  \n \nEl sistema en el estado de reposo en su base aceptara conexiones remotas desde el centro de control, \npermitiendo al usuario realizar la programaci\u00f3n de planes de vuelo. Durante dicho plan de vuelo la unidad \nrecabara los datos necesarios de los correspondientes subsistemas incorporado s a la unidad. Efectuado el \ntratamiento de datos correspondiente ser\u00e1n enviados a la aplicaci\u00f3n WEB para su monitorizaci\u00f3n a la vez que \nefect\u00faa el registro de los datos correspondientes factores clim\u00e1ticos y de posicionamiento GPS en la base de datos para s u posterior tratamiento, si se requiere, por parte del usuario.  \n \nSi el sistema en estado de reposo es controlado en modo manual, el transmisor de corto alcance estar\u00e1 \ndotado de un receptor de video a trav\u00e9s del cual la persona que efect\u00faa el control podr\u00e1 disponer en pantalla \nde la captura de video realizada por el sistema a la vez que podr\u00e1 pilotar el Dron  mediante vuelo guiado por \nvideo FPV ( Firs Person View ). \n \n \n3.4.1 Diagrama de Bloques de la aplicaci\u00f3n  \nEn la siguiente figura se represente el diagrama de bloque de la aplicaci\u00f3n.  \n \nFigura 7 Diagrama bloque Aplicaci\u00f3n  \n \n \n  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     27 de 374  \n                        [Ir al \u00edndice]  \n3.4.2 Posicionamiento y Comunicaci\u00f3n en la Red \nEl sistema queda posicionado en la Red de las siguientes formas : \n\u2022 Mediante la implementaci\u00f3n de un servidor WEB (Local) propio, el cual puede ser configurado en sus \nvalores de IP, y puerto de uso HTTP. Dicho servidor podr\u00e1 ser debidamente programado para que a \nla unidad pueda presentar para su monitorizaci\u00f3n los datos atmosf\u00e9ricos obtenidos en el muestreo \nque realiza, el posicionamiento GPS de la estaci\u00f3n, el estado de las redes de que dispone ( Wifly , \nGSM -GPRS), e incluso si est\u00e1 en estado de reposo podr\u00e1 activar servidor CAM permitiendo visionar \nsu entorno.  (En la figura 8 se puede ver captura la p\u00e1gina de instalaci\u00f3n del servidor Local de la unidad \nDron ). \n\u2022 Mediante el uso de red GSM -GPRS, la unidad podr\u00e1 efectuar env\u00edos de mensajes SMS, y de tramas \nde datos via GPRS. Pudiendo ser tambi\u00e9n localizada mediante apl icaciones existentes para la \nlocalizaci\u00f3n y posici\u00f3n de dispositivos de telefon\u00eda m\u00f3vil. En anexo B Manual de montaje pueden verse \npruebas efectuadas del env\u00edo de SMS a mediante la unidad.  \n \n\u2022 Otra mediante el uso de un servidor WEB de aplicaci\u00f3n (requiere bien un Equipo servidor WEB o bien \nun hosting en la r ed). Este debe ser instalado en la red, a trav\u00e9s de este el sistema adem\u00e1s de \nmonitorizar los datos anteriormente indicados, permite la interacci\u00f3n del usuario con el sistema.  \n   (En la figura  9 puede observarse una captura de la p\u00e1gina principal de la aplicaci\u00f3n WEB ).  \n \n  \nFigura 8 Servicio WEB Unidad Dron                                                       Figura 9 Aplicativo WEB  \n \nEstas Web se han posicionado y configurado en las siguientes direcciones:  \n\u2022 La aplicaci\u00f3n WEB estar\u00e1 alojada en servidor instalado expresamente para el desarrollo de este \nproyecto en la URL: https://infoteli.org/proto . \n\u2022 El servidor WEB local alojado en la unidad Dron  ser\u00e1 accesible mediante la U RL: \nhttp://www.infoteli.org:8090   o bien desde el aplicativo WEB en la opci\u00f3n de men\u00fa WEB Dron. Dado \nque ha sido implementado como mejora con la finalidad de ver la posibilidad de of recer video las \ncapturas de video mediante esta otra opci\u00f3n actualmente no se ha programado ninguna aplicaci\u00f3n web para el presentando \u00fanicamente como puede verse en la figura 8 la p\u00e1gina de instalaci\u00f3n.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     28 de 374  \n                        [Ir al \u00edndice]  \n3.4.3 Interacci\u00f3n entre los diferentes Sub- Sistemas  \nComo puede verse en el diagrama de bloques aplicaci\u00f3n (Figura 7 ), existe interconexi\u00f3n con diferentes \ndispositivos y aplicaciones, realiz\u00e1ndose estos mediante los diversos medios de comunicaci\u00f3n as\u00ed los m\u00e1s \ndestacados son:  \n \n\u2022 Entre dispositivo GPS y unidad de controlador de vuelo se lleva a cabo mediante un puerto UART  \n\u2022 Entre dispositivo Compas y Aceler\u00f3metro se realiza mediante bus I2C del controlador de vuelo los \ncuales son accesibles mediante el sistema central por UART, haciendo uso del protocolo MAVlink \n(Micro Air Vehicule Comunication Protocol ). \n\u2022 Entre dispositivo regulador potencia motores y controlador de vuelo a trav\u00e9s de sus puertos PWM.   \n\u2022 Sistemas de comunicaci\u00f3n con Usuario puede efectuarse mediante los siguientes medios:  \no Enlace Radio Control TX -RX (2.4GHz)  \no Enlace v\u00eda LAN-WAN (Protocolo MAVLink)  haciendo uso del Software espec\u00edfico Mission \nPlanner  para planificaci\u00f3n de planes de vuelo \no Enlace v\u00eda LAN -WAN mediante conexi\u00f3n SSH se ten dr\u00e1 acceso al sistema central.  \no Enlace v\u00eda GSM -GPRS \n\u2022 Sistema de Monitorizaci\u00f3n WEB LOCAL haciendo uso de dispositivo Wi -Fi. \n\u2022 Sistema comunicaci\u00f3n con usuario mediante PC hace uso de dispositivo USB  \n\u2022 Los dispositivos sensores instalados en el sistema efect\u00faan comunicaci\u00f3n a su vez por distintos buses \nesto son:  \n- Sensor Temperatura- Humedad DTH22 utiliza BUS SPI (de un \u00fanico hilo)  \n- Sensores de Temperatura Presi\u00f3n, y Luminosidad mediante  Bus I2C  \n \nEn la siguiente figura pueden  verse detallados la los distintos interf aces de comunicaci\u00f3n de los que hace uso \ncada dispositivo y aplicativos.  \n \nFigura 10 Diagrama Bloques interacci\u00f3n objetos del sistema  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     29 de 374  \n                        [Ir al \u00edndice]  \n3.4 Aplicaci\u00f3n control y monitorizaci\u00f3n  \nEl sistema interact\u00faa con el usuario de tres formas diferentes:  \n\u2022 Conexi\u00f3n directa mediante teclado y monitor con al sistema central, o bien mediante un PC de forma \nremota por conexi\u00f3n SSH, o haciendo uso igualmente de forma remota mediante software espec\u00edf ico \nde aplicaci\u00f3n ( Mission Planner ) \n\u2022 Mediante el uso de emisora de control de RF(2.4GHz), para Radio- Control de la UAV..  \n\u2022 Mediante Aplicativo WEB, a trav\u00e9s de internet.  \n \n3.4.1 Dise\u00f1os interfaces usuarios  \n \nFigura 11 Interfaz opci\u00f3n Men\u00fa Localizaci\u00f3n Unidad.  \n   \n \n  \n \n \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     30 de 374  \n                        [Ir al \u00edndice]  \n \n \nFigura 12 Interfaz Opci\u00f3n Men\u00fa Servicios NAS.  \n \n \nFigura 13 Interfaz Opci\u00f3n Men\u00fa Configuraci\u00f3n Red  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     31 de 374  \n                        [Ir al \u00edndice]  \n3.3 Diagrama Estructura aplicativo WEB  \n \nFigura 14 Diagrama Estructura Aplicaci\u00f3n WEB  \n \n \n \n \n   \n \n       \n \n  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     32 de 374  \n4. Descripci\u00f3n detallada del Hardware                 [Ir al \u00edndice]  \n4.1 Requisitos m\u00ednimos Sistema Central y Controlador de Vuelo  \nEl Sistema Central deber\u00e1 de cubrir unas m\u00ednimas prestaciones  y cumplir con unos requisitos como son:  \n\u2022 Disponer de buses con los distintos protocolos como son UART, I2C, SPI,  \n\u2022 Disponer de la posibilidad video en alta definici\u00f3n  \n\u2022 Una velocidad de procesado que permita \u00e9l envi\u00f3 mostrar en su salida de video las capturas \nrealizadas en tiempo real y en una definici\u00f3n aceptable para posterior procesado del mismo.  \n\u2022 Reducido tama\u00f1o para poder ser ubicada en la unidad Dron  y a ser posible con la posibilidad de \nincorporar se a esta como un m\u00f3dulo ensambl\u00e1ndose de forma f\u00e1cil  \n\u2022 Posibilidad de almacenamiento externo que pudiera requerir para grabaci\u00f3n de video e im\u00e1genes.  \n\u2022 Bajo consumo y reducido tama\u00f1o.  \nA estas m\u00ednimas prestaciones es deseable un mayor coste y que sea de f\u00e1cil adquisici\u00f3n sin problemas en \nproveedores por las li mitaciones de tiempo existentes al igual que disponga de comunidades que apoyen \ndichos proyectos y puedan aportar un soporte m\u00ednimo en sistemas operativos y librer\u00edas para su uso.  \nSe ha podido observar a t rav\u00e9s de b\u00fasquedas de informaci\u00f3n en internet ver que existen en el mercado \namplia variedad de dispositivos con prestaciones muy similares a las de un PC, pero con unas dimensiones muy reducidas (mini -PC). A continuaci\u00f3n se presentan tres dispositivos mini -PC que posibles candidatos a \nser seleccionados para su uso como sistema central.  \n Raspberry PI 2 A20 OLinuXino Lime2  Radxa Rock Pro  \nSoC BroadCom  BCM2836  A20 Dual Core T   \nCPU  Quad -Core ARM Cortex -A7 \n900MHz  Dual Core ARM Cortex A7  \n1000MHz  Quad -Core ARM Cortex -\n1,6MHz  \nGPU  Video Core IV  Mali 400 GPU  Mali 400  \nRAM  1GB  1GB 2GB 8GB NAND Flash  \nUSB  4 2 2  \nVideo  Compuesto y HDMI  HDMI  RGA, HDMI  \nAudio  Jack HDMI  HDMI  RGA  \nBoot  Micro SD  Micro SD  Digital S/PDIF, Jack, \nmicro integrado en placa.  \nRed Ethernet 10/100  1000  Ethernet 10/100M  Wifi  \nBuses  UART(1),I2C(1), SPI(1)  UART(1),I2C(1), SPI(1)  UART(1),I2C(1), SPI(1)  \nGPIO  40 160 80 \nSATA  NO SI NO \nInterfaces \nAdic.  CSI ( C\u00e1mara ) y LCD  NO IR, USB -OTG,  \nConsumo  400mA a 800mA  500mA a 1200mA  800mA a 2000m A \nAlimentaci\u00f3n  Micro USB/GPIO  USB  \nTama\u00f1o  85 x 56 mm  84X60mm  100x80  \nPrecio  50\u20ac 45\u20ac 95\u20ac \nTabla 1 Comparativa mini -PC \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     33 de 374  \n                        [Ir al \u00edndice]  \nActualmente existen diversas comunidades que trabajan en proyectos para el desarrollo de firmware y \nsoftware para el control de vuelo de Drones  de diverso t ipo como son: M ulti-rotores, aviones, helic\u00f3pteros, \netc... A se presenta una lista de los proyectos existentes actualmente en open -source . \nPROYECTOS Controladores  Soporte  Sensores  Configuraciones  \nAPM Copter  APM: ATMEGA 2560  \nPixHawk STM32  Esquemas y \nPCB,s  Gyro, Acelerometro  \nGPS, Mag, Alt, Temp  Tri, Quad, Hexa  \nOcto.  \nAeroQuad  Arduino Pro \nUno/Mini/Mega.  \nSTM 32  Esquemas y \nPCB,s Gyro, Acelerometro  \nGPS, Alt , Tri, Quad, Hexa  \nOcto.  \nMultiWiiCopter  Arduino Pro  Mini  \nArduino Mega  Solo \nEsquemas  Gyro, Acelerometro  \nGPS, Mag, Alt.  Tri, Quad, Hexa  \nOpenPilot  STM32  Esquemas y \nPCB,s  Gyro, Acelerometro  \nGPS, Mag, Alt.  Tri, Quad, Hexa  \nOcto  \nUAVP  \n(Universal Aerial Video \nPlataform)  ATMEGA644  Solo \nEsquemas  Gyro, Acelerometro  \nGPS, Mag, Alt.  Tri, Quad, Hexa  \nOcto.  \nTabla 2 Proyectos Controladores vuelo de c\u00f3digo abierto  \n \nDe estos hemos podido comprobar que APM Copter, anteriormente ArduPilotMega de donde ha tomado sus \nactuales APM, es la m\u00e1s consolidada trabajando activamente en desarrollo de veh\u00edculos a\u00e9reos y terrestres \ndispone de diferentes categor\u00edas[x] siendo su controlador cl\u00e1sico el ATMega2560 inspirado en Arduino. Esta \ncomunidad desarrolla firmware diferenciado para cada tipo de configuraci\u00f3n, siendo su software \ncaracter\u00edstico el APM:Mission Planner.  Actualmente  esta comunidad est\u00e1 desarrollando un controlador \nbasado en microprocesador  STM32 el cual presenta mejoras importantes  en cuanto a capacidad de c\u00f3mputo  \ny con opciones para agregar segundos dispositivos de telemetr\u00eda y GPS entre otros.  \nPara el desarrollo del proyecto se requerir\u00e1n otros componentes electr\u00f3nicos as\u00ed como herramientas \nespec\u00edficas tanto de electr\u00f3nica como de inform\u00e1tica. Por lo que a continuaci\u00f3n se pasa a describir cada uno \nde los componentes seleccionados  \n \n \n \n \n \n \n  \n \n  \n \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     34 de 374  \n                        [Ir al \u00edndice]  \n4.2 Descripci\u00f3n de los m\u00f3dulos seleccionados  \n4.2.1 CPU  Sistema Central y  Captura -Procesado de video  \nPara el control del sistema central y el procesado de las captura de video se ha seleccionado la mini -PC \nRasperry Pi  2 B.  El motivo de su selecci\u00f3n respecto a las otras \npresentadas es el disponer de su propia interfaz para c\u00e1mara de \nvideo existiendo actualmente c\u00e1maras IR (Infrarroja) y NoIR (No \nInfrarroja) espec\u00edficas de Raspberry Pi de un relativo bajo coste.   \nOtro motivo ha sido el disponer de hasta 4 puertos USB de los \nque se tiene previsto utilizar tres.  \nFigura 15 Sistema embebido Raspberry pi 2+ B   \nDe igual manera se ha podido ver que existe un buen soporte de apoyo por parte de la comunidad Raspberry \nPi con c\u00f3digo open -source en la Red,  diversos sistemas operativos a utilizar incluyendo el sistema operativo \nde tiempo real RT Linux, lo que permitir\u00e1 en futuros trabajos poder llevar a cabo mejoras en el proyecto.  \n 4.2.2 MCU Controlador de vuelo \nComo sistema controlador de vuelo se ha seleccionado al APM Copter 2.6 con procesador A Tmega 2560.   \nEl sistema ArduCopter  cuenta con capacidad de vuelo \naut\u00f3nomo basado en way -point , planificaci\u00f3n de la misi\u00f3n y \ntelemetr\u00eda en tiempo real a trav\u00e9s de una estaci\u00f3n en tierra.  \nMotivo por el que se ha seleccionado ya que la mayor\u00eda de las \nsoluciones para multi -rotores s olo cuentan con soporte por \nradiocontrol.  \nSi bien existe una  MCU superior actualmente como es la \nPixhawk  esta tiene un coste m\u00e1s elevado y aunque incluye \nmejoras sustanciales como son: L a posibilidad de conexi\u00f3n de  \nFigura. 16 Arduino APM Copter 2.6 (ArduCopter)     un segundo dispositivo GPS, un procesador con una mayor \npotencia de c\u00e1lculo as\u00ed como un n\u00famero mayor de puest os dicho no son necesarios para este proyecto.  \n Por otro lado, el APM 2.6 ArduCopter presenta ventajas como ser multiplataforma por lo que es compatible \ncon Windo ws, Mac y Linux. La utilidad de configuraci\u00f3n y planificaci\u00f3n puede ser utilizada en entorno gr\u00e1fico \no bien mediante l\u00ednea de comandos utilizando el protocolo MAVLink lo que permite que pueda ser planificado \na trav\u00e9s de redes donde el ancho de banda este limitado e incluso con programaci\u00f3n adecuada mediante \nGSM .  \nPor ultimo indicar que es totalmente compatible con est\u00e1ndares de la industria de rob\u00f3tica l\u00edderes como son \nel sistema ROS, o el protocolo MAVLink el cual permite a trav\u00e9s de una librer\u00eda poco pesada recibir los datos \ndel dispositivo controlador de vuelo y enviarle comandos, pudi\u00e9ndose empaquetas estructura C a trav\u00e9s de canales seria con eficacia y enviar dichos paquetes a la estaci\u00f3n de control en tierra. Razones estas que \nunidas a su bajo co ste lo convierten  en ideal para este proyecto.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     35 de 374  \n                        [Ir al \u00edndice]  \n4.2.3 Estructura Quap -rotor (TAROT IRON 650)  \nLa estructura se selecciona en fibra de carbono por sus caracter\u00edsticas de peso -resistencia  y dada la cantidad \nde dispositivos que se han de acoplar y teniendo presente que la \nunidad no debe superar 2,5 kg de peso para que pueda quedar \nincluida en normativa vigente [7].  Se espera un peso total de 2Kg.  \nDe las diversas estructuras vistas en este material se selecciona la \nreferenciada como TAROT IRON 65 0 por su coste y posibilidades  \nFigura. 17 Estructura TAROT IRON 650                de adaptaci\u00f3n ya que esta s er\u00e1 sometida a modificaciones  para el  \n  correcto acople de los dispositivos de captura y diversos m\u00f3dulos \nde comunicaciones.  Esta estructura tiene como especificaciones:  \n\u2022 Distancia entre sus ejes 650mm  \n\u2022 Peso total bruto: 450g/480g \n\u2022 Configuraci\u00f3n recomendada por fabricante H\u00e9lices de 14- 17 pulgadas.  \n5.2.4 Motores propulsores  \nEl motor seleccionado es un motor Brushless  (sin escobillas ) estos proporcionan movimientos suaves y \nr\u00e1pidos , presentando ventajas frente a los motores comunes de DC \n(Corriente continua) como son:  \n\u2022 Mayor eficiencia (menos perdidas por calor)  \n\u2022 Mayor rendimiento (por tanto mayor duraci\u00f3n bater\u00edas)  \n\u2022 Menor peso a la misma potencia  \n\u2022 Requieren un menor mantenimiento  \nFigura 18 Motor brushless  A2212/13T (1000Kv)                      Relaci\u00f3n velocidad/par motor casi constante  \n\u2022 Mayor pot encia en el mismo tama\u00f1o  \n\u2022 Mejor disipaci\u00f3n de calor  \n\u2022 Rango de velocidad elevado a l no tener limitaci\u00f3n mec\u00e1nica \n\u2022 Menor ruido electr\u00f3nico  \nComo desventajas presentan  un mayor costo de construcci\u00f3n, requieren de un circuito de control m\u00e1s \ncomplejo y siempre necesario para su funcionamiento. Por otro lado los motores normales con escobillas \nson m\u00e1s propensos , debido a los roces , a producir chispas y aver\u00edas.  \nDe la de nominaci\u00f3n de dada en un motor (p.e A2212/13T -1000KV) se puede conocer que:  \n\u2022 Los dos primeros d\u00edgitos (22):  Es el d i\u00e1metro de la parte interna del motor (estator) en mil\u00edmetros . \nIndican el torque que puede ejercer a mayor n\u00famero podr\u00e1 mover h\u00e9lices m\u00e1s grandes y con mayor \npitch por tanto podr\u00e1 levantar mayor peso con menor velocidad.  \n\u2022 Los dos siguientes d\u00edgitos (12): Di\u00e1metro de la parte internet del motor medio en mil\u00edmetros.  \n\u2022 1000KV: Indica las RPM (Revoluciones por minuto) por voltio. As\u00ed si se aplica una tensi\u00f3n de 11. 1 \nvoltios (bater\u00eda de 3S) puede llegar a 11 100 RPM.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     36 de 374  \n                        [Ir al \u00edndice]  \nHay que tener en cuenta que a mayor RPM las h\u00e9lices deben ser m\u00e1s peque\u00f1as  lo que permite grandes \nvelocidades pero reducen en gran medida la eficiencia y por tanto el tiempo de vuelo. As\u00ed valores del orden \nde 2300 KV con h\u00e9lices de 5 a 7 pulgadas suelen ser utilizados para carreras.  \nMientras que motores del orden de 400KV a 900Kv, son utilizadas para Drones  grandes con cargas pesadas, \nno son agiles ni r\u00e1pidos pero si muy estables aunque necesitan de h\u00e9lices m\u00e1s gran des por encima de 10 \npulgadas.  \nAs\u00ed para la selecci\u00f3n del motor acorde a las RPM y fuerza de empuje que se requiere por motor puede \nefectuarse el c\u00e1lculo mediante la aplicaci\u00f3n de la f\u00f3rmula:  \n\ud835\udc39\ud835\udc39=1.225\ud835\udf0b\ud835\udf0b\u2219(0.0254\u2219\ud835\udc51\ud835\udc51)2\n4\ufffd\ufffd\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u22190.0254  \u2219\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u210e\u22191\n60\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc5d\ud835\udc5d\ufffd2\n\u2212\ufffd\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u22190.0254  \u2219\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u210e\u22191\n60\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc5d\ud835\udc5d\ufffd\ud835\udc49\ud835\udc49\ud835\udc5d\ud835\udc5d\ufffd\u2219\ufffd\ud835\udc51\ud835\udc51\n3.29546\u2219\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u210e\ufffd1.5\n \n \nLa cual simplificada:  \n\ud835\udc39\ud835\udc39=4.392399\u221910\u22128\u2219\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45(\ud835\udc51\ud835\udc51)3.5\n\ufffd\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u210e\ufffd4.2333\u221910\u22124\u2219\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc45\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u2219\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u210e  \u2219\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\u210e\u2212\ud835\udc49\ud835\udc490\ufffd \nD\u00f3nde: F =es la Fuerza de empuje en Newtons    pitch=Prop. Pich (pulgadas).  \n             RPM= Rotaciones por minuto h\u00e9lice.    D=prop. Di\u00e1metro (pulgadas).  \n             V0=Velocidad avance en m/s  \n Para convertir Newtons en gramos basta con multiplicar por  1000\n9.81\ud835\udc54\ud835\udc54\ud835\udc54\ud835\udc54 \nDe una forma mucho m\u00e1s simplificada los fabricantes recomiendan para una primera aproximaci\u00f3n la formula \ngeneral en base a la caracter\u00edstica del motor que proporcionan (KV)  \n\ud835\udc38\ud835\udc38\ud835\udc38\ud835\udc38\ud835\udc5d\ud835\udc5d\ud835\udc38\ud835\udc38\ud835\udc38\ud835\udc38\ud835\udc60\ud835\udc60 \ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc54\ud835\udc54 \ud835\udc38\ud835\udc38\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc54\ud835\udc54  (\ud835\udc3e\ud835\udc3e\ud835\udc49\ud835\udc49)=\ud835\udc45\ud835\udc45\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc5d\ud835\udc5d  \ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc61\ud835\udc61\ud835\udc61\ud835\udc61  (\ud835\udc54\ud835\udc54\ud835\udc54\ud835\udc54)\ud835\udc65\ud835\udc652\n\ud835\udc41\ud835\udc41\u00ba \ud835\udc38\ud835\udc38\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc5d\ud835\udc54\ud835\udc54\ud835\udc60\ud835\udc60\ud835\udc60\ud835\udc60=2000\ud835\udc65\ud835\udc65 2\n4=1000\ud835\udc3e\ud835\udc3e\ud835\udc3e\ud835\udc3e  \n \nEn este caso se ha seleccionado el motor  Brushless   A2212/13T 1000Kv, seg\u00fan caracter\u00edsticas del fabricante \ncon un empuje de 900gr, y un consumo m\u00e1ximo de 20A. \nEn anexo correspondiente a manual de montaje se pueden observar los datos obtenidos de pruebas \nemp\u00edricas realizadas al motor seleccionado.  \n \n4.2.5 H\u00e9lices  \nLas h\u00e9lices es un dispositivo el cual est\u00e1 constituido por un numero variable de aspas o palas (2, 3,  4,..) y \nque al girar alrededor de un eje producen una fuerza propulsora. Cada pala est\u00e1 formada por un conjunto de perfiles aerodin\u00e1micos los cuales cambian su Angulo de incidencia desde la ra\u00edz hasta extremo.  \nEn este caso las h\u00e9lices han sido proporcionadas  en conjunci\u00f3n con los motores seleccionados por el propio \nfabricando las cuales son 12*4.5  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     37 de 374  \n                        [Ir al \u00edndice]  \n4.2.6 Regulador es Velocidad Motor es \nEl regulador de velocidad del motor (ESC) se ha seleccionado el m\u00f3dulo EMAX ESC 30A x4, principalmente \npor guardar un amplio margen en su capacidad de suministrar intensidad \n(30A) frente al consumo m\u00e1ximo del motor seleccionado (25A) y permite \nbater\u00edas de 2s  a 4s lo que posibilita en un futuro incluir si  fuese necesario \nunos motores de may or potencia haciendo uso de bater\u00edas de voltaje (14.8).  \nPor ultimo su dise\u00f1o presentando los cuatro reguladores necesarios en un \n\u00fanico bloque los cuatro reguladores permitir\u00e1 su acople en el centro de  \nFigura.19 ESC EMAX 4In1 30A                      la estructura utilizada y no en los brazos lo que mejora el dise\u00f1o  \n \n4.2.7 Modulo GPS  y Brujula  HMC5883L  \nIncluye GPS NEO -6M Compatible con el protocolo NMEA, ( National Marine Electronics Association ). \nDispone de interface serie a trav\u00e9s de la cual el sistema de control recibir\u00e1 de la \nred satelital datos de posicionamiento, altitud etc...  \nSe ha seleccionado este m\u00f3dulo ya que Incluye una br\u00fajula digital con conexi\u00f3n \npor bus I2C mediante la cual se dota al sistema de la capac idad de indicaci\u00f3n de \ndirecci\u00f3n a donde se dirige y la orientaci\u00f3n del dispositivo en todo momento.  \nIgualmente el modulo es compatible con el APM Copter seleccionado  \nFigura.20 Modulo GPS NEO -6M \n5.2.8 Modulo comunicaci\u00f3n GSM -GPRS 900A  \nModulo modem GSM dual banda, el cual permitir\u00e1 la comunicaci\u00f3n de voz con el dispositivo a la vez que \nposibilita el env\u00edo de mensajes y transferencia de datos  mediante GPRS . \nSiendo as\u00ed posible comunicar con la unidad desde cualquier localizaci\u00f3n.  \n \n \nFigura.21 Modulo GPS NEO -6M \n4.2.9 Sistema Radio -Control RF (2.4GHz)  \nMediante este sistema de control se quiere obtener el control de la unidad en distancias cortas (para uso por \nel equipo de extinci\u00f3n como unidad de apoyo). Este se encuentra constituido por:  \n\u2022 Un emisor de radiofrecuencia Turningy 9XR PRO. Seleccionado \nprincipalmente por ser un dispositivo profesional el cual permite de forma f\u00e1cil \n(mediante cambio de m\u00f3dulo), hacer uso de diversos tipos de m\u00f3dulos \ntransmisores pudiendo ser utilizado para diversas frecuencia s, igualmente \npermite conexionado de pantalla para FPV (Vuelo guiado por Video)  teniendo \nen cuenta calidad precio no permite disponer de un control fiable.  \nFigura 22 Emisor RF Turnigy 9x Pro  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     38 de 374  \n                        [Ir al \u00edndice] \n\u2022 M\u00f3dulos TX RX (2,4Ghz). En la emisora se utilizara un Transmisor \nTX  Fr Sky 2.4GHz, y en la unidad  Dron m\u00f3dulo RX FrySky X8R en \nfrecuencia de 2.4GHz el cual est\u00e1 dotado de 8 canales se ha seleccionado \neste modelo pues tiene la posibilidad de ampl iar hasta 16 canales y \ndispone de telemetr\u00eda. Igualmente su relaci\u00f3n calidad precio lo hace asequible a las posibilidades del proyecto.  \nFigura 23 M\u00f3dulos Transmisor y Receptor Fr Sky 8Ch  \n \n5.2.10 Sistema Transmisi\u00f3n \u2013 Recepci\u00f3n Audio- Video (5,8Ghz)  \nTransmisor Audio- Video Boscam 5832  \nSe ha seleccionado por se r ideal por su potencia, que en principio no supera \nlos 600mW lo que posibilita si es necesario hacer uso de amplificador existente \nen mercado pudiendo ampliar potencia hasta 2,5W, (hay que tener en cuenta \nla legalidad vigente en este sentido)[2].  \nPor otro  lado haciendo uso de antena circular la cual seg\u00fan caracter\u00edsticas \nindicadas por fabricante garantiza una alcance de 1Km a 1\u20195Km con una \npotencia de 600mW.  \nFigura 24 M\u00f3dulos Transmisor Audio- Video 5\u20198Ghz  \nReceptor A udio-Video Boscam RC805  \n \nSe ha seleccionado el receptor RC805 el cual es acorde con los canales de transmisi\u00f3n \ndel transmisor seleccionado, ambos han sido seleccionado principalmente por su \nrelaci\u00f3n calidad- precio, y teniendo en cuenta el alcance indicado en caracter\u00edsticas por \nel fabri cante.  \n \n \nFigura 25 M\u00f3dulo Receptor Audio- Video 5\u20198Ghz  \n5.2.11 Visualiz ador de datos en pantalla OSD  (On Screen Display ) \nEs un sistema que puede ser programado para disponer los datos de telemetr\u00eda as\u00ed como el sistema de \npilotaje de la UAV en pantalla.  Lo que permitir\u00e1 sin necesidad de consumo de \nrecursos del sistema poder activarlo y sobre impresionar dichos los datos sobre \nla salida de video en paso previo a ser transmitidos.  \n \nFigura 26 OSD (On Screen Display)  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     39 de 374  \n                        [Ir al \u00edndice]  \n4.2.12 Sensor presi\u00f3n atmosf\u00e9rica  \nLa presi\u00f3n se define como la fuerza que se ejerce sobre un \u00e1rea o superficie. Existen cinco tipos de presi\u00f3n: \nPresi\u00f3n absoluta, presi\u00f3n atmosf\u00e9rica o barom\u00e9trica, presi\u00f3n diferencia, presi\u00f3n positiva relativa y presi\u00f3n \nnegativa relativa, este proyecto se centra en la presi\u00f3n atmosf\u00e9rica o barom\u00e9trica.  \nLa presi\u00f3n barom\u00e9trica es la que ejerce el aire en cualquier punto de la atm\u00f3sfera, de ah\u00ed que se hable de forma general de presi\u00f3n atmosf\u00e9rica terrestre. Esta presi\u00f3n var\u00eda ligeramente con las condiciones \nmeteorol\u00f3gicas y disminuye con la altitud. Existen diversos m\u00e9todos para su medici\u00f3n como son mec\u00e1nicos, \nneum\u00e1ticos, electromagn\u00e9ticos y elementos electr\u00f3nicos. Dentro de est os se conocen cuatro tipos de \nsensores: Capacitivos, Sensor de Hall, sensor piezo -resistivo y sensor monol\u00edtico.  \n \nSensor seleccionado:  Efectuando algunas comparativas de los sensores vistos en el mercado se ha \nseleccionado el sensor MPL115A, principalmente por su bus de comunicaci\u00f3n I2C, por su bajo consumo, alta \nprecisi\u00f3n y reducido tama\u00f1o.  El dispositivo esta calibrado en fabrica y se corresponde con el tipo de sensor \nmonol\u00edtico.  \n \nFig 27 Sensor Presi\u00f3n MPL115A  PRESION  Unidades  min. T\u00edpica Max \nResoluci\u00f3n kPa - 0.15 - \n Bit 16 16 16 \nRango  KPa 50 - 115 \nConversi\u00f3n Time  ms  1.6 3 \nVDD Voltios  2.3 3.3 5.5 \n \nTabla 3 Caracter\u00edsticas  Sensor presi\u00f3n MPL115A  \n \n4.2.13 Sensor Iluminaci\u00f3n y proximidad        \nLa radiaci\u00f3n solar se define como el conjunto de radiaciones electromagn\u00e9ticas emitidas por el Sol, las cuales \npara alcanzar la superficie terrestre han de pasar la capa de ozono la cual absorbe la mayor parte de radiaci\u00f3n.  \nSu magnitud de medida es la irradiancia, la cual nos indica la energ\u00eda por unidad de tiempo y \u00e1rea cuando \nalcanza la tierra. Su unidad son los W/m2 aunque existe otra conocida como Lux. Esta es la luminosidad \n(lumen) por metro cuadrado. Esta ser\u00e1 la que se utilizara a lo largo de este proyecto. Aunque no existe \nconversi\u00f3n directa entre Lux y W/m2 si existe una equivalencia en funci\u00f3n de la longitud de Onda.  \n Aqu\u00ed hemos de indicar que en principio seleccionamos dos sensores independientes el S1087, pero que \ndebido a plazos de entrega de proveedores se ha tenido que sustituir por uno m\u00e1s est\u00e1ndar el  cual si fue \nrecibido dentro de los plazos.  \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     40 de 374  \n                        [Ir al \u00edndice]  \nSensor seleccionado: El sensor seleccionado para medici\u00f3n de Iluminaci\u00f3n es el VCNL4010, debido a sus \nreducidas dimensiones, bajo consumo y  una buena precisi\u00f3n.  \n \n \n \nFig. 28 Sensor Iluminaci\u00f3n- Proximidad                      ILUMINACION  Unidades  min. T\u00edpica Max \nResoluci\u00f3n Luxes  - 0.25 - \n Bit 16 16 16 \nRango  %HR  0.25 - 16383  \nPROXIMIDAD      \nResoluci\u00f3n mm  Up 200mm   \n Bit 16 16 16 \nTabla 4 Caracter\u00edsticas  Sensor Iluminacion -Proximidad  \n \n4.2.14 Sensor Medidor Temperatura y Humedad relativa      \n La temperatura es una magnitud que hace referencia a la noci\u00f3n de calor o fr\u00edo. Esta puede \nexpresarse en el S.I de Unidades por grados Kelvin, aunque tambi\u00e9n fuera del \u00e1mbito cient\u00edfico se hace uso \nde otras escalas como la escala cent\u00edgrado o Celsius, y la escala Fahrenheit, En este proyecto se hara uso \nde la escala Cent\u00edgrada o Celsius. Para llevar a cabo la conversi\u00f3n la ecuaci\u00f3n siguiente muestra c\u00f3mo \nrealizarla:     \n16.273)(\u00ba )(\u00ba \u2212= KT CT  \n La Humedad Relativa est\u00e1 definida como el porcentaje de vapor de agua que contiene el aire, este \nse mide en porcentajes, as\u00ed a nivel del mar  si nos encontramos con un porcentaje del 90% indica que el aire \ncontiene ese porcentaje del vapor de agua que puede admitir. En zonas seca s puede llegar a ser del 20%.  \nEste factor est\u00e1 directamente relacionado con la temperatura y nivel de saturaci\u00f3n del aire.  \n \nSensor seleccionado: El sensor seleccionado para este proyecto ha sido el SHT 11, sin embargo debido a \nproblemas con proveedores en plazos de entrega, los cuales superaban los plazos para poder cumplir la \nplanificaci\u00f3n se ha utilizado uno similar concretamente el DHT22.  \n Ambos son capaces de efectuar medidas de los dos par\u00e1metros indicados, temperatura y Humedad \nrelativa, estando cali brados, se trata de un sensor de la familia CMOS el cual posee un converso r A/D \n(anal\u00f3gico/digital)  de 14 bit, bajo consumo de energ\u00eda y peque\u00f1as dimensiones .  \n \n En la siguiente tabla se pueden ver sus caracter\u00edsticas principales, tanto para la medici\u00f3n de Humedad \nRelativa como para la de Temperatura.  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     41 de 374  \n                        [Ir al \u00edndice]  \n \n \nFig  29 Sensor Temperatura Humedad Relativa DHT22  HUMEDAD  Unidades  min. Tip. Max \nResoluci\u00f3n  %HR  0.5 0.03 0.03 \n Bit 8 12 12 \nRepetitividad  %HR  - 1.0\u00b1 - \nRango  %HR  0 - 100 \nTEMPERATURA      \nResoluci\u00f3n  \u00baC 0.04 0.01 0.01 \n \u00baF 0.07 0.02 0.02 \n Bit 12 14 14 \nRepetitividad  \u00baC  1.0\u00b1  - \n \u00baF - 2.0\u00b1\n - \nRango  \u00baC -40 - 123.8  \n \u00baF -40  254.9  \n              T abla 5 Caracter\u00edsticas  Sensor Temperatura-  Humedad Relativa \n \n4.2.15 Sistema Estabilizador C\u00e1mara Video (Gimbal)   \nEl sistema estabilizador adquirido ha sido el DJI, ya que el que se hab\u00eda previsto marca Tarot no se ha podido \nadquirir por problemas de con el proveedor el cual no lo surtir\u00e1 hasta mes de \nfebrero, este se utilizara de forma provisional ya que su tama\u00f1o no el apropiado \n(es peque\u00f1o para situar la Raspberry como se quiere hacer) en el soporte si \nbien se estudiara la forma en que puede modificarse sin que afecte al sistema \nestabilizador.  \n \n \nFigura 30 Sistema estabilizador (Gimbal)  \n4.2.15 C\u00e1mara Pi  \nLa c\u00e1mara capturadora de video se opta por adquirirla correspondiente al sistema Raspberry Pi, para asi \npoder hacer uso de las ventajas que presenta la CPU de disponer de un bus exclusivo DSI el cual esta \nconectado directamente al procesador de video obteniendo un mayor \nrendimiento. Sus caracter\u00edsticas son:  \n\u2022 5 megap\u00edxeles del sensor,  \n\u2022 Soporta 1080p / 720p / 640x480p Video,  \n\u2022 Capaz de 2592 x 1944 p\u00edxeles Im\u00e1genes est\u00e1ticas  \n\u2022 25mm x 20mm x 9mm Huella  \n\u2022 Peso 3g  \n\u2022 Totalmente compatible con los casos ModMyPi  \nFigura 31 Pi Camera Rev 1.3  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     42 de 374  \n                        [Ir al \u00edndice]  \n4.3 Sistema de Alimentaci\u00f3n \n5.3.1 Selecci\u00f3n de Bater\u00edas   \nLa bater\u00eda a utilizar ser\u00e1 de Pol\u00edmero de litio (Li -Po) ya que estas ofrecen una mayor densidad de carga y \ntienen un tama\u00f1o m\u00e1s reducido as\u00ed como menor peso que las de tradiciones de ion- litio. \nPara la selecci\u00f3n de la bater\u00eda adecuada que proporciones los tiempos de vuelo que se necesitan (20min) \nse deber\u00e1 tener \u00e9l cuenta el consumo total de la unidad.  \n \nPara ello en primer lugar se toma medida del consumo en estado de reposo \nefectuando transmisi\u00f3n de video para una vez conocido este poder determinar cu\u00e1l ser\u00e1 el consumo que la unidad tendr\u00e1 en vuelo incluyendo el que \nnecesitan los distintos sistemas.  \nTomando medida emp\u00edricamente pude observarse en la figura de la izquierda \nque el consumo efectuando transmisi\u00f3n de video es de pr\u00e1cticamente de 1 \nAmperio.  Esta Intensidad sera el c onsumo de los sistemas de la unidad dron \n(I\nCsistemas ) \n Consumo sistemas y transmisi\u00f3n video=  ICsistemas  =965mA  \n \n \nFigura 32 Consumo Sistemas  \nEn la siguiente figura se puede ver las caracter\u00edsticas de trabajo del motor, relaci\u00f3n consumo -rpm y fuerza \nde elevaci\u00f3n en gramos correspondientes al motor utilizado A2212/T13 (1000Kv)  \n \nFigura  33 Relaci\u00f3n consumo -rpm y fuerza elevaci\u00f3n motores                                    Tabla 6x Relaci\u00f3n RPM Motor y consumo. \n \nSe puede extraer de l as caracter\u00edsticas mostradas (tabla xx) que l os consumos de un \u00fanico motor a m\u00e1xima \npotencia es de 13,81 A, por lo que el consumo total de los motores a m\u00e1xima potencia estar\u00e1 determinado \npor el n\u00ba de motores y dicho consumo m\u00e1s el consumo de los sistemas medido anteriorment e. \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     43 de 374  \n                        [Ir al \u00edndice]  \n   \ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e =\ud835\udc70\ud835\udc70\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\u2219\ud835\udc75\ud835\udc75\u00ba \ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e +\ud835\udc70\ud835\udc70\ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e  \nAs\u00ed se tendr\u00e1 que en el momento de despegue (m\u00e1xima potencia) el consumo llegara a ser de:  \n\ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e =\ud835\udc70\ud835\udc70\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc26\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\u2219\ud835\udc75\ud835\udc75\u00ba \ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e +\ud835\udc70\ud835\udc70\ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e =\ud835\udfcf\ud835\udfcf\ud835\udfcf\ud835\udfcf,\ud835\udfd6\ud835\udfd6\ud835\udfcf\ud835\udfcf\u2219\ud835\udfd2\ud835\udfd2+\ud835\udfcf\ud835\udfcf=\ud835\udfd3\ud835\udfd3\ud835\udfd3\ud835\udfd3\ud835\udfd3\ud835\udfd3 \nSin embargo los motores no se mantienen durante todo el vuelo a m\u00e1xima potencia sino que una vez \nrealizado el despegue se establecer\u00e1 una velocidad de crucero que se estima en 60% (algo superior a la \nmedia velocidad).  Por lo que el consumo de cada motor seria de aproximadamente 4.5 A , por tanto a dicha \nvelocidad de crucero el consumo seria de:   \n\ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e \ud835\udc91\ud835\udc91\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e=\ud835\udfd2\ud835\udfd2,\ud835\udfd3\ud835\udfd3\ud835\udfd3\ud835\udfd3\u2219\ud835\udfd2\ud835\udfd2+\ud835\udfcf\ud835\udfcf\ud835\udfd3\ud835\udfd3=\ud835\udfcf\ud835\udfcf\ud835\udfd6\ud835\udfd6+\ud835\udfcf\ud835\udfcf=\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd3\ud835\udfd3 \nLa vida \u00fatil de una bater\u00eda se calcula  en base a su corriente nominal en miliamperios por hora (mAh) \ninversamente proporcional a la corriente de carga soportada y aplic\u00e1ndole un factor de tolerancia de un 0.7 \npor lo que para tener una vida \u00fatil de 20minutos se requerir\u00e1 una bater\u00eda con un capacidad de:  \n\ud835\udc7d\ud835\udc7d\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e  \ud835\udc96\ud835\udc96\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc96\ud835\udc96=\ud835\udc6a\ud835\udc6a\ud835\udc8e\ud835\udc8e\ud835\udc91\ud835\udc91\ud835\udc8e\ud835\udc8e\ud835\udc70\ud835\udc70\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e \ud835\udc83\ud835\udc83\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e (\ud835\udc8e\ud835\udc8e\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e)\n\ud835\udc70\ud835\udc70\ud835\udc70\ud835\udc70 \ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e \ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc84\ud835\udc84\ud835\udc8e\ud835\udc8e\u2219\ud835\udfd0\ud835\udfd0.\ud835\udfd5\ud835\udfd5\u21d2\ud835\udc6a\ud835\udc6a\ud835\udc8e\ud835\udc8e\ud835\udc91\ud835\udc91\ud835\udc8e\ud835\udc8e\ud835\udc70\ud835\udc70\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e \ud835\udc83\ud835\udc83\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e  (\ud835\udc8e\ud835\udc8e\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e)=\ud835\udc70\ud835\udc70\ud835\udc70\ud835\udc70 \ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e \ud835\udc70\ud835\udc70\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc84\ud835\udc84\ud835\udc8e\ud835\udc8e\u2217\ud835\udc7d\ud835\udc7d\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e  \ud835\udc96\ud835\udc96\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc96\ud835\udc96\n\ud835\udfd0\ud835\udfd0.\ud835\udfd5\ud835\udfd5 \nPor lo que para una autonom\u00eda de vuelo de 15 minutos=0.333 horas  \n\ud835\udc6a\ud835\udc6a\ud835\udc8e\ud835\udc8e\ud835\udc91\ud835\udc91\ud835\udc8e\ud835\udc8e\ud835\udc70\ud835\udc70\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e \ud835\udc83\ud835\udc83\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc8e\ud835\udc94\ud835\udc94\ud835\udc8e\ud835\udc8e (\ud835\udc8e\ud835\udc8e\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e)=\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udfd0\ud835\udc8e\ud835\udc8e\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e \u2217\ud835\udfd0\ud835\udfd0.\ud835\udfd0\ud835\udfd0\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e\n\ud835\udfd0\ud835\udfd0.\ud835\udfd5\ud835\udfd5=\ud835\udfd5\ud835\udfd5.\ud835\udfcf\ud835\udfcf\ud835\udfd2\ud835\udfd2\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e\ud835\udfd3\ud835\udfd3\ud835\udc8e\ud835\udc8e  \nDeterminada  la capacidad de la bater\u00eda se consulta modelos de bater\u00edas seleccionando dos posibles \nopciones, estas son:  \nZyppy modelo Compact  \nN\u00famero de elementos:  3  \nVoltaje: 11,1V  \nCapacidad:  5000 mAh  \nDescarga:  25C Continuo 125 A/ 35C Pico  175 A  \nCarga:  2C \nPeso:  360 g  \nMedidas:  145*51*24mm  \nConector de equilibrado:  si \nConector bater\u00eda : 4mm Bullet  Zyppy modelo Flightmax  \nN\u00famero de elementos:  3 \nVoltaje : 11,1V   \nCapacidad:  8000 mAh  \nDescarga:  30C Continuo 240 A/ 40C Pico 320 A  \nCarga:  2C \nPeso:  642 gr  \nMedidas:  164*67*24mm  \nConector de equilibrado:  si \nConector bater\u00eda : 5mm conectores oro.  \nAmbas puede observarse que la intensidad m\u00e1xima en pico cubre con amplio margen el amperaje del \nrequerido en la acci\u00f3n de despegue y que en modo de descarga continua igualmente pueden suministrar la \nintensidad necesaria igualmente con un amplio margen. Por lo que se puede optar por instalar 2 bater\u00edas de \n5000mAh en paralelo o bien una bater\u00eda de una capacidad de 8000mAh.  \nFinalmente se selecciona la bater\u00eda Li.Po Zyppy modelo Flightmax ya que es suficiente para el tiempo de \nvuelo indicado y el coste es bastante inferior al que supone la compra de dos bater\u00edas  del modelo Compact.  Por ot ro lado dado se deja opci\u00f3n a una \nfutura mejora la posibilidad de incorporar una segunda bater\u00eda en paralelo \nque pueda proporcionar un tiempo de vuelo, siempre y cuando el peso final \nde la UAV no exceda de 2,5Kg.  \n \nFigura 34 Bater\u00eda LI- PO Zippy 3S 8000mAh  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     44 de 374  \n                        [Ir al \u00edndice]  \n4.3.2 Adapta ci\u00f3n niveles tensi\u00f3n alimentaci\u00f3n.  \nLa unidad Dron  como se ha visto ser\u00e1 alimentada mediante bater\u00eda LiPo de tres celdas, obteniendo as\u00ed un \nvoltaje de 11. 1V. Para la reducci\u00f3n de tensi\u00f3n se har\u00e1 uso de dos m\u00f3dulos de potencia con medici\u00f3n de \nintensidad y voltaje preparados para 5V  y 3.3V . Concretamente se har\u00e1 uso de los m\u00f3dulos  espec\u00edficos \npara Arduino Arduflyer Power Module V1.0 \nEste m\u00f3dulo de potencia ofrecer\u00e1 una alimentaci\u00f3n de 5V a partir \nde una bater\u00eda LiPo (11.1V)  y reportara la medici\u00f3n de consumo \nde corriente y voltaje de la bater\u00eda a trav\u00e9s del su conector de \nsalida de 6 pines.   Sus caracter\u00edsticas son:  \n \nFigura 35 Modulo de potencia V1.0                    -    Max Voltaje entrada 25V  \n- Max medici\u00f3n Amp. 90A \n- Salida 5.3V y 3.3V.  \n- Intensidad Max salida 2.25A  \n \nEstas caracter\u00edsticas son suficientes para el consumo m\u00e1ximo que puede requerir tanto en el sistema de \ncontrol de vuelo (Arduino) como en el sistema central y Transmisi\u00f3n de Video cuyo  consumo m\u00e1ximo  \nrecomendado es de 2A m\u00e1ximo  y verificado en uso emp\u00edricamente se ha visto es de 1 Amperio.  \n4.3.3 Estaci\u00f3n base  \nLa estaci\u00f3n base deber\u00e1 estar dotada de un sistema de carga de bater\u00edas el cual ser\u00e1 alimentado mediante \nplacas solares. El sistema de placas solares y sistema de carga deber\u00e1 de ser capaz de suministras una \nintensidad m\u00e1xima de 8000mA intensidad igual a l a capacidad de la bater\u00eda. Se determina asi ya que en \nla bater\u00eda adquirida indica y recomienda sea cargado a un m\u00e1xima de 1C, por tanto 8000mA.  \n \nLos bornes de alimentaci\u00f3n para carga ser\u00e1n situados en placas en la zona de aterrizaje donde el Dron se \nposara sobre ellas y estando dotado de contactos en sus en su tren de aterrizaje servir\u00e1n de contacto para \nefectuar la carga una vez haya aterrizado sobre la plataforma.  \n \nEn la estaci\u00f3n de base es deseable que exista un punto de acceso a red si existe la posibilidad.  \n  \n \n  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     45 de 374  \n5. Descripci\u00f3n Detallada del Software                 [Ir al \u00edndice]  \n5.1 Sistema Operativo Central  \nEn este \u00faltimo a\u00f1o se han presentado nuevas distribuciones para R aspberry PI,  especialmente para la \nversi\u00f3n Rapberry Pi 2 B . La mayor\u00eda de los sistemas para este dispositivo est\u00e1n basados en Linux, siendo \nen gran medida distribuciones de Linux portadas a la arquitectura ARM, pero tambi\u00e9n soporta otras \ndistribuciones incluso Windows  ha sacado un versi\u00f3n para Raspberry Pi 2 Windows 10 IoT (Internet of \nThings) para Raspberry pi . Algunos de los sistemas son:  \n\u2022 FreeBSD  el cual es un sistema de Unix -like open- source cuyas caracter\u00edsticas en su versi\u00f3n para \nRaspberry Pi  es haber sido compilado utilizando FreeBSD GCC 4.2.1, ( Berkeley Software \nDistribution ) incluyendo partici\u00f3n de intercambio de 512MB. Sin embargo actualmente no est\u00e1  \nconsiderado estable para Raspberry PI , presentando problemas con dispositivos de Red.  \n\u2022 Open Elec (Open Embedded Linux Entertainment Center) es una distribuci\u00f3n de Linux la cual est\u00e1 \ndise\u00f1ada para HTPC (Home Theater Personal Computer, computadora personal de cine en casa) y \nest\u00e1 basada en el reproductor de medios XBMC, aplicando el principio  de JeOS (Just Enough \nOperating System) est\u00e1  dise\u00f1ado para consumir pocos recursos, este proporciona un completo \ncentro de recursos multimedia.  \n\u2022 Ubuntu Mate , con entorno de escritorio, esta versi\u00f3n de Ubuntu se encuentra en fase de desarrollo \nsin embargo se ha pr esentado una distribuci\u00f3n compilada para ARM. Unbuntu Mate 15.04.  \nSin embargo el primer  sistema operativo fue Raspbian siendo el m\u00e1s extendido para uso gen\u00e9rico, es una \nsistema estable para la Rasberry Pi   y que ha incorporado importantes mejoras para la versi\u00f3n Rasberry \nPi 2.  Por tanto es este proyecto se har\u00e1 uso de este sistema operativo sobre el que se instalaran el resto \nde aplicaciones . \nRaspbian es una distribuci\u00f3n del sistema operativo GNU/Linux lanzado en junio  del a\u00f1o 2012, es por tanto \nun software libre y basado en el sistema operativo Debian 7.0.  Los motivos para su selecci\u00f3n han sido \nque Raspbian@ dispone de soporte optimizado para c\u00e1lculo s en coma flotante por hardware lo que \nposibilita un may or rendimiento en este proyecto. Por otro lado cuenta con herramientas de desarrollo ya \nincorporadas como los lenguajes d e programaci\u00f3n Phyton o Scratch, de igual forma dispone de utilidades \niniciales  simples y mediante men\u00fas  interactivos con el usuario que permiten la configuraci\u00f3n del sistema a \nusuarios sin necesidad de altos conocimientos en Linux . As\u00ed su men\u00fa de configuraci\u00f3n raspi -config tiene \nopciones como son configuraci\u00f3n de teclados, interface s (I2C, Serial, C\u00e1mara, etc..), permite la expansi\u00f3n \nde la partici\u00f3n root, aplicar overclock , entre otras  muchas . \nPuede adquirirse mediante enlaces de descarga, directamente de internet en su web de desarrollo [9] donde \ntambi\u00e9n ofrece manuales en l\u00ednea para su instalaci\u00f3n y consulta. De igual forma puede descargarse de la \nweb de Raspberrypi[2], donde se encuentra entre otros sistemas operativos disponibles para esta MCU. \n(http://www.raspberrypi.org/downloads )   \nSu instalaci\u00f3n se realiza de forma sencilla sobre tarjeta micro SD, haciendo uso de las aplicaciones \nSDFormatter  (Enlace descarga ) y Windisk32Imagen (Enlace descarga ). Ambas aplicaciones de software \nlibre para formateo y escritura de im\u00e1gen es en Tarjetas  SD respectivamente.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     46 de 374  \n                        [Ir al \u00edndice]  \nLos procesos de instalaci\u00f3n tanto del sistema operativo como del resto de apli caciones de las que se har\u00e1 \nuso se pueden consultar su instalaci\u00f3n en ANEXO A adjunta a esta memoria, as\u00ed una vez instaladas las \naplicaciones y el Sistema Central configurado como se expone en el mencionado anexo el propio sistema \npone disposici\u00f3n lenguajes de programaci\u00f3n para la creaci\u00f3n de los distintos scripts, y ejecutables en su \nconjunto bien mediante su uso por usuario o configurados para arranque autom\u00e1tico no permitir\u00e1  realizar \ntodos las funciones de control y seguimiento de la aeronave.  \n \n5.2 Lenguaje de programa ci\u00f3n Python.  \nEl sistema Rabian como se ha indicado incorpora el lenguaje de programaci\u00f3n Python el cual es un lenguaje \ninterpretado orientado a objetos, y que mediante sentencias permiten realizar tareas que implicar\u00edan una \nmayor complejidad as\u00ed, en el caso en el caso de querer acceder a dispositivos conectados a la unidad Dron \ncomo por ejemplo puede obtener los datos de temperatura o presi\u00f3n de la zona en la que est\u00e1 vigilando se \npuede f\u00e1cilmente realizar mediante un breve programaci\u00f3n.  \n \nAs\u00ed para acceder al sensor de Presi\u00f3n  y temperatura MPL115A se realiza la siguiente codificaci\u00f3n la cual \nguardar\u00ed amos como fichero ejecutable directamente con extensi\u00f3n *.py  \n \n#Lectura y presentaci\u00f3n en pantalla de la presi\u00f3n y temperatura del sensor MPL115A .py \n#!/usr/bin/phthon  \nimport smbus  \nfrom time import sleep  \nbus = smbus.SMBus(1)  \nwhile(0==0):  \n        tempC=0 \n        pressure=0  \n        # solicita al sensor que efectu\u00e9 el muestreo  \n        bus.write_i2c_block_data(0x60,  0x12,  [0x01])  \n        sleep(3)  \n        #Solicita al sensor que  \n        bus.write_byte(0x60, 0x00)  \n        sleep(1)  \n        reading1=bus.read_i 2c_block_data(0x60, 0x00)  \n        pressure=((reading1[0]<<2)+((reading1[1] & 0xc0) >>6))  \n        pressure=((65.0/1023.0)*pressure)+50  \n        tempC=(((reading1[2]<<2+((reading1[3] & 0xc0)>>6)) -510.0)/ -5.35 + 25.0)  \n        if (tempC > 0) : print 'Temperatu ra:%1f C  Presion:% 1fkPa' %(tempC, pr$  \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     47 de 374  \n                        [Ir al \u00edndice]  \n \nEntrando en el sistema ejecutar\u00edamos la sentencia (p.e por conexi\u00f3n SSH) ejecutando directamente el \nprograma mediante Python  con ejecutando el script mediante.  \n \n sudo phyton MPL115A.py  \n \nEl sistema nos presentara la temperatura y presi\u00f3n de la zona donde se encuentre ubicado el Dron.  \n \n \nFigura 36 presentaci\u00f3n lectura Temperatura y presi\u00f3n  \n Este cuenta con una amplia librer\u00eda as\u00ed  puede realizarse el servicio de env\u00edo de SMS, instala la librer\u00eda SMS \nAPI, lo que permitir\u00e1 que dichos datos si el sistema no dispone de otra red puedan ser enviados mediante un SMS.  \nPor otro lado Python permite la ejecuci\u00f3n de sus programas en pr\u00e1cticamente toda la plataforma ofreciendo \nm\u00faltiples opciones para desarrollar interfaces graficas de usuario portables, como Tkinter, wxPython, PyGTK, \nPyQT. Los scripts de Python puede de una forma f\u00e1cil comunicarse con otras parte de la aplicaci\u00f3n del sistema \nya que tiene mecanismos de integraci\u00f3n para invocar librer\u00edas de leguaje C y C++ por lo que puede ser \nllamado desde C, CORBA ( Common Objetct Request Broker Architecture) y NET pudiendo interactuar en la \nred con interfaces como SOAP, o comunicarse por medio de mecanismo de intercambio de datos en XML, lo \nque lo hace \u00fatil en esta aplicaci\u00f3n para comunicaci\u00f3n con la unidad Dron.  \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     48 de 374  \n                        [Ir al \u00edndice]  \n5.2 Biblioteca de visi\u00f3n artificial OpenCV . \nOpen CV (Open Source Computer Visi\u00f3n ) es una biblioteca  de visi\u00f3n artificial desarrollada por  el centro de \ninvestigaci\u00f3n Intel, es utilizada en aplicaciones de sistemas de seguridad para detecci\u00f3n de movimientos,  \ny reconocimiento de objeto.  \nEsta tiene muchas formas  de poder detectar el color por contornos, por momentos, calculando \u00e1reas, etc\u2026  \nComo se ha visto en el apartado 3.3 la detecci\u00f3n de fuego por color es m\u00e1s complicada y que la detecci\u00f3n \npor humo si bien  \nEn este sentido no se ha podido profundizar por falta de tiempo material, \u00fanicamente se han podido realizar \nalgunas pruebas en cuanto a reconocimiento de objetos por la forma, o reconocimiento facial, pero no ha \nsido posible disponer de m\u00e1s tiempo para llevar a cabo pruebas de detecci\u00f3n del color y comprobar  hasta \nqu\u00e9 punto en vuelo puede ser capaz de detecta color.  \nSe indica por detecci\u00f3n de color pues la detecci\u00f3n por humo cuando el sistema de visi\u00f3n, como es la UVA \nesta en vuelo es dif\u00edcil  implica turbulencias y movimientos aunque exista un estabilizador y  como se \nexplicado en el apartado 3 es m\u00e1s complicado y hay que aplicar otras t\u00e9cnicas.  \nPor tanto todo lo que se ha podido realizar a cabo a trav\u00e9s de OpenCV y creando entornos virtuales es   \nconseguir una captura de video alta definici\u00f3n durante el vuelo,  a la vez que pone a disposici\u00f3n del servidor \nWEB local del dispositivo la grabaci\u00f3n en almacenamiento USB . \nLa idea de instalar un servidor en la propia aeronave ha resultado factible en el sentido que si se ha verificado su funcionamiento realiz\u00e1ndolo cor rectamente incluso mediante una captura con Raspistall, \ncomo se ha mostrado en videos de verificaci\u00f3n de funcionamiento que se encuentra en repertorio del la \nweb del presente trabajo de fin de grado. https://www.inf oteli.org\n. \n   Rasp\u00ecstill \u2013o /media/archivo/www/video/fotograma.jpg   -tl 1000  t 0,  \n \nEl sistema captura y transmite video por RF (5,8MHz) por tiempo indefinido y env\u00eda cada segundo graba \nun fotograma en el servidor WEB.  \nIgualmente mediante la grabaci\u00f3n de video (Raspivid) se puede efectuar esta grabaci\u00f3n de diversos \nformatos, como se ha efectuado en formato h.264, y realizar video streaming.  \n \nPor tanto como el sistema se ha programado mediante las aplicaciones y librer\u00edas con el sistema operativo \npara que pueda efectuar transmisi\u00f3n de video por RF a la vez que proporciona dichos video o bien \nfotogramas cada segundo para su an\u00e1lisis.  \n \nPruebas que se esperan puedan presentarse en la presentaci\u00f3n de este trabajo.  \nIndicar que todo ello se realiza controlado remotamente como se indica en el siguiente apartado.  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     49 de 374  \n                        [Ir al \u00edndice]  \n5.3 Software Mission Planner  \n5.3.1 Conectando a Unidad Controladora de vuelo a trav\u00e9s de Raspberry pi  \nPara ello se har\u00e1 uso de MAVLink (Micro Air Vehicule link). Este es un protocolo de comunicaci\u00f3n para \nveh\u00edculos no tripulados, realizado por Lorenz Meier bajo licencia GPL 2009. Este es instalado como \nbiblioteca en el sistema y permitir\u00e1 disponer de una co nexi\u00f3n y un control total del sistema control de vuelo \n(Arduino Pilot). Correctamente configurado, mediante MavProxy  proporciona una conexi\u00f3n mediante \nprotocolo UDP para aplicaciones como Misi\u00f3n Planner  o bien simplemente mediante conexi\u00f3n SSH (p.e. \nWiFi) permitir\u00e1 la comunicaci\u00f3n con el controlador de vuelo en l\u00ednea de comandos a trav\u00e9s de MAVLink.  \nAs\u00ed en modo supervisor (programador) este permitir\u00e1 conectar y comandar los sistemas ajustando \npar\u00e1metros de vuelo y configurando la unidad Dron para vuelo programado.  De igual forma en todo \nmomento haciendo uso de MAVLink se pueden obtener todos los datos de telemetr\u00eda que puedan \nrequerirse para el control de vuelo, a trav\u00e9s de los diferentes dispositivos perif\u00e9ricos de que dispone el \nsistema controlador de vuelo. (p.e GPS, Altitud, velocidad, posicionamiento, as\u00ed como sensores tensi\u00f3n y \nconsumo, del sistema en tiempo real.).  \n \nPara disponer de conexi\u00f3n remota se debera ejecutar mavproxy debidamente configurado en el inicio del \nsistema para lo cual agregarem os las siguientes l\u00edneas al fichero de inicio etc/rc.local  \n \n( \ndate \necho $PATH  \nPATH=$PATH:/bin:/sbin:/usr/bin:/usr/local/bin  \nexport PATH  \ncd /home/pi  \nscreen  -d -m -s /bin/bash mavproxy.py --master=/dev/ttyAMA0 --baudrate 57600 --out 192.168.1.5:14550 \n--out 192.168.1.5:5760 --aircraft QuadCopter  \n) > /tmp/rc.log 2>&1  \n----------------------------------------------------------------------------------------------- --------------------------------------------- \n \nCon ello se dispondr\u00e1 de conexi\u00f3n mediante protocolo UDP en el puerto 14550 de forma remota para \nconfiguraci\u00f3n como puede verse la conexi\u00f3n se establece correctamente pudiendo a partir de ella efectuar \ntoda la programaci\u00f3n y control de la UVA a trav\u00e9s del sistema central Raspberry pi.  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     50 de 374  \n                        [Ir al \u00edndice]  \n \n \nFigura 37 efectuando conexi\u00f3n remota mediante Mission Planner . \n \nEn la siguiente figura se puede observar como la situaci\u00f3n del GPS la marca correcta y se puede a \ndirectamente comenzar indicar los Way -points que definan un plan de vuelo  \n \nFigura 38  conexi\u00f3n a programaci\u00f3n plan de vuelo.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     51 de 374  \n                        [Ir al \u00edndice]  \n5.5 Diagrama casos de Uso \nEn la aplicaci\u00f3n del sistema pueden diferenciarse tres tipos de usuarios:  \n\u2022 Usuario Local: Interact\u00faa directamente con el sistema de navegaci\u00f3n como piloto in- situ. \n\u2022 Usuario PC: Interact\u00faa mediante SSH o Entorno Grafico (Escritorio remoto) con el sistema, \npudiendo llevar a cabo toda la programaci\u00f3n de sistema que se requiera. De igual forma podr\u00e1 en \nmodo SSH enviar comandos y planes de vuelo mediante MAVLin ks por consola a la UAV.  \n\u2022 Usuario WE B: Interact\u00faa con el sistema mediante aplicaci\u00f3n WEB a trav\u00e9s de red internet.  \nPara cada usuario podemos distinguir los siguientes casos de uso que se representan  el siguiente \ndiagrama de casos de uso  \nDiagrama casos de Uso  \n \nFigura 39 Diagrama casos de uso  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     52 de 374  \n6. VIABILIDAD TECNICA         [Ir al \u00edndice]   \n6.1 Estudio Viabilidad T\u00e9cnica  \nEl proyecto como puede comprobarse est\u00e1 falto de madurez , dado que no se han implementado los dise\u00f1os \nde placa de sensores , ni los dise\u00f1os de caja apropiada para un ensamblado m\u00e1s profesional, de igual forma \nla programaci\u00f3n de interfaces de usuario se han realizado de una forma muy simple a modo de demostraci\u00f3n, \ndebido al corto tiempo disponible para su realizaci\u00f3n.  Sin embargo, desde el punto de vi sta t\u00e9cnico, si puede \nconsiderarse un proyecto viable, ya que en la selecci\u00f3n de sus componentes se ha tenido presente siempre \nla consecuci\u00f3n de unos fines profesionales, teniendo en cuenta la calidad y precisi\u00f3n de los mismos . Por otro \nlado resuelve ampli amente el problema planteado, obteniendo un producto con capacidad para la capt ura de \nvideo y  medida de fen\u00f3menos atmosf\u00e9ricos  as\u00ed, como posibilidad de registro de estos en base de datos para \nsu tratamiento posterior  y con posibilidades de mejoras sin pr\u00e1cticamente coste (solo se requiere tiempo) \ncomo puede ser la capacidad de tomar decisiones como causa -efecto  de los datos recabados o la capacidad \nde mostrar presentar en su propio servidor web accedo a video a la vez que efect\u00faa el vuelo pudiendo as\u00ed \nponer  a disposici\u00f3n la visi\u00f3n de la zona y esos datos recabados entiendo que da por tanto soluci\u00f3n al problema \nque se planteaba en este proyecto.  \n \nComo puntos d\u00e9biles , remarcar que el principal punto d\u00e9bil es su falta de madurez, a partir aqu\u00ed se pueden \nobserva r otros como son:  \n\u2022 La autonom\u00eda de vuelo, el dise\u00f1o deber\u00eda ser repasado y m\u00e1s ajustado en peso para as\u00ed poder reducir \nesos 200g que le sobran para poder incorporar una segunda bater\u00eda  lo que le dar\u00eda una autonom\u00eda \nuna mayor autonom\u00eda manteni\u00e9ndose dentro de la legalidad vigente.  \n\u2022 El alto nivel de competencia en ambos sectores que pretende cubrir, ya que existen una amplia gama \nde productos tanto en el sector de medici\u00f3n de factores meteorol\u00f3gicos como en el sector de UAV \nunido a la actual legislaci\u00f3n vigent e hacen que desde el punto de vista comercial no tenga otras \nexpectativas m\u00e1s que en actividades de recreo o deportivas . \n \nComo puntos fuertes  se puede considerar los siguientes puntos:  \n\u2022 Uso de una  placa base con un procesador central  el cual tiene una potencia considerable  (cuatro \nn\u00facleos ), una amplia escalabilidad y con una  tecnolog\u00eda que puede considerarse de las punteras en \nsistemas embebidos.  \n\u2022 La implementaci\u00f3n de los distintos tipos de intercomunicaci\u00f3n con otros dispositivos, no dejando al \nsistema limitado por el uso exclusivo de ninguno de ellos, esto lo hace f\u00e1cilmente escalable y aplicable \nen diversos \u00e1mbitos tanto en apoyo a equipos de extinci\u00f3n de incendios como de apoyo a sistemas \nde toma de datos meteorol\u00f3gicos u otros sectores como puede ser  el sector agrario.  \n\u2022 La implementaci\u00f3n de distintos interfaces con el usuario, permitiendo el control total del sistema tanto \nde forma local como remota, y por otro que el sistema pueda informar en todo momento de su estado.  \n\u2022 La alta precisi\u00f3n de los sensore s empleados estando todos ellos en un margen de error por debajo \ndel 0.2% lo hacen un dispositivo de alta precisi\u00f3n.  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     53 de 374  \n                        [Ir al \u00edndice]  \n \n\u2022 La realizaci\u00f3n de toda la programaci\u00f3n de sistemas y aplicaciones en su totalidad de c\u00f3digo libre \nreducen su coste en comparaci\u00f3n con otros que pudieran dar las mismas prestaciones indicadas en \nel mercado.  \n \nPor lo que se puede concluir que: Implementando en profundidad su aplicaci\u00f3n WEB y de control Local para \nque permita una correcta actuaci\u00f3n sobre el sistema, cosa que no se ha podido llevar a cabo por falta de \ntiempo, se puede considerar que el proyecto es t\u00e9cnicamente viable.  \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     54 de 374  \n7. COSTES              [Ir al \u00edndice]   \n8.1 Presupuesto Prototipo  \n \nPRESUPUESTO INVESTIGACION DESARROLLO Y MONTAJE PROTOTIPO  \n \n \nDescripci\u00f3n Componentes   \nCantidad  Precio \nUnidad(\u20ac)  Precio \nTotal (\u20ac) \nEstructura Quap -Copter TAROT IRON 650  1 160.00  160.00  \nPlaca Base Raspberry PI 2 B  1 45.00  45.00  \nArdu Copter APM 2.6  (GPS NEO + MODULO POT V1.0)  1 62.00  62.00  \nCaja montaje Placa Base Raspberry PI  1 4.00 4.00 \n    \nEmisora Radio Control Turning  9XR PRO  \n(TX M\u00f3dulo 16Canales TX  + Modulo RX 8) con telemetria  \n+ Bater\u00eda  LIPO 11\u20191V  3S 2200mAh  1 250.00  250.00  \nCargador LIPO IMAX B6  1 21.00  21.00  \nBATERIA LIPO 11\u20191V 3S 8000mAh  2 55.00  110.00  \nModulo Dual Banda GSM -GPRS SIM900A Japon  1 14.75  14.75  \nBoscam 8CH 5.8G FPV AV RC805 Receiver +200mW TS351  1 60.00  60.00  \nMini OSD MAVLink  1 9.00 9.00 \nCamara PI NoIR  1 18.00  18.00  \nCamara PI IR  1 14.00  14.00  \nSoporte Gimbal  1 10.50  10.50  \nSoporte plegable base alzadora GPS  1 10.00 10.00 \nMotores A2212/T13 (1000KV) + 4Helices  4 25.00  25.00  \nGimbal DJI GO PRO  1 54.00  54.00  \nSoporte para Gimbal Taror RAIL  4 3.00 12.00  \n    \n    \n    \n    \n    \nSoporte CNC FPV aluminio  1 6.90 6.90 \nCP2102  1 4.50\u2019  4.50\u2019  \nCables diversos, conectores XT60 (x5Pares)y JST (x5Pares)  1 12.00  12.00  \nPlacas Circuito impreso protoboard Soldable Ariston CEB31  1 13.00  13.00  \nRollo Esta\u00f1o sin plomo  100g  1 8.68 8.68 \nSensor TMP 101  1 3.04 3.04 \nSensor SMD Bar\u00f3metro MPL115A  1 2.09 2.09 \nSensor SMD Iluminaci\u00f3n - Proximidad - Infrarojo VCNL4010  1 2.30 2.30 \nSensor  Temperatura -Humedad DTH -22 1 6.20 6.20 \n    \nTotal Coste Materiales    932.64 \u20ac \nHoras Investigaci\u00f3n, desarrollo, montaje y programaci\u00f3n  480h.  15.00  7.200 \u20ac \nCOSTE BASE    8132,64 \u20ac \nIVA 21%    1707.70 \u20ac \n    \nCOSTE TOTAL    9840.34 \u20ac \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     55 de 374  \n8. Conclusiones           [Ir al \u00edndice]  \n8.1 Objetivos alcanzados  \nEl desarrollo del proyecto ha resultado  una tarea bastante complicada debido al gran n\u00famero  de horas que \nsupone desarrollarlo con detalle y como contrapartida el poco tiempo disponible para la realizaci\u00f3n.  \n Hay que indicar que ha resultado un reto muy interesante y me ha permitido aprender bastante  sobre \nel tema . La dificultad  del tema  escogido, y la falta  de tiempo debida  principalmente a compaginar  \nel proyecto con otras tareas y estudios , no me han permitido llevar el proyecto a puntos de realizaci\u00f3n que \nme hubiera gustado vistas las grandes posibilidades que ofrece los dispositivos de que se han podido \ndisponer.  \n Indicar que b\u00e1sicamente estoy satisfecho con el producto final obtenido el cual ha presentado un \nfuncionamiento correcto consiguiendo alcanzar los objetivos marcados, si bien hay que reconocer que falta \npuntos importantes para alcanzar cierto nivel de madurez como dise\u00f1o de placa, dise\u00f1o de caja exterior, una \nprogramaci\u00f3n de interfaces m\u00e1s exhaustiva que ponga al alcance del usuari o a todas las posibilidades del \nsistema etc... y realizar algunas mej oras de las cuales se proponen a continuaci\u00f3n.  \n \n8.2 Propuesta de mejoras  \n A lo largo del desarrollo del proyecto y en la presente memoria se han indicado varios puntos como \nmejoras del si stema tanto en software como en hardware, as\u00ed se propondr\u00edan las siguientes mejoras:  \n \nSoftware : \n -  Programaci\u00f3n adecuada y eficaz del modo bajo consumo (no efectuado por falta de tiempo)  \n -  Programaci\u00f3n de una Interfaz Usuario -sistema WEB mucho m\u00e1s detallada y avanzada.  \n \nHardware : \n - Inclusi\u00f3n de un 2\u00ba m\u00f3dulo GPS al sistema pudiendo dejar as\u00ed el dispositivo Bluetooth para \ncomunicaciones con dispositivos dom\u00f3tica cercanos, y no dependiendo el sistema de GPS \nexterno.  \n - Inclusi\u00f3n de z\u00f3calo tarjeta microSD a Sistema RED SENSORES, lo que podr\u00eda dotar al sistema de \nuna total autonom\u00eda para registro de datos y poder realizar un servidor WEB Local m\u00e1s avanzado.  \n - Dotar al sistema de conexi\u00f3n 3G dando una total independencia al mismo.  \n -Eliminaci\u00f3n Modulo CP2102, ya que el sistema dispone de USB propio.  \n   \nEstas son mejoras que b\u00e1sicamente en Hardware no incrementan el costo de un forma excesiva, ya que el \ndispositivo GPS interno es m\u00e1s econ\u00f3mico que un GPS externo por Bluetooth  (se ha efectuado as\u00ed porque se \ndispon\u00eda del externo), se ha consultado un m\u00f3dulo que incluye GPS y 3G para Arduino el cual su costo es de \n105\u20ac. Por otro lado se ahorrar\u00eda costo al eliminar el dispositivo CP2102 utilizando el USB incorporado en la \nMCU, y los costo s de z\u00f3calo tarjeta microSD son m\u00ednimos (aprox. 10\u20ac).  \n  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     56 de 374  \n                        [Ir al \u00edndice]  \n8.3 Impacto ambiental                    \nEn el presente proyecto se ha tenido en cuenta a la hora de desarrollarlo el consumo energ\u00e9tico. Las \naeronaves son m\u00e1s eficientes y su nivel de contaminaci\u00f3n es pr\u00e1cticamente nulo. Las bases all\u00ed donde se \nestablezcan se alimentaran con placas solares por lo que el impacto en el medio ambiente es m\u00ednimo.  \n \nEn cuanto al proyecto las plataform as de hardware utilizadas se ha cuidado que cumplan con la normativa \nRoHS la cual restringe el uso de materiales peligrosos como son mercurio, plomo, cadmio, cromo VI, etc..  Si \nhay que guardar las precauciones oportunas con las bater\u00edas as\u00ed las bater\u00edas Li -Po cuando se acaba su ciclo \nde vida deben ser sumergidas en agua con sal y trasladas a los puntos de recogida de las bater\u00edas.  \n \n8.4 Autoevaluaci\u00f3n.            \nConsiderando que los requisitos m\u00ednimos b\u00e1sicamente consist\u00edan en:  \n \n\u2022 En el desarrollo  mediante sis temas de Arduino,  adquisici\u00f3n de datos mediante sensores  \n\u2022 Dise\u00f1o e implementaci\u00f3n de una UVA Programaci\u00f3n  de interfaces de comunicaci\u00f3n  \n\u2022 Muestreo peri\u00f3dico de datos y env\u00edo a la aplicaci\u00f3n local  \n\u2022 Conexi\u00f3n a Internet mediante Wifi  \n \nCreo que se han cumplido los objetivos y se han incorporado bastantes de las mejoras que se dieron como \noptativas en la planificaci\u00f3n inicial.  Intentando suplir las carencias que por falta de tiempo material no se ha \npodido llevar a cabo, asi se ha incorpo rado a la unidad un servidor WEB Local, sobre pendrive USB para no \nacortar la vida de la tarjeta micro SD, con capacidad de debidamente configurado presentar el video de vuelo \nen el momento que lo est\u00e1 realizando independientemente de que efectu\u00e9 la grabac i\u00f3n para el posterior \nan\u00e1lisis por visi\u00f3n de im\u00e1genes.  \n  As\u00ed este TFG me ha brindado la oportunidad de hacer una breve introducci\u00f3n en el mundo de los \nsistemas embebidos y  as\u00ed como de as\u00ed como de los diversos sistemas de transmisi\u00f3n y control que pueden \nser empleados, se han utilizado diversos sistemas de transmisiones en conjunci\u00f3n as\u00ed como las diversas \nredes de datos GPRS, WAN, LAN, incluyendo en la unidad las red GSM, con la finalidad de conocer dentro de lo posible el funcionamiento de dichos dispositiv os de comunicaciones.  \n  De igual forma me ha permitido conocer y utilizar un sistema operativo como es Raspbian y de igual \nforma hacer una introducci\u00f3n en el lenguaje de programaci\u00f3n Python. Si bein es cierto que por problemas ocurridos y falta de tiempo no se ha podido profundizar en la aplicaci\u00f3n de Open CV, cosa que me hubiera \ngustado y que realizare para continuar con esas esas mejoras en este proyecto.  \n  Por ultimo tambi\u00e9n me ha dado la oportunidad para conocer por encima las comunicaciones con \ndisposi tivos GPS, conociendo los distintos tipos de datos que pueden recabarse de la red de sat\u00e9lites \nmediante los distintos protocolos m\u00e1s  en profundidad el protocolo utilizado NMEA0183 v2.20 (National Marine \nElectronics Association).  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     57 de 374  \n9. Glosario           [Ir al \u00edndice]   \nA \nADC : Conversi\u00f3n anal\u00f3gica digital.  \nB \nBluetooth: Es una especificaci\u00f3n industrial para Redes Inal\u00e1mbricas de \u00c1rea Personal (WPAN) que  \nposibilita la transmisi\u00f3n de voz y datos entre diferentes dispositivos.  \nBaudrate: N\u00famero de unidades de se\u00f1al por segundo.  \nC \nCortex -A7: procesador de 32 bits de ARM.  \nCPU : Unidad central de procesamiento.  \nD \nDHCP: protocolo de configuraci\u00f3n din\u00e1mica de host.  \nDiagramas de Gantt : Herramienta grafica para representaci\u00f3n de planificaci\u00f3n de trabajos y tareas.  \nE \nE/S: Entrada/Salida.  \n \nG \nGUI: Interface gr\u00e1fica de usuario.  \nGPIO : Puerta programable de entrada y salida de datos.  \nH \nHTML : Siglas de HyperText Markup Language.  \nI \nIDE: Entorno de desarrollo integrado.  \nIP: Identificaci\u00f3n l\u00f3gica y jer\u00e1rquica, de interfaz de dispositivo dentro de una red que utilice el protocolo IP.  \nI2C: Bus de comunicaciones en serie.  \nL \nLan: Red de \u00e1rea local.  \nM \nMCU: Microcontrolador  circuito integrado programable, c on capacidad de ejecuci\u00f3n y memoria.  \nMysql: Sistema de gesti\u00f3n de bases de datos relacional, y multiusuario  \nO \nOpen Source : Es el t\u00e9rmino con el que se conoce al software distribuido y desarrollado libremente.  \nP \nPHP: Lenguaje de programaci\u00f3n de uso general de script del lado del servidor origi nalmente dise\u00f1ado para \nel desarrollo web de contenido din\u00e1mico.  \nR \nRSSI : Indicador de fuerza de se\u00f1al de recepci\u00f3n.  \nRTLinux : Sistema operativo en tiempo real el cual ejecuta Linux como un hilo.  \n \nS \nSSID: Nombre identificaci\u00f3n de una Red Inalambrica (Wi -Fi) \nSPI :Serial Peripheral Interface. Est\u00e1ndar de comunicaci\u00f3n utilizado para entre transferencia de informaci\u00f3n \nentre dispositivos  \nT \nTCP/IP : conjunto de protocolos de red en los que se basa Internet y que permiten la transmisi\u00f3n de datos entre \ncomputadoras.  \nU \nUART : Transmisor -Receptor As\u00edncrono Universal  \nW \nWifi: Mecanismo de conexi\u00f3n de dispositivos electr\u00f3nicos de forma inal\u00e1mbrica.  \nWireless: Comunicaci\u00f3n inal\u00e1mbrica o sin cables  \n \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     58 de 374  \n10. Bibliografia                      [Ir al \u00edndice] \nSe indican a continuaci\u00f3n otras referencias utilizadas para el estudio inicial del proyecto y la realizaci\u00f3n que \nse han efectuado hasta la entrega de esta PAC3 \n \n\u2022 (Material Docente UOC) Universidad Oberta d Catalunya. Sistemas Empotrados , 2011.  Jos\u00e9 Mar\u00eda \nGomez Cama, Francisco Hern\u00e1ndez Ram\u00edrez, Jos\u00e9 L\u00f3pez Vicario, Antoni Morell P\u00e9rez, Juan Daniel Prades \nGarc\u00eda, Ignasi Vilajosana Guillen, Xavier Filajosana Guillen.  \n \n\u2022 (Material Docente UOC) Universidad Oberta de Catalunya. Presentaci\u00f3n de documentos y \nelaboraci\u00f3n de presentaciones. 2013 Roser Beneito Montagut  \n \n\u2022 P\u00e9rez Garc\u00eda, Miguel \u00c1ngel . 2011 . Instrumentaci\u00f3n Electr\u00f3nica.  Editorial Thomson- Paraninfo  \n \n\u2022 LOS SANTOS,  2004.  Alberto  Los Santos  Aransay,  Aplicaci\u00f3n  de las redes  de sensores  en el \nentorno vehicular.  Mayo  2009.   \n http://www.albertolsa.com/wp- content/uploads/2010/04/rsi -aplicacion- de-las-redes -de-sensores -\n en-el-entorno -vehicular -alberto -los-santos.pdf  \n \n\u2022 LORENZATI,  2010.  Ing. Marcelo  Lorenzati,  Desarrollo de drivers  y aplicaciones  para FreeRTOS.  \nMarzo  2010.  \n http://laboratorios.fi.uba.ar/lse/sase/2010/slides/SASE -2010_- FreeRTOS_Drivers_- Lorenzati.pdf  \n  \n \n\u2022 Real Decreto -ley 8/2014 Agencia estatal seguridad . Legislaci\u00f3n vigente sobre Drones . Boletin \nOficial del Estado  \n Enlace:  www.seguridadaerea.gob.es/media/4243006/rdl_8_2014_4julio.pdf   \n \n \n \n\u2022 Aplicaci\u00f3n WEB del proyecto (2016) . Miguel Angel Iglesias Jimenez.  \nEnlace: https://www.infoteli.org/proto  \n \n \n \n \n \n  \n   \n \n \n \n \n  \n \n  \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     59 de 374  \n11. Referencias                       [Ir al \u00edndice]  \n \n[1] Plan INFOCA . Sistemas de Vigilancia y detecci\u00f3n Red de comunicaciones.  Junta Andaluc\u00eda  \n     [en l\u00ednea] Enlace documento  . \u00daltima consulta: 08/10/2015  \n \n[2] Plan INFO CA. Aplicaci\u00f3n de nuevas tecnolog\u00edas. Junta de Andaluc\u00eda . [en l\u00ednea]  Enlace documento  . \n     \u00daltima consulta: 08/10/2015  \n [3] FlichtechSystem . Proyectos y aplicaciones UAV empresa Espa\u00f1ola. [en l\u00ednea]  \n     Enlace: http://flightechspanish.weebly.com/aplicaciones.html\n . \u00daltima  consulta 08/10/2015  \n [4] Zerinta Tecnologies . Smart Drones. [en l\u00ednea] Enlace:  http://www.zerintia.com/productos -drones.html\n.  \n     \u00daltima consulta 08/10/2015  \n [5] Wintergreen Research . Smart Commercial Drones: Market Shares, Market Strategies, and Market \nForecasts, 2015 to 2021  [en l\u00ednea]  Enlace: http://www.winterg reenresearch.com/commercial_drones\n \n\u00faltima consulta 25/10/2015  \n [6] AESA. Agencia estatal de seguridad Aerea (2014) . El uso de Drones  en Espa\u00f1a. [En l\u00ednea]  \n      Enlace a documento\n . Ultima consulta: 25/10/2015 \n [7] Real Decreto -ley 8/2014 Agencia estatal seguridad . Legislaci\u00f3n vigente sobre Drones . Boletin Oficial  \n     del Estado  Enlace:  www.seguridadaerea.gob.es/media/4243006/rdl_8_2014_4julio.pdf\n   \n     \u00daltima  consulta: 25/10/2015  \n [8] Rasberry Pi \u2013 Teeach, Learn, and Make with RAspberry Pi . [En l\u00ednea]  \n     Enlace: https://www.raspberrypi.org/community/\n Ultima consulta: 08/01/2016  \n[9] I Gonzalez,  S Salazar,  and H Romero,  \"Attitude  control  of a quad -rotor using  speed sensing  in  \nbrushless  DC motors,\" in 2011 8th International  Conference on Electrical  Engineering Computing Science  \nand Automatic  Control  (CCE) , Merida  City, 2011,  pp. 1-6.  Enlac e documento . Ultima consulta: 30/12/2025 \n \n[10] APC  Propellers . (2008) Materials Research. [Online].   \nEnlace: http://www.apcprop.com/v/Research/research.html#materials  \u00daltima consulta: 30/12/2025 \n \n[11] Gigahertz . 2009 -15 Juan Carlos lopez . La Jaula de Faraday.  [En l\u00ednea]  \nEnlace: http://www.gigahertz.es/la_jaula_de_faraday.html   \u00faltima  consulta 25/10/2015  \n \n[12] Video prueba emp\u00edrica motores utilizados [En l\u00ednea]  \nURL: https://www.youtube.com/watch?v=D -eBnXrWJYw   \u00daltima  consulta 18/11/2015  \n \n[13] Ardupilot.  Manuales consulta Arducopter. Instalaci\u00f3n y manuales [En l\u00ednea]  \nhttp://copter.ardupilot.com/wiki/flying -arducopter/    \u00daltima consulta: 30/12/2025 \n \n[14] Referencias a Dise\u00f1os Sistemas Embebidos y Redes de sensores. Estaci\u00f3n meteorol\u00f3gica m\u00f3vil \ncon posicionamiento GPS. REPOSITORIO 02 UOC.  \nURL: http://hdl.handle.net/10609/29781  \u00daltima consulta: 10/01/2016 \n \n \n \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     60 de 374  \nAnexo  A           [Ir al \u00edndice] \n \n  \n \n  \n \n \n \n \n  \n \n  \n \n \n \n \n  \n \nMANUAL USUARIO  \n \n \n \n  \n \n \n \n \n \n \n \n \n \n  \n \n  \n \n \n \n \n  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     61 de 374  \n\u00cdndice            [Ir al \u00edndice]  \n \n \n \n  \n \n \n \n \n1. Instalaci\u00f3n\n ................................ ................................ ................................ ........................  63 \n1.1 Creaci\u00f3n tarjeta Micro SD Sistema Central  ................................ .............................  63 \n1.2 Primeras configuraciones del sistema ................................ ................................ ... 63 \n1.3 Configuraci\u00f3n salida video AV  ................................ ................................ ...............  64 \n1.4 Configuraci\u00f3n adaptadores Red LAN  ................................ ................................ .... 64 \n1.5 Configuraci\u00f3n unidades almacenamiento externas mediante USB  ......................  65 \n1.6 Instalaci\u00f3n OpenCV 3.0 y Phyton 2.7 ................................ ................................ .... 67 \n1.7 Instalaci\u00f3n M AVlink ( Micro Air Vehicule Communic ation Protocol)  .......................  69 \n1.8 Configuraci\u00f3n e instalaci\u00f3n herramientas bus I2c  ................................ .................  70 \n 1.9 Primeros contactos con  Software Mission Planner  ................................ .................  71 \n  \n  \n \n  \n \n \n \n \n \n \n  \n \n \n \n \n  \n \n \n \n \n \n \n \n  \n \n \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     62 de 374  \nManual Usuario           [Ir al \u00edndice]  \n1 Instalaci\u00f3n  \n1.1 Creaci\u00f3n de la tarjeta Micro SD Sistema Central  \nPara ello se deber\u00e1 de disponer de una tarjeta micro SD con una capacidad m\u00ednima de 8GB. \n(Recomendada 32GB) y un PC. Mediante el PC se efect\u00faa la grabaci\u00f3n de la imagen del sistema \nRaspbian@, haciendo uso de las cualquiera de las aplicaciones existentes d e formateado y grabaci\u00f3n de \nim\u00e1genes en tarjetas USB. En este caso hemos utilizado SDFormatter para formateo de la micro tarjeta y \nWin32DiskImager para su grabaci\u00f3n.  \nEfectuada la grabaci\u00f3n de la Micro SD, se insertara en la placa Raspberry pi 2 B, a la que en su primer \ninicio se deber\u00e1 conectar para realizar su configuraci\u00f3n b\u00e1sica los siguientes dispositivos:  \n\u2022 Un monitor (HDMI),  \n\u2022 Un teclado y rat\u00f3n (inal\u00e1mbrico por puerto USB)  \n\u2022 Tarjeta USB WIFI (Edimax) o bien conectar a router mediante cable Ethernet  \n1.2 Pri meras configuraciones del sistema \nEn el primer arranque el sistema se presenta mediante men\u00fa grafico como puede verse en la siguiente \ncaptura:  \n \n    Fig xx  Primer i nicio Sistema Raspbian modo grafico \nA continuaci\u00f3n se inicia un terminal de consola en el cual se ejecuta el comando sudo raspi -config  para \nla configuraci\u00f3n b\u00e1sica del sistema el cual mediante su men\u00fa interactivo permitir\u00e1 llevar a cabo la configuraci\u00f3n b\u00e1sica del sistema como puede verse en la siguiente imagen  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     63 de 374  \n                        [Ir al \u00edndice]  \nEn este punto se realiza la siguiente configuraci\u00f3n m\u00ednima:  \n\u2022 Internacionalizaci\u00f3n de la unidad: Asignar  idioma , timezone  y tipo de teclado del sistema . \n\u2022 Activaci\u00f3n del m\u00f3dulo de c\u00e1mara  \n\u2022 En opciones avanzadas: Se activa el bus I2c, el acceso mediante SSH, el modo de audio \n(seleccionado 3.5mm headphone Jack) y se desactiva el acceso al puerto serial mediante Shell  \nEsta aplicaci\u00f3n de configuraci\u00f3n como puede observarse en la figura anterior permite muchas otras opciones como cambio de contrase\u00f1a, definir el nombre del host \u00f3 expandir el sistema de archivos para que pueda utilizar la totalidad de la tarjeta micro SD  entre otras.  \n1.3 Configuraci\u00f3n salida Video  \nEfectuadas estas configuraciones m\u00ednimas, debido a que la se\u00f1al de video ser\u00e1 transmitida por RF (5.8Ghz) utilizaremos por tanto la salida de video compuesto, para ello se debe editar el fichero de configuraci\u00f3n inicial /boot/config.txt. e indicar la opci\u00f3n de salida de video compuesto deseada. Esto se  \npuede llevar a cabo mediante el editor de texto del sistema (aplicaci\u00f3n nano ). As\u00ed ejecutando la aplicaci\u00f3n \ncon privilegios root (sudo):  \n  sudo nano /boot/config.txt  \nSe edita el fichero config.txt y se modifica el par\u00e1metro stdv_mode  (el cual se encuentra en una l\u00ednea \ncomentada), eliminando el signo de l\u00ednea comentada (#)  se dejara asignado el modo de video AV en este \ncaso modo PAL, asign\u00e1ndole el valor:  \n  stdv_mode=2    \nEste tiene las opciones (0=NTSC normal, 1=NTSC Japon, 2=PAL Normal, 3 PAL Brasil 525/60)  \n \nCon estos pasos iniciales queda instalado el sistema Raspbian@ quedando configurado para su \nmonitorizaci\u00f3n a trav\u00e9s de su salida de video compuesto (para conexi\u00f3n al transmisor video RF 5.8Ghz) y podr\u00e1 ser controlado mediante SSH.  \n1.4 Configuraci\u00f3n redes LAN  \nPara llevar a cabo la configuraci\u00f3n de los dispositivos de red (LAN), tanto la red lan cableada como la \ninal\u00e1mbrica que se instala mediante adaptador USB Edimax, debe efectuarse la configuraci\u00f3n mediante la \nedici\u00f3n del fichero /etc/network/interfaces , asig nando en este IP fijas y los distintos datos de conexi\u00f3n a la \nred inal\u00e1mbrica como son SSID y contrase\u00f1a.  \nA continuaci\u00f3n se muestra la configuraci\u00f3n utilizada en dicho fichero y que debe modificarse acorde a los datos de la red a la que efectu\u00e9 conexi\u00f3n. ( Se requerir\u00e1 de un teclado y monitor pudiendo utilizar \ndirectamente la salida HDMI la cual si esta es conectada en el encendido del sistema esta ser\u00e1 activada por defecto).  \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     64 de 374  \n                       [Ir al \u00edndice]  \nEl fichero  interfaces  utilizado es configurado como se muestra a continuaci\u00f3n:  \n--------------------------------------------- Fichero /etc/network/interfaces ----------------------------------------------------- \n# Please note that this file is written to be used with dhcpcd.  \n# For static IP, consult /etc/dhcpcd.conf and 'man dhcpcd.conf'.  \nauto lo  \niface lo inet loopback  \niface eth0 inet static  \naddress 192.168.1.41  \nnetmask 255.255.255.0  \ngateway 192.168.1.1  \nauto wlan0  \niface wlan0 inet static  \naddress 192.168.1.40  \nnetmask 25 5.255.255.0  \ngateway 192.168.1.1  \nwpa-ssid \"xxxxxxxxx\"  \nwpa-psk \"xxxxxxxxx\"  \n----------------------------------------------------------------------------------------------------------------------------- ------------- \n***Importante si el adaptador se apagara puede configurarse el modo suspensi\u00f3n, modificando o creando \nel fichero /etc/modprobe.d/8192cu.conf  ajustando los valores:  \n\u2022 rtw_power_mgnt : Activa y desactiva el control de energ\u00eda del adaptador wifi. Los posibles \nvalores son 0, (desactivado), 1 (activado ahorro de energ\u00eda) y 2 (m\u00e1ximo ahorro de energ\u00eda).  \n\u2022 rtw_enusbss:  Controla la auto suspensi\u00f3n del adaptador en caso de no ser usado. Los posibles \nvalores son 0 (desactivado) y 1(activado).  \n\u2022 rtw_ips_mode: controla el consumo energ\u00e9tico del adaptador cuando no se encuentra en uso. \nLos posibles valores son 0 (normal, por defecto) y 1 (m\u00e1ximo ahorro de energ\u00eda).  \n1.5 Configuraci\u00f3n auto montaje unidades almacenamiento externas mediante USB  \nDada la capacidad limitada de la tarjeta SD y que este proyecto requerir\u00e1 de espacio de almacenamiento \npara videos y otra informaci\u00f3n, instalamos una unidad de almacenamiento USB, para lo que con la finalidad \nde no tener que efectuar montaje manual de la misma se instala la herramienta usbmount  para lo cual \nejecutamos el comando  \n  sudo apt -get install usbmount  \nA partir de su instalaci\u00f3n al conectar un dispositivo de almacenamiento en el USB este ser\u00e1 montado por el sistema de forma autom\u00e1tica, asignando el nombre USBx (x =0,1,.2\u2026x)  \n** Si no se desea instalar la aplicaci\u00f3n puede montarse una unidad USB de forma fija editando el fichero \n/etc/ftsab al que se a\u00f1adir\u00e1 la siguiente l\u00ednea:  \n  /dev/sda1    /media/ archivo         vfat      defaults    0    0 \nQueda as\u00ed montado en el arranque el dispositivo de almacenamiento USB al directorio /media/archivo.  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     65 de 374  \n                       [Ir al \u00edndice]  \nCon estos pasos iniciales queda instalado y configurado el sistema Raspbian para su monitorizaci\u00f3n a \ntrav\u00e9s de su salida de video compuesto y podr\u00e1 ser controlado medi ante SSH como se muestra en las \nsiguientes capturas del sistema.  Como puede verse en la siguiente figura (izquierda), se puede efectuar \nconexi\u00f3n directamente mediante aplicaciones de conexi\u00f3n remota SSL (p.e PuTTy) indicando la direcci\u00f3n \nIP asignada al si stema.  \n \n   \n \n \n \n  \nFig 25. Conexi\u00f3n SSL sistema central. \nHaciendo clic en Open se obtendr\u00e1 una conexi\u00f3n segura con el sistema central. Este solicitara usuario y \ncontrase\u00f1a permitiendo as\u00ed el acceso al sistema con todos los privilegios del usuario utilizado, como puede \nobservarse en la figura anterior (derecha).  \nIgualmente puede interactuar mediante entorno activando las X, como puede verse en la siguiente figura mediante simple conexi\u00f3n de escritorio remota SSH. (Utilizando Xarchive del propio sist ema Raspbian ).  \n \n  Fig 26. Conexi\u00f3n SSL entorno grafico (escritorio remoto).  \nQuedando as\u00ed el sistema totalmente configurado para continuar con su programaci\u00f3n y control de forma remota sin que se requiera de teclados ni monitores.  \nUna vez instalado el sis tema Raspbian  es conveniente actualizar el sistema y firmware de la Raspberry Pi \npara lo que se ejecutaran los siguientes comandos:  \nsudo apt -get update  \nsudo apt -get upgrade  \nsudo rpi -update  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     66 de 374  \n                       [Ir al \u00edndice] \n1.6 Instalaci\u00f3n OpenCV y Phyton \nUna vez instalado el sistema Raspbian se realiza la instalaci\u00f3n del Software OpenCV y Python para lo cual \nse ejecutan las siguientes l\u00edneas de comando, siguiendo los siguientes pasos:  \n1- Se instalan paquetes de herramientas  \n  sudo apt-get install build- essential cmake pkg-config \n2- Se instalan paquetes necesarios para los diversos formatos de imagen (jpg, png, tiff, etc..)  \n  sudo apt-get install libjpeg -dev libtiff5-dev libjasper -dev libpng12 -dev \n3- Se instala librer\u00eda GTK developement, utilizada para interfaces graficas, posibilitando que OpenCV  \n  sudo apt-get install libgtk2 .0-dev \n4- Instalaci\u00f3n de los paquetes necesarios para I/O video  \n  sudo apt-get install libavcodec -dev libavformat -dev libswscale -dev libv4l -dev \n  sudo apt-get install libxvidcore -dev libx264 -dev \n5- Instalaci\u00f3n librer\u00edas para optimizaci\u00f3n de operaciones con Open CV  \n  sudo apt-get install libatlas -base- dev gfortran  \n3- Instalar PIP  \nwget https://bootstrap.pypa.io/get -pip.py  \nsudo python get -pip.py  \n7- Instalaci\u00f3n virtualenv  y virtualenvwrapper  \n sudo pip install virtualenv virtualenvwrapper  \nsudo rm -rf ~/.cache/pip  \n \n7- Actualizar el perfil para lo que se incluyen las siguientes l\u00edneas  en el fichero ~/.profile   \nSudo nano ~/.profile  \nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python2.7  \nexport WORKON_HOME=$HOME/.virtualenvs  \n  source /usr/local/bin/virtualenvwrapper.sh \nCargando el nuevo perfil  y creaci\u00f3n entorno vircutal (cv)  \n  source  ~/.profile  \n  mkvirtualenv cv  \n8- Instalaci\u00f3n de  Python 2.7 development too ls \n  sudo apt-get install python2. 7-dev \n9- Instalar NumPy desde enlaces de OpenCV Phyton  \n  Pip install numpy  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     67 de 374  \n                       [Ir al \u00edndice]  \n10- Descarga de Open CV e instalaci\u00f3n  \ncd ~ \ngit clone https://github.com/Itseez/opencv.git  \ncd opencv  \n  git checkout 3.0.0  \ncd ~ \ngit clone https://github.com/Itseez/opencv_contrib.git  \ncd opencv_contrib \n  git checkout 3.0.0  \nConfiguraci\u00f3n y compilaci\u00f3n  \n  workon cv  \n  mkdir build  \n  cd build  \n  cmake -D CMAKE_BUILD_TYPE=RELEASE \n    -D CMAKE_INSTALL_PREFIX=/usr/local  \n   -D INSTALL_C_EXAMPLES=ON  \n   -D INSTALL_PYTHON_EXAMPLES=ON  \n   -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules  \n   -D BUILD_EXAMPLES=ON ..  \n  sudo make \u2013j4 \nEjecuci\u00f3n programa instalaci\u00f3n  \nsudo make install  \nsudo ldconfig  \n \nPor ultimo Open CV queda instalado en el directorio    /usr/local/lib/python2. 7/site-packages .  Se efect\u00faa \ncopia de la compilaci\u00f3n al directorio cv del entorno virtual para su uso  \ncd ~/.virtualenvs/cv/lib/python2.7/site- packages/  \nln -s /usr/local/lib/python2.7/site -packages/cv2.so cv2.so  \nln -s /usr/local/lib/python2.7/site -packages/cv.py cv.py  \n \nReiniciando el sistema se efectua conexi\u00f3n mediante SSH se verifica OpenCV 3.0 y Phyton 2.7 est\u00e1 \ncorrectamente instalado como puede verse en la figura 27. En ambos entornos puede llevarse a cabo las \nmismas tareas, el entorno X enfocado a programaci\u00f3n usuar ios, y entorno SSH (TTY) para usuarios  \navanzados.  \n \n    Figura 27. Verificaci\u00f3n instalaci\u00f3n OpenCV 3.0 entorno SSH. (TTY)  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     68 de 374  \n                        [Ir al \u00edndice]  \n1.7 Instalaci\u00f3n MAVlink (Micro Air Vehicule Communiction Protocol)  \nSe efect\u00faa la instalaci\u00f3n del protocolo MAVlink , as\u00ed como de la aplicaci\u00f3n MAVproxy , lo cual permitir\u00e1 el \nacceso a la unidad de control de vuelo (APM 2.6) a trav\u00e9s de la unidad central ( Raspberry pi  2B) pudiendo \nas\u00ed efectuar programaci\u00f3n de planes de vuelo y operaciones de mantenimiento y ajustes del controlador \nde vuelo mediante software libre Mission Planner  de forma remota .   \nPara ello ejecutamos los siguientes comandos:  \n sudo apt-get install screen python- wxgtk2.8 python- matplotilib python- opencv python- pip \n                                                python- numpy python- dev libxml2 -dev libxslt -dev \nsudo pip install pymavlink  \nsudo pip install mavproxy  \n \n** Importante desactivar el acceso a la interfaz serial mediante el Shell, se realiza mediante el \ncomando raspi -config  en opciones avanzadas (como se ha indicado en punto 1 de este manual).  \nDe no realizarse el sistema enviara error por uso de la UART0 por diversos dispositivos.  \n \nPara que MAVproxy se active en el inicio del sistema deber\u00e1n agregarse las siguientes l\u00edneas al fichero  \ndel sistema /etc/rc.local,  lo cual se puede realizar mediante el propio editor del sistema nano  \n----------------------------------------------------------------------------------------------------------------------------- ----------- \n( \nDate  \necho $PATH  \nPATH=$PATH:/bin:/sbin:/usr/bin:/usr/local/bin  \nexport PATH  \ncd /home/pi  \nscreen -d -m -s /bin/bash mavpr oxy.py --master=/dev/ttyAMA0 --baudrate 57600 --out 192.168.1.5:14550  --\naircraft QuadCopter  \n) > /tmp/rc.log 2>&1  \n----------------------------------------------------------------------------------------------------------------------------- ----------- \nDonde en los par\u00e1metros a indicar a mavproxy son:  \n\u2022 \u2013master=/dev/ttyAMA0 el cual determina el puerto serie para la comunicaci\u00f3n. En el caso de la \nRaspberry Pi, el puerto serie es 0  \n\u2022 \u2013baudrate 57600  velocidad del bus que debe coincidir con el predeterminado del controlado de vuelo  \n\u2022 -out IP:Puerto  (p.e. 192.168.1.5:14550 ): IP del equipo donde se ejecutara la aplicaci\u00f3n Mission \nPlanner . Y puerto UDP que utilizara para la comunicaci\u00f3n.  (14550 es el utilizado por defecto por la \naplicaci\u00f3n Mission Planner ). \n\u2022 \u2013aircraft Planes_vuelo  nombre del modelo que pretendemos usar en la sesi\u00f3n y con el que se \nguardar\u00e1n los nombres de los logs y configuraciones.  \n \n  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     69 de 374  \n                       [Ir al \u00edndice]  \n1.8 Configuraci\u00f3n e instalaci\u00f3n herramientas bus I2c  \nPara el uso de los dispositivos sensores conectados al bus I2c, se deber\u00e1n instalar las correspondientes \nherramientas en el sistema para lo cual ejecutaremos los siguientes comandos:  \nsudo  apt-get install i2c -tools  \nsudo apt -get update  \n \nPara asegurar que el usuario pi es miembro del grupo i2c, ejecutaremos el comando:  \n \nsudo adduser pi i2c  \n \nUna vez instaladas las herramientas  se reiniciara el sistema para verificar si se obtiene un funcionami ento \ncorrecto y los dispositivos sensores son detectados por el sistema central. Para ello se puede verificar si se \nhan cargado correctamente las librer\u00edas  y comprobar que los dispositivos sensores son detectados por el \nsistema  mediante los comandos:  \n \nlsmod |grep i2c  \nsudo i2cdetect \u2013 y 1 \n \nSe puede observar en la siguiente figura el resultado que ha de obtenerse si la controladora bcm2708 y el modulo \ni2c_dev se han instalado correctamente y que los dispositivos han sido detectados y se encuentra conectados al bus \nI2C. \n \n Figura 27. Verificaci\u00f3n reconocimiento dispositivos sensores  \n \n \n \n \n   \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     70 de 374  \n                       [Ir al \u00edndice]  \n \n1.9. Primeros contactos con Software Mission Planner . \nSe comienza la programaci\u00f3n inicial del controlador autom\u00e1tico de vuelo sobre la unidad Arduino (APM \nArdu Copter 2.6) para lo cual en primer lugar se realiza una actualizaci\u00f3n del software de la controladora  \nadquirida, para ello se hace uso del Software Mision Planner , realizando los siguiente pasos:  \n\u2022 Se instala en el PC el Software Mision Planner ( Enlace descarga ). \n\u2022 Una vez instalado conectar la unidad mediante USB, esta deber\u00e1 ser reconocida por el PC, (de no \nser as\u00ed deber\u00e1n instalarse sus correspondientes drivers).  \n\u2022 Se ejecuta el programa Mission Planner , y seleccionar el puerto en la que est\u00e1 instalada la unidad \no bien la conexi\u00f3n UDP si se conecta a trav\u00e9s de mavlink.   NO debe hacer click en conectar \n(CONNECT).  \n\u2022 En el men\u00fa INITIAL  SETUP, seleccionar la opci\u00f3n Install Firmware  esta presentara los  distintos \nmodelos de Unidades m\u00f3viles para el cual se puede configurar la unidad de control, en este caso \nse selecciona APM Copter v3.0.1 \n \n     Figura 26 Actualizaci\u00f3n Firmware controlador Vuelo. \nConfirmando en el mensaje que presenta para actualizar realizara la actualizaci\u00f3n del firmware, una vez terminado presentara los correspondientes mensajes de los ajustes que deben realizarse para el correcto \nfuncionamiento, siendo estos:  \n\u2022 Selecci\u00f3n de la estructura modo de vuelo (Quapcopter, en X, en +).   \n\u2022 Ajustes del compas  \n\u2022 Ajuste del aceler\u00f3metro  \n\u2022 Ajuste de emisora (Seguir indicaciones en manual Transmisor RF 2.4Ghz. que se utilice)  \n \nA partir de estos momentos si no ha habido errores la unidad estar\u00e1 dispuesta para poder ser armada.  \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     71 de 374  \nAnexo  B          [Ir al \u00edndice] \n \n  \n \n  \n \n \n \n \n  \n \n  \n \n \n \n \n  \n \nMANUAL ENSAMBLAJE DRON  \nY \nVERIFICACION MODULAR DE FUNCIONAMIENTO  \n \n  \n \n \n \n  \n \n  \n \n \n \n \n  \n \n \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     72 de 374  \n                       [Ir al \u00edndice]  \n1. Equipos de desarrollo  \nPara el desarrollo del proyecto se requieren de equipos diversos y herramientas tanto de electr\u00f3nica como de \ninform\u00e1tica. A continuaci\u00f3n se pasa a describir brevemente cada uno de los bloques que componen el \nsistema. El trabajo se desarrolla mediante un ordenador de sobremesa concretamente equipo Intel(R) \nCore(TM) i7 CPU 939 @ 2.80 GHz con 12Gb de memoria.  \n Los programas de soporte general utilizados han sido obtenidos bien mediante c\u00f3digo abierto o bien a trav\u00e9s \nde las versiones para estudio que nos facilita la propia UOC en su programa Microsoft DreamSpark para uso \nacad\u00e9mico, as\u00ed se utilizara:  \n\u2022 Sistema Operativo Windows 7 64bits  \n\u2022 Microsoft Office (incluyendo FrontPage)  \n\u2022 Microsoft Project  \n\u2022 Visual Studio 12  \n\u2022 Microsoft Studio Mx   (para creaci\u00f3n WEB)  \n\u2022 MySql   (base de datos)  \n\u2022 Apache   (para montaje Servidor WEB)  \n \nProgramas espec\u00edficos para implementaci\u00f3n del sistema central del proyecto:  \n\u2022 Sistema  Operativo Raspbian  para Raspberry Pi 2 \n\u2022 Open CV y Phyton  para tratamientos de im\u00e1genes  y  \n\u2022 Arduino: Entorno de Desarrollo Integral para la programaci\u00f3n y grabaci\u00f3n de Arduino  \n\u2022 Tera Term : Como terminal de comunicaci\u00f3n serie (USB).  \n \nProgramas espec\u00edficos para Dise\u00f1o Electr\u00f3nico:  \n\u2022 OrCad Capture : Para creaci\u00f3n de esquemas el\u00e9ctricos  \n\u2022 FreeVie w: Software Captura Osciloscopio PROMAX OD -571 y Mult\u00edmetros PROMAX  \n \nComo herramientas espec\u00edficas para electr\u00f3nica y microelectr\u00f3nica:  \n\u2022 Osciloscopio Promax OD -571 (150Mhz)  \n\u2022 Mult\u00edmetro Materman 38XR  \n\u2022 LCR Meter PROMAX MZ -505C  \n\u2022 Estaci\u00f3n Soldadora -Desoldadora ERSA Icon  \n\u2022 Corta hilos, destornilladores, pela hilos, pinzas sujeci\u00f3n placas, entre otros  \n \n \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     73 de 374  \n                       [Ir al \u00edndice]  \n2 Ensamblaje estructura y sistema s de propulsi\u00f3n TAROT IRON 650  \nEl montaje de la unidad Dron se efect\u00faa sobre la estructura de cuatro motores TAROT IRON 650 \n(Quapcopter ), efectuando modificaciones  para el correcto acoplamiento de los m\u00f3dulos descritos \nanteriormente.  \nEntre dichas modificaciones se efect\u00faa una bajada en altura de los soportes de fijaci\u00f3n tipo RAIL con la \nfinalidad de disponer de un espacio intermedio donde se situara el correspondiente sistema de control de \nvelocidad de motores (ESC), quedando este entre la estructura central y el sistema de fijaci\u00f3n los soportes \ntipo RAIL  convenientemente aislado y protegido por placas de fibra de carbono. En las siguientes im\u00e1genes \npuede verse la es tructura y ensamblaje de motores llevada a cabo.  \n  \n  \nFigura s 1 montajes Estructura y motores A2212/13T   \n \nEn la imagen de la parte superior izquierda se puede apreciar la fijaci\u00f3n del servo correspondiente al tren \nde aterrizaje plegable, con la finalidad de que el sistema de video situado en la parte inferior pueda disponer \nsin necesidad de cambiar el sentido de vuelo de una visi\u00f3n de 360\u00ba, cabe indicar que esto es en el caso de utilizar un sistema estabilizador del sistema de captura de video de tres ejes. (Este es opcional ya que \nen este caso se utilizara un sistema de dos ejes).  \nEn la imagen superior derecha podemos observar la fijaci\u00f3n de los motores utilizados  y finalmente en las \nim\u00e1genes inferiores de la figura 12 la estructura montada con el tren de aterrizaje plegado e igualmente \ncon el tren de aterrizaje desplegado.  \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     74 de 374  \n                       [Ir al \u00edndice]  \nUna vez llevado a cabo el ensamblaje de la estructura y motores s e realiza el acople de los sistemas \nreguladores de motores (ESC) de la unidad Dron. Efectuando previamente las modificaciones \nmencionadas anteriormente que consisten en instalar un separador met\u00e1lico entre de los soportes RAIL \n(silentblock) y su fijaci\u00f3n a la estructura.  \nIgualmente se procede a cablear los motores realizando el cableado por el interior del brazo, previamente los cables han sido enfundados con maya protectora para evitar posibles problemas por deterioro de los \nmismos. Quedando finalmente como se muestra en la figura 13. \nPara la fijaci\u00f3n de los reguladores ESC se intercala una plac a de carbono (para evitar posibles \ninterferencias de los sistemas de trasmisi\u00f3n en los reguladores del sistema motor. Quedar\u00e1 as\u00ed , debido a \nla conductividad del material (fibra de carbono) , creada  una Jaula de Faraday\n en cuyo interior se aloja ran \nlos mencionados reguladores. Igualmente se instalara otra base inferior donde ser\u00e1 acoplado el modulo transmisi\u00f3 n de video. Quedan as\u00ed dos alojamientos para cada uno de los sistemas indicados como puede \nverse en las siguientes im\u00e1genes  una vez efectuado el montaje.  \n  \nFiguras 3. Encaje sistemas ESC y Sistema Transmisi\u00f3n Video  \n  \nEl montaje efectuado as\u00ed como su funcionamiento puede verse detalladamente en video Ensamblado \nestructura y propulsi\u00f3n existente en repertorio de videos aportado para uso en el alojamiento Web del \npresente proyecto. Enlace a video  \n \n  \nFigura 2 conexionado motores  (Elaboraci\u00f3n propia)  \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     75 de 374  \n                       [Ir al \u00edndice]  \n2 Verificaci\u00f3n, ajuste y medida de consumos de los diferentes m\u00f3dulos.  \nVerificaci\u00f3n sistema propulsor  \nLa siguiente figura muestra el conexionado de los cables de control de motores, cuyo funcionamiento se \nverifica a continuaci\u00f3n. Para ello se requiere de las \nherramientas electr\u00f3nicas siguientes:  \n\u2022 1 Switch para servos  \n\u2022 1 Testeador Servos (Gen. y reg. de pulsos PWM)  \n\u2022 1 Fuente alimentaci\u00f3n corriente continua regulable \najustada a 11. 7 y otra de 5V 1A.  \nFigura  4 conexionado prueba motores propulsores  \nSituando el control de motores en el CH3 del (Switch) y efectuando las conexiones de alimentaci\u00f3n (11.7V \na ESC motores y 5V a Testeador Servos), se calibra y ajusta el regulador 4IN1 ESC Emax 30A . \nProceso de calibrado de motores  \nPara ello colocamos el regulador al m\u00e1ximo y conectamos alimentaci\u00f3n, esperamos unos segundos y se \noir\u00e1n los pitidos de aviso de calibraci\u00f3n terminada procedentes del ESC IMAX 30A.  \nA continuaci\u00f3n se sit\u00faa el regulador al m\u00ednimo y deber\u00e1n de o\u00edrse los \nsonidos de ajuste de calibraci\u00f3n de m\u00ednimos.  \n \n \n \nFigura  5 F.A. auxiliar para verificaci\u00f3n  \nUna vez terminado el proceso, lo cual se sabr\u00e1 por qu\u00e9 el sistema ESC deja de emitir sonidos, se retira la \nalimentaci\u00f3n  (bater\u00eda de la unidad Dron o como en este caso F.A.)  posteriormente  asegur\u00e1ndose \nde situar regulador en posici\u00f3n m\u00ednimo  se vuelve a alimentar la unidad.  \nEsta mediante una serie de sonidos nos indicara que est\u00e1 dispuesta para uso confirmando la activaci\u00f3n \ndel sistema controlador de potencia de los motores. Si se act\u00faa sobre el regulador se debe observar que \na m\u00ednimo los motores quedan parados y a m\u00e1ximo valor del regulador los motores alcanzan s u m\u00e1xima \nvelocidad.  \nRealizados estos ajustes se obtiene un funcionamiento correcto concluyendo as\u00ed el montaje y la \nverificaci\u00f3n del sistema de control de los motores propulsores. Efectuando medida de consumo emp\u00edricamente se obtienen los siguientes resultados:  \n\u2022 Consumo Sistema en estado de reposo: 2 50mA \n\u2022 Consumo Sistema propulsi\u00f3n (motores m\u00e1xima potencia) 2.5A (**sin carga)  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     76 de 374  \n                       [Ir al \u00edndice]  \nRespecto del comportamiento de los motores seleccionados, A221213T hacer referencia a las pruebas \nvisualizadas (video existentes en internet y que se indican en referencias) \u201clas pruebas emp\u00edricas marcan \nun rendimiento en medida de peso de elevaci\u00f3n de 212g. a 770gr. es menor al indicado en caracter\u00edsticas \nt\u00e9cnic as indicadas del motor 900gr . \nSi bien hay que poner de manifiesto que seg\u00fan torque del motor por su referencia las h\u00e9lices utilizadas en la prueba por lo que puede apreciarse no son las correctas, estas deber\u00edan de ser de 12\u201d y como puede \napreciarse en la figura 16 se han utilizado de 10\u201d lo que produce una menor fuerza de elevaci\u00f3n.  \n \nEn la siguiente figura se puede ver las caracter\u00edsticas de trabajo del motor, relaci\u00f3n consumo -rpm y fuerza \nde elevaci\u00f3n en gramos.  \n \n     Figura  6 Relaci\u00f3n consumo -rpm y fuerza elevaci\u00f3n motores                                         \n \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     77 de 374  \n                       [Ir al \u00edndice]  \n3 Sistema Controlador de Vuelo (APM 2.6 ArduCopter)  \nEl sistema embebido de control de vuelo y piloto autom\u00e1tico, es  instalado en la parte superior de la \nestructura . Con ello se pretende que la propia estructura dificulte que puedan interferir  las se\u00f1ales \ncorrespondientes del sistema de transmisor de video (5.8GHz) sobre  el sistema con control de vuelo (APM  \nArdu Copter  2.6 ) o sobre el receptor de radio -control igualmente ubicado en esta zona de la estructura.  \nEl correspondiente cableado queda salvaguardado pr\u00e1cticamente en su totalidad en la parte central de la \nestructura bajo el sistema anti vibraci\u00f3n ins talada sobre el que se montara la unidad de control de vuelo, \ndejando \u00fanicamente la longitud suficiente para la interconexi\u00f3n ente los dispositivos que se utilizaran para \nel control los cuales son:  \n\u2022 Del receptor RX de Radio- control RF 2.4Ghz   a  unidad APM  \n\u2022 De la unidad APM, hasta el dispositivo de sistema central Raspberri, para control por MAVLink.  \nIgualmente a la controladora de vuelo se conectan los distintos dispositivos perif\u00e9ricos como es la unidad \nGPS para localizaci\u00f3n ( RS232) , y la br\u00fajula compas (mediante comunicaci\u00f3n bus I2C).  \nEl controlador de vuelo ser\u00e1 conectado al sistema central y al OSD (On Screen Display) mediante su puerto \nde telemetr\u00eda UART 0/1.  \nQuedando de esta forma el el sistema de control de vuelo disponible para poder ser comandado seg\u00fan \nnecesidades, de alcance, maniobra, servicio, etc\u2026  mediante el uso de los correspondientes sistemas \nprogramados.  \nEn las siguientes figura se puede observar la distribuci\u00f3n que se ha dado en la parte superior de la estructura para anclaje del GPS, la fijaci\u00f3n del soporte anti vibraciones para la APM, y los anclajes para la \nfijaci\u00f3n del receptor de radio- control.  \n \n \nFigura 7 disposicion APM sobre estructura.  \n \n  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     78 de 374  \n                       [Ir al \u00edndice]  \n4 Instalaci\u00f3n Sistema Estabilizador de c\u00e1mara ( Gimbal  2 Ejes )  \nProblemas de proveedores ha obligado a efectuar modificaciones no previstas , ya que no se ha podido \nobtener en tiempos el dispositivo estabilizador del sistema de video Tarot el cual estaba previsto en el \ndise\u00f1o original . Se ha utilizado un sistema estabilizador (Gimbal de 2 Ejes)  DJI para Go pro. Este es m\u00e1s \npeque\u00f1o lo que ha supuesto algunos problemas que de adaptaci\u00f3n para poder calibrar y obtener un \ncorrecto funcionamiento del sistema est abilizado el cual se ha tenido que limitar los l\u00edmites de \u00e1ngulos Roll \ny Pitch para poder obtener un \u00f3ptimo resultado y que la unidad estabilizadora quede calibrado.  \nEstos \u00e1ngulos han quedado por tanto limitados a 30\u00ba, que si bien creemos son suficientes pues no se \nespera que la en vuelo llegue a esas inclinaciones, si ha llevado una serie de problemas que ha dejado la \nunidad limitada en una parte importante como es la estabilidad de la captura de imagen.  \nEn las siguientes im\u00e1genes se muestra lo indicado se puede ver como el sistema de anclaje es peque\u00f1o \npor lo que se ha tenido que invertir el soporte de c\u00e1mara y en vez que de la c\u00e1mara (en este caso el \nsistema Raspberry ) repose sobre el soporte se ha tenido que instalar quedando suspendido el de dicho \nsoporte como puede apreciarse en la imagen de la derecha.  \nEllo limita los \u00e1ngulos de giro tanto el Roll como puede verse en la imagen de la izquierda como el Pitch \npor llegar a un punto donde el sistema choca con el motor del sistema estabilizado.  \n \n    \n \n \n \n \n \nFigura 8 modificaciones en sistema estabilizado.  \nFinalmente adaptando la estructura del Gimbal, y efectuando fijaci\u00f3n mediante tornillos de la caja del \nsistema Raspberry Pi  se ha conseguido aunque con las limitaciones en los \u00e1ngulos como se ha indicado \ncosa que no puede remediarse sin efectuar el cambio de la estructura Gimbal por la que inicialmente se \nhab\u00eda planteado y que no presentaba estos problemas pues es mayor.  \nEsto supon\u00eda un problema ser\u00eda pues como puede verse en la siguiente figura con la c\u00e1mara sin estabilizar es imposible pues visionarse y mucho menos usar t\u00e9cnicas detecci\u00f3n de color como se pretende llevar a \ncabo para la detecci\u00f3n de incendios.  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     79 de 374  \n                       [Ir al \u00edndice]  \n \n \nFiguran 8 Problemas de vibraci\u00f3n en Sistema estabilizador de camara  \nLa soluci\u00f3n ha pasado por la limitaci\u00f3n de los \u00e1ngulos , invertir el aceler\u00f3metro instalado en el dispositivo \nestabilizado, y realizar la calibraci\u00f3n correspondiente de la controladora de Gimbal mediante su \nprogramaci\u00f3n, ya que invertir  el soporte el sistema lo entiende como girado sobre el Pitch no consiguiendo \nestabilizar el sistema ni tan siquiera estando el Dron posado con las consecuencias que pueden verse en \nla figura 8.  \nUna vez corregido puede verse en la siguiente figura como ya la imagen queda estabilizada y fijada incluso \naunque varie el Angulo de inclinaci\u00f3n (dentro de los m\u00e1rgenes indicados).  \n \n \n \n \n \n \n \n \n \nFigura  9 Problemas de vibraci\u00f3n en Sistema estabilizador de c\u00e1mara \nEn la Web del proyecto puede verse mediante video el montaje  y su correcto funcionamiento, quedando \nas\u00ed por tanto calibrado el sistema estabilizador.  \nEste se ha verificado dejando el sistema en funcionamiento largo tiempo (entre 4-5 horas ) con sonda de \ntemperatura colocada en motores para verificar que la temperatura de estos no sea elevada como indica \nel fabricante ya que al una alta temperatura puede da\u00f1ar alguno de sus imanes internos y por tanto inutilizar \nel sistema estabilizador definitivamente.  \nLa temperatura obtenida no ha llegado nunca a los 39\u00ba, teniendo en cuenta que en la ubicaci\u00f3n la \ntemperatura ambiente es de unos 23\u00ba se considera que el funcionamiento es correcto.  \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     80 de 374  \n                        [Ir al \u00edndice]  \n5 Verificaci\u00f3n M\u00f3dulo GSM -900A  \nEl modulo adquirido por cuestiones de precio ha sido el  m\u00f3dulo GSM900A de doble banda 900- 1800Mhz  \n(importado de Jap\u00f3n)  ya que los aqu\u00ed existentes Quadband, dichas bandas no son \u00fatiles en Europa y el \ncosto es mucho m\u00e1s elevado. Cabe i ndicar que se debe de actualizar su firmware al de Europa para su \ncorrecto funcionamiento en Europa.  Proceso que llevamos a cabo.  \nUna vez actualizado el mismo, efectuamos la conexi\u00f3n del m\u00f3dulo GSM900A  mediante herramienta \nelectr\u00f3nica conversor (RS232- USB)  CP21 01 al PC con la finalidad de verificar su correcto funcionamiento.  \nEn la siguiente figura puede verse el cableado para su conexi\u00f3n directamente al PC (a trav\u00e9s de USB). \nHaciendo uso del Software  TeraTem , (como se observa en la figura de la derecha), se efect\u00faa la conexi\u00f3n \ncon el dispositivo, se le indica el PIN efectuando una llamada de prueba a tel\u00e9fono fijo y se realiza envi\u00f3 \nde un mensaje SMS a tel\u00e9fono m\u00f3vil, obteniendo resultado positivos.  \n \n \nFigura 10 Cableado GSM -CP2102  y  Captura comunicaci\u00f3n con PC via GSM  \nEn dichas pruebas se efect\u00faa toma emp\u00edrica de medidas, mediante interconexi\u00f3n de Mult\u00edmetro. \nObteniendo los siguientes resultados de consumo en reposo y efectuando transmisi\u00f3n (llamada telef\u00f3nica) \ny envi\u00f3 de SMS:  \n\u2022 Consum o GSM  en estado de reposo: 18- 20mA  \n\u2022 Consumo GSM en estado de transmisi\u00f3n: 60mA  \n \nDatos que a posteriori ser\u00e1n necesarios para los correspondientes de consumo y as\u00ed poder determinar la \npotencia necesaria de las bater\u00edas a utilizar para determinar el tiempo fi nal de vuelo y uso a pleno \nrendimiento de la unidad.  \nQueda por tanto verificado el m\u00f3dulo de comunicaci\u00f3n GSM -GPRS que ser\u00e1 utilizado el cual se instara \nsobre una placa de baquelita junto con la placa de sensores atmosf\u00e9ricos, la cual se ubicara sobre los soportes preparados como puede observarse en la figura 7 anterior, quedando as\u00ed todos los dispositivos \nacoplados a la estructura  \n \n \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     81 de 374  \n                        [Ir al \u00edndice]  \n6 Ensamblaje sensores datos atmosf\u00e9ricos  \nPor \u00faltimo se lleva a cabo el montaje de los sensores para lo cual se ha efectuado un peque\u00f1o montaje \nsobre baquelita del sensor de temperatura, medidos de luminosidad y proximidad, y medido de presi\u00f3n \nbarom\u00e9trica, como puede verse en la siguiente figura   el sensor de humedad se fija sobre el propio chasis. \nEstos sensores comunican con el sistema central (Raspberry Pi) mediante bus I2C..  \n \n   \n \n \nFigura 11 P laca de sensores  \n \nFigura . 12 placas de sensores  \nDado que conviven en la unidad diversos sistemas de RF y se hace uso del osciloscopio, el cual se conecta \nal bus I2C y activando un bucle de petici\u00f3n de muestreo se pasa a medir la se\u00f1al para observar si le est\u00e1n \nllegando las se\u00f1ales correctamente sin interferencias.  \n  \nFigura . 13 Se\u00f1al  Bus I2C \nPuede verse que efectivamente la se\u00f1al llega correctamente a la frecuencia de 100Khz velocidad del bus \ny que no presenta interferencias, incluso armando motores por si estos le afectara.  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     82 de 374  \nVerificando el peso de la UAV, vemos que ha pasado de los 2Kg que se esperaba como m\u00e1ximo,  \n \n \nFigura . 14 Peso final de la unidad. \nEstando como puede apreciarse su peso en 2,3Kg, con bater\u00eda ser\u00eda conveniente en un futuro revisar \npartes del montaje y ver en qu\u00e9 medida puede rebajarse dicho peso.  Quedan por tanto verificados todos \nlos m\u00f3dulos y componente que dando finalmente el ensamblaje como puede verse en la siguiente figura:  \n \nFigura . 15 montaje final de la UAV. \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     83 de 374  \nAnexo  B           [Ir al \u00edndice] \n \n  \n \n  \n \n \n \n \n  \n \n  \n \n \n \n \n  \n \nESQUEMAS ELECTRICOS   \nY \nDATASHEET  \n \n \nDise\u00f1o e implementaci\u00f3n Dron para la detecci\u00f3n de incendios forestales                                     \nAutor: Miguel \u00e1ngel Iglesias Jim\u00e9nez     84 de 374 USB Power Input 5V  700mA min\nRaspberry PiDev Reset\n(Short to Reset)Raspberry PiGeneral Purpose I/O\nGeneral Purpose I/OFULL \"FDX\"\nDUPLEX\n100M \"100\"LINK \"LNK\"\nRaspberry Pi10/100\nEthernetRaspberry PiPOWER ON\n\"PWR\" LEDSTATUS OK \"ACT\"\nLEDRaspberry Pi3x2M+5V\nGND\n+5V\nGND\n8x1F-H8.5\nGND+5VGND47u 47u\nGND GNDGNDGNDGREEN\nGND+5V\nM7\nGNDNCP1117ST50T3G\n100n\nGND100n100n\n8x1F-H8.58x1F-H8.5\n+3V3+5V+5V\nATMEGA2560-16AU100n 100n\n8x1F-H8.522p+5V\nGND\n100nGND1uYELLOWYELLOWUSB-B_TH\nMF-MSMF050-2 500mA\n+5V\n100n\nGNDYELLOW\nGND\n100n\nFDN340PGND100n\nGND+5V\n100n\n+5VGND\n1u+5V\nATMEGA16U2-MU3x2M+5V\nGND\nGND\nGNDBLM21CG0603MLC-05E\nCG0603MLC-05ECSTCE16M0V53-R0 16MHZGND\n1M\n1k1k1k\n1k10K\n10K10K 10K10K\n10K\n10K\n10K1k\n1k\n1k\n1k22R\n22R\n22R22R\nTS42031-160R-TR-72601M\nGND\n16MHz22p 22pGND\n2x2M - NMLMV358IDGKR\nLMV358IDGKR\nCD1206-S01575\n18x2F-H8.5\n+5V GND\n10x1F-H8.5\n8x1F-H8.5\nCD1206-S01575ICSP\n1 2\n3 4\n5 6\n12345678\nPWMLPC1 PC2OND111\n2233\n1IN3OUT4\n2IC1\nC3\nC6C2\n12345678\nADCL12345678\nCOMMUNICATIONGND\nGND\nGNDVCCVCC\nVCC\n(A8)PC053(A9)PC154(A10)PC255(A11)PC356(A12)PC457(A13)PC558(A14)PC659(A15)PC760(AD0)PA078(AD1)PA177(AD2)PA276(AD3)PA375(AD4)PA474(AD5)PA573(AD6)PA672(AD7)PA771\n(ADC0)PF097(ADC1)PF196(ADC2)PF295(ADC3)PF394(ADC4/TCK)PF493(ADC5/TMS)PF592(ADC6/TDO)PF691(ADC7/TDI)PF790\n(ALE)PG270(CLKO/ICP3/INT7)PE79(ICP1)PD447(MISO/PCINT3)PB322\n(MOSI/PCINT2)PB221(OC0A/OC1C/PCINT7)PB726\n(OC0B)PG51(OC1A/PCINT5)PB524(OC1B/PCINT6)PB625\n(OC2A/PCINT4)PB423\n(OC3A/AIN1)PE35(OC3B/INT4)PE46(OC3C/INT5)PE57\n(RD)PG152(RXD0/PCIN8)PE02(RXD1/INT2)PD245(SCK/PCINT1)PB120\n(SCL/INT0)PD043(SDA/INT1)PD144(SS/PCINT0)PB019\n(T0)PD750\n(T1)PD649\n(T3/INT6)PE68\n(TOSC1)PG429\n(TOSC2)PG328(TXD0)PE13(TXD1/INT3)PD346\n(WR)PG051(XCK0/AIN0)PE24(XCK1)PD548AGND99AREF98\nAVCC100\nGND11\n32\n62\n81\nPH0(RXD2)12PH1(TXD2)13PH2(XCK2)14PH3(OC4A)15PH4(OC4B)16PH5(OC4C)17PH6(OC2B)18PH7(T4)27PJ0(RXD3/PCINT9)63PJ1(TXD3/PCINT10)64PJ2(XCK3/PCINT11)65PJ3(PCINT12)66PJ4(PCINT13)67PJ5(PCINT14)68PJ6(PCINT15)69PJ779PK0(ADC8/PCINT16)89PK1(ADC9/PCINT17)88PK2(ADC10/PCINT18)87PK3(ADC11/PCINT19)86PK4(ADC12/PCINT20)85PK5(ADC13/PCINT21)84PK6(ADC14/PCINT22)83PK7(ADC15/PCINT23)82PL0(ICP4)35PL1(ICP5)36PL2(T5)37PL3(OC5A)38PL4(OC5B)39PL5(OC5C)40PL641PL742RESET30\nVCC10\n31\n61\n80XTAL134XTAL233IC3\nC5 C4\n12345678\nADCHC1\nC8C13RXTXX2\n1\n2\n3\n4P$1P$1P$2P$2F1\nC9L\nC7\nT1C12C112 1\nRESET-EN\nC10IC4\n(AIN0/INT1)PD17(AIN2/PCINT11)PC25\n(CTS/HWB/AIN6/TO/INT7)PD713(INT4/ICP1/CLK0)PC722\n(INT5/AIN3)PD410\n(OC0B/INT0)PD06(OC1A/PCINT8)PC623(PCINT5)PB519(PCINT6)PB620(PCINT7/OC0A/OC1C)PB721\n(PCINT9/OC1B)PC525\n(PCINT10)PC426(PD0/MISO/PCINT3)PB317\n(PDI/MOSI/PCINT2)PB216\n(RTS/AIN5/INT6)PD612\n(RXD1/AIN1/INT2)PD28(SCLK/PCINT1)PB115\n(SS/PCINT0)PB014(T1/PCINT4)PB418\n(TXD1/INT3)PD39(XCK/AIN4/PCINT12)PD511AVCC32\nD+29D-30GND3\nPAD33RESET(PC1/DW)24\nUCAP27\nUGND28UVCC31VCC4XTAL11XTAL2(PC0)2ICSP1\n1 2\n3 4\n5 6\nL1Z1\nZ2\n2 1\nGROUNDY1\nR1\nRN4A1 8RN4B2 7RN4C3 6\nRN4D4 5RN5A1 8\nRN5B2 7RN5C3 6\nRN5D4 5RN1A1 8\nRN1B2 7\nRN1C3 6\nRN1D4 5RN3A1 8\nRN3B2 7\n3 6\nRN3C\n4 5\nRN3DRN2A1 8\nRN2B2 7\nRN2C3 6RN2D4 5\nRESET12\n345R2\nIN1\nON/OFF3\nNC/FB4OUT5\nGND2\nY22 1C14 C15\nJP51 23 4IC7A\n23\n1\nIC7B\n65\n78 4\nD3\nXIO1 23 45 67 89 1011 1213 1415 1617 1819 2021 2223 2425 2627 2829 3031 3233 3435 36JP6\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n1\n2\n3\n4\n5\n6\n7\n8POWER\nD2\n+5V+5VGNDAREFAREF\nAREF\nRESETRESETRESETRESET\nRESET\nVIN\nVINVIN\nM8RXD\nM8RXD\nM8TXDM8TXDPWRIN\nADC0ADC2\nADC1ADC3ADC4ADC5ADC6ADC7\n+3V3\n+3V3+3V3SDA\nSDA\nSDASCL\nSCL\nSCL\nADC9\nADC8ADC10ADC11ADC12ADC13ADC14ADC15PB3\nPB3\nPB3PB2\nPB2\nPB2PB1\nPB1\nPB1PB5\nPB4\nPE5\nPE5PE4\nPE4PE3PE3\nPE1 PE1\nPE1PE0 PE0\nPE0DTR\nUSBVCCUSBVCC\nUSBVCCGATE_CMDCMPPB6\nPH3PH3\nPH4PH4\nPH5PH5\nPH6PH6\nPG5PG5RXD1TXD1RXD2\nRXD2RXD3\nRXD3TXD2\nTXD2TXD3\nTXD3PC0\nPC0PC1\nPC1PC2\nPC2PC3\nPC3PC4\nPC4PC5\nPC5PC6\nPC6PC7\nPC7PB0\nPB0\nPG0\nPG0PG1\nPG1PG2\nPG2PD7 PD7PA0\nPA0PA1\nPA1PA2\nPA2PA3\nPA3PA4\nPA4PA5\nPA5PA6\nPA6PA7\nPA7 PL0PL0\nPL1PL1\nPL2PL2\nPL3PL3\nPL4PL4\nPL5PL5\nPL6PL6 PL7 PL7PB7\nVUCAPRD-\nRD-RD+\nRD+RESET2RESET2\nMISO2MISO2\nMOSI2MOSI2\nSCK2SCK2\nXVCC\nRXLTXLD-\nD+\nUGND\nUGNDUSHIELDXTAL2\nXTAL1XTAL1\nXT2\nXT1\n8PB7\n8PB6\n8PB5\n8PB4L13+\n+X1\nPOWERSUPPLY_DC21MMX\nUSB\n012345678910111213Arduino   MEGA 2560\n15\n16\n17\n18\n19\n20\n2114(SCK)(MISO)\n(MOSI)\npwm\npwm\npwm\npwm\npwm\npwm\npwm\npwmpwm\npwm\npwm\npwmpwm\npwm\npwm\n(TX0)\n(RX0)5152 53\npwm\npwm\npwmpwm\npwm(MISO)\n(SCK)(MOSI)\n(SS)\n(MOSI)(SCK)\n(MISO)\n22 2324 2526 2728 2930323436\n3133353749\n47\n45\n43\n41\n3950\n48\n46\n44\n42\n40\n38\npwm\npwm\npwm\nUSB boot EnTM\nReference Designs ARE PROVIDED \"AS IS\" AND \"WITH ALL FAULTS. Arduino DISCLAIMS ALL OTHER WARRANTIES, EXPRESS OR IMPLIED,\nArduino may make changes to specifications and product descriptions at any time, without notice. The Customer must notREGARDING PRODUCTS, INCLUDING BUT NOT LIMITED TO, ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE\nrely on the absence or characteristics of any features or instructions marked \"reserved\" or \"undefined.\" Arduino reserves\nthese for future definition and shall have no responsibility whatsoever for conflicts or incompatibilities arising from future changes to them.\nThe product information on the Web Site or Materials is subject to change without notice. Do not finalize a design with this information. \nARDUINO is a registered trademark.FTDII2C\nBTN\nROLLPITCHBAT+\nGNDFC_ROLLFC_PITCHRC_ROLLRC_PITCH\nGND+5VPWMGNDGNDVCCRXITXDDTR\nBLKGRN5V\nGND\nSCL\nSDA\nRECEIVERFLIGHT\nCONTROLLER\n(OPTIONAL)GND\nSDASCLVCCBATTERY 2s..4 s\nPITCH \nMOTOR\nROLL \nMOTORSimpleBGC 1.0  connection diagramSimpleBGC 1.0  connection diagram\nCAM STAB ROLL\nCAM STAB PITCH\nCAM CONTROL ROLL (OPTIONAL)CAM CONTROL PITCH3rd axis \nexpansion board\nGND\nSDABATYAW \nMOTOR\nXMPU-6050\nY\nCAM CONTROL YAW\nMENU \nBUTTONSCL(OPTIONAL)\nJOYSTICKSIGNAL+5V\nGND  \n\u00a9 2012 Broadcom Corporation. \nAll rights reserved \n \nBroadcom Europe Ltd. 406 Science Park Milton Road Cambridge  CB4 0WW  \n \n \n \nBCM2835 ARM Peripherals \n \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page ii  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTable of Contents \n1 Introduction 4 \n1.1  Overview 4 \n1.2  Address map 4 \n1.2.1  Diagrammatic overview 4 \n1.2.2  ARM virtual addresses (standard Linux kernel only) 6  \n1.2.3  ARM physical addresses 6 \n1.2.4  Bus addresses 6 \n1.3  Peripheral access precautions for correct memory orderin g 7  \n2 Auxiliaries: UART1 & SPI1, SPI2 8 \n2.1  Overview 8 \n2.1.1  AUX registers 9 \n2.2  Mini UART 10  \n2.2.1  Mini UART implementation details. 11  \n2.2.2  Mini UART register details. 11  \n2.3  Universal SPI Master (2x) 20  \n2.3.1  SPI implementation details 20  \n2.3.2  Interrupts 21  \n2.3.3  Long bit streams 21  \n2.3.4  SPI register details. 22  \n3 BSC 28  \n3.1  Introduction 28  \n3.2  Register View 28  \n3.3  10 Bit Addressing 36  \n4 DMA Controller 38  \n4.1  Overview 38  \n4.2  DMA Controller Registers 39  \n4.2.1  DMA Channel Register Address Map 40  \n4.3  AXI Bursts 63  \n4.4  Error Handling 63  \n4.5  DMA LITE Engines 63  \n5 External Mass Media Controller 65  \no Introduction 65  \no Registers 66  \n6 General Purpose I/O (GPIO) 89  \n6.1  Register View 90  \n6.2  Alternative Function Assignments 102  \n6.3  General Purpose GPIO Clocks 105  \n7 Interrupts 109  \n7.1  Introduction 109  \n7.2  Interrupt pending. 110  \n7.3  Fast Interrupt (FIQ). 110  \n7.4  Interrupt priority. 110  \n7.5  Registers 112  \n8 PCM / I2S Audio 119  \n8.1  Block Diagram 120  \n8.2  Typical Timing 120  \n8.3  Operation 121  \n8.4  Software Operation 122  \n8.4.1  Operating in Polled mode 122  \n8.4.2  Operating in Interrupt mode 123   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page iii  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8.4.3  DMA 123  \n8.5  Error Handling. 123  \n8.6  PDM Input Mode Operation 124  \n8.7  GRAY Code Input Mode Operation 124  \n8.8  PCM Register Map 125  \n9 Pulse Width Modulator 138  \n9.1  Overview 138  \n9.2  Block Diagram 138  \n9.3  PWM Implementation 139  \n9.4  Modes of Operation 139  \n9.5  Quick Reference 140  \n9.6  Control and Status Registers 141  \n10  SPI 148  \n10.1  Introduction 148  \n10.2  SPI Master Mode 148  \n10.2.1  Standard mode 148  \n10.2.2  Bidirectional mode 149  \n10.3  LoSSI mode 150  \n10.3.1  Command write 150  \n10.3.2  Parameter write 150  \n10.3.3  Byte read commands 151  \n10.3.4  24bit read command 151  \n10.3.5  32bit read command 151  \n10.4  Block Diagram 152  \n10.5  SPI Register Map 152  \n10.6  Software Operation 158  \n10.6.1  Polled 158  \n10.6.2  Interrupt 158  \n10.6.3  DMA 158  \n10.6.4  Notes 159  \n11  SPI/BSC SLAVE 160  \n11.1  Introduction 160  \n11.2  Registers 160  \n12  System Timer 172  \n12.1  System Timer Registers 172  \n13  UART 175  \n13.1  Variations from the 16C650 UART 175  \n13.2  Primary UART Inputs and Outputs 176  \n13.3  UART Interrupts 176  \n13.4  Register View 177  \n14  Timer (ARM side) 196  \n14.1  Introduction 196  \n14.2  Timer Registers: 196  \n15  USB 200  \n15.1  Configuration 200  \n15.2  Extra / Adapted registers. 202   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 4 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n1 Introduction \n1.1 Overview \nBCM2835 contains the following peripherals which may safely  be accessed by the ARM: \n\u2022 Timers \n\u2022 Interrupt controller \n\u2022 GPIO \n\u2022 USB \n\u2022 PCM / I2S \n\u2022 DMA controller \n\u2022 I2C master \n\u2022 I2C / SPI slave \n\u2022 SPI0, SPI1, SPI2 \n\u2022 PWM \n\u2022 UART0, UART1 \nThe purpose of this datasheet is to provide documentation f or these peripherals in sufficient \ndetail to allow a developer to port an operating system to  BCM2835. \nThere are a number of peripherals which are intended to be  controlled by the GPU. These are \nomitted from this datasheet. Accessing these peripherals f rom the ARM is not recommended. \n1.2 Address map \n1.2.1 Diagrammatic overview \nIn addition to the ARM\u2019s MMU, BCM2835 includes a second coar se-grained MMU for \nmapping ARM physical addresses onto system bus addresses. T his diagram shows the main \naddress spaces of interest:  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 5 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \n \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 6 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAddresses in ARM Linux are: \n\u2022 issued as virtual addresses by the ARM core, then \n\u2022 mapped into a physical address by the ARM MMU, then \n\u2022 mapped into a bus address by the ARM mapping MMU, and finally \n\u2022 used to select the appropriate peripheral or location in RAM. \n1.2.2 ARM virtual addresses (standard Linux kernel only) \nAs is standard practice, the standard BCM2835 Linux kernel pro vides a contiguous mapping \nover the whole of available RAM at the top of memory.  The kernel is configured for a \n1GB/3GB split between kernel and user-space memory. \nThe split between ARM and GPU memory is selected by ins talling one of the supplied \nstart*.elf files as start.elf in the FAT32 boot partition  of the SD card. The minimum amount \nof memory which can be given to the GPU is 32MB, but th at will restrict the multimedia \nperformance; for example, 32MB does not provide enough buff ering for the GPU to do \n1080p30 video decoding. \nVirtual addresses in kernel mode will range between 0xC0000000 an d 0xEFFFFFFF. \nVirtual addresses in user mode (i.e. seen by processes running in ARM Linux) will range \nbetween 0x00000000 and 0xBFFFFFFF. \nPeripherals (at physical address 0x20000000 on) are mapped into t he kernel virtual address \nspace starting at address 0xF2000000. Thus a peripheral advertise d here at bus address \n0x7Ennnnnn is available in the ARM kenel at virtual address 0xF2nnnnnn.  \n1.2.3 ARM physical addresses \nPhysical addresses start at 0x00000000 for RAM. \n\u2022 The ARM section of the RAM starts at 0x00000000. \n\u2022 The VideoCore section of the RAM is mapped in only if t he system is configured to \nsupport a memory mapped display (this is the common case) . \nThe VideoCore MMU maps the ARM physical address space to the bus address space seen \nby VideoCore (and VideoCore peripherals).  The bus addresse s for RAM are set up to map \nonto the uncached 1 bus address range on the VideoCore starting at 0xC0000000. \nPhysical addresses range from 0x20000000 to 0x20FFFFFF for peripherals . The bus \naddresses for peripherals are set up to map onto the periphe ral bus address range starting at \n0x7E000000. Thus a peripheral advertised here at bus address 0x7Ennnnnn i s available at \nphysical address 0x20nnnnnn. \n1.2.4 Bus addresses \nThe peripheral addresses specified in this document ar e bus addresses.  Software directly \naccessing peripherals must translate these addresses into physical or virtual addresses, as \ndescribed above. Software accessing peripherals using the DM A engines must use bus \naddresses. \n                                                             \n1 BCM2835 provides a 128KB system L2 cache, which is used primari ly by the GPU. Accesses to memory are \nrouted either via or around the L2 cache depending on senior  two bits of the bus address.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 7 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSoftware accessing RAM directly must use physical addres ses (based at 0x00000000). \nSoftware accessing RAM using the DMA engines must use bus  addresses (based at \n0xC0000000). \n1.3 Peripheral access precautions for correct memor y ordering \nThe BCM2835 system uses an AMBA AXI-compatible interface structure. In order to keep \nthe system complexity low and data throughput high, the BC M2835 AXI system does not \nalways return read data in-order 2. The GPU has special logic to cope with data arriving out -\nof-order; however the ARM core does not contain such l ogic. Therefore some precautions \nmust be taken when using the ARM to access peripherals.  \nAccesses to the same peripheral will always arrive an d return in-order.  It is only when \nswitching from one peripheral to another that data can a rrive out-of-order. The simplest way \nto make sure that data is processed in-order is to place a memory barrier instruction at critical \npositions in the code. You should place: \n\u2022 A memory write barrier before the first write to a peripheral. \n\u2022 A memory read barrier after the last read of a periphe ral. \nIt is not  required to put a memory barrier instruction after each  read or write access. Only at \nthose places in the code where it is possible that a peri pheral read or write may be followed \nby a read or write of a different  peripheral. This is normally at the entry and exit poin ts of the \nperipheral service code. \nAs interrupts can appear anywhere in the code so you should safeguard those. If an interrupt \nroutine reads from a peripheral the routine should star t with a memory read barrier. If an \ninterrupt routine writes to a peripheral the routine s hould end with a memory write barrier. \n \n                                                             \n2Normally a processor assumes that if it executes two r ead operations the data will arrive in order. So a rea d \nfrom location X followed by a read from location Y shoul d return the data of location X first, followed by the \ndata of location Y. Data arriving out of order can have dis astrous consequences. For example: \n \na_status = *pointer_to_peripheral_a; \nb_status = *pointer_to_peripheral_b; \n \nWithout precuations the values ending up in the variable s a_status and b_status can be swapped around. \n \nIt is theoretical possible for writes to go \u2018wrong\u2019 but  that is far more difficult to achieve.  The AXI syst em \nmakes sure the data always arrives in-order at its int ended destination. So: \n \n*pointer_to_peripheral_a = value_a; \n*pointer_to_peripheral_b = value_b; \n \nwill always give the expected result. The only time write  data can arrive out-of-order is if two different \nperipherals are connected to the same external equipment.   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 8 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2 Auxiliaries: UART1 & SPI1, SPI2 \n2.1 Overview \nThe Device has three Auxiliary peripherals: One mini U ART and two SPI masters. These \nthree peripheral are grouped together as they share the same area in the peripheral register \nmap and they share a common interrupt. Also all three a re controlled by the auxiliary enable \nregister. \n \nAuxiliary peripherals Register Map \n(offset = 0x7E21 5000) \nAddress Register Name 3 Description Size  \n0x7E21 5000 AUX_IRQ Auxiliary Interrupt status 3 \n0x7E21 5004 AUX_ENABLES Auxiliary enables 3 \n0x7E21 5040 AUX_MU_IO_REG Mini Uart I/O Data  8 \n0x7E21 5044 AUX_MU_IER_REG Mini Uart Interrupt Enable 8 \n0x7E21 5048 AUX_MU_IIR_REG Mini Uart Interrupt Identify  8 \n0x7E21 504C AUX_MU_LCR_REG Mini Uart Line Control 8 \n0x7E21 5050 AUX_MU_MCR_REG Mini Uart Modem Control 8 \n0x7E21 5054 AUX_MU_LSR_REG Mini Uart Line Status 8 \n0x7E21 5058 AUX_MU_MSR_REG Mini Uart Modem Status 8 \n0x7E21 505C AUX_MU_SCRATCH Mini Uart Scratch 8 \n0x7E21 5060 AUX_MU_CNTL_REG Mini Uart Extra Control 8 \n0x7E21 5064 AUX_MU_STAT_REG Mini Uart Extra Status 32 \n0x7E21 5068 AUX_MU_BAUD_REG Mini Uart Baudrate 16 \n0x7E21 5080 AUX_SPI0_CNTL0_REG  SPI 1 Control register 0 32 \n0x7E21 5084 AUX_SPI0_CNTL1_REG  SPI 1 Control register 1 8 \n0x7E21 5088 AUX_SPI0_STAT_REG SPI 1 Status  32 \n0x7E21 5090 AUX_SPI0_IO_REG SPI 1 Data 32 \n0x7E21 5094 AUX_SPI0_PEEK_REG SPI 1 Peek 16 \n0x7E21 50C0 AUX_SPI1_CNTL0_REG  SPI 2 Control register 0 32 \n0x7E21 50C4 AUX_SPI1_CNTL1_REG  SPI 2 Control register 1 8 \n                                                             \n3 These register names are identical to the defines in t he AUX_IO header file. For programming purposes these \nnames should be used wherever possible.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 9 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x7E21 50C8 AUX_SPI1_STAT_REG SPI 2 Status  32 \n0x7E21 50D0  AUX_SPI1_IO_REG SPI 2 Data 32 \n0x7E21 50D4  AUX_SPI1_PEEK_REG SPI 2 Peek 16 \n \n2.1.1 AUX registers \nThere are two Auxiliary registers which control all t hree devices. One is the interrupt status \nregister, the second is the Auxiliary enable register . The Auxiliary IRQ status register can \nhelp to hierarchically determine the source of an interrup t.  \n \nAUXIRQ Register (0x7E21 5000) \nSYNOPSIS  The  AUXIRQ  register is used to check any pending interrupts which m ay be asserted by \nthe three Auxiliary sub blocks. \nBit(s) Field Name Description Type Reset  \n31:3  Reserved, write zero, read as don\u2019t care    \n2 SPI 2 IRQ If set the SPI 2 module has an interrupt pendin g. R 0 \n1 SPI 1 IRQ If set the SPI1 module has an interrupt pendi ng. R 0 \n0 Mini UART \nIRQ If set the mini UART has an interrupt pending. R 0 \n \nAUXENB Register (0x7E21 5004) \nSYNOPSIS  The  AUXENB  register is used to enable the three modules; UART,  SPI1, SPI2. \nBit(s) Field Name Description Type Reset  \n31:3  Reserved, write zero, read as don\u2019t care    \n2 SPI2 enable If set the SPI 2 module is enabled. \nIf clear the SPI 2 module is disabled. That also \ndisables any SPI 2 module register access R/W 0 \n1 SPI 1 enable If set the SPI 1 module is enabled. \nIf clear the SPI 1 module is disabled. That also \ndisables any SPI 1 module register access R/W 0 \n0 Mini UART \nenable If set the mini UART is enabled. The UART will \nimmediately start receiving data, especially if the \nUART1_RX line is low . \nIf clear the mini UART is disabled. That also disables \nany mini UART register access R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 10  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nIf the enable bits are clear you will have no access  to a peripheral. You can not even read or \nwrite the registers! \nGPIO pins should be set up first the before enabling the U ART. The UART core is build to \nemulate 16550 behaviour. So when it is enabled any data at the  inputs will immediately be \nreceived . If the UART1_RX line is low (because the GPIO pi ns have not been set-up yet)  \nthat will be seen as a start bit and the UART will sta rt receiving 0x00-characters. \nValid stops bits are not required for the UART.  (See al so Implementation details).  Hence \nany bit status is acceptable as stop bit and is only used so the re is clean timing start for the \nnext bit. \nLooking after a reset: the baudrate will be zero and the system clock will be 250 MHz. So \nonly 2.5 \u00b5seconds suffice to fill the receive FIFO. The result will be that the FIFO is full and \noverflowing in no time flat. \n2.2 Mini UART \nThe mini UART is a secondary low throughput 4 UART intended to be used as a console. It \nneeds to be enabled before it can be used. It is also r ecommended that the correct GPIO \nfunction mode is selected before enabling the mini Uart.  \nThe mini Uart has the following features: \n\u2022 7 or 8 bit operation. \n\u2022 1 start and 1 stop bit. \n\u2022 No parities. \n\u2022 Break generation. \n\u2022 8 symbols deep FIFOs for receive and transmit. \n\u2022 SW controlled RTS, SW readable CTS. \n\u2022 Auto flow control with programmable FIFO level. \n\u2022 16550 like  registers. \n\u2022 Baudrate derived from system clock. \nThis is a mini  UART and it does NOT have the following capabilities: \n\u2022 Break detection \n\u2022 Framing errors detection. \n\u2022 Parity bit \n\u2022 Receive Time-out interrupt \n\u2022 DCD, DSR, DTR or RI signals. \nThe implemented UART is not  a 16650 compatible UART However as far as possible the \nfirst 8 control and status registers are laid out like  a 16550 UART. Al 16550 register bits \nwhich are not supported can be written but will be ignore d and read back as 0. All control \nbits for simple UART receive/transmit operations are a vailable. \n                                                             \n4 The UART itself has no throughput limitations in fact it  can run up to 32 Mega  baud. But doing so requires \nsignificant CPU involvement as it has shallow FIFOs a nd no DMA support.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 11  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2.2.1 Mini UART implementation details. \nThe UART1_CTS and UART1_RX inputs are synchronised and will ta ke 2 system clock \ncycles before they are processed.  \nThe module does not check for any framing errors. After rec eiving a start bit and 8 (or 7) \ndata bits the receiver waits for one half bit time and th en starts scanning for the next start bit. \nThe mini UART does not  check if the stop bit is high or wait for the stop bit t o appear. As a \nresult of this a UART1_RX input line which is continuously lo w (a break condition or an \nerror in connection or GPIO setup) causes the receiver to continuously receive 0x00 \nsymbols.  \nThe mini UART uses 8-times oversampling. The Baudrate can  be calculated from: \n( ) 1 _ *8_ _\n+=reg baudrate freq clock system baudrate  \nIf the system clock is 250 MHz and the baud register is zer o the baudrate is 31.25 Mega \nbaud. (25 Mbits/sec or 3.125 Mbytes/sec). The lowest baudrate w ith a 250 MHz system \nclock is 476 Baud. \nWhen writing to the data register only the LS 8 bits are t aken. All other bits are ignored. \nWhen reading from the data register only the LS 8 bits are  valid. All other bits are zero. \n2.2.2 Mini UART register details. \nAUX_MU_IO_REG Register (0x7E21 5040) \nSYNOPSIS  The  AUX_MU_IO_REG  register is primary used to write data to and read d ata from the \nUART FIFOs. \nIf the DLAB bit in the line control register is set this register gives access to the LS 8 bits \nof the baud rate. (Note: there is easier access to the baud rate register)  \nBit(s) Field Name Description Type Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7:0 LS 8 bits \nBaudrate \nread/write, \nDLAB=1 Access to the LS 8 bits of the 16-bit baudrate \nregister. \n(Only If bit 7 of the line control register (DLAB bit) \nis set) R/W 0 \n7:0 Transmit data  \nwrite, \nDLAB=0 Data written is put in the transmit FIFO (Provided it \nis not full) \n(Only If bit 7 of the line control register (DLAB bit) \nis clear) W 0 \n7:0 Receive data \nread, \nDLAB=0 Data read is taken from the receive FIFO (Provided \nit is not empty) \n(Only If bit 7 of the line control register (DLAB bit) \nis clear) R 0 \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 12  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAUX_MU_IIR_REG Register (0x7E21 5044) \nSYNOPSIS  The  AUX_MU_IER_REG  register is primary used to enable interrupts \nIf the DLAB bit in the line control register is set this register gives access to the MS 8 bits \nof the baud rate. (Note: there is easier access to the baud rate register)  \nBit(s) Field Name Description Type Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7:0 MS 8 bits \nBaudrate \nread/write, \nDLAB=1 Access to the MS 8 bits of the 16-bit baudrate register.  \n(Only If bit 7 of the line control register (DLAB bit) i s \nset) R/w 0 \n7:2  Reserved, write zero, read as don\u2019t care \n Some of these bits have functions in a 16550 \ncompatible UART but are ignored here   \n1 Enable receive \ninterrupt \n(DLAB=0) If this bit is set the interrupt line is asserted whenev er \nthe receive FIFO holds at least 1 byte. \nIf this bit is clear no receive interrupts are generated.  R 0 \n0 Enable \ntransmit \ninterrupt \n(DLAB=0) If this bit is set the interrupt line is asserted whenev er \nthe transmit FIFO is empty. \nIf this bit is clear no transmit interrupts are generat ed. R 0 \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 13  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAUX_MU_IER_REG Register (0x7E21 5048) \nSYNOPSIS  The  AUX_MU_IIR_REG  register shows the interrupt status. \nIt also has two FIFO enable status bits and (when w riting) FIFO clear bits. \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7:6 FIFO enables Both bits always read as 1 as the FIFOs are always \nenabled R 11 \n5:4 - Always read as zero R 00 \n3 - Always read as zero as the mini UART has no \ntimeout function R 0 \n2:1 READ: \n    Interrupt ID \nbits \nWRITE: \n    FIFO clear \nbits On read this register shows the interrupt ID bit \n    00 : No interrupts \n    01 : Transmit holding register empty \n    10 : Receiver holds valid byte \n    11 : <Not possible> \nOn write:  \n    Writing with bit 1 set will clear the receive FIFO  \n    Writing with bit 2 set will clear the transmit FIF O R/W 00 \n0 Interrupt \npending This bit is clear whenever an interrupt is pending R 1 \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 14  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAUX_MU_LCR_REG Register (0x7E21 504C) \nSYNOPSIS  The  AUX_MU_LCR_REG  register controls the line data format and gives acces s to the \nbaudrate register \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7 DLAB access If set the first to Mini UART register give access the  \nthe Baudrate register. During operation this bit must \nbe cleared. R/W 0 \n6 Break  If set high the UART1_TX line is pulled low \ncontinuously. If held for at least 12 bits times that wi ll \nindicate a break condition.  R/W 0 \n5:1  Reserved, write zero, read as don\u2019t care \nSome of these bits have functions in a 16550 \ncompatible UART but are ignored here  0 \n0 data size If clear the UART works in 7-bit mode \nIf set the UART works in 8-bit mode R/W 0 \n \n \nAUX_MU_MCR_REG Register (0x7E21 5050) \nSYNOPSIS  The  AUX_MU_MCR_REG  register controls the 'modem' signals. \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7:2  Reserved, write zero, read as don\u2019t care \nSome of these bits have functions in a 16550 \ncompatible UART but are ignored here  0 \n1 RTS If clear the UART1_RTS line is high \nIf set the UART1_RTS line is low \nThis bit is ignored if the RTS is used for auto-flow \ncontrol. See the Mini Uart Extra Control register \ndescription)  R/W 0 \n0  Reserved, write zero, read as don\u2019t care \nThis bit has a function in a 16550 compatible UART \nbut is ignored here  0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 15  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAUX_MU_LSR_REG Register (0x7E21 5054) \nSYNOPSIS  The  AUX_MU_LSR_REG  register shows the data status. \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7  Reserved, write zero, read as don\u2019t care \nThis bit has a function in a 16550 compatible UART \nbut is ignored here  0 \n6 Transmitter \nidle This bit is set if the transmit FIFO is empty and the \ntransmitter is idle. (Finished shifting out the last bit).  R 1 \n5 Transmitter \nempty This bit is set if the transmit FIFO can accept at lea st \none byte. R 0 \n4:2  Reserved, write zero, read as don\u2019t care \nSome of these bits have functions in a 16550 \ncompatible UART but are ignored here  0 \n1 Receiver \nOverrun This bit is set if there was a receiver overrun. That is: \none or more characters arrived whilst the receive \nFIFO was full. The newly arrived charters have been \ndiscarded. This bit is cleared each time this register is  \nread. To do a non-destructive read of this overrun bit \nuse the Mini Uart Extra Status register. R/C 0 \n0 Data ready This bit is set if the receive FIFO holds at least 1 \nsymbol. R 0 \n \nAUX_MU_MSR_REG Register (0x7E21 5058) \nSYNOPSIS  The  AUX_MU_MSR_REG  register shows the 'modem' status. \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7:6  Reserved, write zero, read as don\u2019t care \nSome of these bits have functions in a 16550 \ncompatible UART but are ignored here  0 \n5 CTS status This bit is the inverse of the UART1_CTS input Thus \n: \nIf set the UART1_CTS pin is low \nIf clear the UART1_CTS pin is high R 1 \n3:0  Reserved, write zero, read as don\u2019t care \nSome of these bits have functions in a 16550 \ncompatible UART but are ignored here  0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 16  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nAUX_MU_SCRATCH Register (0x7E21 505C) \nSYNOPSIS  The  AUX_MU_SCRATCH  is a single byte storage. \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7:0 Scratch One whole byte extra on top of the 134217728 \nprovided by the SDC R/W 0 \n \nAUX_MU_CNTL_REG Register (0x7E21 5060) \nSYNOPSIS  The  AUX_MU_CNTL_REG  provides access to some extra useful and nice features not \nfound on a normal 16550 UART . \nBit(s) Field Name Description Type  Reset  \n31:8  Reserved, write zero, read as don\u2019t care    \n7 CTS assert \nlevel This bit allows one to invert the CTS auto flow \noperation polarity. \nIf set the CTS auto flow assert level is low* \nIf clear the CTS auto flow assert level is high* R/W 0 \n6 RTS assert \nlevel This bit allows one to invert the RTS auto flow \noperation polarity. \nIf set the RTS auto flow assert level is low* \nIf clear the RTS auto flow assert level is high* R/W 0 \n5:4 RTS AUTO \nflow level These two bits specify at what receiver FIFO level the  \nRTS line is de-asserted in auto-flow mode. \n00 : De-assert RTS when the receive FIFO has 3 \nempty spaces left. \n01 : De-assert RTS when the receive FIFO has 2 \nempty spaces left. \n10 : De-assert RTS when the receive FIFO has 1 \nempty space left. \n11 : De-assert RTS when the receive FIFO has 4 \nempty spaces left. R/W 0 \n3 Enable \ntransmit Auto \nflow-control \nusing  CTS If this bit is set the transmitter will stop if the CT S \nline is de-asserted. \nIf this bit is clear the transmitter will ignore the status \nof the CTS line R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 17  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2 Enable receive \nAuto flow-\ncontrol using \nRTS If this bit is set the RTS line will de-assert if the \nreceive FIFO reaches it 'auto flow' level. In fact t he \nRTS line will behave as an RTR (Ready To Receive)  \nline. \nIf this bit is clear the RTS line is controlled by the \nAUX_MU_MCR_REG register bit 1. R/W 0 \n1 Transmitter \nenable If this bit is set the mini UART transmitter is enable d. \nIf this bit is clear the mini UART transmitter is \ndisabled R/W 1 \n0 Receiver \nenable If this bit is set the mini UART receiver is enabled. \nIf this bit is clear the mini UART receiver is disabled  R/W 1 \n \nReceiver enable \nIf this bit is set no new symbols will be accepted by the  receiver. Any symbols in progress of \nreception will be finished.  \nTransmitter enable \nIf this bit is set no new symbols will be send the trans mitter. Any symbols in progress of \ntransmission will be finished.  \nAuto flow control \nAutomatic flow control can be enabled independent for the  receiver and the transmitter.  \nCTS auto flow control impacts the transmitter only. T he transmitter will not send out new \nsymbols when the CTS line is de-asserted. Any symbols in  progress of transmission when \nthe CTS line becomes de-asserted will be finished.  \nRTS auto flow control impacts the receiver only. In f act the name RTS for the control line is \nincorrect and should be RTR (Ready to Receive). The rec eiver will de-asserted the RTS \n(RTR) line when its receive FIFO has a number of empty  spaces left. Normally 3 empty \nspaces should be enough. \nIf looping back a mini UART using full auto flow control the logic is fast enough to allow \nthe RTS auto flow level of '10' (De-assert RTS when t he receive FIFO has 1 empty space \nleft). \nAuto flow polarity \nTo offer full flexibility the polarity of the CTS and RTS (RTR) lines can be programmed. \nThis should allow the mini UART to interface with any e xisting hardware flow control \navailable. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 18  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAUX_MU_STAT_REG Register (0x7E21 5064) \nSYNOPSIS  The  AUX_MU_STAT_REG  provides a lot of useful information about the inte rnal status of \nthe mini UART not found on a normal 16550 UART. \nBit(s) Field Name Description Type  Reset  \n31:28  Reserved, write zero, read as don\u2019t care    \n27:24 Transmit \nFIFO fill level These bits shows how many symbols are stored in the \ntransmit FIFO \nThe value is in the range 0-8 R 0 \n23:20  Reserved, write zero, read as don\u2019t care    \n19:16 Receive FIFO \nfill level These bits shows how many symbols are stored in the \nreceive FIFO \nThe value is in the range 0-8 R 0 \n15:10  Reserved, write zero, read as don\u2019t care    \n9 Transmitter \ndone This bit is set if the transmitter is idle and the tra nsmit \nFIFO is empty. \nIt is a logic AND of bits 2 and 8 R 1 \n8 Transmit \nFIFO is empty If this bit is set the transmitter FIFO is empty. Thus it \ncan accept 8 symbols.  R 1 \n7 CTS line This bit shows the status of the UART1_CTS line.   R 0 \n6 RTS status This bit shows the status of the UART1_RTS li ne.  R 0 \n5 Transmit \nFIFO is full This is the inverse of bit 1 R 0 \n4 Receiver \noverrun This bit is set if there was a receiver overrun. That is: \none or more characters arrived whilst the receive \nFIFO was full. The newly arrived characters have \nbeen discarded. This bit is cleared each time the \nAUX_MU_LSR_REG register is read.  R 0 \n3 Transmitter is \nidle If this bit is set the transmitter is idle. \nIf this bit is clear the transmitter is idle. R 1 \n2 Receiver is \nidle If this bit is set the receiver is idle. \nIf this bit is clear the receiver is busy. \nThis bit can change unless the receiver is disabled R 1 \n1 Space \navailable If this bit is set the mini UART transmitter FIFO can  \naccept at least one more symbol. \nIf this bit is clear the mini UART transmitter FIFO is  \nfull R 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 19  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0 Symbol \navailable If this bit is set the mini UART receive FIFO contains  \nat least 1 symbol \nIf this bit is clear the mini UART receiver FIFO  is \nempty R 0 \n \nReceiver is idle \nThis bit is only useful if the receiver is disabled. The normal use is to disable the receiver. \nThen check (or wait) until the bit is set. Now you can be  sure that no new symbols will \narrive. (e.g. now you can change the baudrate...) \nTransmitter is idle \nThis bit tells if the transmitter is idle. Note that th e bit will set only for a short time if the \ntransmit FIFO contains data. Normally you want to use bit 9: Transmitter done. \nRTS status \nThis bit is useful only in receive Auto flow-control mode a s it shows the status of the RTS \nline.  \nAUX_MU_BAUD Register (0x7E21 5068) \nSYNOPSIS  The  AUX_MU_BAUD  register allows direct access to the 16-bit wide baudr ate counter. \nBit(s) Field Name Description Type  Reset  \n31:16  Reserved, write zero, read as don\u2019t care    \n15:0 Baudrate mini UART baudrate counter R/W 0 \nThis is the same register as is accessed using the LABD bit and the first two register, but \nmuch easier to access.  \n   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 20  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2.3 Universal SPI Master (2x) \nThe two universal SPI masters are secondary low throughput5 SPI interfaces. Like the UART \nthe devices needs to be enabled before they can be used. E ach SPI master has the following \nfeatures: \n\u2022 Single beat bit length between 1 and 32 bits. \n\u2022 Single beat variable bit length between 1 and 24 bits \n\u2022 Multi beat infinite bit length. \n\u2022 3 independent chip selects per master. \n\u2022 4 entries 32-bit wide transmit and receive FIFOs. \n\u2022 Data out on rising or falling clock edge. \n\u2022 Data in on rising or falling clock edge. \n\u2022 Clock inversion (Idle high or idle low). \n\u2022 Wide clocking range. \n\u2022 Programmable data out hold time. \n\u2022 Shift in/out MS or LS bit first \n \nA major issue with an SPI interface is that there i s no SPI standard in any form. Because the \nSPI interface has been around for a long time some pseudo- standard rules have appeared \nmostly when interfacing with memory devices. The universal S PI master has been developed \nto work even with the most 'non-standard' SPI devices. \n \n2.3.1 SPI implementation details \nThe following diagrams shows a typical SPI access cycl e. In this case we have 8 SPI clocks.  \n 1 Bit time  \nSet-up Operate Hold \n(optional) Idle Clk \nCs_n \n \nOne bit time before any clock edge changes the CS_n will go l ow. This makes sure that the \nMOSI signal has a full bit-time of set-up against any cha nging clock edges. \nThe operation normally ends after the last clock cycle . Note that at the end there is one half-\nbit time where the clock does not change but which still is part of the operation cycle. \nThere is an option to add a half bit cycle hold time. T his makes sure that any MISO data has \nat least a full SPI bit time to arrive. (Without this  hold time, data clocked out of the SPI \ndevice on the last clock edge would have only half a bit tim e to arrive).  \n                                                             \n5 Again the SPIs themselves have no throughput limitations i n fact they can run with an SPI clock of 125 MHz. \nBut doing so requires significant CPU involvement as they  have shallow FIFOs and no DMA support.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 21  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nLast there is a guarantee of at least a full bit time where the spi chip select is high. A longer \nCS_n high period can be programmed for another 1-7 cycles.  \nThe SPI clock frequency is: \n) 1 _ ( *2_ __+=field speed freq clock system CLK SPIx  \nIf the system clock is 250 MHz and the speed field is zero t he SPI clock frequency is 125 \nMHz. The practical SPI clock will be lower as the I/O  pads can not transmit or receive \nsignals at such high speed. The lowest SPI clock frequency wi th a 250 MHz system clock is \n30.5 KHz.  \n \nThe hardware has an option to add hold time to the MOSI  signal against the SPI clk. This is \nagain done using the system clock. So a 250 MHz system clock will add hold times in units \nof 4 ns. Hold times of 0, 1, 4 and 7 system clock cycles can  be used. (So at 250MHz an \nadditional hold time of 0, 4, 16 and 28 ns can be achieved). T he hold time is additional  to the \nnormal output timing as specified in the data sheet.  \n \n2.3.2 Interrupts \nThe SPI block has two interrupts: TX FIFO is empty, SPI  is Idle. \nTX FIFO is empty: \nThis interrupt will be asserted as soon as the last ent ry has been read from the transmit FIFO. \nAt that time the interface will still be busy shiftin g out that data. This also implies that the \nreceive FIFO will not yet contain the last received data. It is possible at that time to fill the \nTX FIFO again and read the receive FIFO entries which have been received. Note that there \nis no \"receive FIFO full\" interrupt as the number of en tries received is always equal to the \nnumber of entries transmitted. \nSPI is IDLE: \nThis interrupt will be asserted when the transmit FIFO is empty and the SPI block has \nfinished all actions (including the CS-high time) By this ti me the receive FIFO will have all \nreceived data as well. \n2.3.3 Long bit streams \nThe SPI module works in bursts of maximum 32 bits. Some SPI  devices require data which \nis longer the 32 bits. To do this the user must make use of  the two different data TX \naddresses: Tx data written to one address cause the CS to r emain asserted. Tx data written to \nthe other address cause the CS to be de-asserted at the end of the transmit cycle. So in order \nto exchange 96 bits you do the following: \nWrite the first two data words to one address, then write  the third word to the other address.  \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 22  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2.3.4 SPI register details. \n \nAUXSPI0/1_CNTL0 Register (0x7E21 5080,0x7E21 50C0) \nSYNOPSIS  The  AUXSPIx_CNTL0  register control many features of the SPI interfaces. \nBit(s)  Field Name Description Type  Reset  \n31:20  Speed Sets the SPI clock speed. spi clk freq = \nsystem_clock_freq/2*(speed+1) R/W 0 \n19:17  chip selects The pattern output on the CS pins when active . R/W 111 \n16 post-input \nmode If set the SPI input works in post input mode. \nFor details see text further down R/W 0 \n15 Variable CS If 1 the SPI takes the CS pattern and the data from the \nTX fifo \nIf 0 the SPI takes the CS pattern from bits 17-19 of \nthis register \nSet this bit only if also bit 14 (variable width) is set R/W 0 \n14 Variable width  If 1 the SPI takes the shift length and the data from \nthe TX fifo \nIf 0 the SPI takes the shift length from bits 0-5 of this \nregister R/W 0 \n13:12  DOUT Hold \ntime Controls the extra DOUT hold time in system clock \ncycles. \n00 : No extra hold time \n01 : 1 system clock extra hold time \n10 : 4 system clocks extra hold time \n11 : 7 system clocks extra hold time R/W 0 \n11 Enable Enables the SPI interface. Whilst disabled the FIFOs \ncan still be written to or read from \nThis bit should be 1 during normal operation. R/W 0 \n10 In rising If 1 data is clocked in on the rising edge of the SPI \nclock \nIf 0 data is clocked in on the falling edge of the SPI \nclock R/W 0 \n9 Clear FIFOs If 1 the receive and transmit FIFOs are held in reset \n(and thus flushed.) \nThis bit should be 0 during normal operation. R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 23  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 Out rising If 1 data is clocked out on the rising edge of the SPI \nclock \nIf 0 data is clocked out on the falling edge of the SPI \nclock R/W 0 \n7 Invert SPI \nCLK If 1 the 'idle' clock line state is high. \nIf 0 the 'idle' clock line state is low. R/W 0 \n6 Shift out MS \nbit first If 1 the data is shifted out starting with the MS bit. \n(bit 15 or bit 11) \nIf 0 the data is shifted out starting with the LS bit. (bi t \n0) R/W 0 \n5:0 Shift length Specifies the number of bits to shift \nThis field is ignored when using 'variable shift' mode R/W 0 \nInvert SPI CLK \nChanging this bit will immediately change the polarity of  the SPI clock output. It is \nrecommended not to do this when also the CS is active a s the connected devices will see this \nas a clock change. \nDOUT hold time \nBecause the interface runs of fast silicon the MOSI hold time against the clock will be very \nshort. This can cause considerable problems on SPI slaves . To make it easier for the slave to \nsee the data the hold time of the MOSI out against the  SPI clock out is programmable.  \n \nNo hold time MOSI  CLK \nWith hold time MOSI  CLK \n \nVariable width \nIn this mode the shift length is taken from the transmit  FIFO. The transmit data bits 28:24 are \nused as shift length and the data bits 23:0 are the actual tra nsmit data. If the option 'shift MS \nout first' is selected the first bit shifted out will be  bit 23. The receive data will arrive as \nnormal. \nVariable CS \nThis mode is used together with the variable width mode. In this mode the CS pattern is \ntaken from the transmit FIFO. The transmit data bits 31: 29 are used as CS and the data bits \n23:0 are the actual transmit data. This allows the CPU to  write to different SPI devices \nwithout having to change the CS bits. However the data lengt h is limited to 24 bits.  \nPost-input mode \nSome rare SPI devices output data on the falling clock edge w hich then has to be picked up \non the next falling clock edge. There are two problems wi th this: \n1.  The very first falling clock edge there is no valid data a rriving. \n2.  After the last clock edge there is one more 'dangling' bi t to pick up.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 24  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nThe post-input mode is specifically to deal with this sort of data. If the post-input mode bit is \nset, the data arriving at the first falling clock edge is ignored. Then after the last falling clock \nedge the CS remain asserted and after a full bit time the  last data bit is picked up. The \nfollowing figure shows this behaviour: \n \nClk \nCs_n Get first bit Get last bit \n \nIn this mode the CS will go high 1 full SPI clock cycle a fter the last clock edge. This \nguarantees a full SPI clock cycle time for the data to s ettle and arrive at the MISO input. \n \nAUXSPI0/1_CNTL1 Register (0x7E21 5084,0x7E21 50C4) \nSYNOPSIS  The  AUXSPIx_CNTL1  registers control more features of the SPI interfaces . \nBit(s)  Field Name Description Type  Reset  \n31:18  - Reserved, write zero, read as don\u2019t care    \n10:8 CS high time Additional SPI clock cycles where the CS i s high.  R/W 0 \n7 TX empty IRQ  If 1 the interrupt line is high when the transmit FIFO \nis empty  R/W 0 \n6 Done IRQ  If 1 the interrupt line is high when the inte rface is idle  R/W 0 \n5:2 - Reserved, write zero, read as don\u2019t care    \n1 Shift in MS bit \nfirst If 1 the data is shifted in starting with the MS bit. (bit  \n15) \nIf 0 the data is shifted in starting with the LS bit. (bit  \n0) R/W 0 \n0 Keep input If 1 the receiver shift register is NOT cleared. Thus \nnew data is concatenated to old data. \nIf 0 the receiver shift register is cleared before eac h \ntransaction.  R/W 0 \nKeep input \nSetting the 'Keep input' bit will make that the input shift re gister is not cleared between \ntransactions. However the contents of the shift regis ter is still written to the receive FIFO at \nthe end of each transaction. E.g. if you receive two 8 bi t values 0x81 followed by 0x46 the \nreceive FIFO will contain: 0x0081 in the first entry and 0x8146 in the second entry. This \nmode may save CPU time concatenating bits (4 bits follow ed by 12 bits).  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 25  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nCS high time \nThe SPI CS will always be high for at least 1 SPI clo ck cycle. Some SPI devices need more \ntime to process the data. This field will set a longe r CS-high time. So the actual CS high time \nis (CS_high_time + 1) (In SPI clock cycles). \nInterrupts \nThe SPI block has two interrupts: TX FIFO is empty, SPI  is Idle. \nTX FIFO is empty: \nThis interrupt will be asserted as soon as the last ent ry has been read from the transmit FIFO. \nAt that time the interface will still be busy shiftin g out that data. This also implies that the \nreceive FIFO will not yet contain the last received data.  \nIt is possible at that time to fill the TX FIFO again  and read the receive FIFO entries which \nhave been received. There is a RX FIFO level field which tells exactly how many words are \nin the receive FIFO. In general at that time the rece ive FIFO should contain the number of \nTx items minus one (the last one still being received).  Note that there is no \"receive FIFO \nfull\" interrupt or \"receive FIFO overflow\" flag as the  number of entries received can never \nbe more then the number of entries transmitted. \nAUX is IDLE: \nThis interrupt will be asserted when the module has finishe d all activities, including waiting \nthe minimum CS high time. This guarantees that any recei ve data will be available and \n`transparent' changes can be made to the configuration re gister (e.g. inverting the SPI clock \npolarity).  \n \nAUXSPI0/1_STAT Register (0x7E21 5088,0x7E21 50C8) \nSYNOPSIS  The  AUXSPIx_STAT  registers show the status of the SPI interfaces. \nBit(s)  Field Name Description Type  Reset  \n31:24  TX FIFO level  The number of data units in the transmit data FIFO R/W 0 \n23:12  RX FIFO level  The number of data units in the receive data FIFO. R/W 0 \n11:5 - Reserved, write zero, read as don\u2019t care    \n4 TX Full If 1 the transmit FIFO is full \nIf 0 the transmit FIFO can accept at least 1 data unit. R/W 0 \n3 TX Empty If 1 the transmit FIFO is empty \nIf 0 the transmit FIFO holds at least 1 data unit. R/W 0 \n2 RX Empty If 1 the receiver FIFO is empty \nIf 0 the receiver FIFO holds at least 1 data unit. R/W 0 \n6 Busy Indicates the module is busy transferring data. R/W 0 \n5:0 Bit count The number of bits still to be processed. Starts with \n'shift-length' and counts down. R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 26  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBusy \nThis status bit indicates if the module is busy. It wil l be clear when the TX FIFO is empty \nand the module has finished all activities, including wait ing the minimum CS high time. \nAUXSPI0/1_PEEK Register (0x7E21 508C,0x7E21 50CC) \nSYNOPSIS  The  AUXSPIx_PEEK  registers show received data of the SPI interfaces. \nBit(s)  Field Name Description Type  Reset  \n31:16  - Reserved, write zero, read as don\u2019t care    \n15:0 Data Reads from this address will show the top entry from \nthe receive FIFO, but the data is not taken from the \nFIFO. This provides a means of inspecting the data \nbut not removing it from the FIFO. RO 0 \n \nAUXSPI0/1_IO Register \n(0x7E21 50A0-0x7E21 50AC \n0x7E21 50E0-0x7E21 50EC) \nSYNOPSIS  The  AUXSPIx_IO  registers are the primary data port of the SPI inte rfaces \nThese four addresses all write to the same FIFO. \nWriting to any of these addresses causes the SPI CS _n pins to be de-asserted at \nthe end of the access \nBit(s)  Field Name Description Type  Reset  \n31:16  - Reserved, write zero, read as don\u2019t care    \n15:0 Data Writes to this address range end up in the transmit \nFIFO. Data is lost when writing whilst the transmit \nFIFO is full. \nReads from this address will take the top entry from \nthe receive FIFO. Reading whilst the receive FIFO is \nwill return the last data received. R/W 0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 27  \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAUXSPI0/1_TXHOLD Register \n(0x7E21 50B0-0x7E21 50BC \n0x7E21 50F0-0x7E21 50FC) \nSYNOPSIS  The  AUXSPIx_TXHOLD  registers are the extended CS port of the SPI interf aces \nThese four addresses all write to the same FIFO. \nWriting to these addresses causes the SPI CS_n pins  to remain asserted at the \nend of the access \nBit(s)  Field Name Description Type  Reset  \n31:16  - Reserved, write zero, read as don\u2019t care    \n15:0 Data Writes to this address range end up in the transmit \nFIFO. Data is lost when writing whilst the transmit \nFIFO is full. \nReads from this address will take the top entry from \nthe receive FIFO. Reading whilst the receive FIFO is \nwill return the last data received. R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 28 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n3 BSC \n \n3.1 Introduction \nThe Broadcom Serial Controller (BSC) controller is a  master, fast-mode (400Kb/s) BSC \ncontroller. The Broadcom Serial Control bus is a pro prietary bus compliant with the Philips\u00ae \nI2C bus/interface version 2.1 January 2000. \n\u2022 I2C single master only operation (supports clock stretching w ait states) \n\u2022 Both 7-bit and 10-bit addressing is supported. \n\u2022 Timing completely software controllable via registers \n3.2 Register View \nThe BSC controller has eight memory-mapped registers. All accesses are assumed to be 32-\nbit. Note that the BSC2 master is used dedicated with the HDMI interface and should not be \naccessed by user programs. \n \nThere are three BSC masters inside BCM. The register  addresses starts from  \n\u2022 BSC0: 0x7E20_5000 \n\u2022 BSC1: 0x7E80_4000 \n\u2022 BSC2 : 0x7E80_5000 \nThe table below shows the address of I 2C interface where the address is an offset from one of  \nthe three base addreses listed above. \n \nI2C Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 C  Control 32 \n0x4 S  Status 32 \n0x8 DLEN  Data Length 32 \n0xc A  Slave Address 32 \n0x10 FIFO  Data FIFO 32 \n0x14 DIV  Clock Divider 32 \n0x18 DEL  Data Delay 32  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 29 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x1c CLKT  Clock Stretch Timeout 32 \n \n \nC Register  \nSynopsis  The control register is used to enable interrupts, c lear the FIFO, define a read or write \noperation and start a transfer. \nThe READ field specifies the type of transfer. \nThe CLEAR field is used to clear the FIFO. Writing t o this field is a one-shot operation \nwhich will always read back as zero. The CLEAR bit can se t at the same time as the \nstart transfer bit, and will result in the FIFO bei ng cleared just prior to the start of \ntransfer. Note that clearing the FIFO during a tran sfer will result in the transfer being \naborted. \nThe ST field starts a new BSC transfer. This has a one shot action, and so the bit will \nalways read back as 0 . \nThe INTD field enables interrupts at the end of a t ransfer the DONE condition. The \ninterrupt remains active until the DONE condition is cleared by writing a 1 to the \nI2CS.DONE field. Writing a 0 to the INTD field disa bles interrupts on DONE. \nThe INTT field enables interrupts whenever the FIFO  is or more empty and needs \nwriting (i.e. during a write transfer) - the TXW con dition. The interrupt remains active \nuntil the TXW condition is cleared by writing suffici ent data to the FIFO to complete the \ntransfer. Writing a 0 to the INTT field disables in terrupts on TXW. \nThe INTR field enables interrupts whenever the FIFO  is or more full and needs reading \n(i.e. during a read transfer) - the RXR condition. T he interrupt remains active until the \nRXW condition is cleared by reading sufficient data fro m the RX FIFO. Writing a 0 to \nthe INTR field disables interrupts on RXR. \nThe I2CEN field enables BSC operations. If this bit  is 0 then transfers will not be \nperformed. All register accesses are still permitted however. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care    \n15 I2CEN I2C Enable  \n0 = BSC controller is disabled \n1 = BSC controller is enabled RW 0x0 \n14:11  Reserved  - Write as 0, read as don't care    \n10 INTR INTR Interrupt on RX  \n0 = Don t generate interrupts on RXR condition. \n1 = Generate interrupt while RXR = 1. RW 0x0 \n9 INTT INTT Interrupt on TX  \n0 = Don t generate interrupts on TXW condition. \n1 = Generate interrupt while TXW = 1. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 30 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 INTD INTD Interrupt on DONE  \n0 = Don t generate interrupts on DONE \ncondition. 1 = Generate interrupt while DONE = \n1. RW 0x0 \n7 ST ST Start Transfer  \n0 = No action. 1 = Start a new transfer. One shot \noperation. Read back as 0. RW 0x0 \n6  Reserved  - Write as 0, read as don't care    \n5:4 CLEAR CLEAR FIFO Clear  \n00 = No action. x1 = Clear FIFO. One shot \noperation. 1x = Clear FIFO. One shot operation. \nIf CLEAR and ST are both set in the same \noperation, the FIFO is cleared before the new \nframe is started. Read back as 0. \nNote: 2 bits are used to maintain compatibility to \nprevious version. RW 0x0 \n3:1  Reserved  - Write as 0, read as don't care    \n0 READ READ Read Transfer  \n0 = Write Packet Transfer. 1 = Read Packet \nTransfer. RW 0x0 \n \n \nS Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 31 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  The status register is used to record activity status,  errors and interrupt requests. \nThe TA field indicates the activity status of the BSC  controller. This read-only field \nreturns a 1 when the controller is in the middle of a transfer and a 0 when idle. \nThe DONE field is set when the transfer completes. T he DONE condition can be used \nwith I2CC.INTD to generate an interrupt on transfer  completion. The DONE field is \nreset by writing a 1 , writing a 0 to the field has no effect. \nThe read-only TXW bit is set during a write transfer  and the FIFO is less than full and \nneeds writing. Writing sufficient data (i.e. enough  data to either fill the FIFO more than \nfull or complete the transfer) to the FIFO will clea r the field. When the I2CC.INTT \ncontrol bit is set, the TXW condition can be used to g enerate an interrupt to write more \ndata to the FIFO to complete the current transfer. If  the I2C controller runs out of data \nto send, it will wait for more data to be written i nto the FIFO. \nThe read-only RXR field is set during a read transfe r and the FIFO is or more full and \nneeds reading. Reading sufficient data to bring the  depth below will clear the field. \nWhen I2CC.INTR control bit is set, the RXR condition can be used to generate an \ninterrupt to read data from the FIFO before it becom es full. In the event that the FIFO \ndoes become full, all I2C operations will stall unti l data is removed from the FIFO. \nThe read-only TXD field is set when the FIFO has spa ce for at least one byte of data. \nTXD is clear when the FIFO is full. The TXD field can  be used to check that the FIFO \ncan accept data before any is written. Any writes to a f ull TX FIFO will be ignored. \nThe read-only RXD field is set when the FIFO contains  at least one byte of data. RXD \nis cleared when the FIFO becomes empty. The RXD field can be used to check that \nthe FIFO contains data before reading. Reading from an empty FIFO will return invalid \ndata. \nThe read-only TXE field is set when the FIFO is empt y. No further data will be \ntransmitted until more data is written to the FIFO.  \nThe read-only RXF field is set when the FIFO is full . No more clocks will be generated \nuntil space is available in the FIFO to receive more data. \nThe ERR field is set when the slave fails to acknowle dge either its address or a data \nbyte written to it. The ERR field is reset by writing  a 1 , writing a 0 to the field has no \neffect. \nThe CLKT field is set when the slave holds the SCL signal high for too long (clock \nstretching). The CLKT field is reset by writing a 1 ,  writing a 0 to the field has no effect. \nBit(s)  Field Name  Description  Type  Reset  \n31:10  Reserved  - Write as 0, read as don't care    \n9 CLKT CLKT Clock Stretch Timeout  \n0 = No errors detected. 1 = Slave has held the \nSCL signal low (clock stretching) for longer and \nthat specified in the I2CCLKT register Cleared \nby writing 1 to the field. RW 0x0 \n8 ERR ERR ACK Error  \n0 = No errors detected. 1 = Slave has not \nacknowledged its address. Cleared by writing 1 \nto the field. RW 0x0 \n7 RXF RXF - FIFO Full  \n0 = FIFO is not full. 1 = FIFO is full. If a read i s \nunderway, no further serial data will be received \nuntil data is read from FIFO. RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 32 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6 TXE TXE - FIFO Empty  \n0 = FIFO is not empty. 1 = FIFO is empty. If a \nwrite is underway, no further serial data can be \ntransmitted until data is written to the FIFO. RO 0x1 \n5 RXD RXD - FIFO contains Data  \n0 = FIFO is empty. 1 = FIFO contains at least 1 \nbyte. Cleared by reading sufficient data from \nFIFO. RO 0x0 \n4 TXD TXD - FIFO can accept Data  \n0 = FIFO is full. The FIFO cannot accept more \ndata. 1 = FIFO has space for at least 1 byte. RO 0x1 \n3 RXR RXR - FIFO needs Reading ( full)  \n0 = FIFO is less than full and a read is \nunderway. 1 = FIFO is or more full and a read is \nunderway. Cleared by reading sufficient data \nfrom the FIFO. RO 0x0 \n2 TXW TXW - FIFO needs Writing ( full)  \n0 = FIFO is at least full and a write is underway \n(or sufficient data to send). 1 = FIFO is less then  \nfull and a write is underway. Cleared by writing \nsufficient data to the FIFO. RO 0x0 \n1 DONE DONE Transfer Done  \n0 = Transfer not completed. 1 = Transfer \ncomplete. Cleared by writing 1 to the field. RW 0x0 \n0 TA TA Transfer Active  \n0 = Transfer not active. 1 = Transfer active. RO 0x0 \n \n \nDLEN Register  \nSynopsis  The data length register defines the number of bytes  of data to transmit or receive in \nthe I2C transfer. Reading the register gives the nu mber of bytes remaining in the \ncurrent transfer. \nThe DLEN field specifies the number of bytes to be tr ansmitted/received. Reading the \nDLEN field when a transfer is in progress (TA = 1) returns the number of bytes still to \nbe transmitted or received. Reading the DLEN field w hen the transfer has just \ncompleted (DONE = 1) returns zero as there are no mor e bytes to transmit or receive. \nFinally, reading the DLEN field when TA = 0 and DONE  = 0 returns the last value \nwritten. The DLEN field can be left over multiple tr ansfers. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 33 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n15:0 DLEN Data Length.  \nWriting to DLEN specifies the number of bytes to \nbe transmitted/received. Reading from DLEN \nwhen TA = 1 or DONE = 1, returns the number \nof bytes still to be transmitted or received. \nReading from DLEN when TA = 0 and DONE = \n0, returns the last DLEN value written. DLEN can \nbe left over multiple packets. RW 0x0 \n \n \nA Register  \nSynopsis  The slave address register specifies the slave addre ss and cycle type. The address \nregister can be left across multiple transfers \nThe ADDR field specifies the slave address of the I2 C device. \nBit(s)  Field Name  Description  Type  Reset  \n31:7  Reserved  - Write as 0, read as don't care    \n6:0 ADDR Slave Address.  RW 0x0 \n \n \nFIFO Register  \nSynopsis  The Data FIFO register is used to access the FIFO. Wr ite cycles to this address place \ndata in the 16-byte FIFO, ready to transmit on the B SC bus. Read cycles access data \nreceived from the bus. \nData writes to a full FIFO will be ignored and data  reads from an empty FIFO will result \nin invalid data. The FIFO can be cleared using the I 2CC.CLEAR field. \nThe DATA field specifies the data to be transmitted or received. \nBit(s)  Field Name  Description  Type  Reset  \n31:8  Reserved  - Write as 0, read as don't care    \n7:0 DATA Writes to the register write transmit data to the \nFIFO. Reads from register reads received data \nfrom the FIFO.  RW 0x0 \n \n \nDIV Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 34 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  The clock divider register is used to define the clock speed of the BSC peripheral. \nThe CDIV field specifies the core clock divider used by the BSC. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care    \n15:0 CDIV Clock Divider  \nSCL = core clock / CDIV \nWhere core_clk is nominally 150 MHz. If CDIV is \nset to 0, the divisor is 32768. CDIV is always \nrounded down to an even number. The default \nvalue should result in a 100 kHz I2C clock \nfrequency. RW 0x5dc \n \n \nDEL Register  \nSynopsis  The data delay register provides fine control over t he sampling/launch point of the \ndata. \nThe REDL field specifies the number core clocks to wait after the rising edge before \nsampling the incoming data. \nThe FEDL field specifies the number core clocks to wait  after the falling edge before \noutputting the next data bit. \nNote: Care must be taken in choosing values for FEDL and REDL as it is possible to \ncause the BSC master to malfunction by setting values  of CDIV/2 or greater. Therefore \nthe delay values should always be set to less than CD IV/2. \nBit(s)  Field Name  Description  Type  Reset  \n31:16 FEDL FEDL Falling Edge Delay  \nNumber of core clock cycles to wait after the \nfalling edge of SCL before outputting next bit of \ndata. RW 0x30 \n15:0 REDL REDL Rising Edge Delay  \nNumber of core clock cycles to wait after the \nrising edge of SCL before reading the next bit of \ndata. RW 0x30 \n \n \nCLKT Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 35 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  The clock stretch timeout register provides a timeout on how long the master waits for \nthe slave to stretch the clock before deciding that t he slave has hung. \nThe TOUT field specifies the number I2C SCL clocks to wait after releasing SCL high \nand finding that the SCL is still low before decidi ng that the slave is not responding and \nmoving the I2C machine forward. When a timeout occurs,  the I2CS.CLKT bit is set. \nWriting 0x0 to TOUT will result in the Clock Stretch Timeout being disabled. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care    \n15:0 TOUT TOUT Clock Stretch Timeout Value  \nNumber of SCL clock cycles to wait after the \nrising edge of SCL before deciding that the slave \nis not responding. RW 0x40 \n \n \n   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 36 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n3.3 10 Bit Addressing \n10 Bit addressing is an extension to the standard 7-bit addres sing mode. This section \ndescribes in detail how to read/write using 10-bit addressing wit h this I2C controller. \n10-bit addressing is compatible with, and can be combined with , 7 bit addressing. Using 10 \nbits for addressing exploits the reserved combination 1111 0xx fo r the first byte following a \nSTART (S) or REPEATED START (Sr) condition. \nThe 10 bit slave address is formed from the first two byte s following a S or Sr condition. \nThe first seven bits of the first byte are the combina tion 11110XX of which the last two bits \n(XX) are the two most significant  bits of the 10-bit address. The eighth bit of the first by te is \nthe R/W bit. If the R/W bit is \u20180\u2019 (write) then the fo llowing byte contains the remaining 8 bits \nof the 10-bit address. If the R/W bit is \u20181\u2019 then the next byte contains data transmitted from \nthe slave to the master. \nWriting \n \nFigure 3-1 Write to a slave with 10 bit address \n \n \nFigure 3-1 shows a write to a slave with a 10-bit address, t o perform this using the controller \none must do the following: \nAssuming we are in the \u2018stop\u2019 state: (and the FIFO is e mpty) \n1.  Write the number of data bytes to written (plus one) to t he I2CDLEN  register. \n2.  Write \u2018XXXXXXXX\u2019 to the FIFO where \u2018XXXXXXXX\u2019 are th e least 8 significant bits \nof the 10-bit slave address.  \n3.  Write other data to be transmitted to the FIFO. \n4.  Write \u201811110XX\u2019 to Slave Address Register where \u2018XX\u2019 are th e two most significant bits \nof the 10-bit address. Set I2CC.READ = 0  and I2CC.ST = 1 , this will start a write transfer. \n \nReading \n \n Stop  Start Slave acknowledge  \nRepeat Start  Master acknowledge  Slave acknowledge   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 37 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nFigure 3-2 Read from slave with 10 bit address \n \n \nFigure 3-2 shows how a read from a slave with a 10-bit address  is performed. Following is \nthe procedure for performing a read using the controller: \n1.  Write 1 to the I2CDLEN  register. \n2.  Write \u2018XXXXXXXX\u2019 to the FIFO where \u2018XXXXXXXX\u2019 are th e least 8 significant bits \nof the 10-bit slave address.  \n3.  Write \u201811110XX\u2019 to the Slave Address Register where \u2018XX\u2019 ar e the two most significant \nbits of the 10-bit address. Set I2CC.READ = 0  and I2CC.ST = 1 , this will start a write \ntransfer.  \n4.  Poll the I2CS.TA  bit, waiting for the transfer has started. \n5.  Write the number of data bytes to read to the I2CDLEN  register. \n6.  Set I2CC.READ = 1  and I2CC.ST = 1 , this will send the repeat start bit, new slave address \nand R/W bit (which is \u20181\u2019) initiating the read. \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 38 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4 DMA Controller \n4.1 Overview \nThe majority of hardware pipelines and peripherals within the BCM2835 are bus masters, \nenabling them to efficiently satisfy their own data requir ements.  This reduces the \nrequirements of the DMA controller to block-to-block memo ry transfers and supporting some \nof the simpler peripherals.  In addition, the DMA con troller provides a read only  prefetch \nmode to allow data to be brought into the L2 cache in an ticipation of its later use. \nBeware that the DMA controller is direcly connected t o the peripherals. Thus the DMA \ncontroller must be set-up to use the Physical (harware) a ddresses of the peripherals.  \nThe BCM2835 DMA Controller provides a total of 16 DMA channels . Each channel operates \nindependently from the others and is internally arbitrat ed onto one of the 3 system busses. \nThis means that the amount of bandwidth that a DMA channe l may consume can be \ncontrolled by the arbiter settings.  \nEach DMA channel operates by loading a Control Block  (CB) data structure from memory \ninto internal registers.  The Control Block defines the required DMA operation.  Each Control \nBlock  can point to a further Control Block  to be loaded and executed once the operation \ndescribed in the current Control Block  has completed.  In this way a linked list of Control \nBlocks  can be constructed in order to execute a sequence of DMA operations without \nsoftware intervention. \nThe DMA supports AXI read bursts to ensure efficient exter nal SDRAM use.  The DMA \ncontrol block contains a burst parameter which indicates the required burst size of certain \nmemory transfers. In general the DMA doesn\u2019t do write burs ts, although wide writes will be \ndone in 2 beat bursts if possible. \nMemory-to-Peripheral transfers can be paced by a Data Request  (DREQ) signal which is \ngenerated by the peripheral.  The DREQ signal is level  sensitive and controls the DMA by \ngating its AXI bus requests. \nA peripheral can also provide a Panic  signal alongside the DREQ to indicate that there is an \nimminent danger of FIFO underflow or overflow or simila r critical situation.  The Panic  is \nused to select the AXI apriority level which is then pas sed out onto the AXI bus so that it can \nbe used to influence arbitration in the rest of the syste m. \nThe allocation of peripherals to DMA channels is progra mmable. \nThe DMA can deal with byte aligned transfers and will minimise bus traffic by buffering and \npacking  misaligned accesses. \nEach DMA channel can be fully disabled via a top level pow er register to save power. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 39 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4.2  DMA Controller Registers \nThe DMA Controller is comprised of several identical D MA Channels depending upon the \nrequired configuration. Each individual DMA channel has an i dentical register map (although \nLITE channels have less functionality and hence less re gisters).  \nDMA Channel 0 is located at the address of 0x7E007000, Channel 1 at 0x7E007100, Channel \n2 at 0x7E007200 and so on. Thus adjacent DMA Channels are offset  by 0x100.   \nDMA Channel 15 however, is physically removed from the o ther DMA Channels and so has \na different address base of 0x7EE05000. \n \nDMA Channel Offsets  \nDMA Channels 0 \u2013 14 Register Set Offsets from DMA0_BASE  \n0x000   DMA Channel 0 Register Set  \n0x100   DMA Channel 1 Register Set  \n0x200   DMA Channel 2 Register Set  \n0x300   DMA Channel 3 Register Set  \n0x400   DMA Channel 4 Register Set  \n0x500   DMA Channel 5 Register Set  \n0x600   DMA Channel 6 Register Set  \n0x700   DMA Channel 7 Register Set  \n0x800   DMA Channel 8 Register Set  \n0x900   DMA Channel 9 Register Set  \n0xa00   DMA Channel 10 Register Set  \n0xb00   DMA Channel 11  Register Set  \n0xc00   DMA Channel 12 Register Set  \n0xd00   DMA Channel 13 Register Set  \n0xe00   DMA Channel 14 Register Set  \nDMA Channel 15 Register Set Offset from DMA15_BASE  \n0x000   DMA Channel 15 Register Set  \nTable 4-1 \u2013 DMA Controller Register Address Map \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 40 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4.2.1 DMA Channel Register Address Map \nEach DMA channel has an identical register map, only the base address of each channel is \ndifferent. \nThere is a global enable register at the top of the Addr ess map that can disable each DMA for \npowersaving. \nOnly three registers in each channels register set are directly writeable (CS, CONBLK_AD  \nand DEBUG ). The other registers (TI, SOURCE_AD, DEST_AD, TXFR_LE N, STRIDE & \nNEXTCONBK), are automatically loaded from a Control Block  data structure held in \nexternal memory. \n \n4.2.1.1 Control Block Data Structure \nControl Blocks (CB) are 8 words (256 bits) in length and mu st start at a 256-bit aligned \naddress.  The format of the CB data structure in memory,  is shown below.  \nEach 32 bit word of the control block is automatically loa ded into the corresponding 32 bit \nDMA control block register at the start of a DMA tran sfer. The descriptions of these registers \nalso defines the corresponding bit locations in the CB data  structure in memory.   \n32 -bit \nWord \nOffset Description Associated \nRead-Only \nRegister \n0 Transfer Information  TI  \n1 Source Address  SOURCE_AD  \n2 Destination Address  DEST_AD  \n3 Transfer Length  TXFR_LEN  \n4 2D Mode Stride  STRIDE  \n5 Next Control Block \nAddress NEXTCONBK \n6-7 Reserved \u2013 set to zero.  N/A  \nTable 4-2 \u2013 DMA Control Block Definition \nThe DMA is started by writing the address of a CB structure  into the CONBLK_AD register \nand then setting the ACTIVE bit.  The DMA will fetch t he CB from the address set in the \nSCB_ADDR field of this reg and it will load it into the read-only  registers described below. \nIt will then begin a DMA transfer according to the in formation in the CB.   \nWhen it has completed the current DMA transfer (length  => 0) the DMA will update the \nCONBLK_AD register with the contents of the NEXTCON BK register, fetch a new CB from \nthat address, and start the whole procedure once again. \nThe DMA will stop (and clear the ACTIVE bit) when it ha s completed a DMA transfer and \nthe  NEXTCONBK register is set to 0x0000_0000 . It will load this value into the \nCONBLK_AD reg and then stop.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 41 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nMost of the control block registers cannot be written to directly as they loaded automatically \nfrom memory. They can be read to provide status informatio n, and to indicate the progress of \nthe current DMA transfer.  The value loaded into the N EXTCONBK register can be \noverwritten so that the linked list of Control Block da ta structures can be dynamically altered.  \nHowever it is only safe to do this when the DMA is pause d. \n \n4.2.1.2 Register Map \nDMA Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0  0_CS  DMA Channel 0 Control and Status  32  \n0x4  0_CONBLK_AD  DMA Channel 0 Control Block Address  32  \n0x8  0_TI  DMA Channel 0 CB Word 0 (Transfer Information)  32  \n0xc  0_SOURCE_AD  DMA Channel 0 CB Word 1 (Source Address)  32  \n0x10  0_DEST_AD  DMA Channel 0 CB Word 2 (Destination Address)  32  \n0x14  0_TXFR_LEN  DMA  Channel 0 CB Word 3 (Transfer Length)  32  \n0x18  0_STRIDE  DMA Channel 0 CB Word 4 (2D Stride)  32  \n0x1c  0_NEXTCONBK  DMA Channel 0 CB Word 5 (Next CB Address)  32  \n0x20  0_DEBUG  DMA Channel 0 Debug  32  \n0x100  1_CS  DMA Channel 1 Control and Status  32  \n0x104  1_CONBLK_AD  DMA Channel 1 Control Block Address  32  \n0x108  1_TI  DMA Channel 1 CB Word 0 (Transfer Information)  32  \n0x10c  1_SOURCE_AD  DMA Channel 1 CB Word 1 (Source Address)  32  \n0x110  1_DEST_AD  DMA Channel 1 CB Word 2 (Destination Address)  32  \n0x114  1_TXFR_LEN  DMA Channel 1 CB Word 3 (Transfer Length)  32   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 42 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x118  1_STRIDE  DMA Channel 1 CB Word 4 (2D Stride)  32  \n0x11c  1_NEXTCONBK  DMA Channel 1 CB Word 5 (Next CB Address)  32  \n0x120  1_DEBUG  DMA Channel 1 Debug  32  \n0x200  2_CS  DMA Channel 2 Control and Status  32  \n0x204  2_CONBLK_AD  DMA Channel 2 Control Block Address  32  \n0x208  2_TI  DMA Channel 2 CB Word 0 (Transfer Information)  32  \n0x20c  2_SOURCE_AD  DMA Channel 2 CB Wo rd 1 (Source Address)  32  \n0x210  2_DEST_AD  DMA Channel 2 CB Word 2 (Destination Address)  32  \n0x214  2_TXFR_LEN  DMA Channel 2 CB Word 3 (Transfer Length)  32  \n0x218  2_STRIDE  DMA Channel 2 CB Word 4 (2D Stride)  32  \n0x21c  2_NEXTCONBK  DMA Channel 2 CB Word 5 (Next CB Address)  32  \n0x220  2_DEBUG  DMA Channel 2 Debug  32  \n0x300  3_CS  DMA Channel 3 Control and Status  32  \n0x304  3_CONBLK_AD  DMA Channel 3 Control Block Address  32  \n0x308  3_TI  DMA Channel 3 CB Word 0 (Transfer Information)  32  \n0x30c  3_SOURCE_AD  DMA Channel 3 CB Word 1 (Source Address)  32  \n0x310  3_DEST_AD  DMA Channel 3 CB Word 2 (Destination Address)  32  \n0x314  3_TXFR_LEN  DMA Channel 3 CB Word 3 (Transfer Length)  32  \n0x318  3_STRIDE  DMA Channel 3 CB Word 4 (2D Stride)  32  \n0x31c  3_NEXTCONBK  DMA Channel 3 CB Word 5 (Next CB Address)  32  \n0x320  3_DEBUG  DMA Channel 0 Debug  32   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 43 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x400  4_CS  DMA Channel 4 Control and Status  32  \n0x404  4_CONBLK_AD  DMA Channel 4 Control Block Address  32  \n0x408  4_TI  DMA Channel 4 CB Word 0 (Transfer Information)  32  \n0x40c  4_SOURCE_AD  DMA Channel 4 CB Word 1 (Source Address)  32  \n0x410  4_DEST_AD  DMA Channel 4 CB Word 2 (Destination Address)  32  \n0x414  4_TXFR_LEN  DMA Channel 4 CB Word 3 (Transfer Length)  32  \n0x418  4_STRIDE  DMA Channel 4 CB Word 4 (2D Stride)  32  \n0x41c  4_NEXTCONBK  DMA Channel 4 CB Word 5 (Next CB Address)  32  \n0x420  4_DEBUG  DMA Channel 0 Debug  32  \n0x500  5_CS  DMA Channel 5 Control and Status  32  \n0x504  5_CONBLK_AD  DMA Channel 5 Control Block Address  32  \n0x508  5_TI  DMA Channel 5 CB Word 0 (Transfer Information)  32  \n0x50c  5_SOURCE_AD  DMA Channel 5 CB Word 1 (Source Address)  32  \n0x510  5_DEST_AD  DMA Channel 5 CB Word 2 (Destination Address)  32  \n0x514  5_TXFR_LEN  DMA Channel 5 CB Word 3 (Transfer Length)  32  \n0x518  5_STRIDE  DMA Channel 5 CB Word 4 (2D Stride)  32  \n0x51c  5_NEXTCONBK  DMA Channel 5 CB Word 5 (Next CB Address)  32  \n0x520  5_DEBUG  DMA Channel 5 Debug  32  \n0x600  6_CS  DMA Channel 6 Control and Status  32  \n0x604  6_CONBLK_AD  DMA Channel 6 Control Block Address  32  \n0x608  6_TI  DMA Channel 6 CB Word 0 (Transfer Information)  32   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 44 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x60c  6_SOURCE_AD  DMA Channel 6 CB Word 1 (Source Address)  32  \n0x610  6_DEST_AD  DMA Channel 6 CB Word 2 (Destination Address)  32  \n0x614  6_TXFR_LEN  DMA Channel 6 CB Word 3 (Transfer Length)  32  \n0x618  6_STRIDE  DMA Channel 6 CB Word 4 (2D Stride)  32  \n0x61c  6_NEXTCONBK  DMA Channel 6 CB Word 5 (Next CB Address)  32  \n0x620  6_DEBUG  DMA Channel 6 Debug  32  \n0x700  7_CS  DMA Channel 7 Control and Status  32  \n0x704  7_CONBLK_AD  DMA Channel 7 Control Block Address  32  \n0x708  7_TI  DMA Channel 7 CB Word 0 (Transfer Information)  32  \n0x70c  7_SOURCE_AD  DMA Channel 7 CB Word 1 (Source Address)  32  \n0x710  7_DEST_AD  DMA Channel 7 CB Word 2 (Destination Address)  32  \n0x714  7_TXFR_LEN  DMA Channel 7 CB Word 3 (Transfer Length)  32  \n0x71c  7_NEXTCONBK  DMA Channel 7 CB Word 5 (Next CB Address)  32  \n0x720  7_DEBUG  DMA Channel 7 Debug  32  \n0x800  8_CS  DMA Channel 8 Control and Status  32  \n0x804  8_CONBLK_AD  DMA Channel 8 Control Block Address  32  \n0x808  8_TI  DMA Channel 8 CB Word 0 (Transfer Information)  32  \n0x80c  8_SOURCE_AD  DMA Channel 8 CB Word 1 (Source Address)  32  \n0x810  8_DEST_AD  DMA Channel 8 CB Word 2 (Destination Address)  32  \n0x814  8_TXFR_LEN  DMA Channel 8 CB Word 3 (Transfer Length)  32  \n0x81c  8_NEXTCONBK  DMA Channel 8 CB Word 5 (Next CB Address)  32   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 45 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x820  8_DEBUG  DMA Channel 8 Debug  32  \n0x900  9_CS  DMA Channel 9 Control and Status  32  \n0x904  9_CONBLK_AD  DMA Channel 9 Control Block Address  32  \n0x908  9_TI  DMA Channel 9 CB Word 0 (Transfer Information)  32  \n0x90c  9_SOURCE_AD  DMA Channel 9 CB Word 1 (Source Address)  32  \n0x910  9_DEST_AD  DMA Channel 9 CB Word 2 (Destination Address)  32  \n0x914  9_TXFR_LEN  DMA Channel 9 CB Word 3 (Transfer Length)  32  \n0x91c  9_NEXTCONBK  DMA Channel 9 CB Word 5 (Next CB Address)  32  \n0x920  9_DEBUG  DMA Channel 9 Debug  32  \n0xa00  10_CS  DMA Channel 10 Control and Status  32  \n0xa04  10_CONBLK_AD  DMA Channel 10 Control Block Address  32  \n0xa08  10_TI  DMA Channel 10 CB Word 0 (Transfer Information)  32  \n0xa0c  10_SOURCE_AD  DMA Channel  10 CB Word 1 (Source Address)  32  \n0xa10  10_DEST_AD  DMA Channel 10 CB Word 2 (Destination Address)  32  \n0xa14  10_TXFR_LEN  DMA Channel 10 CB Word 3 (Transfer Length)  32  \n0xa1c  10_NEXTCONBK  DMA Channel 10 CB Word 5 (Next CB Address)  32  \n0xa20  10_DEBUG  DMA Channel 10 Debug  32  \n0xb00  11_CS  DMA Channel 11 Control and Status  32  \n0xb04  11_CONBLK_AD  DMA Channel 11 Control Block Address  32  \n0xb08  11_TI  DMA Channel 11 CB Word 0 (Transfer Information)  32  \n0xb0c  11_SOURCE_AD  DMA  Channel 11 CB Word 1 (Source Address)  32   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 46 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0xb10  11_DEST_AD  DMA Channel 11 CB Word 2 (Destination Address)  32  \n0xb14  11_TXFR_LEN  DMA Channel 11 CB Word 3 (Transfer Length)  32  \n0xb1c  11_NEXTCONBK  DMA Channel 11 CB Word 5 (Next CB Address)  32  \n0xb20  11_DEBUG  DMA Channel 11 Debug  32  \n0xc00  12_CS  DMA Channel 12 Control and Status  32  \n0xc04  12_CONBLK_AD  DMA Channel 12 Control Block Address  32  \n0xc08  12_TI  DMA Channel 12 CB Word 0 (Transfer Information)  32  \n0xc0c  12_SOURCE_AD  DMA Channel 12 CB Word 1 (Source Address)  32  \n0xc10  12_DEST_AD  DMA Channel 12 CB Word 2 (Destination Address)  32  \n0xc14  12_TXFR_LEN  DMA Channel 12 CB Word 3 (Transfer Length)  32  \n0xc1c  12_NEXTCONBK  DMA Channel 12 CB Word 5 (Next CB Address)  32  \n0xc20  12_DEBUG  DMA Channel 12 Debug  32  \n0xd00  13_CS  DMA Channel 13 Control and Statu s 32  \n0xd04  13_CONBLK_AD  DMA Channel 13 Control Block Address  32  \n0xd08  13_TI  DMA Channel 13 CB Word 0 (Transfer Information)  32  \n0xd0c  13_SOURCE_AD  DMA Channel 13 CB Word 1 (Source Address)  32  \n0xd10  13_DEST_AD  DMA Channel 13 CB Word 2 (Destination Address)  32  \n0xd14  13_TXFR_LEN  DMA Channel 13 CB Word 3 (Transfer Length)  32  \n0xd1c  13_NEXTCONBK  DMA Channel 13 CB Word 5 (Next CB Address)  32  \n0xd20  13_DEBUG  DMA Channel 13 Debug  32  \n0xe00  14_CS  DMA Channel 14 Control and Status  32   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 47 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0xe04  14_CONBLK_AD  DMA Channel 14 Control Block Address  32  \n0xe08  14_TI  DMA Channel 14 CB Word 0 (Transfer Information)  32  \n0xe0c  14_SOURCE_AD  DMA Channel 14 CB Word 1 (Source Address)  32  \n0xe10  14_DEST_AD  DMA Channel 14 CB Word 2 (Destination Address)  32  \n0xe14  14_TXFR_LEN  DMA Channel 14 CB Word 3 (Transfer Length)  32  \n0xe1c  14_NEXTCONBK  DMA Channel 14 CB Word 5 (Next CB Address)  32  \n0xe20  14_DEBUG  DMA Channel 14 Debug  32  \n0xfe0  INT_STATUS  Interrupt status of each DMA channel  32  \n0xff0  ENABLE  Global enable bits for each DMA channel  32  \n \n \n0_CS 1_CS 2_CS 3_CS 4_CS 5_CS 6_CS 7_CS 8_CS 9_CS 1 0_CS 11_CS 12_CS 13_CS 14_CS Register  \nSynopsis  DMA Control And Status register contains the main c ontrol and status bits for this DMA channel.  \nBit(s)  Field Name  Description  Type  Reset  \n31  RESET  DMA Channel Reset  \nWriting a 1 to this bit will reset the DMA. \nThe bit cannot be read, and will self \nclear. W1SC  0x0  \n30  ABORT  Abort DMA  \nWriting a 1 to this bit will abort the \ncurrent DMA CB. The DMA will load the \nnext CB and attempt to continue. The bit \ncannot be read, and will self clear. W1SC  0x0  \n29  DISDEBUG  Disable debug pause signal  \nWhen set to 1, the DMA will not stop \nwhen the debug pause signal is asserted. RW  0x0   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 48 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n28  WAIT_FOR_OUTSTANDING_WRITES  Wait for outstanding writes  \nWhen set to 1, the DMA will keep a tally \nof the AXI writes going out and the write \nresponses coming in. At the very end of \nthe current DMA transfer it will wait \nuntil the last outstanding write response \nhas been received before indicating the \ntransfer is complete. Whilst waiting it \nwill load the next CB address (but will \nnot fetch the CB), clear the active flag (if \nthe next CB address = zero), and it will \ndefer setting the END flag or the INT flag \nuntil the last outstanding write response \nhas been received. \nIn this mode, the DMA will pause if it has \nmore than 13 outstanding writes at any \none time. RW  0x0  \n27: 24   Reserved  - Write as 0, read as don't care    \n23:20  PANIC_PRIORITY  AXI Panic Priority Level  \nSets the priority of panicking AXI bus \ntransactions. This value is used when the \npanic bit of the selected peripheral \nchannel is 1. \nZero is the lowest priority. RW  0x0  \n19:16  PRIORITY  AXI Priority Level  \nSets the priority of normal AXI bus \ntransactions. This value is used when the \npanic bit of the selected peripheral \nchannel is zero. \nZero is the lowest priority. RW  0x0  \n15:9   Reserved  - Write as 0, read as don't care    \n8 ERROR  DMA Error  \nIndicates if the DMA has detected an \nerror. The error flags are available in the \ndebug register, and have to be cleared \nby writing to that register. \n1 = DMA channel has an error flag set. \n0 = DMA channel is ok. RO  0x0  \n7  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 49 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6 WAITING_FOR_OUTSTANDING_WRITES  DMA is Waiting for the Last Write to be \nReceived  \nIndicates if the DMA is currently waiting \nfor any outstanding writes to be \nreceived, and is not transferring data. \n1 = DMA channel is waiting. RO  0x0  \n5 DREQ_STOPS_DMA  DMA Paused by DREQ State  \nIndicates if the DMA is currently paused \nand not transferring data due to the \nDREQ being inactive.. \n1 = DMA channel is paused. \n0 = DMA channel is running. RO  0x0  \n4 PAUSED  DMA Paused State  \nIndicates if the DMA is currently paused \nand not transferring data. This will occur \nif: the active bit has been cleared, if the \nDMA is currently executing wait cycles \nor if the debug_pause signal has been \nset by the debug block, or the number of \noutstanding writes has exceeded the \nmax count. \n1 = DMA channel is paused. \n0 = DMA channel is running. RO  0x0  \n3 DREQ  DREQ State  \nIndicates the state of the selected DREQ \n(Data Request) signal, ie. the DREQ \nselected by the PERMAP field of the \ntransfer info. \n1 = Requesting data. This will only be \nvalid once the DMA has started and the \nPERMAP field has been loaded from the \nCB. It will remain valid, indicating the \nselected DREQ signal, until a new CB is \nloaded. If PERMAP is set to zero (un-\npaced transfer) then this bit will read \nback as 1. \n0 = No data request. RO  0x0  \n2 INT  Interrupt Status  \nThis is set when the transfer for the CB \nends and INTEN is set to 1. Once set it \nmust be manually cleared down, even if \nthe next CB has INTEN = 0. \nWrite 1 to clear. W1C  0x0   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 50 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n1 END  DMA End Flag  \nSet when the transfer described by the \ncurrent control block is complete. Write \n1 to clear. W1C  0x0  \n0 ACTIVE  Activate the DMA  \nThis bit enables the DMA. The DMA will \nstart if this bit is set and the CB_ADDR is \nnon zero. The DMA transfer can be \npaused and resumed by clearing, then \nsetting it again. \nThis bit is automatically cleared at the \nend of the complete DMA transfer, ie. \nafter a NEXTCONBK = 0x0000_0000 has \nbeen loaded. RW  0x0  \n \n \n0_CONBLK_AD 1_CONBLK_AD 2_CONBLK_ AD 3_CONBLK_AD 4_CONBLK_AD 5_CONBLK_AD \n6_CONBLK_AD 7_CONBLK_AD 8_CONBLK_AD 9_CONBLK_AD 10_ CONBLK_AD 11_CONBLK_AD \n12_CONBLK_AD 13_CONBLK_AD 14_CONBLK_AD Register  \nSynopsis  DMA Control Block Address register.  \nBit(s)  Field Name  Description  Type  Reset  \n31:0  SCB_ADDR  Control Block Address  \nThis tells the DMA where to find a Control Block \nstored in memory. When the ACTIVE bit is set and th is \naddress is non zero, the DMA will begin its transfe r by \nloading the contents of the addressed CB into the \nrelevant DMA channel registers. \nAt the end of the transfer this register will be up dated \nwith the ADDR field of the NEXTCONBK control block \nregister. If this field is zero, the DMA will stop.  \nReading this register will return the address of th e \ncurrently active CB (in the linked list of CB s). T he \naddress must be 256 bit aligned, so the bottom 5 bi ts \nof the address must be zero. RW  0x0  \n \n \n0_TI 1_TI 2_TI 3_TI 4_TI 5_TI 6_TI Register  \nSynopsis  DMA Transfer Information.  \nBit(s)  Field Name  Description  Type  Reset   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 51 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n31:27   Reserved  - Write as 0, read as don't care    \n26  NO_WIDE_BURSTS  Don t Do wide writes as a 2 beat burst  \nThis prevents the DMA from issuing wide writes as 2  \nbeat AXI bursts. This is an inefficient access mode , so \nthe default is to use the bursts. RW  0x0  \n25:21  WAITS  Add Wait Cycles  \nThis slows down the DMA throughput by setting the \nnumber of dummy cycles burnt after each DMA read \nor write operation is completed. \nA value of 0 means that no wait cycles are to be \nadded. RW  0x0  \n20:16  PERMAP  Peripheral Mapping  \nIndicates the peripheral number (1-31) whose ready \nsignal shall be used to control the rate of the \ntransfers, and whose panic signals will be output o n \nthe DMA AXI bus. Set to 0 for a continuous un-paced  \ntransfer. RW  0x0  \n15:12  BURST_LENGTH  Burst Transfer Length  \nIndicates the burst length of the DMA transfers. Th e \nDMA will attempt to transfer data as bursts of this  \nnumber of words. A value of zero will produce a sin gle \ntransfer. Bursts are only produced for specific \nconditions, see main text. RW  0x0  \n11  SRC _IGNORE  Ignore Reads  \n1 = Do not perform source reads. In addition, \ndestination writes will zero all the write strobes.  This \nis used for fast cache fill operations. \n0 = Perform source reads.. RW  0x0  \n10  SRC_DREQ  Control Source Reads with DREQ  \n1 = The DREQ selected by PER_MAP will gate the \nsource reads. \n0 = DREQ has no effect. RW  0x0  \n9 SRC_WIDTH  Source Transfer Width  \n1 = Use 128-bit source read width. \n0 = Use 32-bit source read width. RW  0x0  \n8 SRC_INC  Source Address Increment  \n1 = Source address increments after each read. The \naddress will increment by 4, if S_WIDTH=0 else by 3 2. \n0 = Source address does not change. RW  0x0   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 52 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n7 DEST_IGNORE  Ignore Writes  \n1 = Do not perform destination writes. \n0 = Write data to destination. RW  0x0  \n6 DEST_DREQ  Control Destination  Writes with DREQ  \n1 = The DREQ selected by PERMAP will gate the \ndestination writes. \n0 = DREQ has no effect. RW  0x0  \n5 DEST_WIDTH  Destination Transfer Width  \n1 = Use 128-bit destination write width. \n0 = Use 32-bit destination write width. RW  0x0  \n4 DEST_INC  Destination Address Increment  \n1 = Destination address increments after each write  \nThe address will increment by 4, if DEST_WIDTH=0 \nelse by 32. \n0 = Destination address does not change. RW  0x0  \n3 WAIT_RESP  Wait for a Write Response  \nWhen set this makes the DMA wait until it receives \nthe AXI write response for each write. This ensures  \nthat multiple writes cannot get stacked in the AXI bus \npipeline. \n1= Wait for the write response to be received befor e \nproceeding. \n0 = Don t wait; continue as soon as the write data is \nsent. RW  0x0  \n2  Reserved  - Write as 0, read as don't care    \n1 TDMODE  2D Mode  \n1 = 2D mode interpret the TXFR_LEN register as \nYLENGTH number of transfers each of XLENGTH, and \nadd the strides to the address after each transfer.  \n0 = Linear mode interpret the TXFR register as a si ngle \ntransfer of total length {YLENGTH ,XLENGTH}. RW  0x0  \n0 INTEN  Interrupt Enable  \n1 = Generate an interrupt when the transfer describ ed \nby the current Control Block completes. \n0 = Do not generate an interrupt. RW  0x0  \n \n \n0_SOURCE_AD 1_SOURCE_AD 2_SOURCE_AD 3_SOURCE_AD 4_S OURCE_AD 5_SOURCE_AD \n6_SOURCE_AD 7_SOURCE_AD 8_SOURCE_AD 9_SOURCE_AD 10_ SOURCE_AD 11_SOURCE_AD \n12_SOURCE_AD 13_SOURCE_AD 14_SOURCE_AD Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 53 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  DMA Source Address  \nBit(s)  Field Name  Description  Type  Reset  \n31:0  S_ADDR  DMA Source Address  \nSource address for the DMA operation. Updated by \nthe DMA engine as the transfer progresses. RW  0x0  \n \n \n0_DEST_AD 1_DEST_AD 2_DEST_AD 3_DEST_AD 4_DEST_AD 5 _DEST_AD 6_DEST_AD \n7_DEST_AD 8_DEST_AD 9_DEST_AD 10_DEST_AD 11_DEST_AD  12_DEST_AD 13_DEST_AD \n14_DEST_AD Register  \nSynopsis  DMA Destination Address  \nBit(s)  Field Name  Description  Type  Reset  \n31:0  D_ADDR  DMA Destination Address  \nDestination address for the DMA operation. Updated \nby the DMA engine as the transfer progresses. RW  0x0  \n \n \n0_TXFR_LEN 1_TXFR_LEN 2_TXFR_LEN 3_TXFR_LEN 4_TXFR_ LEN 5_TXFR_LEN 6_TXFR_LEN \nRegister  \nSynopsis  DMA Transfer Length. This specifies the amount of d ata to be transferred in bytes.  \nIn normal (non 2D) mode this specifies the amount o f bytes to be transferred. \nIn 2D mode it is interpreted as an X and a Y length , and the DMA will perform Y transfers, each \nof length X bytes and add the strides onto the addr esses after each X leg of the transfer. \nThe length register is updated by the DMA engine as  the transfer progresses, so it will indicate \nthe data left to transfer. \nBit(s)  Field Name  Description  Type  Reset  \n31:30   Reserved  - Write as 0, read as don't care    \n29:16  YLENGTH  When in 2D mode, This is the Y transfer length, \nindicating how many xlength transfers are performed .  \nWhen in normal linear mode this becomes the top bit s \nof the XLENGTH RW  0x0  \n15:0  XLENGTH  Transfer Length in bytes.  RW  0x0  \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 54 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \n0_STRIDE 1_STRIDE 2_STRIDE 3_STRIDE 4_STRIDE 5_STRI DE 6_STRIDE Register  \nSynopsis  DMA 2D Stride  \nBit(s)  Field Name  Description  Type  Reset  \n31:16  D_STRIDE  Destination Stride (2D Mode)  \nSigned (2 s complement) byte increment to apply to \nthe destination address at the end of each row in 2 D \nmode. RW  0x0  \n15:0  S_STRIDE  Source Stride (2D Mode)  \nSigned (2 s complement) byte increment to apply to \nthe source address at the end of each row in 2D \nmode. RW  0x0  \n \n \n0_NEXTCONBK 1_NEXTCONBK 2_NEXTCONBK 3_NEXTCONBK 4_N EXTCONBK 5_NEXTCONBK \n6_NEXTCONBK 7_NEXTCONBK 8_NEXTCONBK 9_NEXTCONBK 10_ NEXTCONBK 11_NEXTCONBK \n12_NEXTCONBK 13_NEXTCONBK 14_NEXTCONBK Register  \nSynopsis  DMA Next Control Block Address  \nThe value loaded into this register can be overwrit ten so that the linked list of Control Block data \nstructures can be altered. However it is only safe to do this when the DMA is paused. The \naddress must be 256 bit aligned and so the bottom 5  bits cannot be set and will read back as \nzero. \nBit(s)  Field Name  Description  Type  Reset  \n31:0  ADDR  Address of next CB for chained DMA operations.  RW  0x0  \n \n \n0_DEBUG 1_DEBUG 2_DEBUG 3_DEBUG 4_DEBUG 5_DEBUG 6_D EBUG Register  \nSynopsis  DMA Debug register.  \nBit(s)  Field Name  Description  Type  Reset  \n31:29   Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 55 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n28  LITE  DMA Lite  \nSet if the DMA is a reduced performance LITE \nengine. RO  0x0  \n27:25  VERSION  DMA Version  \nDMA version number, indicating control bit filed \nchanges. RO  0x2  \n24:16  DMA_STATE  DMA State Machine State  \nReturns the value of the DMA engines state \nmachine for this channel. RO  0x0  \n15:8  DMA_ID  DMA ID  \nReturns the DMA AXI ID of this DMA channel. RO  0x0  \n7:4  OUTSTANDING_WRITES  DMA Outstanding Writes Counter  \nReturns the number of write responses that have \nnot yet been received. \nThis count is reset at the start of each new DMA \ntransfer or with a DMA reset. RO  0x0  \n3  Reserved  - Writ e as 0, read as don't care    \n2 READ_ERROR  Slave Read Response Error  \nSet if the read operation returned an error value o n \nthe read response bus. It can be cleared by writing  \na 1, RW  0x0  \n1 FIFO_ERROR  Fifo Error  \nSet if the optional read Fifo records an error \ncondition. It can be cleared by writing a 1, RW  0x0  \n0 READ_LAST_NOT_SET_ERROR  Read Last Not Set Error  \nIf the AXI read last signal was not set when \nexpected, then this error bit will be set. It can b e \ncleared by writing a 1. RW  0x0  \n \n \n7_TI 8_TI 9_TI 10_TI 11_TI 12_TI 13_TI 14_TI Regist er  \nSynopsis  DMA Transfer Information.  \nBit(s)  Field Name  Description  Type  Reset  \n31:26   Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 56 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n25:21  WAITS  Add Wait Cycles  \nThis slows down the DMA throughput by setting the \nnumber of dummy cycles burnt after each DMA read \nor write operation is completed. \nA value of 0 means that no wait cycles are to be \nadded. RW  0x0  \n20:16  PERMAP  Peripheral Mapping  \nIndicates the peripheral number (1-31) whose ready \nsignal shall be used to control the rate of the \ntransfers, and whose panic signals will be output o n \nthe DMA AXI bus. Set to 0 for a continuous un-paced  \ntransfer. RW  0x0  \n15:12  BURST_LENGTH  Burst Transfer Length  \nIndicates the burst length of the DMA transfers. Th e \nDMA will attempt to transfer data as bursts of this  \nnumber of words. A value of zero will produce a sin gle \ntransfer. Bursts are only produced for specific \nconditions, see main text. RW  0x0  \n11  SRC_IGNORE   RW  0x0  \n10  SRC_DREQ  Control Source Reads with DREQ  \n1 = The DREQ selected by PER_MAP will gate the \nsource reads. \n0 = DREQ has no effect. RW  0x0  \n9 SRC_WIDTH  Source Transfer Width  \n1 = Use 128-bit source read width. \n0 = Use 32-bit source read width. RW  0x0  \n8 SRC_INC  Source Address Increment  \n1 = Source address increments after each read. The \naddress will increment by 4, if S_WIDTH=0 else by 3 2. \n0 = Source address does not change. RW  0x0  \n7 DEST_IGNORE   RW  0x0  \n6 DEST_DREQ  Control Destination Writes with DREQ  \n1 = The DREQ selected by PERMAP will gate the \ndestination writes. \n0 = DREQ has no effect. RW  0x0  \n5 DEST_WIDTH  Destination Transfer Width  \n1 = Use 128-bit destination write width. \n0 = Use 32-bit destination write width. RW  0x0   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 57 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4 DEST_INC  Destination Address Increment  \n1 = Destination address increments after each write  \nThe address will increment by 4, if DEST_WIDTH=0 \nelse by 32. \n0 = Destination address does not change. RW  0x0  \n3 WAIT_RESP  Wait for a Write Response  \nWhen set this makes the DMA wait until it receives \nthe AXI write response for each write. This ensures  \nthat multiple writes cannot get stacked in the AXI bus \npipeline. \n1= Wait for the write response to be received befor e \nproceeding. \n0 = Don t wait; continue as soon as the write data is \nsent. RW  0x0  \n2:1   Reserved  - Write as 0, read as don't care    \n0 INTEN  Interrupt Enable  \n1 = Generate an interrupt when the transfer describ ed \nby the current Control Block completes. \n0 = Do not generate an interrupt. RW  0x0  \n \n \n7_TXFR_LEN 8_TXFR_LEN 9_TXFR_LEN 10_TXFR_LEN 11_TXF R_LEN 12_TXFR_LEN 13_TXFR_LEN \n14_TXFR_LEN Register  \nSynopsis  DMA Transfer Length  \nBit(s)  Field Name  Description  Type  Reset  \n31:16   Reserved  - Write as 0, read as don't care    \n15:0  XLENGTH  Transfer Length  \nLength of transfer, in bytes. Updated by the DMA \nengine as the transfer progresses. RW  0x0  \n \n \n7_DEBUG 8_DEBUG 9_DEBUG 10_DEBUG 11_DEBUG 12_DEBUG 13_DEBUG 14_DEBUG Register  \nSynopsis  DMA Lite Debug register.  \nBit(s)  Field Name  Description  Type  Reset   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 58 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n31:29   Reserved  - Write as 0, read as don't care    \n28  LITE  DMA Lite  \nSet if the DMA is a reduced performance LITE \nengine. RO  0x1  \n27:25  VERSION  DMA Version  \nDMA version number, indicating control bit filed \nchanges. RO  0x2  \n24:16  DMA_STATE  DMA State Machine State  \nReturns the value of the DMA engines state \nmachine for this channel. RO  0x0  \n15:8  DMA_ID  DMA ID  \nReturns the DMA AXI ID of this DMA channel. RO  0x0  \n7:4  OUTSTANDING_WRITES  DMA Outstanding Writes Counter  \nReturns the number of write responses that have \nnot yet been received. \nThis count is reset at the start of each new DMA \ntransfer or with a DMA reset. RO  0x0  \n3  Reserved  - Write as 0, read as don't care    \n2 READ_ERROR  Slave Read Response Error  \nSet if the read operation returned an error value o n \nthe read response bus. It can be cleared by writing  \na 1, RW  0x0  \n1 FIFO_ERROR  Fifo Error  \nSet if the optional read Fifo records an error \ncondition. It can be cleared by writing a 1, RW  0x0  \n0 READ_LAST_NOT_SET_ERROR  Read Last Not Set Error  \nIf the AXI read last signal was not set when \nexpected, then this error bit will be set. It can b e \ncleared by writing a 1. RW  0x0  \n \n \nINT_STATUS Register  \nSynopsis  Interrupt status of each DMA engine  \nBit(s)  Field Name  Description  Type  Reset   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 59 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n31:16   Reserved  - Write as 0, read as don't care    \n15  INT15  Interrupt status of DMA engine 15  RW  0x0  \n14  INT14  Interrupt status of  DMA engine 14  RW  0x0  \n13  INT13  Interrupt status of DMA engine 13  RW  0x0  \n12  INT12  Interrupt status of DMA engine 12  RW  0x0  \n11  INT11  Interrupt status of DMA engine 11  RW  0x0  \n10  INT10  Interrupt status of DMA engine 10  RW  0x0  \n9 INT9  Interrupt status of DMA engine 9  RW  0x0  \n8 INT8  Interrupt status of DMA engine 8  RW  0x0  \n7 INT7  Interrupt status of DMA engine 7  RW  0x0  \n6 INT6  Interrupt status of DMA engine 6  RW  0x0  \n5 INT5  Interrupt status of DMA engine 5  RW  0x0  \n4 INT4  Interrupt status of DMA engine 4  RW  0x0  \n3 INT3  Interrupt status of DMA engine 3  RW  0x0  \n2 INT2  Interrupt status of DMA engine 2  RW  0x0  \n1 INT1  Interrupt status of DMA engine 1  RW  0x0  \n0 INT0  Interrupt status of DMA engine 0  RW  0x0  \n \n \nENABLE Register  \nSynopsis  Global enable bits for each channel  \nBit(s)  Field Name  Description  Type  Reset  \n31:15   Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 60 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n14  EN14  enable dma engine 14  RW  0x1  \n13  EN13  enable dma engine 13  RW  0x1  \n12  EN12  enable dma engine 12  RW  0x1  \n11  EN11  enable dma engine 11  RW  0x1  \n10  EN10  enable dma engine 10  RW  0x1  \n9 EN9  enable dma engine 9  RW  0x1  \n8 EN8  enable dma engine 8  RW  0x1  \n7 EN7  enable dma engine 7  RW  0x1  \n6 EN6  enable dma engine 6  RW  0x1  \n5 EN5  enable dma engine 5  RW  0x1  \n4 EN4  enable dma engine 4  RW  0x1  \n3 EN3  enable dma engine 3  RW  0x1  \n2 EN2  enable dma engine 2  RW  0x1  \n1 EN1  enable dma engine 1  RW  0x1  \n0 EN0  enable dma engine 0  RW  0x1  \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 61 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4.2.1.3 Peripheral DREQ Signals \nA DREQ (Data Request) mechanism is used to pace the dat a flow between the DMA and a \nperipheral. \nEach peripheral is allocated a permanent DREQ signal. E ach DMA channel can select which \nof the DREQ signals should be used to pace the transfer  by controlling the DMA reads, DMA \nwrites or both. Note that DREQ 0 is permanently enabled and can be used if no DREQ is \nrequired. \nWhen a DREQ signal is being used to pace the DMA reads, t he DMA will wait until it has \nsampled DREQ high before launching a single or burst read ope ration. It will then wait for all \nthe read data to be returned before re-checking the DREQ an d starting the next read.  Thus \nonce a peripheral receives the read request it should re move its DREQ as soon as possible to \nprevent the DMA from re-sampling the same DREQ asserti on. \nDREQ\u2019s are not required when reading from AXI peripherals.   In this case, the DMA will \nrequest data from the peripheral and the peripheral will only send the data when it is \navailable.  The DMA will not request data that is does n ot have room for, so no pacing of the \ndata flow is required. \nDREQ\u2019s are required when reading from APB peripherals as the AXI-to-APB bridge will not \nwait for an APB peripheral to be ready and will just pe rfom the APB read regardless.  Thus \nan APB peripheral needs to make sure that it has all of  its read data ready before it drives its \nDREQ high. \nWhen writing to peripherals, a DREQ is always required t o pace the data.  However, due to \nthe pipelined nature of the AXI bus system, several wri tes may be in flight before the \nperipheral receives any data and withdraws its DREQ signa l.  Thus the peripheral must \nensure that it has sufficient room in its input FIFO to a ccommodate the maximum amount of \ndata that it might receive.  If the peripheral is una ble to do this, the DMA WAIT_RESP \nmechanism can be used to ensure that only one write is in flight at any one time, however this \nis less efficient transfer mechanism. \nThe mapping of peripherals to DREQ\u2019s is as follows: \nDREQ  Peripheral  \n0 DREQ = 1  \nThis is always on so use this \nchannel if no DREQ is required. \n1 DSI  \n2 PCM TX  \n3 PCM RX  \n4 SMI  \n5 PWM  \n6 SPI TX  \n7 SPI RX   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 62 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 BSC/SPI Slave TX  \n9 BSC/SPI Slave RX  \n10  unused  \n11  e.MMC  \n12  UART TX  \n13  SD HOST  \n14  UART RX.  \n15  DSI  \n16  SLIMBUS MCTX.  \n17  HDMI  \n18  SLIMBUS MCRX  \n19  SLIMBUS DC0  \n20  SLIMBUS DC1  \n21  SLIMBUS DC2  \n22  SLIMBUS DC3  \n23  SLIMBUS DC4  \n24  Scaler FIFO 0 & SMI  *  \n25  Scaler FIFO 1 & SMI  *  \n26  Scaler FIFO 2 & SMI  *  \n27  SLIMBUS DC5  \n28  SLIMBUS DC6  \n29  SLIMBUS DC7  \n30  SLIMBUS DC8  \n31  SLIMBUS DC9  \n \n* The SMI element of the Scaler FIFO 0 & SMI  DREQs c an be disabled by setting the \nSMI_DISABLE bit in the DMA_DREQ_CONTROL register in the sy stem arbiter control \nblock.    \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 63 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4.3 AXI Bursts \nThe DMA supports bursts under specific conditions.  Up to 16 beat bursts can be \naccommodated. \nPeripheral (32 bit wide) read bursts are supported.  The DM A will generate the burst if there \nis sufficient room in its read buffer to accommodate al l the data from the burst. This limits the \nburst size to a maximum of 8 beats. \nRead bursts in destination ignore mode (DEST_IGNORE) are s upported as there is no need \nfor the DMA to deal with the data.  This allows wide bur sts of up to 16 beats to be used for \nefficient L2 cache fills. \nDMA channel 0 and 15 are fitted with an external 128 bit 8 word r ead FIFO. This enables \nefficient memory to memory transfers to be performed.  This FIFO allows the DMA to \naccommodate a wide read burst up to the size of the FIFO . In practice this will allow a 128 \nbit wide read burst of 9 as the first word back will be imm ediately read into the DMA engine \n(or a 32 bit peripheral read burst of 16 \u2013 8 in the input buffer a nd 8 in the fifo). On any DMA \nchannel, if a read burst is selected that is too large, th e AXI read bus will be stalled until the \nDMA has written out the data.  This may lead to ineffic ient system operation, and possibly \nAXI lock up if it causes a circular dependancy. \nIn general write bursts are not supported.  However to i ncrease the efficiency of L2 cache \nfills, src_ignore (SRC_IGNORE) transfers can be speci fied with a write burst.  In this case \nthe DMA will issue a write burst address sequence followed  by the appropriate number of \nzero data, zero strobe write bus cycles, which will ca use the cache to pre-fetch the data. To \nimprove the efficiency of the 128 bit wide bus architecture,  and to make use of the DMAs \ninternal 256 bit registers, the DMA will generate 128 bit wi de writes as 2 beat bursts \nwherever possible, although this behaviour can be disabled. \n4.4 Error Handling \nIf the DMA detects a Read Response error it will record the fact in the READ_ERROR flag \nin the debug register.  This will remain set until it is c leared by writing a 1 to it.  The DMA \nwill clear its active flag and generate an interrupt.  A ny outstanding read data transactions \n(remainder of a burst) will be honoured.  This allows the operator to either restart the DMA \nby clearing the error bit and setting the active bit, or to abort the DMA transfer by clearing \nthe NEXTCONBK register and restarting the DMA with th e ABORT bit set. \nThe DMA will also record any errors from an external r ead FIFO.  These will be latched in \nthe FIFO_ERROR bit in the debug register until they are cl eared by writing a \u20181\u2019 to the bit. \n(note that only DMA0 and 15 have an external read fifo) \nIf the DMA detects that a read occurred without the AXI rlast set as expected then it will set \nthe READ_LAST_NOT_SET_ERROR bit in the debug register.  Thi s can be cleared by \nwriting a \u20181\u2019 to it. \nThe error bits are logically OR\u2019d together and presented as a general ERROR bit in the CS \nregister. \n4.5 DMA LITE Engines \nSeveral of the DMA engines are of the LITE design. Thi s is a reduced specification engine \ndesigned to save space.  The engine behaves in the same  way as a normal DMA engine \nexcept for the following differences.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 64 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n1.  The internal data structure is 128 bits instead of 256 bits. This  means that if you do \na 128 bit wide read burst of more than 1 beat, the DMA input r egister will be full \nand the read bus will be stalled. The normal DMA engine can accept a read burst of \n2 without stalling.   If you do a narrow 32 bit read burst fro m the peripherals then \nthe lite engine can cope with a burst of 4 as opposed to a  burst of 8 for the normal \nengine.   Note that stalling the read bus will potential ly reduce the overall system \nperformance, and may possible cause a system lockup if y ou end up with a conflict \nwhere the DMA cannot free the read bus as the read stal l has prevented it writing \nout its data due to some circular system relationship. \n2.  The Lite engine does not support 2D transfers.  The TDMODE , S_STRIDE, \nD_STRIDE and YLENGTH registers will all be removed.  Se tting these registers \nwill have no effect. \n3.  The DMA length register is now 16 bits, limiting the maxim um transferrable length \nto 65536 bytes. \n4.  Source ignore (SRC_IGNORE) and destination ignore (DEST_ IGNORE) modes \nare removed. \nThe Lite engine will have about half the bandwidth of a normal DMA engine, and are \nintended for low bandwith peripheral servicing. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 65 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n5 External Mass Media Controller \n \no Introduction \nThe External Mass Media Controller (EMMC) is an embe dded MultiMedia \u2122 and SD \u2122 card \ninterface provided by Arasan \u2122. It is compliant to the following standards: \n\u2022 SD \u2122 Host Controller Standard Specification Version 3.0  Draft 1.0 \n\u2022 SDIO \u2122 card specification version 3.0 \n\u2022 SD \u2122 Memory Card Specification Draft version 3.0 \n\u2022 SD \u2122 Memory Card Security Specification version 1.01 \n\u2022 MMC \u2122 Specification version 3.31,4.2 and 4.4 \n \nFor convenience in the following text card is used as a p laceholder for SD\u2122, embedded \nMultiMedia and SDIO\u2122 cards. \n \nFor detailed information about the EMMC internals pleas e refer to the Arasan\u2122 document \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.pdf but make sure to read the \nfollowing chapter which lists the changes made to Arasan \u2122\u2019s IP. \n \nBecause the EMMC module shares pins with other function ality it must be selected in the \nGPIO interface. Please refer to the GPIO section for  further details.  \n \nThe interface to the card uses its own clock clk_emmc whic h is provided by the clock \nmanager module. The frequency of this clock should be sele cted between 50 MHz and 100 \nMHz. Having a separate clock allows high performance access  to the card even if the \nVideoCore runs at a reduced clock frequency. The EMMC module c ontains its own internal \nclock divider to generate the card\u2019s clock from clk_emmc. \nAdditionally can the sampling clock for the response and data from the card be delayed in up \nto 40 steps with a configurable delay between 200ps to 1100ps per ste p typically. The delay \nis intended to cancel the internal delay inside the card (up to 14ns) when reading. The delay \nper step will vary with temperature and supply voltage. The refore it is better to use a bigger \ndelay than necessary as there is no restriction for t he maximum delay. \n \nThe EMMC module handles the handshaking process on the co mmand and data lines and all \nCRC processing automatically.  \nCommand execution is commenced by writing the command plus t he appropriate flags to the \nCMDTM register after loading any required argument into t he ARG1 register. The EMMC \nmodule calculates the CRC checksum, transfers the comm and to the card, receives the \nresponse and checks its CRC. Once the command has exec uted or timed-out bit 0 of register \nINTERRUPT will be set. Please note that the INTERRU PT register is not self clearing, so the \nsoftware has first to reset it by writing 1 before using it to detect if a command has finished.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 66 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nThe software is responsible for checking the status bits  of the card\u2019s response in order to \nverify successful processing by the card. \nIn order to transfer data from/to the card register DA TA is accessed after configuring the host \nand sending the according commands to the card using CMDTM. Because the EMMC \nmodule doesn\u2019t interpret the commands sent to the card it  is important to configure it \nidentical to the card setup using the CONTROL0 register. E special care should be taken to \nmake sure that the width of the data bus is configured iden tical for host and card. The card is \nsynchronized to the data flow by switching off its clock appro priately. A handshake signal \ndma_req is available for paced data transfers.  Bit 1 of t he INTERRUPT register can used to \ndetermine whether a data transfer has finished. Please not e that the INTERRUPT register is \nnot self clearing, so the software has first to reset  it by writing 1 before using it to detect if a \ndata transfer has finished. \nThe EMMC module restricts the maximum block size to the  size of the internal data FIFO \nwhich is 1k bytes. In order to get maximum performance for data transfers it is necessary to \nuse multiple block data transfers. In this case the EMM C module uses two FIFOs in ping-\npong mode, i.e. one is used to transfer data to/from the card while the other is simultaneously \naccessed by DMA via the AXI bus. If the EMMC module is c onfigured for single block \ntransfers only one FIFO is used, so no DMA access is po ssible while data is transferred \nto/from the card and vice versa resulting in long dead time s. \n \no Registers \nContrary to Arasan\u2122\u2019s documentation the EMMC module r egisters can only be accessed as \n32 bit registers, i.e. the two LSBs of the address are al ways zero. \nThe EMMC register base address is 0x7E300000 \n \nEMMC Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 ARG2  ACMD23 Argument 32 \n0x4 BLKSIZECNT  Block Size and Count 32 \n0x8 ARG1  Argument 32 \n0xc CMDTM  Command and Transfer Mode 32 \n0x10 RESP0  Response bits 31 : 0 32 \n0x14 RESP1  Response bits 63 : 32 32  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 67 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x18 RESP2  Response bits 95 : 64 32 \n0x1c RESP3  Response bits 127 : 96 32 \n0x20 DATA  Data 32 \n0x24 STATUS  Status 32 \n0x28 CONTROL0  Host Configuration bits 32 \n0x2c CONTROL1  Host Configuration bits 32 \n0x30 INTERRUPT  Interrupt Flags 32 \n0x34 IRPT_MASK  Interrupt Flag Enable 32 \n0x38 IRPT_EN  Interrupt Generation Enable 32 \n0x3c CONTROL2  Host Configuration bits 32 \n0x50 FORCE_IRPT  Force Interrupt Event 32 \n0x70 BOOT_TIMEOUT  Timeout in boot mode 32 \n0x74 DBG_SEL  Debug Bus Configuration 32 \n0x80 EXRDFIFO_CFG  Extension FIFO Configuration 32 \n0x84 EXRDFIFO_EN  Extension FIFO Enable 32 \n0x88 TUNE_STEP  Delay per card clock tuning step 32 \n0x8c TUNE_STEPS_STD  Card clock tuning steps for SDR 32 \n0x90 TUNE_STEPS_DDR  Card clock tuning steps for DDR 32 \n0xf0 SPI_INT_SPT  SPI Interrupt Support 32 \n0xfc SLOTISR_VER  Slot Interrupt Status and Version 32 \n \n \nARG2 Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 68 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  This register contains the argument for the SD card s pecific command ACMD23 \n(SET_WR_BLK_ERASE_COUNT). ARG2 must be set before t he ACMD23 command \nis issued using the CMDTM register. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 ARGUMENT Argument to be issued with ACMD23  RW 0x0 \n \n \nBLKSIZECNT Register  \nSynopsis  This register must not be accessed or modified while any data transfer between card \nand host is ongoing. \nIt contains the number and size in bytes for data blo cks to be transferred. Please note \nthat the EMMC module restricts the maximum block size to the size of the internal data \nFIFO which is 1k bytes. \nBLKCNT is used to tell the host how many blocks of dat a are to be transferred. Once \nthe data transfer has started and the TM_BLKCNT_EN bit in the CMDTM register is \nset the EMMC module automatically decreases the BNTCN T value as the data blocks \nare transferred and stops the transfer once BLKCNT r eaches 0. \nBit(s)  Field Name  Description  Type  Reset  \n31:16 BLKCNT Number of blocks to be transferred  RW 0x0 \n15:10  Reserved  - Write as 0, read as don't care    \n9:0 BLKSIZE Block size in bytes  RW 0x0 \n \n \nARG1 Register  \nSynopsis  This register contains the arguments for all commands  except for the SD card specific \ncommand ACMD23 which uses ARG2. ARG1 must be set befo re the command is \nissued using the CMDTM register. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 ARGUMENT Argument to be issued with command  RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 69 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nCMDTM Register  \nSynopsis  This register is used to issue commands to the card. Besides the command it also \ncontains flags informing the EMMC module what card re sponse and type of data \ntransfer to expect. Incorrect flags will result in st range behaviour. \nFor data transfers two modes are supported: either transferring a single block of data \nor several blocks of the same size. The SD card uses tw o different sets of commands \nto differentiate between them but the host needs to  be additionally configured using \nTM_MULTI_BLOCK. It is important that this bit is se t correct for the command sent to \nthe card, i.e. 1 for CMD18 and CMD25 and 0 for CMD17  and CMD24. Multiple block \ntransfer gives a better performance. \nThe BLKSIZECNT register is used to configure the size  and number of blocks to be \ntransferred. If bit TM_BLKCNT_EN of this register i s set the transfer stops \nautomatically after the number of data blocks configured  in the BLKSIZECNT register \nhas been transferred. \nThe TM_AUTO_CMD_EN bits can be used to make the host to send automatically a \ncommand to the card telling it that the data transfer  has finished once the BLKCNT bits \nin the BLKSIZECNT register are 0. \nBit(s)  Field Name  Description  Type  Reset  \n31:30  Reserved  - Write as 0, read as don't care    \n29:24 CMD_INDEX Index of the command to be issued to the card  RW 0x0 \n23:22 CMD_TYPE Type of command to be issued to the card:  \n00 = normal \n01 = suspend (the current data transfer) \n10 = resume (the last data transfer) \n11 = abort (the current data transfer) RW 0x0 \n21 CMD_ISDATA Command involves data transfer:  \n0 = no data transfer command \n1 = data transfer command RW 0x0 \n20 CMD_IXCHK_EN Check that response has same index as \ncommand:  \n0 = disabled \n1 = enabled RW 0x0 \n19 CMD_CRCCHK_EN Check the responses CRC:  \n0 = disabled \n1 = enabled RW 0x0 \n18  Reserved  - Write as 0, read as don't care    \n17:16 CMD_RSPNS_TYPE Type of expected response from card:  \n00 = no response \n01 = 136 bits response \n10 = 48 bits response \n11 = 48 bits response using busy RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 70 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n15:6  Reserved  - Write as 0, read as don't care    \n5 TM_MULTI_BLOCK Type of data transfer  \n0 = single block \n1 = multiple block RW 0x0 \n4 TM_DAT_DIR Direction of data transfer:  \n0 = from host to card \n1 = from card to host RW 0x0 \n3:2 TM_AUTO_CMD_EN Select the command to be send after completion \nof a data transfer:  \n00 = no command \n01 = command CMD12 \n10 = command CMD23 \n11 = reserved RW 0x0 \n1 TM_BLKCNT_EN Enable the block counter for multiple block \ntransfers:  \n0 = disabled \n1 = enabled RW 0x0 \n0  Reserved  - Write as 0, read as don't care    \n \n \nRESP0 Register  \nSynopsis  This register contains the status bits of the SD card  s response. In case of commands \nCMD2 and CMD10 it contains CID[31:0] and in case of co mmand CMD9 it contains \nCSD[31:0]. \nNote: this register is only valid once the last comman d has completed and no new \ncommand was issued. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 RESPONSE Bits 31:0 of the card s response  RW 0x0 \n \n \nRESP1 Register  \nSynopsis  In case of commands CMD2 and CMD10 this register cont ains CID[63:32] and in case \nof command CMD9 it contains CSD[63:32]. \nNote: this register is only valid once the last comman d has completed and no new \ncommand was issued.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 71 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:0 RESPONSE Bits 63:32 of the card s response  RW 0x0 \n \n \nRESP2 Register  \nSynopsis  In case of commands CMD2 and CMD10 this register cont ains CID[95:64] and in case \nof command CMD9 it contains CSD[95:64]. \nNote: this register is only valid once the last comman d has completed and no new \ncommand was issued. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 RESPONSE Bits 95:64 of the card s response  RW 0x0 \n \n \nRESP3 Register  \nSynopsis  In case of commands CMD2 and CMD10 this register cont ains CID[127:96] and in \ncase of command CMD9 it contains CSD[127:96]. \nNote: this register is only valid once the last comman d has completed and no new \ncommand was issued. \nBit(s)  Field Name  Des cription  Type  Reset  \n31:0 RESPONSE Bits 127:96 of the card s response  RW 0x0 \n \n \nDATA Register  \nSynopsis  This register is used to transfer data to/from the card. \nBit 1 of the INTERRUPT register can be used to check i f data is available. For paced \nDMA transfers the high active signal dma_req can be used. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 DATA Data to/from the card  RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 72 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSTATUS Register  \nSynopsis  This register contains information intended for debu gging. Its values change \nautomatically according to the hardware. As it involves  resynchronisation between \ndifferent clock domains it changes only after some late ncy and it is easy sample the \nvalues too early. \nTherefore it is not recommended to use this register  for polling. Instead use the \nINTERRUPT register which implements a handshake mechan ism which makes it \nimpossible to miss a change when polling. \nBit(s)  Field Name  Description  Type  Reset  \n31:29  Reserved  - Write as 0, read as don't care    \n28:25 DAT_LEVEL1 Value of data lines DAT7 to DAT4  RW 0xf \n24 CMD_LEVEL Value of command line CMD  RW 0x1 \n23:20 DAT_LEVEL0 Value of data lines DAT3 to DAT0  RW 0xf \n19:10  Reserved  - Write as 0, read as don't care    \n9 READ_TRANSFER New data can be read from EMMC:  \n0 = no \n1 = yes RW 0x0 \n8 WRITE_TRANSFER New data can be written to EMMC:  \n0 = no \n1 = yes RW 0x0 \n7:3  Reserved  - Write as 0, read as don't care    \n2 DAT_ACTIVE At least one data line is active:  \n0 = no \n1 = yes RW 0x0 \n1 DAT_INHIBIT Data lines still used by previous data transfer:  \n0 = no \n1 = yes RW 0x0 \n0 CMD_INHIBIT Command line still used by previous command:  \n0 = no \n1 = yes RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 73 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nCONTROL0 Register  \nSynopsis  This register is used to configure the EMMC module. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit(s)  Field Name  Description  Type  Reset  \n31:23  Reserved  - Write as 0, read as don't care    \n22 ALT_BOOT_EN Enable alternate boot mode access:  \n0 = disabled \n1 = enabled RW 0x0 \n21 BOOT_EN Boot mode access:  \n0 = stop boot mode access \n1 = start boot mode access RW 0x0 \n20 SPI_MODE SPI mode enable:  \n0 = normal mode \n1 = SPI mode RW 0x0 \n19 GAP_IEN Enable SDIO interrupt at block gap (only valid if \nthe HCTL_DWIDTH bit is set):  \n0 = disabled \n1 = enabled RW 0x0 \n18 READWAIT_EN Use DAT2 read-wait protocol for SDIO cards \nsupporting this:  \n0 = disabled \n1 = enabled RW 0x0 \n17 GAP_RESTART Restart a transaction which was stopped using \nthe GAP_STOP bit:  \n0 = ignore \n1 = restart RW 0x0 \n16 GAP_STOP Stop the current transaction at the next block \ngap:  \n0 = ignore \n1 = stop RW 0x0 \n15:6  Reserved  - Write as 0, read as don't care    \n5 HCTL_8BIT Use 8 data lines:  \n0 = disabled \n1 = enabled RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 74 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4:3  Reserved  - Write as 0, read as don't care    \n2 HCTL_HS_EN Select high speed mode (i.e. DAT and CMD \nlines change on the rising CLK edge):  \n0 = disabled \n1 = enabled RW 0x0 \n1 HCTL_DWIDTH Use 4 data lines:  \n0 = disabled \n1 = enabled RW 0x0 \n0  Reserved  - Write as 0, read as don't care    \n \n \nCONTROL1 Register  \nSynopsis  This register is used to configure the EMMC module. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nCLK_STABLE seems contrary to its name only to indicat e that there was a rising edge \non the clk_emmc input but not that the frequency of th is clock is actually stable. \nBit(s)  Field Name  Description  Type  Reset  \n31:27  Reserved  - Write as 0, read as don't care    \n26 SRST_DATA Reset the data handling circuit:  \n0 = disabled \n1 = enabled RW 0x0 \n25 SRST_CMD Reset the command handling circuit:  \n0 = disabled \n1 = enabled RW 0x0 \n24 SRST_HC Reset the complete host circuit:  \n0 = disabled \n1 = enabled RW 0x0 \n23:20  Reserved  - Write as 0, read as don't care    \n19:16 DATA_TOUNIT Data timeout unit exponent:  \n1111 = disabled \nx = TMCLK * 2^(x+13) RW 0x0 \n15:8 CLK_FREQ8 SD clock base divider LSBs  RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 75 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n7:6 CLK_FREQ_MS2 SD clock base divider MSBs  RW 0x0 \n5 CLK_GENSEL Mode of clock generation:  \n0 = divided \n1 = programmable RW 0x0 \n4:3  Reserved  - Write as 0, read as don't care    \n2 CLK_EN SD clock enable:  \n0 = disabled \n1 = enabled RW 0x0 \n1 CLK_STABLE SD clock stable:  \n0 = no \n1 = yes RO 0x0 \n0 CLK_INTLEN Clock enable for internal EMMC clocks for power \nsaving:  \n0 = disabled \n1 = enabled RW 0x0 \n \n \nINTERRUPT Register  \nSynopsis  This register holds the interrupt flags. Each flag ca n be disabled using the according bit \nin the IRPT_MASK register. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nERR is a generic flag and is set if any of the enabl ed error flags is set. \nBit(s)  Field Name  Description  Type  Reset  \n31:25  Reserved  - Write as 0, read as don't care    \n24 ACMD_ERR Auto command error:  \n0 = no error \n1 = error RW 0x0 \n23  Reserved  - Write as 0, read as don't care    \n22 DEND_ERR End bit on data line not 1:  \n0 = no error \n1 = error RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 76 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n21 DCRC_ERR Data CRC error:  \n0 = no error \n1 = error RW 0x0 \n20 DTO_ERR Timeout on data line:  \n0 = no error \n1 = error RW 0x0 \n19 CBAD_ERR Incorrect command index in response:  \n0 = no error \n1 = error RW 0x0 \n18 CEND_ERR End bit on command line not 1:  \n0 = no error \n1 = error RW 0x0 \n17 CCRC_ERR Command CRC error:  \n0 = no error \n1 = error RW 0x0 \n16 CTO_ERR Timeout on command line:  \n0 = no error \n1 = error RW 0x0 \n15 ERR An error has occured:  \n0 = no error \n1 = error RO 0x0 \n14 ENDBOOT Boot operation has terminated:  \n0 = no \n1 = yes RW 0x0 \n13 BOOTACK Boot acknowledge has been received:  \n0 = no \n1 = yes RW 0x0 \n12 RETUNE Clock retune request was made:  \n0 = no \n1 = yes RO 0x0 \n11:9  Reserved  - Write as 0, read as don't care    \n8 CARD Card made interrupt request:  \n0 = no \n1 = yes RO 0x0 \n7:6  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 77 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n5 READ_RDY DATA register contains data to be read:  \n0 = no \n1 = yes RW 0x0 \n4 WRITE_RDY Data can be written to DATA register:  \n0 = no \n1 = yes RW 0x0 \n3  Reserved  - Write as 0, read as don't care    \n2 BLOCK_GAP Data transfer has stopped at block gap:  \n0 = no \n1 = yes RW 0x0 \n1 DATA_DONE Data transfer has finished:  \n0 = no \n1 = yes RW 0x0 \n0 CMD_DONE Command has finished:  \n0 = no \n1 = yes RW 0x0 \n \n \nIRPT_MASK Register  \nSynopsis  This register is used to mask the interrupt flags in  the INTERRUPT register. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit(s)  Field Name  Description  Type  Reset  \n31:25  Reserved  - Write as 0, read as don't care    \n24 ACMD_ERR Set flag if auto command error:  \n0 = no \n1 = yes RW 0x0 \n23  Reserved  - Write as 0, read as don't care    \n22 DEND_ERR Set flag if end bit on data line not 1:  \n0 = no \n1 = yes RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 78 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n21 DCRC_ERR Set flag if data CRC error:  \n0 = no \n1 = yes RW 0x0 \n20 DTO_ERR Set flag if timeout on data line:  \n0 = no \n1 = yes RW 0x0 \n19 CBAD_ERR Set flag if incorrect command index in response:  \n0 = no \n1 = yes RW 0x0 \n18 CEND_ERR Set flag if end bit on command line not 1:  \n0 = no \n1 = yes RW 0x0 \n17 CCRC_ERR Set flag if command CRC error:  \n0 = no \n1 = yes RW 0x0 \n16 CTO_ERR Set flag if timeout on command line:  \n0 = no \n1 = yes RW 0x0 \n15  Reserved  - Write as 0, read as don't care    \n14 ENDBOOT Set flag if boot operation has terminated:  \n0 = no \n1 = yes RW 0x0 \n13 BOOTACK Set flag if boot acknowledge has been received:  \n0 = no \n1 = yes RW 0x0 \n12 RETUNE Set flag if clock retune request was made:  \n0 = no \n1 = yes RW 0x0 \n11:9  Reserved  - Write as 0, read as don't care    \n8 CARD Set flag if card made interrupt request:  \n0 = no \n1 = yes RW 0x0 \n7:6  Reserved  - Write as 0, read as don't care    \n5 READ_RDY Set flag if DATA register contains data to be \nread:  \n0 = no \n1 = yes RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 79 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4 WRITE_RDY Set flag if data can be written to DATA register:  \n0 = no \n1 = yes RW 0x0 \n3  Reserved  - Write as 0, read as don't care    \n2 BLOCK_GAP Set flag if data transfer has stopped at block \ngap:  \n0 = no \n1 = yes RW 0x0 \n1 DATA_DONE Set flag if data transfer has finished:  \n0 = no \n1 = yes RW 0x0 \n0 CMD_DONE Set flag if command has finished:  \n0 = no \n1 = yes RW 0x0 \n \n \nIRPT_EN Register  \nSynopsis  This register is used to enable the different inter rupts in the INTERRUPT register to \ngenerate an interrupt on the int_to_arm output. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit(s)  Field Name  Description  Type  Reset  \n31:25  Reserved  - Write as 0, read as don't care    \n24 ACMD_ERR Create interrupt if auto command error:  \n0 = no \n1 = yes RW 0x0 \n23  Reserved  - Write as 0, read as don't care    \n22 DEND_ERR Create interrupt if end bit on data line not 1:  \n0 = no \n1 = yes RW 0x0 \n21 DCRC_ERR Create interrupt if data CRC error:  \n0 = no \n1 = yes RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 80 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n20 DTO_ERR Create interrupt if timeout on data line:  \n0 = no \n1 = yes RW 0x0 \n19 CBAD_ERR Create interrupt if incorrect command index in \nresponse:  \n0 = no \n1 = yes RW 0x0 \n18 CEND_ERR Create interrupt if end bit on command line not 1:  \n0 = no \n1 = yes RW 0x0 \n17 CCRC_ERR Create interrupt if command CRC error:  \n0 = no \n1 = yes RW 0x0 \n16 CTO_ERR Create interrupt if timeout on command line:  \n0 = no \n1 = yes RW 0x0 \n15  Reserved  - Write as 0, read as don't care    \n14 ENDBOOT Create interrupt if boot operation has terminated:  \n0 = no \n1 = yes RW 0x0 \n13 BOOTACK Create interrupt if boot acknowledge has been \nreceived:  \n0 = no \n1 = yes RW 0x0 \n12 RETUNE Create interrupt if clock retune request was \nmade:  \n0 = no \n1 = yes RW 0x0 \n11:9  Reserved  - Write as 0, read as don't care    \n8 CARD Create interrupt if card made interrupt request:  \n0 = no \n1 = yes RW 0x0 \n7:6  Reserved  - Write as 0, read as don't care    \n5 READ_RDY Create interrupt if DATA register contains data to \nbe read:  \n0 = no \n1 = yes RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 81 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n4 WRITE_RDY Create interrupt if data can be written to DATA \nregister:  \n0 = no \n1 = yes RW 0x0 \n3  Reserved  - Write as 0, read as don't care    \n2 BLOCK_GAP Create interrupt if data transfer has stopped at \nblock gap:  \n0 = no \n1 = yes RW 0x0 \n1 DATA_DONE Create interrupt if data transfer has finished:  \n0 = no \n1 = yes RW 0x0 \n0 CMD_DONE Create interrupt if command has finished:  \n0 = no \n1 = yes RW 0x0 \n \n \nCONTROL2 Register  \nSynopsis  This register is used to enable the different inter rupts in the INTERRUPT register to \ngenerate an interrupt on the int_to_arm output. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit (s)  Field Name  Description  Type  Reset  \n31:24  Reserved  - Write as 0, read as don't care    \n23 TUNED Tuned clock is used for sampling data:  \n0 = no \n1 = yes RW 0x0 \n22 TUNEON Start tuning the SD clock:  \n0 = not tuned or tuning complete \n1 = tuning RW 0x0 \n21:19  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 82 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n18:16 UHSMODE Select the speed mode of the SD card:  \n000 = SDR12 \n001 = SDR25 \n010 = SDR50 \n011 = SDR104 \n100 = DDR50 \nother = reserved RW 0x0 \n15:8  Reserved  - Write as 0, read as don't care    \n7 NOTC12_ERR Error occurred during auto command CMD12 \nexecution:  \n0 = no error \n1 = error RO 0x0 \n6:5  Reserved  - Write as 0, read as don't care    \n4 ACBAD_ERR Command index error occurred during auto \ncommand execution:  \n0 = no error \n1 = error RO 0x0 \n3 ACEND_ERR End bit is not 1 during auto command execution:  \n0 = no error \n1 = error RO 0x0 \n2 ACCRC_ERR Command CRC error occurred during auto \ncommand execution:  \n0 = no error \n1 = error RO 0x0 \n1 ACTO_ERR Timeout occurred during auto command \nexecution:  \n0 = no error \n1 = error RO 0x0 \n0 ACNOX_ERR Auto command not executed due to an error:  \n0 = no \n1 = yes RO 0x0 \n \n \nFORCE_IRPT Register  \nSynopsis  This register is used to fake the different interrup t events for debugging. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 83 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Descri ption  Type  Reset  \n31:25  Reserved  - Write as 0, read as don't care    \n24 ACMD_ERR Create auto command error:  \n0 = no \n1 = yes RW 0x0 \n23  Reserved  - Write as 0, read as don't care    \n22 DEND_ERR Create end bit on data line not 1:  \n0 = no \n1 = yes RW 0x0 \n21 DCRC_ERR Create data CRC error:  \n0 = no \n1 = yes RW 0x0 \n20 DTO_ERR Create timeout on data line:  \n0 = no \n1 = yes RW 0x0 \n19 CBAD_ERR Create incorrect command index in response:  \n0 = no \n1 = yes RW 0x0 \n18 CEND_ERR Create end bit on command line not 1:  \n0 = no \n1 = yes RW 0x0 \n17 CCRC_ERR Create command CRC error:  \n0 = no \n1 = yes RW 0x0 \n16 CTO_ERR Create timeout on command line:  \n0 = no \n1 = yes RW 0x0 \n15  Reserved  - Write as 0, read as don't care    \n14 ENDBOOT Create boot operation has terminated:  \n0 = no \n1 = yes RW 0x0 \n13 BOOTACK Create boot acknowledge has been received:  \n0 = no \n1 = yes RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 84 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n12 RETUNE Create clock retune request was made:  \n0 = no \n1 = yes RW 0x0 \n11:9  Reserved  - Write as 0, read as don't care    \n8 CARD Create card made interrupt request:  \n0 = no \n1 = yes RW 0x0 \n7:6  Reserved  - Write as 0, read as don't care    \n5 READ_RDY Create DATA register contains data to be read:  \n0 = no \n1 = yes RW 0x0 \n4 WRITE_RDY Create data can be written to DATA register:  \n0 = no \n1 = yes RW 0x0 \n3  Reserved  - Write as 0, read as don't care    \n2 BLOCK_GAP Create interrupt if data transfer has stopped at \nblock gap:  \n0 = no \n1 = yes RW 0x0 \n1 DATA_DONE Create data transfer has finished:  \n0 = no \n1 = yes RW 0x0 \n0 CMD_DONE Create command has finished:  \n0 = no \n1 = yes RW 0x0 \n \n \nBOOT_TIMEOUT Register  \nSynopsis  This register configures after how many card clock cycles a timeout for e.MMC cards in \nboot mode is flagged \nBit(s)  Field Name  Description  Type  Reset  \n31:0 TIMEOUT Number of card clock cycles after which a \ntimeout during boot mode is flagged  RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 85 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nDBG_SEL Register  \nSynopsis  This register selects which submodules are accessed by t he debug bus. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bits marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit(s)  Field Name  Descri ption  Type  Reset  \n31:1  Reserved  - Write as 0, read as don't care    \n0 SELECT Submodules accessed by debug bus:  \n0 = receiver and fifo_ctrl \n1 = others RW 0x0 \n \n \nEXRDFIFO_CFG Register  \nSynopsis  This register allows fine tuning the dma_req genera tion for paced DMA transfers when \nreading from the card. If the extension data FIFO con tains less than RD_THRSH 32 \nbits words dma_req becomes inactive until the card has  filled the extension data FIFO \nabove threshold. This compensates the DMA latency. \nWhen writing data to the card the extension data FIF O feeds into the EMMC module s \nFIFO and no fine tuning is required Therefore the R D_THRSH value is in this case \nignored. \nBit(s)  Field Name  Description  Type  Reset  \n31:3  Reserved  - Write as 0, read as don't care    \n2:0 RD_THRSH Read threshold in 32 bits words  RW 0x0 \n \n \nEXRDFIFO_EN Register  \nSynopsis  This register enables the extension data register. I t should be enabled for paced DMA \ntransfers and be bypassed for burst DMA transfers. \nBit(s)  Field Name  Description  Type  Reset  \n31:1  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 86 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0 ENABLE Enable the extension FIFO:  \n0 = bypass \n1 = enabled RW 0x0 \n \n \nTUNE_STEP Register  \nSynopsis  This register is used to delay the card clock when samp ling the returning data and \ncommand response from the card. \nDELAY determines by how much the sampling clock is dela yed per step. \nBit(s)  Field Name  Description  Type  Reset  \n31:3  Reserved  - Write as 0, read as don't care    \n2:0 DELAY Sampling clock delay per step:  \n000 = 200ps typically \n001 = 400ps typically \n010 = 400ps typically \n011 = 600ps typically \n100 = 700ps typically \n101 = 900ps typically \n110 = 900ps typically \n111 = 1100ps typically RW 0x0 \n \n \nTUNE_STEPS_STD Register  \nSynopsis  This register is used to delay the card clock when samp ling the returning data and \ncommand response from the card. It determines by how m any steps the sampling \nclock is delayed in SDR mode. \nBit(s)  Field Name  Description  Type  Reset  \n31:6  Reserved  - Write as 0, read as don't care    \n5:0 STEPS Number of steps (0 to 40)  RW 0x0 \n \n \nTUNE_STEPS_DDR Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 87 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  This register is used to delay the card clock when samp ling the returning data and \ncommand response from the card. It determines by how m any steps the sampling \nclock is delayed in DDR mode. \nBit(s)  Field Name  Description  Type  Reset  \n31:6  Reserved  - Write as 0, read as don't care    \n5:0 STEPS Number of steps (0 to 40)  RW 0x0 \n \n \nSPI_INT_SPT Register  \nSynopsis  This register controls whether assertion of interrupt s in SPI mode is possible \nindependent of the card select line. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bit marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit(s)  Field Name  Description  Type  Reset  \n31:8  Reserved  - Write as 0, read as don't care    \n7:0 SELECT Interrupt independent of card select line:  \n0 = no \n1 = yes RW 0x0 \n \n \nSLOTISR_VER Register  \nSynopsis  This register contains the version information and s lot interrupt status. \nFor the exact details please refer to the Arasan do cumentation \nSD3.0_Host_AHB_eMMC4.4_Usersguide_ver5.9_jan11_10.p df. Bit marked as \nreserved in this document but not by the Arasan docum entation refer to functionality \nwhich has been disabled due to the changes listed in the previous chapter. \nBit(s)  Field Name  Description  Type  Reset  \n31:24 VENDOR Vendor Version Number  RW 0x0 \n23:16 SDVERSION Host Controller specification version  RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 88 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n15:8  Reserved  - Write as 0, read as don't care    \n7:0 SLOT_STATUS Logical OR of interrupt and wakeup signal for \neach slot  RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 89 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6 General Purpose I/O (GPIO) \nThere are 54 general-purpose I/O (GPIO) lines split into t wo banks. All GPIO pins have at \nleast two alternative functions within BCM. The alterna te functions are usually peripheral IO \nand a single peripheral may appear in each bank to allow flexibility on the choice of IO \nvoltage. Details of alternative functions are given i n section 6.2. Alternative Function \nAssignments. \nThe block diagram for an individual GPIO pin is given belo w : \n \nFigure 6-1 GPIO Block Diagram \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 90 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nThe GPIO peripheral has three dedicated interrupt lines.  These lines are triggered by the \nsetting of bits in the event detect status register. Each  bank has its\u2019 own interrupt line with the \nthird line shared between all bits. \nThe Alternate function table also has the pull state (pull-up/pull-down) which is applied after \na power down. \n \n6.1 Register View \nThe GPIO has 41 registers. All accesses are assumed to be 32-bit. \n \nAddress Field Name Description Size Read/ \nWrite \n0x 7E20 0000 GPFSEL0  GPIO Function Select 0  32 R/W \n0x 7E20 0000  GPFSEL0  GPIO Function Select 0  32 R/W \n0x 7E20 0004  GPFSEL1  GPIO Function Select 1  32 R/W \n0x 7E20 0008 GPFSEL2  GPIO Function Select 2  32 R/W \n0x 7E20 000C  GPFSEL3  GPIO Function Select 3  32 R/W \n0x 7E20 0010  GPFSEL4 GPIO Function Select 4  32 R/W \n0x 7E20 0014  GPFSEL5 GPIO Function Select 5  32 R/W \n0x 7E20 0018  - Reserved  - - \n0x 7E20 001C  GPSET0 GPIO Pin Output Set 0 32 W \n0x 7E20 0020  GPSET1 GPIO Pin Output Set 1 32 W \n0x 7E20 0024  - Reserved - - \n0x 7E20 0028  GPCLR0 GPIO Pin Output Clear 0 32 W \n0x 7E20 002C  GPCLR1 GPIO Pin Output Clear 1 32 W \n0x 7E20 0030  - Reserved - - \n0x 7E20 0034  GPLEV0 GPIO Pin Level 0 32 R \n0x 7E20 0038  GPLEV1 GPIO Pin Level 1 32 R \n0x 7E20 003C  - Reserved - - \n0x 7E20 0040  GPEDS0 GPIO Pin Event Detect Status 0 32 R/W \n0x 7E20 0044  GPEDS1 GPIO Pin Event Detect Status 1 32 R/W \n0x 7E20 0048  - Reserved - - \n0x 7E20 004C  GPREN0 GPIO Pin Rising Edge Detect Enable 0 32 R/W \n0x 7E20 0050  GPREN1 GPIO Pin Rising Edge Detect Enable 1 32 R/W \n0x 7E20 0054  - Reserved - - \n0x 7E20 0058  GPFEN0 GPIO Pin Falling Edge Detect Enable 0 32 R/W \n0x 7E20 005C  GPFEN1 GPIO Pin Falling Edge Detect Enable 1 32 R/W  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 91 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nAddress Field Name Description Size Read/ \nWrite \n0x 7E20 0060  - Reserved - - \n0x 7E20 0064  GPHEN0 GPIO Pin High Detect Enable 0 32 R/W \n0x 7E20 0068  GPHEN1 GPIO Pin High Detect Enable 1 32 R/W \n0x 7E20 006C  - Reserved - - \n0x 7E20 0070  GPLEN0 GPIO Pin Low Detect Enable 0 32 R/W \n0x 7E20 0074  GPLEN1 GPIO Pin Low Detect Enable 1 32 R/W \n0x 7E20 0078  - Reserved - - \n0x 7E20 007C  GPAREN0 GPIO Pin Async. Rising Edge Detect 0 32 R/W \n0x 7E20 0080  GPAREN1 GPIO Pin Async. Rising Edge Detect 1 32 R/W \n0x 7E20 0084  - Reserved - - \n0x 7E20 0088  GPAFEN0 GPIO Pin Async. Falling Edge Detect 0 32 R/W \n0x 7E20 008C  GPAFEN1 GPIO Pin Async. Falling Edge Detect 1 32 R/W \n0x 7E20 0090  - Reserved - - \n0x 7E20 0094  GPPUD GPIO Pin Pull-up/down Enable 32 R/W \n0x 7E20 0098  GPPUDCLK0 GPIO Pin Pull-up/down Enable Clock 0 32 R/W \n0x 7E20 009C  GPPUDCLK1 GPIO Pin Pull-up/down Enable Clock 1 32 R/W \n0x 7E20 00A0  - Reserved - - \n0x 7E20 00B0  - Test 4 R/W \n \n \nTable 6-1  GPIO Register Assignment \n \nGPIO Function Select Registers (GPFSELn) \nSYNOPSIS  The function select registers are used to define th e operation of the general -purpose I/O \npins. Each of the 54 GPIO pins  has at least two al ternative functions as defined in section \n16.2. The FSEL{n} field determines the functionalit y of the nth GPIO pin. All unused \nalternative function lines are tied to ground and w ill output a \u201c0\u201d if selected. All pins reset \nto normal GPIO input operation.  \nBit(s) Field Name Description Type Reset  \n31-30 --- Reserved R 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 92 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n29-27 FSEL9 FSEL9 - Function Select 9  \n000 = GPIO Pin 9 is an input \n001 = GPIO Pin 9 is an output \n100 = GPIO Pin 9 takes alternate function 0 \n101 = GPIO Pin 9 takes alternate function 1 \n110 = GPIO Pin 9 takes alternate function 2 \n111 = GPIO Pin 9 takes alternate function 3 \n011 = GPIO Pin 9 takes alternate function 4 \n010 = GPIO Pin 9 takes alternate function 5 R/W 0 \n26-24 FSEL8 FSEL8 - Function Select 8 R/W 0 \n23-21 FSEL7 FSEL7 - Function Select 7 R/W 0 \n20-18 FSEL6 FSEL6 - Function Select 6 R/W 0 \n17-15 FSEL5 FSEL5 - Function Select 5 R/W 0 \n14-12 FSEL4 FSEL4 - Function Select 4 R/W 0 \n11-9 FSEL3 FSEL3 - Function Select 3 R/W 0 \n8-6 FSEL2 FSEL2 - Function Select 2 R/W 0 \n5-3 FSEL1 FSEL1 - Function Select 1 R/W 0 \n2-0 FSEL0 FSEL0 - Function Select 0 R/W 0 \nTable 6-2 \u2013 GPIO Alternate function select register  0 \n \nBit(s) Field Name Description Type Reset  \n31-30 --- Reserved R 0 \n29-27 FSEL19 FSEL19 - Function Select 19  \n000 = GPIO Pin 19 is an input \n001 = GPIO Pin 19 is an output \n100 = GPIO Pin 19 takes alternate function 0 \n101 = GPIO Pin 19 takes alternate function 1 \n110 = GPIO Pin 19 takes alternate function 2 \n111 = GPIO Pin 19 takes alternate function 3 \n011 = GPIO Pin 19 takes alternate function 4 \n010 = GPIO Pin 19 takes alternate function 5 R/W 0 \n26-24 FSEL18 FSEL18 - Function Select 18 R/W 0 \n23-21 FSEL17 FSEL17 - Function Select 17 R/W 0 \n20-18 FSEL16 FSEL16 - Function Select 16 R/W 0 \n17-15 FSEL15 FSEL15 - Function Select 15 R/W 0 \n14-12 FSEL14 FSEL14 - Function Select 14 R/W 0 \n11-9 FSEL13 FSEL13 - Function Select 13 R/W 0 \n8-6 FSEL12 FSEL12 - Function Select 12 R/W 0 \n5-3 FSEL11 FSEL11 - Function Select 11 R/W 0 \n2-0 FSEL10 FSEL10 - Function Select 10 R/W 0 \nTable 6-3 \u2013 GPIO Alternate function select register  1  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 93 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nBit(s) Field Name Description Type Reset  \n31-30 --- Reserved R 0 \n29-27 FSEL29 FSEL29 - Function Select 29  \n000 = GPIO Pin 29 is an input \n001 = GPIO Pin 29 is an output \n100 = GPIO Pin 29 takes alternate function 0 \n101 = GPIO Pin 29 takes alternate function 1 \n110 = GPIO Pin 29 takes alternate function 2 \n111 = GPIO Pin 29 takes alternate function 3 \n011 = GPIO Pin 29 takes alternate function 4 \n010 = GPIO Pin 29 takes alternate function 5 R/W 0 \n26-24 FSEL28 FSEL28 - Function Select 28 R/W 0 \n23-21 FSEL27 FSEL27 - Function Select 27 R/W 0 \n20-18 FSEL26 FSEL26 - Function Select 26 R/W 0 \n17-15 FSEL25 FSEL25 - Function Select 25 R/W 0 \n14-12 FSEL24 FSEL24 - Function Select 24 R/W 0 \n11-9 FSEL23 FSEL23 - Function Select 23 R/W 0 \n8-6 FSEL22 FSEL22 - Function Select 22 R/W 0 \n5-3 FSEL21 FSEL21 - Function Select 21 R/W 0 \n2-0 FSEL20 FSEL20 - Function Select 20 R/W 0 \nTable 6-4 \u2013 GPIO Alternate function select register  2 \n \nBit(s) Field Name Description Type Reset  \n31-30 --- Reserved R 0 \n29-27 FSEL39 FSEL39 - Function Select 39  \n000 = GPIO Pin 39 is an input \n001 = GPIO Pin 39 is an output \n100 = GPIO Pin 39 takes alternate function 0 \n101 = GPIO Pin 39 takes alternate function 1 \n110 = GPIO Pin 39 takes alternate function 2 \n111 = GPIO Pin 39 takes alternate function 3 \n011 = GPIO Pin 39 takes alternate function 4 \n010 = GPIO Pin 39 takes alternate function 5 R/W 0 \n26-24 FSEL38 FSEL38 - Function Select 38 R/W 0 \n23-21 FSEL37 FSEL37 - Function Select 37 R/W 0 \n20-18 FSEL36 FSEL36 - Function Select 36 R/W 0 \n17-15 FSEL35 FSEL35 - Function Select 35 R/W 0 \n14-12 FSEL34 FSEL34 - Function Select 34 R/W 0 \n11-9 FSEL33 FSEL33 - Function Select 33 R/W 0 \n8-6 FSEL32 FSEL32 - Function Select 32 R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 94 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n5-3 FSEL31 FSEL31 - Function Select 31 R/W 0 \n2-0 FSEL30 FSEL30 - Function Select 30 R/W 0 \nTable 6-5 \u2013 GPIO Alternate function select register  3 \n \nBit(s) Field Name Description Type Reset  \n31-30 --- Reserved R 0 \n29-27 FSEL49 FSEL49 - Function Select 49  \n000 = GPIO Pin 49 is an input \n001 = GPIO Pin 49 is an output \n100 = GPIO Pin 49 takes alternate function 0 \n101 = GPIO Pin 49 takes alternate function 1 \n110 = GPIO Pin 49 takes alternate function 2 \n111 = GPIO Pin 49 takes alternate function 3 \n011 = GPIO Pin 49 takes alternate function 4 \n010 = GPIO Pin 49 takes alternate function 5 R/W 0 \n26-24 FSEL48 FSEL48 - Function Select 48 R/W 0 \n23-21 FSEL47 FSEL47 - Function Select 47 R/W 0 \n20-18 FSEL46 FSEL46 - Function Select 46 R/W 0 \n17-15 FSEL45 FSEL45 - Function Select 45 R/W 0 \n14-12 FSEL44 FSEL44 - Function Select 44 R/W 0 \n11-9 FSEL43 FSEL43 - Function Select 43 R/W 0 \n8-6 FSEL42 FSEL42 - Function Select 42 R/W 0 \n5-3 FSEL41 FSEL41 - Function Select 41 R/W 0 \n2-0 FSEL40 FSEL40 - Function Select 40 R/W 0 \nTable 6-6 \u2013 GPIO Alternate function select register  4 \n \n \nBit(s) Field Name Description Type Reset  \n31-12 --- Reserved R 0 \n11-9 FSEL53 FSEL53 - Function Select 53  \n000 = GPIO Pin 53 is an input \n001 = GPIO Pin 53 is an output \n100 = GPIO Pin 53 takes alternate function 0 \n101 = GPIO Pin 53 takes alternate function 1 \n110 = GPIO Pin 53 takes alternate function 2 \n111 = GPIO Pin 53 takes alternate function 3 \n011 = GPIO Pin 53 takes alternate function 4 \n010 = GPIO Pin 53 takes alternate function 5 R/W 0 \n8-6 FSEL52 FSEL52 - Function Select 52 R/W 0 \n5-3 FSEL51 FSEL51 - Function Select 51 R/W 0 \n2-0 FSEL50 FSEL50 - Function Select 50 R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 95 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTable 6-7 \u2013 GPIO Alternate function select register  5 \n \n \nGPIO Pin Output Set Registers (GPSETn) \nSYNOPSIS  The output set registers are used to set a GPIO pin . The SET{n}  field defines the \nrespective GPIO pin to set, writing a \u201c0\u201d  to the field has no effect. If the GPIO pin is \nbeing used as in input (by default) then the value in the SET{n}  field is ignored. \nHowever, if the pin is subsequently defined as an ou tput then the bit will be set \naccording to the last set/clear operation. Separating the set and clear functions \nremoves the need for read-modify-write operations \nBit(s) Field Name Description Type Reset  \n31-0 SETn (n=0..31) 0 = No effect \n1 = Set GPIO pin n R/W 0 \nTable 6-8 \u2013 GPIO Output Set Register 0 \n \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 SETn \n(n=32..53) 0 = No effect \n1 = Set GPIO pin n. R/W 0 \nTable 6-9 \u2013 GPIO Output Set Register 1 \n \nGPIO Pin Output Clear Registers (GPCLRn) \nSYNOPSIS  The output clear registers) are used to clear a GPIO  pin. The CLR{n}  field defines \nthe respective GPIO pin to clear, writing a \u201c0\u201d  to the field has no effect. If the GPIO \npin is being used as in input (by default) then the  value in the CLR{n}  field is \nignored. However, if the pin is subsequently defined as an output then the bit will \nbe set according to the last set/clear operation. Sepa rating the set and clear \nfunctions removes the need for read-modify-write op erations. \nBit(s) Field Name Description Type Reset  \n31-0 CLRn (n=0..31) 0 = No effect \n1 = Clear GPIO pin n R/W 0 \nTable 6-10 \u2013 GPIO Output Clear Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 96 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n21-0 CLRn \n(n=32..53) 0 = No effect \n1 = Set GPIO pin n R/W 0 \nTable 6-11 \u2013 GPIO Output Clear Register 1 \n \n \nGPIO Pin Level Registers (GPLEVn) \nSYNOPSIS  The pin level registers return the actual value of t he pin. The LEV{n}  field gives the \nvalue of the respective GPIO pin. \nBit(s) Field Name Description Type Reset  \n31-0 LEVn (n=0..31) 0 = GPIO pin n is low \n0 = GPIO pin n is high R/W 0 \nTable 6-12 \u2013 GPIO Level Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 LEVn (n=32..53)  0 = GPIO pin n is low \n0 = GPIO pin n is high R/W 0 \nTable 6-13 \u2013 GPIO Level  Register 1 \n \n \nGPIO Event Detect Status Registers (GPEDSn) \nSYNOPSIS  The event detect status registers are used to record  level and edge events on the \nGPIO pins. The relevant bit in the event detect stat us registers is set whenever: 1) \nan edge is detected that matches the type of edge prog rammed in the rising/falling \nedge detect enable registers, or 2) a level is detect ed that matches the type of level \nprogrammed in the high/low level detect enable regis ters. The bit is cleared by \nwriting a \u201c1\u201d  to the relevant bit.  \nThe interrupt controller can be programmed to interru pt the processor when any of \nthe status bits are set. The GPIO peripheral has th ree dedicated interrupt lines. \nEach GPIO bank can generate an independent interrupt.  The third line generates a \nsingle interrupt whenever any bit is set. \nBit(s) Field Name Description Type Reset  \n31-0 EDSn (n=0..31) 0 = Event not detected on GPIO pin n \n1 = Event detected on GPIO pin n R/W 0 \nTable 6-14 \u2013 GPIO Event Detect Status Register 0 \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 97 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 EDSn \n(n=32..53) 0 = Event not detected on GPIO pin n \n1 = Event detected on GPIO pin n R/W 0 \nTable 6-15 \u2013 GPIO Event Detect Status Register 1 \n \n \n \nGPIO Rising Edge Detect Enable Registers (GPRENn) \nSYNOPSIS  The rising edge detect enable registers define the p ins for which a rising edge \ntransition sets a bit in the event detect status re gisters ( GPEDSn ). When the \nrelevant bits are set in both the GPRENn  and GPFENn  registers, any transition (1 \nto 0 and 0 to 1) will set a bit in the GPEDSn  registers. The GPRENn  registers use \nsynchronous edge detection. This means the input signa l is sampled using the \nsystem clock and then it is looking for a \u201c011\u201d  pattern on the sampled signal. This \nhas the effect of suppressing glitches. \nBit(s) Field Name Description Type Reset  \n31-0 RENn (n=0..31) 0 = Rising edge detect disabled on GPIO pin n.  \n1 = Rising edge on GPIO pin n sets corresponding bit \nin EDSn. R/W 0 \nTable 6-16 \u2013 GPIO Rising Edge Detect Status Registe r 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 RENn \n(n=32..53) 0 = Rising edge detect disabled on GPIO pin n.  \n1 = Rising edge on GPIO pin n sets corresponding bit \nin EDSn. R/W 0 \nTable 6-17 \u2013 GPIO Rising Edge Detect Status Registe r 1 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 98 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nGPIO Falling Edge Detect Enable Registers (GPRENn) \nSYNOPSIS  The falling edge detect enable registers define the pins for which a falling edge \ntransition sets a bit in the event detect status re gisters ( GPEDSn ). When the relevant \nbits are set in both the GPRENn  and GPFENn  registers, any transition (1 to 0 and 0 \nto 1) will set a bit in the GPEDSn  registers. The GPFENn  registers use synchronous \nedge detection. This means the input signal is sampl ed using the system clock and \nthen it is looking for a \u201c100\u201d  pattern on the sampled signal. This has the effect  of \nsuppressing glitches. \nBit(s) Field Name Description Type Reset  \n31-0 FENn (n=0..31) 0 = Falling  edge detect disabled on GPIO pin n.  \n1 = Falling edge on GPIO pin n sets corresponding bit in \nEDSn. R/W 0 \nTable 6-18 \u2013 GPIO Falling Edge Detect Status Regist er 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 FENn (n=32..53) 0 = Falling  edge detect disabled on GPIO pin n.  \n1 = Falling edge on GPIO pin n sets corresponding bit in \nEDSn. R/W 0 \nTable 6-19 \u2013 GPIO Falling Edge Detect Status Regist er 1 \n \nGPIO High Detect Enable Registers (GPHENn) \nSYNOPSIS  The high level detect enable registers define the p ins for which a high level sets a bit in \nthe event detect status register ( GPEDSn ). If the pin is still high when an attempt is \nmade to clear the status bit in GPEDSn  then the status bit will remain set. \nBit(s) Field Name Description Type Reset  \n31-0 HENn (n=0..31) 0 = High detect disabled on GPIO pin n \n1 = High on GPIO pin n sets corresponding bit in GPEDS R/W 0 \nTable 6-20 \u2013 GPIO High Detect Status Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 HENn (n=32..53) 0 = High detect disabled on GPIO pin n \n1 = High on GPIO pin n sets corresponding bit in GPEDS R/W 0 \nTable 6-21 \u2013 GPIO High Detect Status Register 1  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 99 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nGPIO Low Detect Enable Registers (GPLENn) \nSYNOPSIS  The low level detect enable registers define the pi ns for which a low level sets a bit in \nthe event detect status register ( GPEDSn ). If the pin is still low when an attempt is \nmade to clear the status bit in GPEDSn  then the status bit will remain set. \nBit(s) Field Name Description Type Reset  \n31-0 LENn (n=0..31) 0 = Low  detect disabled on GPIO pin n \n1 = Low on GPIO pin n sets corresponding bit in GPEDS R/W 0 \nTable 6-22 \u2013 GPIO Low Detect Status Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 LENn (n=32..53) 0 = Low  detect disabled on GPIO pin n \n1 = Low on GPIO pin n sets corresponding bit in GPEDS R/W 0 \nTable 6-23 \u2013 GPIO Low Detect Status Register 1 \n \nGPIO Asynchronous rising Edge Detect Enable Registe rs (GPARENn) \nSYNOPSIS  The asynchronous rising edge detect enable registers d efine the pins for which a \nasynchronous rising edge transition sets a bit in the  event detect status registers \n(GPEDSn ). \nAsynchronous means the incoming signal is not sampled by the system clock. As such \nrising edges of very short duration can be detected.  \nBit(s) Field Name Description Type Reset  \n31-0 ARENn (n=0..31) 0 = Asynchronous rising edge detect disabled on GPIO p in \nn. \n1 = Asynchronous rising edge on GPIO pin n sets \ncorresponding bit in EDSn. R/W 0 \nTable 6-24 \u2013 GPIO Asynchronous rising Edge Detect S tatus Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 ARENn \n(n=32..53) 0 = Asynchronous rising edge detect disabled on GPIO p in \nn. \n1 = Asynchronous rising edge on GPIO pin n sets \ncorresponding bit in EDSn. R/W 0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 100 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTable 6-25 \u2013 GPIO Asynchronous rising Edge Detect S tatus Register 1 \n \n \nGPIO Asynchronous Falling Edge Detect Enable Regist ers (GPAFENn) \nSYNOPSIS  The asynchronous falling edge detect enable registers  define the pins for which a \nasynchronous falling edge transition sets a bit in th e event detect status registers \n(GPEDSn ). Asynchronous means the incoming signal is not sampl ed by the system \nclock. As such falling edges of very short duration can be detected. \nBit(s) Field Name Description Type Reset  \n31-0 AFENn (n=0..31) 0 = Asynchronous falling edge detect disabled on GPIO  \npin n. \n1 = Asynchronous falling edge on GPIO pin n sets \ncorresponding bit in EDSn. R/W 0 \nTable 6-26 \u2013 GPIO Asynchronous Falling Edge Detect Status Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 AFENn (n=32..53)  0 = Asynchronous falling edge detect disabled on GPIO  \npin n. \n1 = Asynchronous falling edge on GPIO pin n sets \ncorresponding bit in EDSn. R/W 0 \nTable 6-27 \u2013 GPIO Asynchronous Falling Edge Detect Status Register 1 \n \n \nGPIO Pull-up/down Register (GPPUD) \nSYNOPSIS  The GPIO Pull-up/down Register controls the actuation  of the internal pull-up/down \ncontrol line to ALL the GPIO pins. This register mus t be used in conjunction with the 2 \nGPPUDCLKn registers. \nNote that it is not possible to read back the current  Pull-up/down settings and so it is the \nusers\u2019 responsibility to \u2018remember\u2019 which pull-up/do wns are active. The reason for this is \nthat GPIO pull-ups are maintained even in power-dow n mode when the core is off, when \nall register contents is lost.  \nThe Alternate function table also has the pull state  which is applied after a power down. \nBit(s) Field Name Description Type Reset   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 101 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n31-2 --- Unused R 0 \n1-0 PUD PUD - GPIO Pin Pull-up/down  \n00 = Off \u2013 disable pull-up/down \n01 = Enable Pull Down control \n10 = Enable Pull Up control \n11 = Reserved \n*Use in conjunction with GPPUDCLK0/1/2 R/W 0 \nTable 6-28 \u2013 GPIO Pull-up/down Register (GPPUD) \n \nGPIO Pull-up/down Clock Registers (GPPUDCLKn) \nSYNOPSIS  The GPIO Pull-up/down Clock Registers control the actua tion of internal pull-downs on \nthe respective GPIO pins. These registers must be us ed in conjunction with the GPPUD \nregister to effect GPIO Pull-up/down changes. The fol lowing sequence of events is \nrequired: \n1. Write to GPPUD to set the required control signal  (i.e. Pull-up or Pull-Down or neither \nto remove the current Pull-up/down) \n2. Wait 150 cycles \u2013 this provides the required set-u p time for the control signal \n3. Write to GPPUDCLK0/1 to clock the control signal in to the GPIO pads you wish to \nmodify \u2013 NOTE only the pads which receive a clock will be  modified, all others will \nretain their previous state. \n4. Wait 150 cycles \u2013 this provides the required hold time for the control signal \n5. Write to GPPUD to remove the control signal \n6. Write to GPPUDCLK0/1 to remove the clock \nBit(s) Field Name Description Type Reset  \n(31-0) PUDCLKn \n(n=0..31) 0 = No Effect \n1 = Assert Clock on line (n) \n*Must be used in conjunction with GPPUD R/W 0 \nTable 6-29 \u2013 GPIO Pull-up/down Clock Register 0 \n \nBit(s) Field Name Description Type Reset  \n31-22 - Reserved R 0 \n21-0 PUDCLKn (n=32..53) 0 = No Effect \n1 = Assert Clock on line (n) \n*Must be used in conjunction with GPPUD R/W 0 \nTable 6-30 \u2013 GPIO Pull-up/down Clock Register 1  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 102 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6.2 Alternative Function Assignments \nEvery GPIO pin can carry an alternate function. Up to  6 alternate function are available but \nnot every pin has that many alternate functions. The table below gives a quick over view. \n Pull  ALT0  ALT1  ALT2  ALT3  ALT4  ALT5  \nGPIO0 High SDA0 SA5 <reserved> \n   \nGPIO1 High SCL0 SA4 <reserved> \n   \nGPIO2 High SDA1 SA3 <reserved> \n   \nGPIO3 High SCL1 SA2 <reserved> \n   \nGPIO4 High GPCLK0 SA1 <reserved> \n  ARM_TDI \nGPIO5 High GPCLK1 SA0 <reserved> \n  ARM_TDO \nGPIO6 High GPCLK2 SOE_N / SE <reserved> \n  ARM_RTCK \nGPIO7 High SPI0_CE1_N SWE_N / \nSRW_N  <reserved> \n   \nGPIO8 High SPI0_CE0_N SD0 <reserved> \n   \nGPIO9 Low SPI0_MISO SD1 <reserved> \n   \nGPIO10 Low SPI0_MOSI SD2 <reserved> \n   \nGPIO11 Low SPI0_SCLK SD3 <reserved> \n   \nGPIO12 Low PWM0 SD4 <reserved> \n  ARM_TMS \nGPIO13 Low PWM1 SD5 <reserved> \n  ARM_TCK \nGPIO14 Low TXD0 SD6 <reserved> \n  TXD1 \nGPIO15 Low RXD0 SD7 <reserved> \n  RXD1 \nGPIO16 Low <reserved> SD8 <reserved> CTS0 SPI1_CE2_N CTS1 \nGPIO17 Low <reserved> SD9 <reserved> RTS0 SPI1_CE1_N RTS1 \nGPIO18 Low PCM_CLK SD10 <reserved> BSCSL SDA / \nMOSI  SPI1_CE0_N PWM0 \nGPIO19 Low PCM_FS SD11 <reserved> BSCSL SCL / \nSCLK  SPI1_MISO PWM1 \nGPIO20 Low PCM_DIN SD12 <reserved> BSCSL / \nMISO  SPI1_MOSI GPCLK0 \nGPIO21 Low PCM_DOUT SD13 <reserved> BSCSL / \nCE_N  SPI1_SCLK GPCLK1 \nGPIO22 Low <reserved> SD14 <reserved> SD1_CLK ARM_TRST \n \nGPIO23 Low <reserved> SD15 <reserved> SD1_CMD ARM_RTCK \n \nGPIO24 Low <reserved> SD16 <reserved> SD1_DAT0 ARM_TDO \n \nGPIO25 Low <reserved> SD17 <reserved> SD1_DAT1 ARM_TCK \n \nGPIO26 Low <reserved> <reserved> <reserved> SD1_DAT2 ARM_TDI \n \nGPIO27 Low <reserved> <reserved> <reserved> SD1_DAT3 ARM_TMS \n \nGPIO28 - SDA0 SA5 PCM_CLK <reserved> \n  \nGPIO29 - SCL0 SA4 PCM_FS <reserved> \n  \nGPIO30 Low <reserved> SA3 PCM_DIN CTS0 \n CTS1 \nGPIO31 Low <reserved> SA2 PCM_DOUT RTS0 \n RTS1 \nGPIO32 Low GPCLK0 SA1 <reserved> TXD0 \n TXD1 \nGPIO33 Low <reserved> SA0 <reserved> RXD0 \n RXD1 \nGPIO34 High GPCLK0 SOE_N / SE <reserved> <reserved> \n  \nGPIO35 High SPI0_CE1_N SWE_N / \nSRW_N   <reserved> \n  \nGPIO36 High SPI0_CE0_N SD0 TXD0 <reserved> \n  \nGPIO37 Low SPI0_MISO SD1 RXD0 <reserved> \n  \nGPIO38 Low SPI0_MOSI SD2 RTS0 <reserved> \n  \nGPIO39 Low SPI0_SCLK SD3 CTS0 <reserved> \n  \nGPIO40 Low PWM0 SD4 \n <reserved> SPI2_MISO TXD1 \n Pull  ALT0  ALT1  ALT2  ALT3  ALT4  ALT5   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 103 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nGPIO41 Low PWM1 SD5 <reserved> <reserved> SPI2_MOSI RXD1 \nGPIO42 Low GPCLK1 SD6 <reserved> <reserved> SPI2_SCLK RTS1 \nGPIO43 Low GPCLK2 SD7 <reserved> <reserved> SPI2_CE0_N CTS1 \nGPIO44 - GPCLK1 SDA0 SDA1 <reserved> SPI2_CE1_N \n \nGPIO45 - PWM1 SCL0 SCL1 <reserved> SPI2_CE2_N \n \nGPIO46 High <Internal> \n     \nGPIO47 High <Internal> \n     \nGPIO48 High <Internal> \n     \nGPIO49 High <Internal> \n     \nGPIO50 High <Internal> \n     \nGPIO51 High <Internal> \n     \nGPIO52 High <Internal> \n     \nGPIO53 High <Internal> \n     \nTable 6-31 GPIO Pins Alternative Function Assignmen t \nEntries which are white should not  be used. These may have unexpected results as some  of these \nhave special functions used in test mode. e.g. they  may drive the output with high frequency signals. \n \nSpecial function legend: \n \nName Function See section \nSDA0 BSC 6 master 0 data line BSC \nSCL0 BSC master 0 clock line BSC \nSDA1 BSC master 1 data line BSC \nSCL1 BSC master 1 clock line BSC \nGPCLK0 General purpose Clock 0 <TBD> \nGPCLK1 General purpose Clock 1 <TBD> \nGPCLK2 General purpose Clock 2 <TBD> \nSPI0_CE1_N SPI0 Chip select 1 SPI \nSPI0_CE0_N SPI0 Chip select 0 SPI \nSPI0_MISO SPI0 MISO SPI \nSPI0_MOSI SPI0 MOSI SPI \nSPI0_SCLK SPI0 Serial clock SPI \nPWMx Pulse Width Modulator 0..1 Pulse Width Modulat or \nTXD0 UART 0 Transmit Data UART \nRXD0 UART 0 Receive Data UART \nCTS0 UART 0 Clear To Send UART \nRTS0 UART 0 Request To Send UART \nPCM_CLK PCM clock PCM Audio \nPCM_FS PCM Frame Sync PCM Audio \nPCM_DIN PCM Data in PCM Audio \nPCM_DOUT PCM data out PCM Audio \nSAx Secondary mem Address bus Secondary Memory Interfac e \nSOE_N / SE Secondary mem. Controls Secondary Memory Interface \nSWE_N / SRW_N Secondary mem. Controls Secondary Memory Interface \nSDx Secondary mem. data bus Secondary Memory Interface \nBSCSL SDA / MOSI BSC slave Data, SPI salve MOSI BSC ISP slave \nBSCSL SCL / SCLK BSC slave Clock, SPI slave clock BSC ISP slave \nBSCSL - / MISO BSC <not used>,SPI MISO BSC ISP slave \nBSCSL - / CE_N BSC <not used>, SPI CSn BSC ISP slave \n                                                             \n6 The Broadcom Serial Control bus is a proprietary bus co mpliant with the Philips \u00ae I2C bus/interface   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 104 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nName Function See section \nSPI1_CEx_N SPI1 Chip select 0-2 Auxiliary I/O \nSPI1_MISO SPI1 MISO Auxiliary I/O \nSPI1_MOSI SPI1 MOSI Auxiliary I/O \nSPI1_SCLK SPI1 Serial clock Auxiliary I/O \nTXD0 UART 1 Transmit Data Auxiliary I/O \nRXD0 UART 1 Receive Data Auxiliary I/O \nCTS0 UART 1 Clear To Send Auxiliary I/O \nRTS0 UART 1 Request To Send Auxiliary I/O \nSPI2_CEx_N SPI2 Chip select 0-2 Auxiliary I/O \nSPI2_MISO SPI2 MISO Auxiliary I/O \nSPI2_MOSI SPI2 MOSI Auxiliary I/O \nSPI2_SCLK SPI2 Serial clock Auxiliary I/O \nARM_TRST ARM JTAG reset <TBD> \nARM_RTCK ARM JTAG return clock <TBD> \nARM_TDO ARM JTAG Data out <TBD> \nARM_TCK ARM JTAG Clock <TBD> \nARM_TDI ARM JTAG Data in <TBD> \nARM_TMS ARM JTAG Mode select <TBD> \n \n   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 105 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6.3 General Purpose GPIO Clocks \nThe General Purpose clocks can be output to GPIO pins. They run from the peripherals clock \nsources and use clock generators with noise-shaping MASH dividers. These allow the GPIO \nclocks to be used to drive audio devices.  \nThe fractional divider operates by periodically dropping s ource clock pulses, therefore the \noutput frequency will periodically switch between:  \nDIVI frequency source _     &     1_\n+ DIVI frequency source  \nJitter is therefore reduced by increasing the source clock f requency. In applications where \njitter is a concern, the fastest available clock sourc e should be used. \nThe General Purpose clocks have MASH noise-shaping divide rs which push this fractional \ndivider jitter out of the audio band.  \nMASH noise-shaping is incorporated to push the fractional divider jitter out of the audio band \nif required. The MASH can be programmed for 1, 2 or 3-stage filtering. MASH filter, the \nfrequency is spread around the requested frequency and the user must ensure that the module \nis not exposed to frequencies higher than 25MHz. Also, the  MASH filter imposes a low limit \non the range of DIVI. \n MASH min DIVI min output freq average output freq max output freq \n0 (int divide) 1 source / ( DIVI ) source / ( DIVI ) source / ( DIVI ) \n1 2 source / ( DIVI ) source / ( DIVI + DIVF / 1024  ) source / ( DIVI + 1 ) \n2 3 source / ( DIVI - 1 ) source / ( DIVI + DIVF / 1024 ) source / ( DIVI + 2 ) \n3 5 source / ( DIVI - 3 ) source / ( DIVI + DIVF / 1024 ) source / ( DIVI + 4 ) \n  \nTable 6-32 Effect of MASH Filter on Frequency \nThe following example illustrates the spreading of output  clock frequency resulting from the \nuse of the MASH filter. Note that the spread is greater for lower divisors. \n PLL \nfreq \n(MHz) target \nfreq \n(MHz) MASH  divisor DIVI  DIVF  min \nfreq \n(MHz) ave \nfreq \n(MHz) max \nfreq \n(MHz) error  \n                    \n650 18.32 0 35.480 35 492 18.57 18.57 18.57 ok \n650 18.32 1 35.480 35 492 18.06 18.32 18.57 ok \n650 18.32 2 35.480 35 492 17.57 18.32 19.12 ok \n650 18.32 3 35.480 35 492 16.67 18.32 20.31 ok \n                    \n400 18.32 0 21.834 21 854 19.05 19.05 19.05 ok \n400 18.32 1 21.834 21 854 18.18 18.32 19.05 ok \n400 18.32 2 21.834 21 854 17.39 18.32 20.00 ok \n400 18.32 3 21.834 21 854 16.00 18.32 22.22 ok \n                    \n200 18.32 0 10.917 10 939 20.00 20.00 20.00 ok \n200 18.32 1 10.917 10 939 18.18 18.32 20.00 ok \n200 18.32 2 10.917 10 939 16.67 18.32 22.22 ok \n200 18.32 3 10.917 10 939 14.29 18.32 28.57 error  \n                    \n  \nTable 6-33 Example of Frequency Spread when using M ASH Filtering \n \nIt is beyond the scope of this specification to describe the operation of a MASH filter or to \ndetermine under what conditions the available levels of f iltering are beneficial.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 106 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nOperating Frequency \nThe maximum operating frequency of the General Purpose clo cks is ~125MHz at 1.2V but \nthis will be reduced if the GPIO pins are heavily loaded or  have a capacitive load.   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 107 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nRegister Definitions \n \nClock Manager General Purpose Clocks Control (CM_GP 0CTL, GP1CTL & \nGP2CTL) \n \nAddress  0x 7e10 1070 CM_GP0CTL \n 0x 7e10 1078 CM_GP1CTL \n 0x 7e10 1080 CM_GP2CTL \n Bit \nNumber  Field \nName Description Read/  \nWrite Reset  \n31-24 PASSWD  Clock Manager password \u201c5a\u201d W 0 \n23-11 - Unused R 0 \n10-9 MASH MASH control  \n0 = integer division \n1 = 1-stage MASH (equivalent to non-MASH dividers) \n2 = 2-stage MASH \n3 = 3-stage MASH \nTo avoid lock-ups and glitches do not change this \ncontrol while BUSY=1 and do not change this control  \nat the same time as asserting ENAB. R/W 0 \n8 FLIP Invert the clock generator output  \nThis is intended for use in test/debug only. Switch ing \nthis control will generate an edge on the clock \ngenerator output. To avoid output glitches do not \nswitch this control while BUSY=1. R/W 0 \n7 BUSY Clock generator is running  \nIndicates the clock generator is running. To avoid \nglitches and lock-ups, clock sources and setups mus t \nnot be changed while this flag is set. R 0 \n6 - Unused R 0 \n5 KILL Kill the clock generator  \n0 = no action  \n1 = stop and reset the clock generator \nThis is intended for test/debug only. Using this co ntrol \nmay cause a glitch on the clock generator output. R/W 0 \n4 ENAB Enable the clock generator  \nThis requests the clock to start or stop without \nglitches. The output clock will not stop immediatel y \nbecause the cycle must be allowed to complete to \navoid glitches. The BUSY flag will go low when the \nfinal cycle is completed. R/W 0 \n3-0 SRC Clock source  \n0 = GND \n1 = oscillator \n2 = testdebug0 \n3 = testdebug1 \n4 = PLLA per  \n5 = PLLC per  \n6 = PLLD per  \n7 = HDMI auxiliary  \n8-15 = GND \nTo avoid lock-ups and glitches do not change this \ncontrol while BUSY=1 and do not change this control  \nat the same time as asserting ENAB. R/W 0 \n   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 108 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTable 6-34 General Purpose Clocks Control \n \nClock Manager General Purpose Clock Divisors (CM_GP 0DIV, CM_GP1DIV & \nCM_GP2DIV) \n \nAddress  0x 7e10 1074 CM_GP0DIV \n 0x 7e10 107c CM_GP1DIV \n 0x 7e10 1084 CM_GP2DIV \n Bit \nNumber  Field \nName Description Read/  \nWrite Reset  \n31-24 PASSWD  Clock Manager password \u201c5a\u201d W 0 \n23-12 DIVI Integer part of divisor  \nThis value has a minimum limit determined by the \nMASH setting. See text for details. To avoid lock-u ps \nand glitches do not change this control while BUSY= 1.  R/W 0 \n11-0 DIVF Fractional part of divisor  \nTo avoid lock-ups and glitches do not change this \ncontrol while BUSY=1. R/W 0 \n  \nTable 6-35 General Purpose Clock Divisors \n \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 109 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n7 Interrupts \n7.1 Introduction \nThe ARM has two types of interrupt sources:  \n1.  Interrupts coming from the GPU peripherals. \n2.  Interrupts coming from local ARM control peripheral s. \nThe ARM processor gets three types of interrupts: \n1.  Interrupts from ARM specific peripherals. \n2.  Interrupts from GPU peripherals. \n3.  Special events interrupts. \n \nThe ARM specific interrupts are: \n\u2022 One timer. \n\u2022 One Mailbox. \n\u2022 Two Doorbells. \n\u2022 Two GPU halted interrupts. \n\u2022 Two Address/access error interrupt \nThe Mailbox and Doorbell registers are not for gene ral usage. \n \nFor each interrupt source (ARM or GPU) there is an interrupt enable bit (read/write) and an interrupt \npending bit (Read Only). All interrupts generated b y the arm control block are level sensitive \ninterrupts. Thus all interrupts remain asserted unt il disabled or the interrupt source is cleared. \nDefault the interrupts from doorbell 0,1 and mailbo x 0 go to the ARM this means that these \nresources should be written by the GPU and read by the ARM. The opposite holds for doorbells 2, 3 \nand mailbox 1.   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 110 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n7.2 Interrupt pending. \nAn interrupt vector module has NOT been implemented . To still have adequate interrupt processing \nthe interrupt pending bits are organized as follows : \n \nARM IRQs VC IRQs 0-31 GPU IRQs 32-63  \nBasic pend. GPU pend. 0  GPU pend. 1  \nA few \nselected \nGPU IRQs See text \n \nThere are three interrupt pending registers. \nOne basic pending register and two GPU pending regi sters. \nBasic pending register. \nThe basic pending register has interrupt pending bi ts for the ARM specific interrupts . \nTo speed up the interrupt processing it also has a number of selected GPU interrupts which are \ndeemed most likely to be required in ARM drivers. \nFurther there are two special GPU pending bits whic h tell if any of the two other pending registers \nhas bits set, one bit if a GPU interrupt 0-31 is pe nding, a second bit if a GPU interrupt 32-63 is \npending. The 'selected GPU interrupts' on the basic  pending registers are NOT taken into account for \nthese two status bits. So the two pending 0,1 statu s bits tell you that 'there are more interrupt whic h \nyou have not seen yet'. \nGPU pending registers. \nThere are two GPU pending registers with one bit pe r GPU interrupt source.  \n7.3 Fast Interrupt (FIQ). \nThe ARM also supports a Fast Interrupt (FIQ). One i nterrupt sources can be selected to be connected \nto the ARM FIQ input. There is also one FIQ enable.  An interrupt which is selected as FIQ should have \nits normal interrupt enable bit cleared. Otherwise an normal and a FIQ interrupt will be fired at the \nsame time. Not a good idea! \n7.4 Interrupt priority. \nThere is no priority for any interrupt. If one inte rrupt is much more important then all others it can  \nbe routed to the FIQ. Any remaining interrupts have  to be processed by polling the pending  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 111 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nregisters. It is up to the ARM software to device a  strategy. e.g. First start looking for specific pe nding \nbits or process them all shifting one bit at a time .  \nAs interrupt may arrive whilst this process is ongo ing the usual care for any 'race-condition critical ' \ncode must be taken. The following ARM assembly code  has been proven to work: \n  .macro get_irqnr_preamble, base, tmp \n  ldr  \\base, =IO_ADDRESS(ARMCTRL_IC_BASE) \n  .endm \n   \n  .macro get_irqnr_and_base, irqnr, irqstat, base, tmp \n  ldr  \\irqstat, [\\base, #(ARM_IRQ_PEND0 - ARMCTRL_ IC_BASE)] @ get masked status \n  mov  \\irqnr, #(ARM_IRQ0_BASE + 31) \n  and  \\tmp, \\irqstat, #0x300           @ save bits  8 and 9 \n  bics \\irqstat, \\irqstat, #0x300       @ clear bit s 8 and 9, and test \n  bne  1010f \n   \n  tst  \\tmp, #0x100 \n  ldrne \\irqstat, [\\base, #(ARM_IRQ_PEND1 - ARMCTRL _IC_BASE)] \n  movne \\irqnr, #(ARM_IRQ1_BASE + 31) \n  @ Mask out the interrupts also present in PEND0 -  see SW-5809 \n  bicne \\irqstat, #((1<<7) | (1<<9) | (1<<10)) \n  bicne \\irqstat, #((1<<18) | (1<<19)) \n  bne  1010f \n   \n  tst  \\tmp, #0x200 \n  ldrne \\irqstat, [\\base, #(ARM_IRQ_PEND2 - ARMCTRL _IC_BASE)] \n  movne \\irqnr, #(ARM_IRQ2_BASE + 31) \n  @ Mask out the interrupts also present in PEND0 -  see SW-5809 \n  bicne \\irqstat, #((1<<21) | (1<<22) | (1<<23) | ( 1<<24) | (1<<25)) \n  bicne \\irqstat, #((1<<30)) \n  beq 1020f \n \n1010: \n  @ For non-zero x, LSB(x) = 31 - CLZ(x^(x-1)) \n  @ N.B. CLZ is an ARM5 instruction. \n  sub  \\tmp, \\irqstat, #1 \n  eor  \\irqstat, \\irqstat, \\tmp \n  clz  \\tmp, \\irqstat \n  sub  \\irqnr, \\tmp \n \n1020: @ EQ will be set if no irqs pending  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 112 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n  .endm \n \n7.5 Registers \n \nThe base address for the ARM interrupt register is 0x7E00B000. \n \nRegisters overview: \nAddress  \noffset 7 Name  Notes  \n0x200  IRQ basic pending   \n0x204  IRQ pending 1   \n0x208  IRQ pending 2   \n0x20C  FIQ control   \n0x210  Enable IRQs 1   \n0x214  Enable IRQs 2   \n0x218  Enable Basic IRQs   \n0x21C  Disable IRQs 1   \n0x220  Disable IRQs 2   \n0x224  Disable Basic IRQs   \n \nThe following is a table which lists all interrupts  which can come from the peripherals which can be \nhandled by the ARM. \n                                                             \n7 This is the offset which needs to be added to the base address to get the full hardware address.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 113 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nARM peripherals  interrupts table. \n# IRQ 0 -15  # IRQ 16 -31  # IRQ 32 -47  # IRQ 48 -63  \n0  16   32   48  smi  \n1  17   33   49  gpio_int[0]  \n2  18   34   50  gpio_int[1]  \n3  19   35   51  gpio_int[2]  \n4  20   36   52  gpio_int[3]  \n5  21   37   53  i2c_int  \n6  22   38   54  spi_int  \n7  23   39   55  pcm_int  \n8  24   40   56   \n9  25   41   57  uart_int  \n10   26   42   58   \n11   27   43  i2c_spi_slv_int  59   \n12   28   44   60   \n13   29  Aux int  45  pwa0  61   \n14   30   46  pwa1  62   \n15   31   47   63   \n \nThe table above has many empty entries. These shoul d not be enabled as they will interfere with the \nGPU operation. \nARM peripherals interrupts table. \n0 ARM Timer  \n1 ARM Mailbox  \n2 ARM Doorbell 0  \n3 ARM Doorbell 1  \n4 GPU0 halted  (Or GPU1 halted if bit 10 of control r egister 1 is set)  \n5 GPU1 halted  \n6 Illegal access type 1  \n7 Illegal access type 0  \n  \n \nBasic pending register. \nThe basic pending register shows which interrupt ar e pending. To speed up interrupts processing, a \nnumber of 'normal' interrupt status bits have been added to this register. This makes the 'IRQ \npending base'  register different from the other 'base'  interrupt registers \n \nName: IRQ pend base Address: 0x200 Reset: 0x000 \nBit(s) R/W Function \n31:21  - <unused>  \n20  R GPU IRQ 62   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 114 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nName: IRQ pend base Address: 0x200 Reset: 0x000 \n19  R GPU IRQ 57  \n18  R GPU IRQ 56  \n17  R GPU IRQ 55  \n16  R GPU IRQ 54  \n15  R GPU IRQ 53  \n14  R GPU IRQ 19  \n13  R GPU IRQ 18  \n12  R GPU IRQ 10  \n11  R GPU IRQ 9  \n10  R GPU IRQ 7  \n9 R One or more bits set in pending register 2  \n8 R One or more bits set in pending register 1  \n7 R Illegal access type 0 IRQ pending  \n6 R Illegal access type 1 IRQ pending  \n5 R GPU1 halted IRQ pending  \n4 R GPU0 halted IRQ pending  \n(Or GPU1 halted if bit 10 of control register 1 is set) \n3 R ARM Doorbell 1 IRQ pending  \n2 R ARM Doorbell 0 IRQ pending  \n1 R ARM Mailbox IRQ pending  \n0 R ARM Timer IRQ pending  \n \nGPU IRQ x (10,11..20) \nThese bits are direct interrupts from the GPU. They  have been selected as interrupts which are most \nlikely to be useful to the ARM. The GPU interrupt s elected are 7, 9, 10, 18, 19, 53,54,55,56,57,62. Fo r \ndetails see the GPU interrupts table . \nBits set in pending registers (8,9) \nThese bits indicates if there are bits set in the p ending 1/2 registers. The pending 1/2 registers hol d \nALL interrupts 0..63 from the GPU side. Some of the se 64 interrupts are also connected to the basic \npending register. Any bit set in pending register 1 /2 which is NOT connected to the basic pending \nregister causes bit 8 or 9 to set. Status bits 8 an d 9 should be seen as \"There are some interrupts \npending which you don't know about. They are in pen ding register 1 /2.\" \nIllegal access type-0 IRQ (7) \nThis bit indicate that the address/access error lin e from the ARM processor has generated an \ninterrupt. That signal is asserted when either an a ddress bit 31 or 30 was high or when an access was  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 115 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nseen on the ARM Peripheral bus. The status of that signal can be read from Error/HALT status \nregister bit 2. \nIllegal access type-1 IRQ (6) \nThis bit indicates that an address/access error is seen in the ARM control has generated an interrupt.  \nThat can either be an address bit 29..26 was high o r when a burst access was seen on the GPU \nPeripheral bus. The status of that signal can be re ad from Error/HALT status register bits 0 and 1. \nGPU-1 halted IRQ (5) \nThis bit indicate that the GPU-1 halted status bit has generated an interrupt. The status of that sign al \ncan be read from Error/HALT status register bits 4.  \nGPU-0 (or any GPU) halted IRQ (4) \nThis bit indicate that the GPU-0 halted status bit has generated an interrupt. The status of that sign al \ncan be read from Error/HALT status register bits 3.  \nIn order to allow a fast interrupt (FIQ) routine to  cope with GPU 0 OR GPU-1 there is a bit in control  \nregister 1 which, if set will also route a GPU-1 ha lted status on this bit. \nStandard peripheral IRQs (0,1,2,3) \nThese bits indicate if an interrupt is pending for one of the ARM control peripherals. \nGPU pending 1 register. \nName: IRQ pend base  Address: 0x204  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R IRQ pending source 31:0 (See IRQ table above)  \nThis register holds ALL interrupts 0..31 from the G PU side. Some of these interrupts are also \nconnected to the basic pending register. Any interr upt status bit in here which is NOT connected to \nthe basic pending will also cause bit 8 of the basi c pending register to be set. That is all bits exce pt 7, \n9, 10, 18, 19. \nGPU pending 2 register. \nName: IRQ pend base  Address: 0x208  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R IRQ pending source 63:32 (See IRQ table above)  \nThis register holds ALL interrupts 32..63 from the GPU side. Some of these interrupts are also \nconnected to the basic pending register. Any interr upt status bit in here which is NOT connected to \nthe basic pending will also cause bit 9 of the basi c pending register to be set. That is all bits exce pt . \nregister bits 21..25, 30 (Interrupts 53..57,62). \nFIQ register. \nThe FIQ register control which interrupt source can  generate a FIQ to the ARM. Only a single \ninterrupt can be selected.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 116 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nName: FIQ  Address: 0x20C  Reset: 0x000  \nBit(s)  R/W  Function  \n31:8  R <unused>  \n7 R FIQ enable. Set this bit to 1 to enable FIQ generat ion.  \nIf set to 0 bits 6:0 are don't care. \n6:0  R/W  Select FIQ Source  \n \nFIQ Source. \nThe FIQ source values 0-63 correspond to the GPU in terrupt table. (See above) \nThe following values can be used to route ARM speci fic interrupts to the FIQ vector/routine: \nFIQ index  Source  \n0-63  GPU Interrupts (See GPU IRQ table)  \n64  ARM Timer interrupt  \n65  ARM Mailbox interrupt  \n66  ARM Doorbell 0 interrupt  \n67  ARM Doorbell 1 interrupt  \n68  GPU0 Halted interrupt (Or GPU1)  \n69  GPU1 Halted interrupt  \n70  Illegal access type -1 interrupt  \n71  Illegal access type -0 interrupt  \n72 -127  Do Not Use  \n \n \nInterrupt enable register 1. \nName: IRQ enable 1  Address: 0x210  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R/Wbs  Set to enable IRQ source 31:0 (See IRQ table above)  \nWriting a 1 to a bit will set the corresponding IRQ  enable bit. All other IRQ enable bits are \nunaffected. Only bits which are enabled can be seen  in the interrupt pending registers. There is no \nprovision here to see if there are interrupts which  are pending but not enabled. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 117 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nInterrupt enable register 2. \nName: IRQ enable 2  Address: 0x214  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R/Wbs  Set to enable IRQ source 63:32 (See IRQ table above )  \nWriting a 1 to a bit will set the corresponding IRQ  enable bit. All other IRQ enable bits are \nunaffected. Only bits which are enabled can be seen  in the interrupt pending registers. There is no \nprovision here to see if there are interrupts which  are pending but not enabled. \n \nBase Interrupt enable register. \nName: IRQ enable 3  Address: 0x218  Reset: 0x000  \nBit(s)  R/W  Function  \n31:8  R/Wbs  <Unused>  \n7 R/Wbs  Set to enable Access error type -0 IRQ  \n6 R/Wbs  Set to enable Access error type -1 IRQ  \n5 R/Wbs  Set to enable GPU 1 Halted IRQ  \n4 R/Wbs  Set to enable GPU 0 Halted IRQ  \n3 R/Wbs  Set to enable ARM Doorbell 1 IRQ  \n2 R/Wbs  Set to enable ARM Doorbell 0 IRQ  \n1 R/Wbs  Set to enable ARM Mailbox IRQ  \n0 R/Wbs  Set to enable ARM Timer IRQ  \nWriting a 1 to a bit will set the corresponding IRQ  enable bit. All other IRQ enable bits are \nunaffected. Again only bits which are enabled can b e seen in the basic pending register. There is no \nprovision here to see if there are interrupts which  are pending but not enabled. \n \nInterrupt disable register 1. \nName: IRQ disable 1  Address: 0x21C  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R/Wbc  Set to disable IRQ source 31:0 (See IRQ table above )  \nWriting a 1 to a bit will clear the corresponding I RQ enable bit. All other IRQ enable bits are \nunaffected. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 118 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nInterrupt disable register 2. \nName: IRQ disable 2  Address: 0x220  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R/Wbc  Set to disable IRQ source 63:32 (See IRQ table abov e)  \nWriting a 1 to a bit will clear the corresponding I RQ enable bit. All other IRQ enable bits are \nunaffected. \n \nBase disable register. \nName: IRQ disable 3  Address: 0x224  Reset: 0x000  \nBit(s)  R/W  Function  \n31:8  - <Unused>  \n7 R/Wbc  Set to disable Access error type -0 IRQ  \n6 R/Wbc  Set to disable Access error type -1 IRQ  \n5 R/Wbc  Set to disable GPU 1 Halted IRQ  \n4 R/Wbc  Set to disable GPU 0 Halted IRQ  \n3 R/Wbc  Set to disable ARM Doorbell 1 IRQ  \n2 R/Wbc  Set to disable ARM Doorbell 0 IRQ  \n1 R/Wbc  Set to disable ARM Mailbox IRQ  \n0 R/Wbc  Set to disable ARM Timer IRQ  \nWriting a 1 to a bit will clear the corresponding I RQ enable bit. All other IRQ enable bits are \nunaffected. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 119 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 PCM / I2S Audio  \nThe PCM audio interface is an APB peripheral providin g input and output of telephony or \nhigh quality serial audio streams. It supports many classi c PCM formats including I2S. \nThe PCM audio interface has 4 interface signals;  \nPCM_CLK  - bit clock.  \nPCM_FS  - frame sync signal. \nPCM_DIN - serial data input. \nPCM_DOUT - serial data output. \nPCM is a serial format with a single bit data_in and si ngle bit data_out. Data is always \nserialised MS-bit first.  \nThe frame sync signal (PCM_FS) is used to delimit the ser ial data into individual frames. The \nlength of the frame and the size and position of the fr ame sync are fully programmable. \nFrames can contain 1 or 2 audio/data channels in each dir ection.  Each channel can be \nbetween 8 and 32 bits wide and can be positioned anywhere wit hin the frame as long as the \ntwo channels don\u2019t overlap.  The channel format is sepa rately programmable for transmit and \nreceive directions.   \n \nPCM_CLK \nPCM_FS \nMS LS Ch. 1 MS LS Ch. 2 PCM_DIN \nPCM_DOUT CH1POS CH1WID CH2WID \nCH2POS FSLEN \nFLEN \nMS LS Ch. 1 MS LS Ch. 2 \nCH1POS CH1WID CH2WID \nCH2POS \n \nFigure 8-1 PCM Audio Interface Typical Timing \n \nThe PCM_CLK can be asynchronous to the bus APB clock a nd can be logically inverted if \nrequired. \nThe direction of the PCM_CLK and PCM_FS signals can be individually selected, allowing \nthe interface to act as a master or slave device.  \nThe input interface is also capable of supporting up to 2 PDM microphones, as an alternative \nto the classic PCM input format, in conjunction with a P CM output.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 120 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8.1 Block Diagram \n \nFigure 8-2 PCM Audio Interface Block Diagram \n \nThe PCM audio interface contains separate transmit an d receive FIFOs. Note that if the frame \ncontains two data channels, they must share the same F IFO and so the channel data will be \ninterleaved. The block can be driven using simple polling, an  interrupt based method or direct \nDMA control.  \n \n8.2 Typical Timing \nFigure 8-1 shows typical interface timing and indicates th e flexibility that the peripheral \noffers. \nNormally PCM output signals change on the rising edge of PCM_CLK and input signals are \nsampled on its falling edge. The frame sync is considered as a data signal and sampled in the \nsame way. \nThe front end of the PCM audio interface is run off th e PCM_CLK and the PCM signals are \ntimed against this clock.  However, the polarity of the PCM_CLK can be physically inverted, \nin which case the edges are reversed. \nIn clock master mode (CLKM=0), the PCM_CLK is an output a nd is driven from the  \nPCM_MCLK clock input.  \nIn clock slave mode (CLKM=1), the PCM_CLK is an input, suppli ed by some external clock \nsource.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 121 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nIn frame sync master mode (FSM=0), the PCM_FS is inter nally generated and is treated as a \ndata output that changes on the positive edge of the cloc k. The length and polarity of the \nframe sync is fully programmable and it can be used as a s tandard frame sync signal, or as an \nL-R signal for I2S.   \nIn frame sync slave mode (FSM=1), the  PCM_FS is treated  as a data input and is sampled on \nthe negative edge of PCM_CLK.  The first clock of a fra me is taken as the first clock period \nwhere PCM_FS is sampled as a 1 following a period or periods  where it was previously a 0. \nThe PCM audio interface locks onto the incoming frame sync and uses this to indicate where \nthe data channels are positioned. The precise timing at t he start of frame is shown in Figure \n8-3.  \nNote that in frame sync slave mode there are two synchro nising methods. The legacy method \nis used when the frame length = 0. In this case the inte rnal frame logic has to detect the \nincoming PCM_FS signal and reset the internal frame coun ter at the start of every frame.  \nThe logic relies on the PCM_FS to indicate the length  of the frame and so can cope with \nadjacent frames of different lengths. However, this cr eates a short timing path that will \ncorrupt the PCM_DOUT for one specific frame/channel sett ing. \nThe preferred method is to set the frame length to the expected length. Here the incoming \nPCM_FS is used to resynchronise the internal frame count er and this eliminates the short \ntiming path.  \n8.3 Operation \nThe PCM interface runs asynchronously at the PCM_CLK rat e and automatically transfers \ntransmit and receive data across to the internal APB c lock domain.  The control registers are \nNOT synchronised and should be programmed before the device is enabled and should NOT \nbe changed whilst the interface is running. \nOnly the EN, RXON and TXON bits of the PCMCS register  are synchronised across the \nPCM - APB clock domain and are allowed to be changed whils t the interface is running. \nThe EN bit is a global power-saving enable. The TXON and RX ON bits enable transmit and \nreceive, and the interface is running whenever either TXON  or RXON is enabled. \nIn operation, the PCM format is programmed by setting the  appropriate frame length, frame \nsync, channel position values, and signal polarity controls .   The transmit FIFO should be \npreloaded with data and the interface can then be enabled and started, and will run \ncontinuously until stopped.  If the transmit FIFO become s empty or the receive FIFO \nbecomes full, the RXERR or TXERR error flags will be set, but the interface will just \ncontinue. If the RX FIFO overflows, new samples are discarded and if the TX FIFO \nunderflows, zeros are transmitted. \nNormally channel data is read or written into the appropri ate FIFO as a single word. If the \nchannel is less than 32 bits, the data is right justified and should be padded with zeros.  If the \nRXSEX bit is set then the received data is sign extended up to the full 32 bits. When a frame \nis programmed to have two data channels, then each channel  is written/read as a separate \nword in the FIFO, producing an interleaved data stream.  Wh en initialising the interface, the \nfirst word read out of the TX FIFO will be used for the first channel, and the data from the \nfirst channel on the first frame to be received will b e the first word written into the RX FIFO.  \nIf a FIFO error occurs in a two channel frame, then c hannel synchronisation may be lost \nwhich may result in a left right audio channel swap. RX SYNC and TXSYNC status bits are  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 122 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nprovided to help determine if channel slip has occurred. They i ndicate if the number of words \nin the FIFO is a multiple of a full frame (taking in to account where we are in the current \nframe being transferred). This assumes that an integer n umber of frames data has been \nsent/read from the FIFOs. \nIf a frame is programmed to have two data channels and the  packed mode bits are set (FRXP \nFTXP) then the FIFOs are configured so that each word co ntains the data for both channels \n(2x 16 bit samples). In this mode each word written to the  TX FIFO contains 2 16 bit \nsamples, and the Least Significant sample is transmit ted first. Each word read from the RX \nFIFO will contain the data received from 2 channels, the f irst channel received will be in the \nLeast Significant half of the word. If the channels si ze is less than 16 bits, the TX data will be \ntruncated and RX data will be padded to 16 bits with zeros. \nNote that data is always serialised MS-bit first. This i s well-established behaviour in both \nPCM and I2S. \nIf the PDM input mode is enabled then channel 1 is sampled on the negative edge of \nPCM_CLK whilst channel 2 is sampled on the positive edge of  PCM_CLK. \n \nPCM_CLK \nPCM_FS Clock 0 \nPCM_DIN \nPCM_DOUT Clock 1 \nSampling \nwindow Clock 2 \n \nFigure 8-3 Timing at Start of Frame \nNote that the precise timing of FS (when it is an input) i s not clearly defined and it may \nchange state before or after the positive edge of the clock.  Here the first clock of the frame is \ndefined as the clock period where the PCM_FS is sampled (n egative edge) as a 1 where it \nwas previously sampled as a 0. \n \n8.4 Software Operation \n8.4.1 Operating in Polled mode \nSet the EN bit to enable the PCM block. Set all operatio nal values to define the frame and \nchannel settings.  Assert RXCLR and/or TXCLR wait for 2 PCM clocks to ensure the \nFIFOs are reset. The SYNC bit can be used to determine w hen 2 clocks have passed. \nSet RXTHR/TXTHR to determine the FIFO thresholds.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 123 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nIf transmitting, ensure that sufficient sample words ha ve been written to PCMFIFO \nbefore transmission is started.  Set TXON and/or RXO N to begin operation. Poll \nTXW writing sample words to PCMFIFO and RXR reading sam ple words from \nPCMFIFO until all data is transferred. \n8.4.2 Operating in Interrupt mode \na)  Set the EN bit to enable the PCM block. Set all operatio nal values to define the frame \nand channel settings.  Assert RXCLR and/or TXCLR wait fo r 2 PCM clocks to ensure \nthe FIFOs are reset. The SYNC bit can be used to determ ine when 2 clocks have \npassed. Set RXTHR/TXTHR to determine the FIFO thresholds.   \nb)  Set INTR and/or INTT to enable interrupts. \nc)  If transmitting, ensure that sufficient sample words ha ve been written to PCMFIFO \nbefore transmission is started.  Set TXON and/or RXON to begin operation.  \nd)  When an interrupt occurs, check RXR. If this is set then  one or more sample words \nare available in PCMFIFO. If TXW is set then one or mo re sample words can be sent \nto PCMFIFO. \n8.4.3 DMA \na)  Set the EN bit to enable the PCM block. Set all operatio nal values to define the frame \nand channel settings.  Assert RXCLR and/or TXCLR wait fo r 2 PCM clocks to ensure \nthe FIFOs are reset. The SYNC bit can be used to determ ine when 2 clocks have \npassed.  \nb)  Set DMAEN  to enable DMA DREQ generation and set RXREQ/TXREQ to det ermine \nthe FIFO thresholds for the DREQs.   If required, set TXPANIC and RXPANIC to \ndetermine the level at which the DMA should increase it s AXI priority, \nc)  In the DMA controllers set the correct DREQ channels , one for RX and one for TX. \nStart the DMA which should fill the TX FIFO. \nd)  Set TXON and/or RXON to begin operation. \n \n8.5 Error Handling. \nIn all software operational modes, the possibility of FIFO over or under run exists. Should this \nhappen when using 2 channels per frame, there is a risk of losing sync with the channel data stored \nin the FIFO.  If this happens and is not detected a nd corrected, then the data channels may become \nswapped. \n \nThe FIFO\u2019s will automatically detect an error condi tion caused by a FIFO over or under-run and this \nwill set the appropriate latching error bit in the control/status register. Writing a \u20181\u2019 back to this  \nerror bit will clear the latched flag. \n \nIn a system using a polled operation, the error bit s can be checked manually. For an interrupt or \nDMA based system, setting the INTE bit will cause t he PCM interface to generate an interrupt when \nan error is detected.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 124 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nIf a FIFO error occurs during operation in which 2 data channels are being used then the \nsynchronisation of the data may be lost. This can b e recovered by either of these two methods: \n \na)  Disable transmit and receive (TXON and RXON =0).  Clear the FIFO\u2019s (RXCLR and \nTXCLR =1). Note that it may take up to 2 PCM clocks for t he FIFOs to be physically \ncleared after initiating a clear.  Then preload the trans mit FIFO and restart \ntransmission. This of course loses the data in the FIF O and further interrupts the data \nflow to the external device. \nb)  Examine the TXSYNC and RXSYNC flags. These flags in dicate if the amount of data in the FIFO \nis a whole number of frames, automatically taking i nto account where we are in the current \nframe being transmitted or received.  Thus, providi ng an even number of samples was read \nor written to the FIFOs, then if the flags are set then this indicates that a single word needs \nto be written or read to adjust the data. Normal ex change of data can then proceed (where \nthe first word in a data pair is for channel 1). Th is method should cause less disruption to the \ndata stream.  \n8.6 PDM Input Mode Operation \nThe PDM input mode is capable of interfacing with two digita l half-cycle PDM microphones \nand implements a 4 th  order CIC decimation filter with a selectable decimati on factor. The \nclock input of the microphones is shared with the PCM output  codec and it should be \nconfigured to provide the correct clock rate for the micr ophones. As a result it may be \nnecessary to add a number of padding bits into the PCM output  and configure the output \ncodec to allow for this. \nWhen using the PDM input mode the bit width and the rate of t he data received will depend \non the decimation factor used. Once the data has been r ead from the peripheral a further \ndecimation and filtering stage will be required and can be i mplemented in software. The \nsoftware filter should also correct the droop introduced by the CIC filter stage. Similarly a \nDC correction stage should also be employed. \n PDMN PCM_CLK (MHz)  Peripheral Output Format  OSR Fs \n0 (N=16) 3.072  16 bits unsigned  4 48kHz \n1 (N=32) 3.072 20 bits unsigned 2 48kHz \n  \nTable 8-1 PDM Input Mode Configuration \n \n8.7 GRAY Code Input Mode Operation \nGRAY mode is used for an incoming data stream only. GRAY mo de is selected by setting \nthe enable bit (EN) in the PCM_GRAY register. \nIn this mode data is received on the PCM_DIN (data) and the  PCM_FS (strobe) pins. The \ndata is expected to be in data/strobe format.  In this m ode data is detected when either the \ndata or the strobe change state. As each bit is receiv ed it is written into the RX buffer and \nwhen 32 bits are received they are written out to the RX FIFO as a 32 bit word. In order for \nthis mode to work the user must program a PCM clock rate whi ch is 4 times faster then the \ngray data rate. Also the gray coded data input signals shoul d be clean.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 125 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nThe normal RXREQ and RXTHR FIFO levels will apply as for normal PCM received data. \nIf a message is received that is not a multiple of 32 bit s, any data in the RX Buffer can be \nflushed out by setting the flush bit (FLUSH). Once set, t his bit will read back as zero until the \nflush operation has completed. This may take several cycl es as the APB clock may be many \ntimes faster than the PCM clock. Once the flush has occurred, the bits are packed up to 32 \nbits with zeros and written out to the RXFIFO. The fl ushed field (FLUSHED) will indicate \nhow many of bits of this word are valid. \nNote that to get an accurate indication of the number of bits currently in the rx shift register \n(RXLEVEL) the APB clock must be at least 2x the PCM_CL K. \n \nFigure 8-4 Gray mode input format \n8.8 PCM Register Map \nThere is only PCM module in the BCM2835. The PCM base address  for the registers is \n0x7E203000. \n \nPCM Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 CS_A  PCM Control and Status 32 \n0x4 FIFO_A  PCM FIFO Data 32 \n0x8 MODE_A  PCM Mode 32 \n0xc RXC_A  PCM Receive Configuration 32 \n0x10 TXC_A  PCM Transmit Configuration 32 \n0x14 DREQ_A  PCM DMA Request Level 32  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 126 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x18 INTEN_A  PCM Interrupt Enables 32 \n0x1c INTSTC_A  PCM Interrupt Status & Clear 32 \n0x20 GRAY  PCM Gray Mode Control 32 \n \n \nCS_A Register  \nSynopsis  This register contains the main control and status bi ts for the PCM. The bottom 3 bits \nof this register can be written to whilst the PCM is  running. The remaining bits cannot. \nBit(s)  Field Name  Description  Type  Reset  \n31:26  Reserved  - Write as 0, read as don't care    \n25 STBY RAM Standby  \nThis bit is used to control the PCM Rams \nstandby mode. By default this bit is 0 causing \nRAMs to start initially in standby mode. Rams \nshould be released from standby prior to any \ntransmit/receive operation. Allow for at least 4 \nPCM clock cycles to take effect. This may or \nmay not be implemented, depending upon the \nRAM libraries being used. RW 0x0 \n24 SYNC PCM Clock sync helper.  \nThis bit provides a software synchronisation \nmechanism to allow the software to detect when \n2 PCM clocks have occurred. It takes 2 PCM \nclocks before the value written to this bit will be \nechoed back in the read value. RW 0x0 \n23 RXSEX RX Sign Extend  \n0 = No sign extension. \n1 = Sign extend the RX data. When set, the MSB \nof the received data channel (as set by the \nCHxWID parameter) is repeated in all the higher \ndata bits up to the full 32 bit data width. RW 0x0 \n22 RXF RX FIFO is Full  \n0 = RX FIFO can accept more data. \n1 = RX FIFO is full and will overflow if more data \nis received. RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 127 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n21 TXE TX FIFO is Empty  \n0 = TX FIFO is not empty. \n1 = TX FIFO is empty and underflow will take \nplace if no more data is written. RO 0x1 \n20 RXD Indicates that the RX FIFO contains data  \n0 = RX FIFO is empty. \n1 = RX FIFO contains at least 1 sample. RO 0x0 \n19 TXD Indicates that the TX FIFO can accept data  \n0 = TX FIFO is full and so cannot accept more \ndata. \n1 = TX FIFO has space for at least 1 sample. RO 0x1 \n18 RXR Indicates that the RX FIFO needs reading  \n0 = RX FIFO is less than RXTHR full. \n1 = RX FIFO is RXTHR or more full. \nThis is cleared by reading sufficient data from \nthe RX FIFO. RO 0x0 \n17 TXW Indicates that the TX FIFO needs Writing  \n0 = TX FIFO is at least TXTHR full. \n1 = TX FIFO is less then TXTHR full. \nThis is cleared by writing sufficient data to the \nTX FIFO. RO 0x1 \n16 RXERR RX FIFO Error  \n0 = FIFO has had no errors. \n1 = FIFO has had an under or overflow error. \nThis flag is cleared by writing a 1. RW 0x0 \n15 TXERR TX FIFO Error  \n0 = FIFO has had no errors. \n1 = FIFO has had an under or overflow error. \nThis flag is cleared by writing a 1. RW 0x0 \n14 RXSYNC RX FIFO Sync  \n0 = FIFO is out of sync. The amount of data left \nin the FIFO is not a multiple of that required for a \nframe. This takes into account if we are halfway \nthrough the frame. \n1 = FIFO is in sync. RO 0x0 \n13 TXSYNC TX FIFO Sync  \n0 = FIFO is out of sync. The amount of data left \nin the FIFO is not a multiple of that required for a \nframe. This takes into account if we are halfway \nthrough the frame. \n1 = FIFO is in sync. RO 0x0 \n12:10  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 128 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n9 DMAEN DMA DREQ Enable  \n0 = Don t generate DMA DREQ requests. \n1 = Generates a TX DMA DREQ requests \nwhenever the TX FIFO level is lower than \nTXREQ or generates a RX DMA DREQ when \nthe RX FIFO level is higher than RXREQ. RW 0x0 \n8:7 RXTHR Sets the RX FIFO threshold at which point the \nRXR flag is set  \n00 = set when we have a single sample in the \nRX FIFO \n01 = set when the RX FIFO is at least full \n10 = set when the RX FIFO is at least \n11 = set when the RX FIFO is full RW 0x0 \n6:5 TXTHR Sets the TX FIFO threshold at which point the \nTXW flag is set  \n00 = set when the TX FIFO is empty \n01 = set when the TX FIFO is less than full \n10 = set when the TX FIFO is less than full \n11 = set when the TX FIFO is full but for one \nsample RW 0x0 \n4 RXCLR Clear the RX FIFO .  \nAssert to clear RX FIFO. This bit is self clearing \nand is always read as clear \nNote that it will take 2 PCM clocks for the FIFO \nto be physically cleared. WO 0x0 \n3 TXCLR Clear the TX FIFO  \nAssert to clear TX FIFO. This bit is self clearing \nand is always read as clear. \nNote that it will take 2 PCM clocks for the FIFO \nto be physically cleared. WO 0x0 \n2 TXON Enable transmission  \n0 = Stop transmission. This will stop immediately \nif possible or else at the end of the next frame. \nThe TX FIFO can still be written to to preload \ndata. \n1 = Start transmission. This will start transmittin g \nat the start of the next frame. Once enabled, the \nfirst data read from the TX FIFO will be placed in \nthe first channel of the frame, thus ensuring \nproper channel synchronisation. \nThe frame counter will be started whenever \nTXON or RXON are set. \nThis bit can be written whilst the interface is \nrunning. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 129 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n1 RXON Enable reception.  \n0 = Disable reception. This will stop on the next \navailable frame end. RX FIFO data can still be \nread. \n1 = Enable reception. This will be start receiving \nat the start of the next frame. The first channel to  \nbe received will be the first word written to the \nRX FIFO. \nThis bit can be written whilst the interface is \nrunning. RW 0x0 \n0 EN Enable the PCM Audio Interface  \n0 = The PCM interface is disabled and most \nlogic is gated off to save power. \n1 = The PCM Interface is enabled. \nThis bit can be written whilst the interface is \nrunning. RW 0x0 \n \n \nFIFO_A Register  \nSynopsis  This is the FIFO port of the PCM. Data written here  is transmitted, and received data is \nread from here. \nBit(s)  Field Name  Description  Type  Reset  \n31:0  Reserved  - Write as 0, read as don't care    \n \n \nMODE_A Register  \nSynopsis  This register defines the basic PCM Operating Mode. It is used to configure the frame \nsize and format and whether the PCM is in master or slave modes for its frame sync or \nclock. This register cannot be changed whilst the PCM i s running. \nBit(s)  Field Name  Description  Type  Reset  \n31:29  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 130 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n28 CLK_DIS PCM Clock Disable  \n1 = Disable the PCM Clock. \nThis cleanly disables the PCM clock. This \nenables glitch free clock switching between an \ninternal and an uncontrollable external clock. \nThe PCM clock can be disabled, and then the \nclock source switched, and then the clock re-\nenabled. \n0 = Enable the PCM clock. RW 0x0 \n27 PDMN PDM Decimation Factor (N)  \n0 = Decimation factor 16. \n1 = Decimation factor 32. \nSets the decimation factor of the CIC decimation \nfilter. RW 0x0 \n26 PDME PDM Input Mode Enable  \n0 = Disable PDM (classic PCM input). \n1 = Enable PDM input filter. \nEnable CIC filter on input pin for PDM inputs. In \norder to receive data RXON must also be set. RW 0x0 \n25 FRXP Receive Frame Packed Mode  \n0 = The data from each channel is written into \nthe RX FIFO. \n1 = The data from both RX channels is merged \n(1st channel is in the LS half) and then written to \nthe RX FIFO as a single 2x16 bit packed mode \nword. \nFirst received channel in the frame goes into the \nLS half word. If the received data is larger than \n16 bits, the upper bits are truncated. The \nmaximum channel size is 16 bits. RW 0x0 \n24 FTXP Transmit Frame Packed Mode  \n0 = Each TX FIFO word is written into a single \nchannel. \n1 = Each TX FIFO word is split into 2 16 bit \nwords and used to fill both data channels in the \nsame frame. The maximum channel size is 16 \nbits. \nThe LS half of the word is used in the first \nchannel of the frame. RW 0x0 \n23 CLKM PCM Clock Mode  \n0 = Master mode. The PCM CLK is an output \nand drives at the MCLK rate. \n1 = Slave mode. The PCM CLK is an input. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 131 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n22 CLKI Clock Invert this logically inverts the PCM_CLK \nsignal.  \n0 = Outputs change on rising edge of clock, \ninputs are sampled on falling edge. \n1 = Outputs change on falling edge of clock, \ninputs are sampled on rising edge. RW 0x0 \n21 FSM Frame Sync Mode  \n0 = Master mode. The PCM_FS is an output and \nwe generate the frame sync. \n1 = Slave mode. The PCM_FS is an input and \nwe lock onto the incoming frame sync signal. RW 0x0 \n20 FSI Frame Sync Invert This logically inverts the \nframe sync signal.  \n0 = In master mode, FS is normally low and goes \nhigh to indicate frame sync. In slave mode, the \nframe starts with the clock where FS is a 1 after \nbeing a 0. \n1 = In master mode, FS is normally high and \ngoes low to indicate frame sync. In slave mode, \nthe frame starts with the clock where FS is a 0 \nafter being a 1. RW 0x0 \n19:10 FLEN Frame Length  \nSets the frame length to (FLEN+1) clocks. \nUsed only when FSM == 0. \n1 = frame length of 2 clocks. \n2 = frame length of 3 clocks. etc RW 0x0 \n9:0 FSLEN Frame Sync Length  \nSets the frame sync length to (FSLEN) clocks. \nThis is only used when FSM == 0. \nPCM_FS will remain permanently active if \nFSLEN >= FLEN. \n0 = frame sync pulse is off. \n1 = frame sync pulse is 1 clock wide. etc RW 0x0 \n \n \nRXC_A Register  \nSynopsis  Sets the Channel configurations for Receiving. This s ets the position and width of the 2 \nreceive channels within the frame. The two channels can not overlap, however they \nchannel 1 can come after channel zero, although the firs t data will always be from the \nfirst channel in the frame. Channels can also straddl e the frame begin end boundary \nas that is set by the frame sync position. This regist er cannot be changed whilst the \nPCM is running. \nBit(s)  Field Name  Description  Type  Reset   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 132 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n31 CH1WEX Channel 1 Width Extension Bit  \nThis is the MSB of the channel 1 width \n(CH1WID). It allows widths greater than 24 bits \nto be programmed and is added here to keep \nbackwards compatibility with older versions of \nthe PCM RW 0x0 \n30 CH1EN Channel 1 Enable  \n0 = Channel 1 disabled and no data is received \nfrom channel 1 and written to the RX FIFO. \n1 = Channel 1 enabled. RW 0x0 \n29:20 CH1POS Channel 1 Position  \nThis sets the bit clock at which the first bit (MS \nbit) of channel 1 data occurs in the frame. \n0 indicates the first clock of frame. RW 0x0 \n19:16 CH1WID Channel 1 Width  \nThis sets the width of channel 1 in bit clocks. \nThis field has been extended with the CH1WEX \nbit giving a total width of (CH1WEX* 16) + \nCH1WID + 8. The Maximum supported width is \n32 bits. \n0 = 8 bits wide \n1 = 9 bits wide RW 0x0 \n15 CH2WEX Channel 2 Width Extension Bit  \nThis is the MSB of the channel 2 width \n(CH2WID). It allows widths greater than 24 bits \nto be programmed and is added here to keep \nbackwards compatibility with older versions of \nthe PCM RW 0x0 \n14 CH2EN Channel 2 Enable  \n0 = Channel 2 disabled and no data is received \nfrom channel 2 and written to the RX FIFO. \n1 = Channel 2 enabled. RW 0x0 \n13:4 CH2POS Channel 2 Position  \nThis sets the bit clock at which the first bit (MS \nbit) of channel 2 data occurs in the frame. \n0 indicates the first clock of frame. RW 0x0 \n3:0 CH2WID Channel 2 Width  \nThis sets the width of channel 2 in bit clocks. \nThis field has been extended with the CH2WEX \nbit giving a total width of (CH2WEX* 16) + \nCH2WID + 8. The Maximum supported width is \n32 bits. \n0 = 8 bits wide \n1 = 9 bits wide RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 133 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTXC_A Register  \nSynopsis  Sets the Channel configurations for Transmitting. Th is sets the position and width of \nthe 2 transmit channels within the frame. The two cha nnels cannot overlap, however \nthey channel 1 can come after channel zero, although the first data will always be used \nin the first channel in the frame. Channels can also straddle the frame begin end \nboundary as that is set by the frame sync position. Thi s register cannot be changed \nwhilst the PCM is running. \nBit(s)  Field Name  Description  Type  Reset  \n31 CH1WEX Channel 1 Width Extension Bit  \nThis is the MSB of the channel 1 width \n(CH1WID). It allows widths greater than 24 bits \nto be programmed and is added here to keep \nbackwards compatibility with older versions of \nthe PCM RW 0x0 \n30 CH1EN Channel 1 Enable  \n0 = Channel 1 disabled and no data is taken \nfrom the TX FIFO and transmitted on channel 1. \n1 = Channel 1 enabled. RW 0x0 \n29:20 CH1POS Channel 1 Position  \nThis sets the bit clock at which the first bit (MS \nbit) of channel 1 data occurs in the frame. \n0 indicates the first clock of frame. RW 0x0 \n19:16 CH1WID Channel 1 Width  \nThis sets the width of channel 1 in bit clocks. \nThis field has been extended with the CH1WEX \nbit giving a total width of (CH1WEX* 16) + \nCH1WID + 8. The Maximum supported width is \n32 bits. \n0 = 8 bits wide \n1 = 9 bits wide RW 0x0 \n15 CH2WEX Channel 2 Width Extension Bit  \nThis is the MSB of the channel 2 width \n(CH2WID). It allows widths greater than 24 bits \nto be programmed and is added here to keep \nbackwards compatibility with older versions of \nthe PCM RW 0x0 \n14 CH2EN Channel 2 Enable  \n0 = Channel 2 disabled and no data is taken \nfrom the TX FIFO and transmitted on channel 2. \n1 = Channel 2 enabled. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 134 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n13:4 CH2POS Channel 2 Position  \nThis sets the bit clock at which the first bit (MS \nbit) of channel 2 data occurs in the frame. \n0 indicates the first clock of frame. RW 0x0 \n3:0 CH2WID Channel 2 Width  \nThis sets the width of channel 2 in bit clocks. \nThis field has been extended with the CH2WEX \nbit giving a total width of (CH2WEX* 16) + \nCH2WID + 8. The Maximum supported width is \n32 bits. \n0 = 8 bits wide \n1 = 9 bits wide RW 0x0 \n \n \nDREQ_A Register  \nSynopsis  Set the DMA DREQ and Panic thresholds. The PCM drive s 2 DMA controls back to the \nDMA, one for the TX channel and one for the RX channe l. DMA DREQ is used to \nrequest the DMA to perform another transfer, and DM A Panic is used to tell the DMA \nto use its panic level of priority when requesting t hins on the AXI bus. This register \ncannot be changed whilst the PCM is running. \nBit(s)  Field Name  Description  Type  Reset  \n31  Reserved  - Write as 0, read as don't care    \n30:24 TX_PANIC TX Panic Level  \nThis sets the TX FIFO Panic level. When the \nlevel is below this the PCM will assert its TX \nDMA Panic signal. RW 0x10 \n23  Reserved  - Write as 0, read as don't care    \n22:16 RX_PANIC RX Panic Level  \nThis sets the RX FIFO Panic level. When the \nlevel is above this the PCM will assert its RX \nDMA Panic signal. RW 0x30 \n15  Reserved  - Write as 0, read as don't care    \n14:8 TX TX Request Level  \nThis sets the TX FIFO DREQ level. When the \nlevel is below this the PCM will assert its DMA \nDREQ signal to request more data is written to \nthe TX FIFO. RW 0x30 \n7  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 135 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6:0 RX RX Request Level  \nThis sets the RX FIFO DREQ level. When the \nlevel is above this the PCM will assert its DMA \nDREQ signal to request that some more data is \nread out of the RX FIFO. RW 0x20 \n \n \nINTEN_A Register  \nSynopsis  Set the reasons for generating an Interrupt. This r egister cannot be changed whilst the \nPCM is running. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 RXERR RX Error Interrupt  \nSetting this bit enables interrupts from PCM \nblock when RX FIFO error occurs. RW 0x0 \n2 TXERR TX Error Interrupt  \nSetting this bit enables interrupts from PCM \nblock when TX FIFO error occurs. RW 0x0 \n1 RXR RX Read Interrupt Enable  \nSetting this bit enables interrupts from PCM \nblock when RX FIFO level is greater than or \nequal to the specified RXTHR level. RW 0x0 \n0 TXW TX Write Interrupt Enable  \nSetting this bit enables interrupts from PCM \nblock when TX FIFO level is less than the \nspecified TXTHR level. RW 0x0 \n \n \nINTSTC_A Register  \nSynopsis  This register is used to read and clear the PCM inte rrupt status. Writing a 1 to the \nasserted bit clears the bit. Writing a 0 has no effe ct. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 136 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n3 RXERR RX Error Interrupt Status / Clear  \nThis bit indicates an interrupt occurred on RX \nFIFO Error. \nWriting 1 to this bit clears it. Writing 0 has no \neffect. RW 0x0 \n2 TXERR TX Error Interrupt Status / Clear  \nThis bit indicates an interrupt occurred on TX \nFIFO Error. \nWriting 1 to this bit clears it. Writing 0 has no \neffect. RW 0x0 \n1 RXR RX Read Interrupt Status / Clear  \nThis bit indicates an interrupt occurred on RX \nRead. \nWriting 1 to this bit clears it. Writing 0 has no \neffect. RW 0x0 \n0 TXW TX Write Interrupt Status / Clear  \nThis bit indicates an interrupt occurred on TX \nWrite. \nWriting 1 to this bit clears it. Writing 0 has no \neffect. RW 0x0 \n \n \nGRAY Register  \nSynopsis  This register is used to control the gray mode gener ation. This is used to put the PCM \ninto a special data/strobe mode. This mode is under 'best effort ' contract. \nBit(s)  Field Name  Description  Type  Reset  \n31:22  Reserved  - Write as 0, read as don't care    \n21:16 RXFIFOLEVEL The Current level of the RXFIFO  \nThis indicates how many words are currently in \nthe RXFIFO. RO 0x0 \n15:10 FLUSHED The Number of bits that were flushed into the \nRXFIFO  \nThis indicates how many bits were valid when \nthe flush operation was performed. The valid bits \nare from bit 0 upwards. Non-valid bits are set to \nzero. RO 0x0 \n9:4 RXLEVEL The Current fill level of the RX Buffer  \nThis indicates how many GRAY coded bits have \nbeen received. When 32 bits are received, they \nare written out into the RXFIFO. RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 137 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n3  Reserved  - Write as 0, read as don't care    \n2 FLUSH Flush the RX Buffer into the RX FIFO  \nThis forces the RX Buffer to do an early write. \nThis is necessary if we have reached the end of \nthe message and we have bits left in the RX \nBuffer. Flushing will write these bits as a single \n32 bit word, starting at bit zero. Empty bits will be  \npacked with zeros. The number of bits written \nwill be recorded in the FLUSHED Field. \nThis bit is written as a 1 to initiate a flush. It will \nread back as a zero until the flush operation has \ncompleted (as the PCM Clock may be very \nslow). RW 0x0 \n1 CLR Clear the GRAY Mode Logic  \nThis Bit will reset all the GRAY mode logic, and \nflush the RX buffer. It is not self clearing. RW 0x0 \n0 EN Enable GRAY Mode  \nSetting this bit will put the PCM into GRAY \nmode. In gray mode the data is received on the \ndata in and the frame sync pins. The data is \nexpected to be in data/strobe format. RW 0x0 \n \n \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 138 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n9 Pulse Width Modulator \n9.1 Overview \nThis section specifies in detail the functionality provided by the device Pulse Width Modulator \n(PWM) peripheral.  \n \nThe PWM controller incorporates the following features: \n\u2022 Two independent output bit-streams, clocked at a fixed frequen cy. \n\u2022 Bit-streams configured individually to output either PWM or  a serialised version of a \n32-bit word. \n\u2022 PWM outputs have variable input and output resolutions. \n\u2022 Serialise mode configured to load data to and/or read data fro m a FIFO storage block, \nwhich can store up to eight 32-bit words. \n\u2022 Both modes clocked by clk_pwm which is nominally 100MHz, but can  be varied by \nthe clock manager. \n \n9.2 Block Diagram \n \n \n \n \n \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 139 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n9.3 PWM Implementation \n \nA value represented as a ratio of N/M can be transm itted along a serial channel with pulse width \nmodulation in which the value is represented by the  duty cycle of the output signal. To send value \nN/M within a periodic sequence of M cycles, output should be 1 for N cycles and 0 for (M-N) cycles. \nThe desired sequence should have 1\u2019s and 0\u2019s spread  out as even as possible so that during any \narbitrary period of time duty cycle achieves closes t approximation of the value. This can be shown in \nthe following table where 4/8 is modulated (N= 4, M = 8). \n \nBad  0 0 0 0 1 1 1 1 0 0 0 0 \nFair  0 0 1 1 0 0 1 1 0 0 1 1 \nGood  0 1 0 1 0 1 0 1 0 1 0 1 \n \nSequence which gives the \u2018good\u2019 approximation from the table above can be achieved by the \nfollowing algorithm: \n \n \nwhere context is a register which stores the result  of the addition/subtractions.  \n9.4 Modes of Operation \nPWM controller consists of two independent channels  (pwm_chn in block diagram) which \nimplement the pwm algorithm explained in section 1. 3. Each channel can operate in either pwm \nmode or serialiser mode. \n \nPWM mode: There are two sub-modes in PWM mode: MSEN =0 and MSEN=1. \n  \nWhen MSEN=0, which is the default mode, data to be sent is interpreted as the value N of the \nalgorithm explained above. Number of clock cycles ( range) used to send data is the value M of the \nalgorithm. Pulses are sent within this range so tha t the resulting duty cycle is N/M. Channel sends it s \noutput continuously as long as data register is use d, or buffer is used and it is not empty. \n 1. Set context = 0  \n2. context = context + N \n3.  if (context >= M)   \ncontext = context \u2013 M \nsend 1 \nelse   \n06 February 2012 Broadcom Europe Ltd. 406 Science P ark Milton Road Cambridge CB4 0WW Page 140 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nWhen MSEN=1, PWM block does not use the algorithm e xplained above, instead it sends serial data \nwith the M/S ratio as in the picture below. M is th e data to be sent, and S is the range. This mode \nmay be preferred if high frequency modulation is no t required or has negative effects. Channel \nsends its output continuously as long as data regis ter is used, or buffer is used and it is not empty.  \n \n \n \nSerial bit transmission when M/S Mode enabled \n \n \nSerialiser mode: Each channel is also capable of wo rking as a serialiser. In this mode data written in  \nbuffer or the data register is sent serially. \n9.5 Quick Reference \n\u2022 PWM DMA is mapped to DMA channel 5.   \n\u2022 GPIOs are assigned to PWM channels as below. Please  refer to GPIO section \nfor further details: \n PWM0  PWM1  \nGPIO 12  Alt Fun 0  - \nGPIO 13  - Alt Fun 0  \nGPIO 18  Alt Fun 5  - \nGPIO 19  - Alt Fun 5  \nGPIO 40  Alt Fun 0  - \nGPIO 41  - Alt Fun 0  \nGPIO 45  - Alt Fun 0  \nGPIO 52  Alt Fun 1  - \nGPIO 53  - Alt Fun 1  \n \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 141 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \n\u2022 PWM clock source and frequency is controlled in CPRMAN. \n \n9.6 Control and Status Registers \nPWM Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 CTL  PWM Control 32 \n0x4 STA  PWM Status 32 \n0x8 DMAC  PWM DMA Configuration 32 \n0x10 RNG1  PWM Channel 1 Range 32 \n0x14 DAT1  PWM Channel 1 Data 32 \n0x18 FIF1  PWM FIFO Input 32 \n0x20 RNG2  PWM Channel 2 Range 32 \n0x24 DAT2  PWM Channel 2 Data 32 \n \n \nCTL Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 142 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  PWENi is used to enable/disable the corresponding cha nnel. Setting this bit to 1 \nenables the channel and transmitter state machine. Al l registers and FIFO is writable \nwithout setting this bit. \nMODEi bit is used to determine mode of operation. S etting this bit to 0 enables PWM \nmode. In this mode data stored in either PWM_DATi o r FIFO is transmitted by pulse \nwidth modulation within the range defined by PWM_RNG i. When this mode is used \nMSENi defines whether to use PWM algorithm. Setting  MODEi to 1 enables serial \nmode, in which data stored in either PWM_DATi or FIF O is transmitted serially within \nthe range defined by PWM_RNGi. Data is transmitted MSB first and truncated or zero-\npadded depending on PWM_RNGi. Default mode is PWM. \nRPTLi is used to enable/disable repeating of the la st data available in the FIFO just \nbefore it empties. When this bit is 1 and FIFO is u sed, the last available data in the \nFIFO is repeatedly sent. This may be useful in PWM m ode to avoid duty cycle gaps. If \nthe FIFO is not used this bit does not have any effe ct. Default operation is do-not-\nrepeat. \nSBITi defines the state of the output when no trans mission takes place. It also defines \nthe zero polarity for the zero padding in serialiser m ode. This bit is padded between \ntwo consecutive transfers as well as tail of the data when PWM_RNGi is larger than bit \ndepth of data being transferred. this bit is zero by default. \nPOLAi is used to configure the polarity of the outpu t bit. When set to high the final \noutput is inverted. Default operation is no inversi on. \nUSEFi bit is used to enable/disable FIFO transfer. When this bit is high data stored in \nthe FIFO is used for transmission. When it is low, data written to PWM_DATi is \ntransferred. This bit is 0 as default. \nCLRF is used to clear the FIFO. Writing a 1 to this  bit clears the FIFO. Writing 0 has no \neffect. This is a single shot operation and reading the bit always returns 0. \nMSENi is used to determine whether to use PWM algor ithm or simple M/S ratio \ntransmission. When this bit is high M/S transmissio n is used. This bit is zero as default. \nWhen MODEi is 1, this configuration bit has no effec t. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care    \n15 MSEN2 Channel 2 M/S Enable  \n0: PWM algorithm is used \n1: M/S transmission is used. RW 0x0 \n14  Reserved  - Write as 0, read as don't care    \n13 USEF2 Channel 1 Use Fifo  \n0: Data register is transmitted \n1: Fifo is used for transmission RW 0x0 \n12 POLA2 Channel 1 Polarity  \n0 : 0=low 1=high \n1: 1=low 0=high RW 0x0 \n11 SBIT2 Channel 1 Silence Bit  \nDefines the state of the output when no \ntransmission takes place RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 143 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10 RPTL2 Channel 1 Repeat Last Data  \n0: Transmission interrupts when FIFO is empty \n1: Last data in FIFO is transmitted repetedly until \nFIFO is not empty RW 0x0 \n9 MODE2 Channel 1 Mode  \n0: PWM mode \n1: Serialiser mode RW 0x0 \n8 PWEN2 Channel 1 Enable  \n0: Channel is disabled \n1: Channel is enabled RW 0x0 \n7 MSEN1 Channel 1 M/S Enable  \n0: PWM algorithm is used \n1: M/S transmission is used. RW 0x0 \n6 CLRF1 Clear Fifo  \n1: Clears FIFO \n0: Has no effect \nThis is a single shot operation. This bit always \nreads 0 RO 0x0 \n5 USEF1 Channel 1 Use Fifo  \n0: Data register is transmitted \n1: Fifo is used for transmission RW 0x0 \n4 POLA1 Channel 1 Polarity  \n0 : 0=low 1=high \n1: 1=low 0=high RW 0x0 \n3 SBIT1 Channel 1 Silence Bit  \nDefines the state of the output when no \ntransmission takes place RW 0x0 \n2 RPTL1 Channel 1 Repeat Last Data  \n0: Transmission interrupts when FIFO is empty \n1: Last data in FIFO is transmitted repetedly until \nFIFO is not empty RW 0x0 \n1 MODE1 Channel 1 Mode  \n0: PWM mode \n1: Serialiser mode RW 0x0 \n0 PWEN1 Channel 1 Enable  \n0: Channel is disabled \n1: Channel is enabled RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 144 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSTA Register  \nSynopsis  FULL1 bit indicates the full status of the FIFO. If this bit is high FIFO is full. \nEMPT1 bit indicates the empty status of the FIFO. If this bit is high FIFO is empty. \nWERR1 bit sets to high when a write when full error  occurs. Software must clear this \nbit by writing 1. Writing 0 to this bit has no effe ct. \nRERR1 bit sets to high when a read when empty error occurs. Software must clear this \nbit by writing 1. Writing 0 to this bit has no effe ct. \nGAPOi. bit indicates that there has been a gap betwe en transmission of two \nconsecutive data from FIFO. This may happen when FIFO gets empty after state \nmachine has sent a word and waits for the next. If co ntrol bit RPTLi is set to high this \nevent will not occur. Software must clear this bit by writing 1. Writing 0 to this bit has no \neffect. \nBERR sets to high when an error has occurred while wr iting to registers via APB. This \nmay happen if the bus tries to write successively to s ame set of registers faster than \nthe synchroniser block can cope with. Multiple switching m ay occur and contaminate \nthe data during synchronisation. Software should clear  this bit by writing 1. Writing 0 to \nthis bit has no effect. \nSTAi bit indicates the current state of the channel wh ich is useful for debugging \npurposes. 0 means the channel is not currently transmi tting. 1 means channel is \ntransmitting data. \nBit(s)  Field Name  Description  Type  Reset  \n31:13  Reserved  - Write as 0, read as don't care    \n12 STA4 Channel 4 State  RW 0x0 \n11 STA3 Channel 3 State  RW 0x0 \n10 STA2 Channel 2 State  RW 0x0 \n9 STA1 Channel 1 State  RW 0x0 \n8 BERR Bus Error Flag  RW 0x0 \n7 GAPO4 Channel 4 Gap Occurred Flag  RW 0x0 \n6 GAPO3 Channel 3 Gap Occurred Flag  RW 0x0 \n5 GAPO2 Channel 2 Gap Occurred Flag  RW 0x0 \n4 GAPO1 Channel 1 Gap Occurred Flag  RW 0x0 \n3 RERR1 Fifo Read Error Flag  RW 0x0 \n2 WERR1 Fifo Write Error Flag  RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 145 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n1 EMPT1 Fifo Empty Flag  RW 0x1 \n0 FULL1 Fifo Full Flag  RW 0x0 \n \n \nDMAC Register  \nSynopsis  ENAB bit is used to start DMA. \nPANIC bits are used to determine the threshold leve l for PANIC signal going active. \nDefault value is 7. \nDREQ bits are used to determine the threshold level  for DREQ signal going active. \nDefault value is 7. \nBit(s)  Field Name  Description  Type  Reset  \n31 ENAB DMA Enable  \n0: DMA disabled \n1: DMA enabled RW 0x0 \n30:16  Reserved  - Write as 0, read as don't care    \n15:8 PANIC DMA Threshold for PANIC signal  RW 0x7 \n7:0 DREQ DMA Threshold for DREQ signal  RW 0x7 \n \n \nRNG1 Register  \nSynopsis  This register is used to define the range for the co rresponding channel. In PWM mode \nevenly distributed pulses are sent within a period of  length defined by this register. In \nserial mode serialised data is transmitted within t he same period. If the value in \nPWM_RNGi is less than 32, only the first PWM_RNGi bi ts are sent resulting in a \ntruncation. If it is larger than 32 excess zero bits ar e padded at the end of data. Default \nvalue for this register is 32. \nNote: Channels 3 and 4 are not available in B0 and corresponding Channel Range \nRegisters are ignored. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 PWM_RNGi Channel i Range  RW 0x20 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 146 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nDAT1 Register  \nSynopsis  This register stores the 32 bit data to be sent by t he PWM Controller when USEFi is 0. \nIn PWM mode data is sent by pulse width modulation: the value of this register defines \nthe number of pulses which is sent within the period  defined by PWM_RNGi. In \nserialiser mode data stored in this register is ser ialised and transmitted. \nNote: Channels 3 and 4 are not available in B0 and corresponding Channel Data \nRegisters are ignored. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 PWM_DATi Channel i Data  RW 0x0 \n \n \nFIF1 Register  \nSynopsis  This register is the FIFO input for the all channels . Data written to this address is \nstored in channel FIFO and if USEFi is enabled for t he channel i it is used as data to \nbe sent. This register is write only, and reading th is register will always return bus \ndefault return value, pwm0 . \nWhen more than one channel is enabled for FIFO usage , the data written into the FIFO \nis shared between these channels in turn. For example  if the word series A B C D E F \nG H I .. is written to FIFO and two channels are acti ve and configured to use FIFO then \nchannel 1 will transmit words A C E G I .. and channe l 2 will transmit words B D F H .. . \nNote that requesting data from the FIFO is in locked- step manner and therefore \nrequires tight coupling of state machines of the chann els. If any of the channel range \n(period) value is different than the others this wi ll cause the channels with small range \nvalues to wait between words hence resulting in gaps  between words. To avoid that, \neach channel sharing the FIFO should be configured to use the same range value. \nAlso note that RPTLi are not meaningful when the FI FO is shared between channels \nas there is no defined channel to own the last data in the FIFO. Therefore sharing \nchannels must have their RPTLi set to zero. \nIf the set of channels to share the FIFO has been mo dified after a configuration \nchange, FIFO should be cleared before writing new dat a. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 PWM_FIFO Channel FIFO Input  RW 0x0 \n \n \nRNG2 Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 147 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  This register is used to define the range for the co rresponding channel. In PWM mode \nevenly distributed pulses are sent within a period of  length defined by this register. In \nserial mode serialised data is transmitted within t he same period. If the value in \nPWM_RNGi is less than 32, only the first PWM_RNGi bi ts are sent resulting in a \ntruncation. If it is larger than 32 excess zero bits ar e padded at the end of data. Default \nvalue for this register is 32. \nNote: Channels 3 and 4 are not available in B0 and corresponding Channel Range \nRegisters are ignored. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 PWM_RNGi Channel i Range  RW 0x20 \n \n \nDAT2 Register  \nSynopsis  This register stores the 32 bit data to be sent by t he PWM Controller when USEFi is 1. \nIn PWM mode data is sent by pulse width modulation: the value of this register defines \nthe number of pulses which is sent within the period  defined by PWM_RNGi. In \nserialiser mode data stored in this register is ser ialised and transmitted. \nNote: Channels 3 and 4 are not available in B0 and corresponding Channel Data \nRegisters are ignored. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 PWM_DATi Channel i Data  RW 0x0 \n \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 148 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10 SPI \n10.1 Introduction \nThis Serial interface peripheral supports the following fe atures: \n\u2022 Implements a 3 wire serial protocol, variously called S erial Peripheral Interface (SPI) \nor Synchronous Serial Protocol (SSP). \n\u2022 Implements a 2 wire version of SPI that uses a single wire as a bidirectional data wire \ninstead of one for each direction as in standard SPI. \n\u2022 Implements a LoSSI Master (Low Speed Serial Interface )  \n\u2022 Provides support for polled, interrupt or DMA operation. \n \n10.2 SPI Master Mode \n10.2.1 Standard mode \nIn Standard SPI master mode the peripheral implements t he standard 3 wire serial protocol \ndescribed below. \n \n \n \nFigure 10-1 SPI Master Typical Usage  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 149 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nFigure 10-2 SPI Cycle \n \nFigure 10-3 Different Clock Polarity/Phase \n10.2.2 Bidirectional mode \nIn bidirectional SPI master mode the same SPI standard is implemented except that a single \nwire is used for the data (MIMO) instead of the two as in standard mode (MISO and MOSI). \nBidirectional mode is used in a similar way to standar d mode, the only difference is that \nbefore attempting to read data from the slave, you must  set the read enable (SPI_REN) bit in \nthe SPI control and status register (SPI_CS). This will  turn the bus around, and when you \nwrite to the SPI_FIFO register (with junk) a read tran saction will take place on the bus, and \nthe read data will appear in the FIFO. \n \nFigure 10-4 Bidirectional SPI Master Typical Usage \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 150 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10.3 LoSSI mode \n \nFigure 10-5 LoSSI mode Typical usage \nThe LoSSI standard allows us to issue commands to p eripherals and to transfer data to and from \nthem. LoSSI commands and parameters are 8 bits long , but an extra bit is used to indicate whether \nthe byte is a command or data. This extra bit is se t high for a parameter and low for a command. The \nresulting 9-bit value is serialized to the output. When reading from a LoSSI peripheral the standard \nallows us to read bytes of data, as well as 24 and 32 bit words.  \n \nCommands and parameters are issued to a LoSSI perip heral by writing the 9-bit value of the \ncommand or data into the SPI_FIFO register as you w ould for SPI mode. Reads are automated in that \nif the serial interface peripheral detects a read c ommand being issued, it will issue the command and \ncomplete the read transaction, putting the received  data into the FIFO. \n10.3.1 Command write \n \n \n10.3.2 Parameter write \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 151 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10.3.3 Byte read commands \nByte read commands are 0x0a, 0x0b, 0x0c, 0x0d, 0x0e , 0x0f, 0xda, 0xdb, 0xdc. \n \n \n \n10.3.4 24bit read command \nA 24 bit read can be achieved by using the command 0x04. \n \n \n \n \n10.3.5 32bit read command \nA 32bit read can be achieved by using the command 0x09. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 152 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10.4 Block Diagram \n \n \n \nFigure 10-6 Serial interface Block Diagram \n10.5 SPI Register Map \nThe BCM2835 devices has only one SPI interface of this type. It is referred to in all the \ndocumentation as SPI0.  It has two additional mini SPI i nterfaces (SPI1 and SPI2). The \nspecifiation of those can be found under 2.3 Universal SPI Master (2x) .  \nThe base address of this SPI0 interface is 0x7E204000. \n \nSPI Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 CS  SPI Master Control and Status 32 \n0x4 FIFO  SPI Master TX and RX FIFOs 32 \n0x8 CLK  SPI Master Clock Divider 32  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 153 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0xc DLEN  SPI Master Data Length 32 \n0x10 LTOH  SPI LOSSI mode TOH 32 \n0x14 DC  SPI DMA DREQ Controls 32 \n \n \nCS Register  \nSynopsis  This register contains the main control and status bi ts for the SPI. \nBit(s)  Field Name  Description  Type  Reset  \n31:26  Reserved  - Write as 0, read as don't care    \n25 LEN_LONG Enable Long data word in Lossi mode if \nDMA_LEN is set  \n0= writing to the FIFO will write a single byte \n1= wrirng to the FIFO will write a 32 bit word RW 0x0 \n24 DMA_LEN Enable DMA mode in Lossi mode  RW 0x0 \n23 CSPOL2 Chip Select 2 Polarity  \n0= Chip select is active low. \n1= Chip select is active high. RW 0x0 \n22 CSPOL1 Chip Select 1 Polarity  \n0= Chip select is active low. \n1= Chip select is active high. RW 0x0 \n21 CSPOL0 Chip Select 0 Polarity  \n0= Chip select is active low. \n1= Chip select is active high. RW 0x0 \n20 RXF RXF - RX FIFO Full  \n0 = RXFIFO is not full. \n1 = RX FIFO is full. No further serial data will be  \nsent/ received until data is read from FIFO. RO 0x0 \n19 RXR RXR RX FIFO needs Reading ( full)  \n0 = RX FIFO is less than full (or not active TA = \n0). \n1 = RX FIFO is or more full. Cleared by reading \nsufficient data from the RX FIFO or setting TA to \n0. RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 154 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n18 TXD TXD TX FIFO can accept Data  \n0 = TX FIFO is full and so cannot accept more \ndata. \n1 = TX FIFO has space for at least 1 byte. RO 0x1 \n17 RXD RXD RX FIFO contains Data  \n0 = RX FIFO is empty. \n1 = RX FIFO contains at least 1 byte. RO 0x0 \n16 DONE Done transfer Done  \n0 = Transfer is in progress (or not active TA = 0).  \n1 = Transfer is complete. Cleared by writing \nmore data to the TX FIFO or setting TA to 0. RO 0x0 \n15 TE_EN Unused  RW 0x0 \n14 LMONO Unused  RW 0x0 \n13 LEN LEN LoSSI enable  \nThe serial interface is configured as a LoSSI \nmaster. \n0 = The serial interface will behave as an SPI \nmaster. \n1 = The serial interface will behave as a LoSSI \nmaster. RW 0x0 \n12 REN REN Read Enable  \nread enable if you are using bidirectional mode. \nIf this bit is set, the SPI peripheral will be able  to \nsend data to this device. \n0 = We intend to write to the SPI peripheral. \n1 = We intend to read from the SPI peripheral. RW 0x1 \n11 ADCS ADCS Automatically Deassert Chip Select  \n0 = Don t automatically deassert chip select at \nthe end of a DMA transfer chip select is \nmanually controlled by software. \n1 = Automatically deassert chip select at the end \nof a DMA transfer (as determined by SPIDLEN) RW 0x0 \n10 INTR INTR Interrupt on RXR  \n0 = Don t generate interrupts on RX FIFO \ncondition. \n1 = Generate interrupt while RXR = 1. RW 0x0 \n9 INTD INTD Interrupt on Done  \n0 = Don t generate interrupt on transfer \ncomplete. \n1 = Generate interrupt when DONE = 1. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 155 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 DMAEN DMAEN DMA Enable  \n0 = No DMA requests will be issued. \n1 = Enable DMA operation. \nPeripheral generates data requests. These will \nbe taken in four-byte words until the SPIDLEN \nhas been reached. RW 0x0 \n7 TA Transfer Active  \n0 = Transfer not active./CS lines are all high \n(assuming CSPOL = 0). RXR and DONE are 0. \nWrites to SPIFIFO write data into bits -0 of \nSPICS allowing DMA data blocks to set mode \nbefore sending data. \n1 = Transfer active. /CS lines are set according \nto CS bits and CSPOL. Writes to SPIFIFO write \ndata to TX FIFO.TA is cleared by a \ndma_frame_end pulse from the DMA controller. RW 0x0 \n6 CSPOL Chip Select Polarity  \n0 = Chip select lines are active low \n1 = Chip select lines are active high RW 0x0 \n5:4 CLEAR CLEAR FIFO Clear  \n00 = No action. \nx1 = Clear TX FIFO. One shot operation. \n1x = Clear RX FIFO. One shot operation. \nIf CLEAR and TA are both set in the same \noperation, the FIFOs are cleared before the new \nframe is started. Read back as 0. RW 0x0 \n3 CPOL Clock Polarity  \n0 = Rest state of clock = low. \n1 = Rest state of clock = high. RW 0x0 \n2 CPHA Clock Phase  \n0 = First SCLK transition at middle of data bit. \n1 = First SCLK transition at beginning of data bit.  RW 0x0 \n1:0 CS Chip Select  \n00 = Chip select 0 \n01 = Chip select 1 \n10 = Chip select 2 \n11 = Reserved RW 0x0 \n \n \nFIFO Register  \nSynopsis  This register allows TX data to be written to the T X FIFO and RX data to be read from \nthe RX FIFO.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 156 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:0 DATA DMA Mode (DMAEN set)  \nIf TA is clear, the first 32-bit write to this regi ster \nwill control SPIDLEN and SPICS. Subsequent \nreads and writes will be taken as four-byte data \nwords to be read/written to the FIFOs \nPoll/Interrupt Mode (DMAEN clear, TA set) \nWrites to the register write bytes to TX FIFO. \nReads from register read bytes from the RX \nFIFO RW 0x0 \n \n \nCLK Register  \nSynopsis  This register allows the SPI clock rate to be set. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care    \n15:0 CDIV Clock Divider  \nSCLK = Core Clock / CDIV \nIf CDIV is set to 0, the divisor is 65536. The \ndivisor must be a power of 2. Odd numbers \nrounded down. The maximum SPI clock rate is \nof the APB clock. RW 0x0 \n \n \nDLEN Register  \nSynopsis  This register allows the SPI data length rate to be  set. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care    \n15:0 LEN Data Length  \nThe number of bytes to transfer. \nThis field is only valid for DMA mode (DMAEN \nset) and controls how many bytes to transmit \n(and therefore receive). RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 157 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nLTOH Register  \nSynopsis  This register allows the LoSSI output hold delay to be set. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3:0 TOH This sets the Output Hold delay in APB clocks. A \nvalue of 0 causes a 1 clock delay.  RW 0x1 \n \n \nDC Register  \nSynopsis  This register controls the generation of the DREQ an d Panic signals to an external \nDMA engine The DREQ signals are generated when the FIFOs reach their defined \nlevels and need servicing. The Panic signals instru ct the external DMA engine to raise \nthe priority of its AXI requests. \nBit(s)  Field Name  Description  Type  Reset  \n31:24 RPANIC DMA Read Panic Threshold.  \nGenerate the Panic signal to the RX DMA \nengine whenever the RX FIFO level is greater \nthan this amount. RW 0x30 \n23:16 RDREQ DMA Read Request Threshold.  \nGenerate A DREQ to the RX DMA engine \nwhenever the RX FIFO level is greater than this \namount, (RX DREQ is also generated if the \ntransfer has finished but the RXFIFO isn t \nempty). RW 0x20 \n15:8 TPANIC DMA Write Panic Threshold.  \nGenerate the Panic signal to the TX DMA engine \nwhenever the TX FIFO level is less than or equal \nto this amount. RW 0x10 \n7:0 TDREQ DMA Write Request Threshold.  \nGenerate a DREQ signal to the TX DMA engine \nwhenever the TX FIFO level is less than or equal \nto this amount. RW 0x20 \n \n \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 158 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10.6 Software Operation \n10.6.1 Polled \na)  Set CS, CPOL, CPHA as required and set TA = 1. \nb)  Poll TXD writing bytes to SPI_FIFO, RXD reading bytes from  SPI_FIFO until all \ndata written. \nc)  Poll DONE until it goes to 1. \nd)  Set TA = 0. \n10.6.2 Interrupt \ne)  Set INTR and INTD. These can be left set over multip le operations. \nf)  Set CS, CPOL, CPHA as required and set TA = 1. This wil l immediately trigger a \nfirst interrupt with DONE == 1. \ng)  On interrupt: \nh)  If DONE is set and data to write (this means it is th e first interrupt), write up to 16 \nbytes to SPI_FIFO. If DONE is set and no more data, set TA = 0. Read trailing data \nfrom SPI_FIFO until RXD is 0. \ni)  If RXR is set read 12 bytes data from SPI_FIFO and if mor e data to write, write up to \n12 bytes to SPIFIFO. \n10.6.3 DMA \nNote:   In order to function correctly, each DMA channel must be set to perform 32-bit \ntransfers when communicating with the SPI. Either the  Source or the Destination Transfer \nWidth field in the DMA TI register must be set to 0 (i.e . 32-bit words) depending upon \nwhether the channel is reading or writing to the SPI.   \nTwo DMA channels are required, one to read from and one to write to the SPI. \nj)  Enable DMA DREQ\u2019s by setting the DMAEN bit and ADCS if r equired.   \nk)  Program two DMA control blocks, one for each DMA contr oller.   \nl)  DMA channel 1 control block should have its PER_MAP set to  x and should be set to \nwrite \u2018transfer length\u2019 + 1 words to SPI_FIFO.  The data s hould comprise: \ni)  A word with the transfer length in bytes in the top si xteen bits, and the control \nregister settings [7:0] in the bottom eight bits (i.e. TA = 1, CS, CPOL, CPHA as \nrequired.)    \nii)  \u2018Transfer length\u2019 number in words of data to send.     \nm)  DMA channel 2 control block should have its PER_MAP set to y and should be set to \nread \u2018transfer length\u2019 words from SPI_FIFO.   \nn)  Point each DMA channel at its CB and set its ACTIVE bit  to 1.    \no)  On receipt of an interrupt from DMA channel 2, the trans fer is complete.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 159 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10.6.4 Notes \n1.  The SPI Master knows nothing of the peripherals it is con nected to. It always both \nsends and receives bytes for every byte of the transacti on. \n2.  SCLK is only generated during byte serial transfer. It paus es in the rest state if the \nnext byte to send is not ready or RXF is set. \n3.  Setup and Hold times related to the automatic asser tion and de-assertion of the CS lines \nwhen operating in DMA mode (DMAEN and ADCS set) are  as follows:  \n \nThe CS line will be asserted at least 3 core clock cycles before the msb of the first byte of the \ntransfer.  \nThe CS line will be de-asserted no earlier than 1 c ore clock cycle after the trailing edge of the \nfinal clock pulse. \n \nIf these parameters are insufficient, software cont rol should alleviate the problem. ADCS \nshould be 0 allowing software to manually control t he assertion and de-assertion of the CS \nlines. \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 160 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n11 SPI/BSC SLAVE \n \n11.1 Introduction \nThe BSC interface can be used as either a Broadcom Ser ial Controller (BSC) or a Serial \nPeripheral Interface (SPI) controller. The BSC bus is  a proprietary bus compliant with the \nPhilips\u00ae I2C bus/interface version 2.1 January 2000. Both BSC a nd SPI controllers work in \nthe slave mode. The BSC slave controller has speciall y built in the Host Control and Software \nRegisters for a Chip booting. The BCS controller supports  fast-mode (400Kb/s) and it is \ncompliant to the I 2C bus specification version 2.1 January 2000 with the restric tions:  \n\u2022 I2C slave only operation  \n\u2022 clock stretching is not supported \n\u2022 7-bit addressing only \n\u2022  \nThere is only one BSC/SPI slave. The registers base addresses is 0x7E21_4000. \n11.2 Registers \nThe SPI controller implements 3 wire serial protocol variously called Serial Peripheral \nInterface (SPI) or Synchronous Serial Protocol (SSP).  BSC and SPI controllers do not have \nDMA connected, hence DMA is not supported. \n \nI2C_SPI_SLV Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 DR  Data Register 32 \n0x4 RSR  The operation status register and error clear regist er 32 \n0x8 SLV  The I2C SPI Address Register holds the I2C slave \naddress value 32 \n0xc CR  The Control register is used to configure the I2C or  SPI \noperation 32 \n0x10 FR  Flag register 32 \n0x14 IFLS  Interrupt fifo level select register 32 \n0x18 IMSC  Interupt Mask Set Clear Register 32  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 161 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x1c RIS  Raw Interupt Status Register 32 \n0x20 MIS  Masked Interupt Status Register 32 \n0x24 ICR  Interupt Clear Register 32 \n0x28 DMACR  DMA Control Register 32 \n0x2c TDR  FIFO Test Data 32 \n0x30 GPUSTAT  GPU Status Register 32 \n0x34 HCTRL  Host Control Register 32 \n0x38 DEBUG1  I2C Debug Register 32 \n0x3c DEBUG2  SPI Debug Register 32 \n \n \nDR Register  \nSynopsis  The I2C SPI Data Register is used to transfer/receiv e data characters and provide a \nStatus and Flag information. Status and Flag inform ation is also available via individual \nregisters. \nBit(s)  Field Name  Description  Type  Reset  \n31:27 RXFLEVEL RXFLEVEL RX FIFO Level  \nReturns the current level of the RX FIFO use RO 0x0 \n26:22 TXFLEVEL TXFLEVEL TX FIFO Level  \nReturns the current level of the TX FIFO use RO 0x0 \n21 RXBUSY RXBUSY Receive Busy  \n0 Receive operation inactive \n1 Receive operation in operation RO 0x0 \n20 TXFE TXFE TX FIFO Empty  \n0 TX FIFO is not empty \n1 When TX FIFO is empty RO 0x1 \n19 RXFF RXFE RX FIFO Full  \n0 FX FIFO is not full \n1 When FX FIFO is full RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 162 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n18 TXFF TXFF TX FIFO Full  \n0 TX FIFO is not full \n1 When TX FIFO is full RO 0x0 \n17 RXFE RXFE RX FIFO Empty  \n0 FX FIFO is not empty \n1 When FX FIFO is empty RO 0x1 \n16 TXBUSY TXBUSY Transmit Busy  \n0 Transmit operation inactive \n1 Transmit operation in operation RO 0x0 \n15:10  Reserved  - Write as 0, read as don't care    \n9 UE TXUE TX Underrun Error  \n0 - No error case detected \n1 Set when TX FIFO is empty and I2C master \nattempt to read a data character from I2C slave. \nCleared by writing 0 to I2C SPI Status register . RO 0x0 \n8 OE RXOE RX Overrun Error  \n0 No error case detected \n1 Set when RX FIFO is full and a new data \ncharacter is received. Cleared by writing 0 to I2C \nSPI Status register . RO 0x0 \n7:0 DATA DATA Received/Transferred data characters  \nData written to this location is pushed into the TX \nFIFO. \nData read from this location is fetched from the \nRX FIFO. RW 0x0 \n \n \nRSR Register  \nSynopsis  The operation status register and error clear regist er. \nBit(s)  Field Name  Description  Type  Reset  \n31:6  Reserved  - Write as 0, read as don't care    \n5 RXDMABREQ Unsupported, write zero, read as don't care  RO 0x0 \n4 RXDMAPREQ Unsupported, write zero, read as don't care  RO 0x0 \n3 TXDMABREQ Unsupported, write zero, read as don't care  RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 163 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2 TXDMAPREQ Unsupported, write zero, read as don't care  RO 0x0 \n1 UE TXUE TX Underrun Error  \n0 - No error case detected \n1 Set when TX FIFO is empty and I2C master \nattempt to read a data character from I2C slave. \nCleared by writing 0 to it. RW 0x0 \n0 OE RXOE RX Overrun Error  \n0 No error case detected \n1 Set when RX FIFO is full and a new data \ncharacter is received. Cleared by writing 0 to it. RW 0x0 \n \n \nSLV Register  \nSynopsis  The I2C SPI Address Register holds the I2C slave ad dress value. NOTE: It is of no \nuse in SPI mode. \nBit(s)  Field Name  Description  Type  Reset  \n31:7  Reserved  - Write as 0, read as don't care    \n6:0 ADDR SLVADDR I2C Slave Address  \nProgrammable I2C slave address \nNote: In case HOSTCTRLEN bit is set from the \nI2C SPI Control Register bit SLVADDR[0] \nchooses the following: \n0 - selects normal operation, i.e. accessing RX \nand TX FIFOs. \n1 - selects access to I2C SPI SW Status \nRegister or I2C SPI Host Control Register RW 0x0 \n \n \nCR Register  \nSynopsis  The Control register is used to configure the I2C or  SPI operation. \nBit(s)  Field Name  Description  Type  Reset  \n31:14  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 164 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n13 INV_TXF INV-RX Inverse TX status flags  \n0 = default status flags \nWhen this bit is 0, bit 6 (TXFE - TX FIFO Empty) \nwill reset to a 1 \n1 = inverted status flags \nWhen this bit is set, bit 6 (TXFE - TX FIFO Full) \nwill reset to a 0 \n \n* Note: INV_TX bit changes the default values of \n6 bit as it is specified for I2C SPI GPU Host \nStatus Register . RW 0x0 \n12 HOSTCTRLEN HOSTCTRLEN Enable Control for Host  \n0 = Host Control disabled \n1 = Host Control enabled \nNote: HOSTCTRLEN allows Host to request \nGPUSTAT or HCTRL register. The same \nbehaviour is achieved from the GPU side using \nENSTAT and ENCTRL. RW 0x0 \n11 TESTFIFO TESTFIFO TEST FIFO  \n0 = TESTT FIFO disabled \n1 = TESTT FIFO enabled RW 0x0 \n10 INV_RXF INV-RX Inverse RX status flags  \n0 = default status flags \nWhen this bit is 0, bit 6 (RXFF - RX FIFO Full) \nwill reset to a 0 \n \n1 = inverted status flags \nWhen this bit is 0, bit 6 (RXFF - RX FIFO Empty) \nwill reset to a 1 \n* NOTE: INV_RX bit changes the default values \nof 7 bit as it is specified for I2C SPI GPU Host \nStatus Register . RW 0x0 \n9 RXE RXE Receive Enable  \n0 = Receive mode disabled \n1 = Receive mode enabled RW 0x0 \n8 TXE TXE Transmit Enable  \n0 = Transmit mode disabled \n1 = Transmit mode enabled RW 0x0 \n7 BRK BRK Break current operation  \n0 = No effect. \n1 = Stop operation and clear the FIFOs. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 165 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6 ENCTRL ENCTRL ENABLE CONTROL 8bit register  \n0 = Control register disabled. Implies ordinary \nI2C protocol. \n1 = Control register enabled. When enabled the \ncontrol register is received as a first data \ncharacter on the I2C bus. \nNOTE: The same behaviour is achieved from the \nHost side by using bit SLVADDR[6] of the slave \naddress. RO 0x0 \n5 ENSTAT ENSTAT ENABLE STATUS 8bit register  \n0 = Status register disabled. Implies ordinary I2C \nprotocol. \n1 = Status register enabled. When enabled the \nstatus register is transferred as a first data \ncharacter on the I2C bus. Status register is \ntransferred to the host. \nNOTE: The same behaviour is achieved from the \nHost side by using bit SLVADDR[6] of the slave \naddress. RW 0x0 \n4 CPOL CPOL Clock Polarity  \n0 = \n1 = SPI Related RW 0x0 \n3 CPHA CPHA Clock Phase  \n0 = \n1 = SPI Related RW 0x0 \n2 I2C SPI Mode  \n0 = Disabled I2C mode \n1 = Enabled I2C mode RW 0x0 \n1 SPI SPI Mode  \n0 = Disabled SPI mode \n1 = Enabled SPI mode RW 0x0 \n0 EN EN Enable Device  \n1 = Enable I2C SPI Slave. \n0 = Disable I2C SPI Slave. RW 0x0 \n \n \nFR Register  \nSynopsis  The flag register indicates the current status of the  operation. \nBit(s)  Field Name  Description  Type  Reset  \n31:16  Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 166 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n15:11 RXFLEVEL RXFLEVEL RX FIFO Level  \nReturns the current level of the RX FIFO use RW 0x0 \n10:6 TXFLEVEL TXFLEVEL TX FIFO Level  \nReturns the current level of the TX FIFO use RW 0x0 \n5 RXBUSY RXBUSY Receive Busy  \n0 Receive operation inactive \n1 Receive operation in operation RW 0x0 \n4 TXFE TXFE TX FIFO Empty  \n0 TX FIFO is not empty \n1 When TX FIFO is empty RW 0x1 \n3 RXFF RXFE RX FIFO Full  \n0 FX FIFO is not full \n1 When FX FIFO is full RW 0x0 \n2 TXFF TXFF TX FIFO Full  \n0 TX FIFO is not full \n1 When TX FIFO is full RW 0x0 \n1 RXFE RXFE RX FIFO Empty  \n0 FX FIFO is not empty \n1 When FX FIFO is empty RW 0x1 \n0 TXBUSY TXBUSY Transmit Busy  \n0 Transmit operation inactive \n1 Transmit operation in operation RW 0x0 \n \n \nIFLS Register  \nSynopsis  The flag register indicates the current status of the  operation. \nBit(s)  Field Name  Description  Type  Reset  \n31:12  Reserved  - Write as 0, read as don't care    \n11:9 RXIFPSEL Unsupported, write zero, read as don't care  RO 0x0 \n8:6 TXIFPSEL Unsupported, write zero, read as don't care  RO 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 167 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n5:3 RXIFLSEL RXIFLSEL RX Interrupt FIFO Level Select  \nInterrupt is triggered when : \n000 RX FIFO gets 1/8 full \n001 RX FIFO gets 1/4 full \n010 RX FIFO gets 1/2 full \n011 RX FIFO gets 3/4 full \n100 RX FIFO gets 7/8 full \n101 111 not used RW 0x0 \n2:0 TXIFLSEL TXIFLSEL TX Interrupt FIFO Level Select  \nInterrupt is triggered when : \n000 TX FIFO gets 1/8 full \n001 TX FIFO gets 1/4 full \n010 TX FIFO gets 1/2 full \n011 TX FIFO gets 3/4 full \n100 TX FIFO gets 7/8 full \n101 111 not used RW 0x0 \n \n \nIMSC Register  \nSynopsis  Interrupt Mask Set/Clear Register. On a read this re gister returns the current value of \nthe mask on the relevant interrupt. On a write of 1 to the particular bit, it sets the \ncorresponding mask of that interrupt. A write of 0 cl ears the corresponding mask. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 OEIM Overrun error interrupt mask. A read returns the \ncurrent mask for the interrupt. On a write of 1, \nthe mask of the OEINTR interrupt is set. A write \nof 0 clears the mask. RW 0x0 \n2 BEIM Break error interrupt mask. A read returns the \ncurrent mask for the BEINTR interrupt. On a \nwrite of 1, the mask of the interrupt is set. A writ e \nof 0 clears the mask. RW 0x0 \n1 TXIM Transmit interrupt mask. A read returns the \ncurrent mask for the TXINTR interrupt. On a \nwrite of 1, the mask of the interrupt is set. A writ e \nof 0 clears the mask. RW 0x0 \n0 RXIM Receive interrupt mask. A read returns the \ncurrent mask for the RXINTR interrupt. On a \nwrite of 1, the mask of the interrupt is set. A writ e \nof 0 clears the mask. RW 0x0 \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 168 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nRIS Register  \nSynopsis  The Raw Interrupt Status Register returns the curren t raw status value, prior to \nmasking, of the corresponding interrupt. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 OERIS Overrun error interrupt status. Returns the raw \ninterrupt state of the OEINTR interrupt. RW 0x0 \n2 BERIS Break error interrupt status. Returns the raw \ninterrupt state of the BEINTR interrupt. RW 0x0 \n1 TXRIS Transmit interrupt status. Returns the raw \ninterrupt state of the TXINTR interrupt. RW 0x0 \n0 RXRIS Receive interrupt status. Returns the raw \ninterrupt state of the RXINTR interrupt. RW 0x0 \n \n \nMIS Register  \nSynopsis  The Masked Interrupt Status Register returns the curr ent masked status value of the \ncorresponding interrupt. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 OEMIS Overrun error masked interrupt status. Returns \nthe masked interrupt state of the OEINTR \ninterrupt. RW 0x0 \n2 BEMIS Break error masked interrupt status. Returns the \nmasked interrupt state of the BEINTR interrupt. RW 0x0 \n1 TXMIS Transmit masked interrupt status. Returns the \nmasked interrupt state of the TXINTR interrupt. RW 0x0 \n0 RXMIS Receive masked interrupt status. Returns the \nmasked interrupt state of the RXINTR interrupt. RW 0x0 \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 169 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nICR Register  \nSynopsis  The Interrupt Clear Register. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 OEIC Overrun error interrupt clear. Clears the OEINTR \ninterrupt. RW 0x0 \n2 BEIC Break error interrupt clear. Clears the BEINTR \ninterrupt. RW 0x0 \n1 TXIC Transmit interrupt clear. Clears the TXINTR \ninterrupt. RW 0x0 \n0 RXIC Receive masked interrupt status. Returns the \nmasked interrupt state of the RXINTR interrupt. RW 0x0 \n \n \nDMACR Register  \nSynopsis  The DMA Control register is not supported in this v ersion. \nBit(s)  Field Name  Description  Type  Reset  \n31:3  Reserved  - Write as 0, read as don't care    \n2 DMAONERR Unsupported, write zero, read as don't care RW 0x0 \n1 TXDMAE Unsupported, write zero, read as don't care RW 0x0 \n0 RXDMAE Unsupported, write zero, read as don't care RW 0x0 \n \n \nTDR Register  \nSynopsis  The Test Data Register enables data to be written i nto the receive FIFO and read out \nfrom the transmit FIFO for test purposes.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 170 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:8  Reserved  - Write as 0, read as don't care    \n7:0 DATA Test data is written into the receive FIFO and \nread out of the transmit FIFO. RW 0x0 \n \n \nGPUSTAT Register  \nSynopsis  The GPU SW Status Register to be passed via I2C bus  to a Host. \nNOTE: GPU SW Status Register is combined with the st atus bit coming from within \nI2C SPI Slave device. Hence, the I2C SPI GPU Host Sta tus Register as it is seen by a \nHost is depicted on Table 1 14. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3:0 DATA GPUSTAT GPU to Host Status Register  \nSW controllable RW 0x0 \n \n \nHCTRL Register  \nSynopsis  The Host Control register is received from the host side via I2C bus. When ENCTRL - \nenable control register bit is set, the host control register is received as the first data \ncharacter after the I2C address. \nBit(s)  Field Name  Description  Type  Reset  \n31:8  Reserved  - Write as 0, read as don't care    \n7:0 DATA HCTRL Host Control Register  \nSW processing received via I2C bus RW 0x0 \n \n \nDEBUG1 Register  \nSynopsis  I2C Debug Register  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 171 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:26  Reserved  - Write as 0, read as don't care    \n25:0 DATA  RW 0xe \n \n \nDEBUG2 Register  \nSynopsis  SPI Debug Register \nBit(s)  Field Name  Description  Type  Reset  \n31:24  Reserved  - Write as 0, read as don't care    \n23:0 DATA  RW 0x400000  \n \n \n REFERENCE : C6357-M-1398  BROADCOM PROPRIETARY AND CONFIDENTIAL  P AGE 172 \n \n\u00a9 2012 Broadcom Corporation. \nAll rights reserved \n \nBroadcom Europe Ltd. 406 Science Park Milton Road Cambridge  CB4 0WW 12 System Timer \nThe System Timer peripheral provides four 32-bit timer channe ls and a single 64-bit free running \ncounter.  Each channel has an output compare register, whi ch is compared against the 32 least \nsignificant bits of the free running counter values.  When t he two values match, the system timer \nperipheral generates a signal to indicate a match for  the appropriate channel.  The match signal is then \nfed into the interrupt controller.  The interrupt servi ce routine then reads the output compare register \nand adds the appropriate offset for the next timer tick.  The free running counter is driven by the timer \nclock and stopped whenever the processor is stopped in debug mode. \n \nThe Physical (hardware) base address for the system tim ers is 0x7E003000. \n \n12.1 System Timer Registers \nST Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0  CS  System Timer Control/Status  32  \n0x4  CLO  System Timer Counter Lower 32 bits  32  \n0x8  CHI  System Timer Counter Higher 32 bits  32  \n0xc  C0  System Timer Compare 0  32  \n0x10  C1  System Timer Compare 1  32  \n0x14  C2  System Timer Compare 2  32  \n0x18  C3  System Timer Compare 3  32  \n \n \nCS Register  \nSynopsis  System Timer Control / Status.  \nThis register is used to record and clear timer cha nnel comparator matches. The system timer match bit s \nare routed to the interrupt controller where they c an generate an interrupt. \nThe M0-3 fields contain the free-running counter ma tch status. Write a one to the relevant bit to clea r the \nmatch detect status bit and the corresponding inter rupt request line.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 173 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:4   Reserved  - Write as 0, read as don't care    \n3 M3  System Timer Match 3  \n0 = No Timer 3 match since last cleared. \n1 = Timer 3 match detected. RW  0x0  \n2 M2  System Timer Match 2  \n0 = No Timer 2 match since last cleared. \n1 = Timer 2 match detected. RW  0x0  \n1 M1  System Timer Match 1  \n0 = No Timer 1 match since last cleared. \n1 = Timer 1 match detected. RW  0x0  \n0 M0  System Timer Match 0  \n0 = No Timer 0 match since last cleared. \n1 = Timer 0 match detected. RW  0x0  \n \n \nCLO Register  \nSynopsis  System Timer Counter Lower bits.  \nThe system timer free-running counter lower registe r is a read-only register that returns the current value \nof the lower 32-bits of the free running counter. \nBit(s)  Field Name  Description  Type  Reset  \n31:0  CNT  Lower 32 -bits of the free running counter value.  RW  0x0  \n \n \nCHI Register  \nSynopsis  System Timer Counter Higher bits.  \nThe system timer free-running counter higher regist er is a read-only register that returns the current  value \nof the higher 32-bits of the free running counter. \nBit(s)  Field Name  Description  Type  Reset  \n31:0  CNT  Higher 32 -bits of the free running counter value.  RW  0x0  \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 174 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nC0 C1 C2 C3 Register  \nSynopsis  System Timer Compare.  \nThe system timer compare registers hold the compare  value for each of the four timer channels. \nWhenever the lower 32-bits of the free-running coun ter matches one of the compare values the \ncorresponding bit in the system timer control/statu s register is set. \nEach timer peripheral (minirun and run) has a set o f four compare registers. \nBit(s)  Field Name  Description  Type  Reset  \n31:0  CMP  Compare value for match channel n.  RW  0x0  \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 175 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n13 UART \nThe BCM2835 device has two UARTS. On mini UART and and PL011 U ART. This section \ndescribes the PL011 UART. For details of the mini UART see  2.2 Mini UART . \nThe PL011 UART is a Universal Asynchronous Receiver/Transmi tter. This is the ARM \nUART (PL011) implementation. The UART performs serial-to -parallel conversion on data \ncharacters received from an external peripheral device o r modem, and parallel-to-serial \nconversion on data characters received from the Advanc ed Peripheral Bus (APB).  \nThe ARM PL011 UART has some optional functionality whic h can be included or left out.  \nThe following functionality is not supported  : \n \u25cf Infrared Data Association (IrDA) \n \u25cf Serial InfraRed (SIR) protocol Encoder/Decoder (ENDEC) \n \u25cf Direct Memory Access (DMA). \nThe UART provides: \n\u2022 Separate 16x8 transmit and 16x12 receive FIFO memory. \n\u2022 Programmable baud rate generator.  \n\u2022 Standard asynchronous communication bits (start, stop and parity). These are added \nprior to transmission and removed on reception. \n\u2022 False start bit detection. \n\u2022 Line break generation and detection. \n\u2022 Support of the modem control functions CTS and RTS. Howe ver DCD, DSR, DTR, \nand RI are not supported. \n\u2022 Programmable hardware flow control. \n\u2022 Fully-programmable serial interface characteristics: \ndata can be 5, 6, 7, or 8 bits \neven, odd, stick, or no-parity bit generation and detection \n1 or 2 stop bit generation \nbaud rate generation, dc up to UARTCLK/16 \nThe UART clock source and associated dividers are controll ed by the Clock Manager. \nFor the in-depth UART overview, please, refer to the AR M PrimeCell UART (PL011) \nRevision: r1p5 Technical Reference Manual. \n13.1 Variations from the 16C650 UART \nThe UART varies from the industry-standard 16C650 UART device as follows: \n\u2022 Receive FIFO trigger levels are 1/8, 1/4, 1/2, 3/4, and 7/8 \n\u2022 Transmit FIFO trigger levels are 1/8, 1/4, 1/2, 3/4, and 7/8  \n\u2022 The internal register map address space, and the bit func tion of each register differ  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 176 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n\u2022 The deltas of the modem status signals are not availabl e. \nThe following 16C650 UART features are not supported: \n\u2022 1.5 stop bits (1 or 2 stop bits only are supported) \n\u2022 Independent receive clock. \n13.2 Primary UART Inputs and Outputs \nThe UART has two primary inputs RXD, nCTS and two primary outputs TXD, nRTS. The \nremaining signals like SRIN, SROUT, OUT1, OUT2, DSR, D TR, and RI are not supported in \nthis implementation. The following table shows the UART  signals map on the General \nPurpose I/O (GPIO). For the insight on how to program a lternate function refer to the GPIO \nparagraph.  \n Pull  ALT0  ALT1  ALT2  ALT3  ALT4  ALT5  \nGPIO14 Low TXD0      \nGPIO15 Low RXD0      \nGPIO16 Low    CTS0   \nGPIO17 Low    RTS0   \nGPIO30 Low    CTS0   \nGPIO31 Low    RTS0   \nGPIO32 Low    TXD0   \nGPIO33 Low    RXD0   \nGPIO36 High   TXD0    \nGPIO37 Low   RXD0    \nGPIO38 Low   RTS0    \nGPIO39 Low   CTS0    \nTable 13-1 UART Assignment on the GPIO Pin map \n13.3 UART Interrupts \nThe UART has one intra-chip interrupt UARTINTR generated as the OR-ed function of the \nfive individual interrupts. \n\u2022 UARTINTR, this is an OR function of the five indivi dual masked outputs: \n\u2022 UARTRXINTR \n\u2022 UARTTXINTR \n\u2022 UARTRTINTR \n\u2022 UARTMSINTR, that can be caused by: \n\u2014 UARTCTSINTR, because of a change in the nUARTCTS modem  status \n\u2014 UARTDSRINTR, because of a change in the nUARTDSR mode m status. \n\u2022 UARTEINTR, that can be caused by an error in the rec eption:  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 177 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n\u2014 UARTOEINTR, because of an overrun error \n\u2014 UARTBEINTR, because of a break in the reception \n\u2014 UARTPEINTR, because of a parity error in the received character \n\u2014 UARTFEINTR, because of a framing error in the receive d character. \nOne can enable or disable the individual interrupts by chang ing the mask bits in the Interrupt \nMask Set/Clear Register, UART_IMSC. Setting the appropria te mask bit HIGH enables the \ninterrupt. \nUARTRXINTR: \nThe transmit interrupt changes state when one of the f ollowing events occurs:  \n\u2022 If the FIFOs are enabled and the transmit FIFO is equ al to or lower than the \nprogrammed trigger level then the transmit interrupt is asserted HIGH. The transmit \ninterrupt is cleared by writing data to the transmit FIFO  until it becomes greater than the \ntrigger level, or by clearing the interrupt.  \n\u2022 If the FIFOs are disabled (have a depth of one locatio n) and there is no data present in \nthe transmitters single location, the transmit inte rrupt is asserted HIGH. It is cleared by \nperforming a single write to the transmit FIFO, or by cl earing the interrupt. \nUARTRTINTR: \nThe receive interrupt changes state when one of the fo llowing events occurs: \n\u2022 If the FIFOs are enabled and the receive FIFO reaches  the programmed trigger level. \nWhen this happens, the receive interrupt is asserted HIGH.  The receive interrupt is \ncleared by reading data from the receive FIFO until it be comes less than the trigger level, \nor by clearing the interrupt. \n\u2022 If the FIFOs are disabled (have a depth of one locati on) and data is received thereby \nfilling the location, the receive interrupt is asserted H IGH. The receive interrupt is cleared \nby performing a single read of the receive FIFO, or by cl earing the interrupt. \n13.4 Register View \nThe PL011 USRT is mapped on base adderss 0x7E20100. It has the fo llowing memory-\nmapped registers. \nUART Address Map  \nAddress \nOffset  Register Name  Description  Size  \n0x0 DR  Data Register 32 \n0x4 RSRECR   32 \n0x18 FR  Flag register 32  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 178 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0x20 ILPR  not in use 32 \n0x24 IBRD  Integer Baud rate divisor 32 \n0x28 FBRD  Fractional Baud rate divisor 32 \n0x2c LCRH  Line Control register 32 \n0x30 CR  Control register 32 \n0x34 IFLS  Interupt FIFO Level Select Register 32 \n0x38 IMSC  Interupt Mask Set Clear Register 32 \n0x3c RIS  Raw Interupt Status Register 32 \n0x40 MIS  Masked Interupt Status Register 32 \n0x44 ICR  Interupt Clear Register 32 \n0x48 DMACR  DMA Control Register 32 \n0x80 ITCR  Test Control register 32 \n0x84 ITIP  Integration test input reg 32 \n0x88 ITOP  Integration test output reg 32 \n0x8c TDR  Test Data reg 32 \n \n \nDR Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 179 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  The UART_DR Register is the data register. For words t o be transmitted: \nif the FIFOs are enabled, data written to this locati on is pushed onto the \ntransmit FIFO. \nif the FIFOs are not enabled, data is stored in the t ransmitter holding register \n(the bottom word of the transmit FIFO). \nThe write operation initiates transmission from the UAR T. The data is prefixed \nwith a start bit, appended with the appropriate pari ty bit (if parity is enabled), \nand a stop bit. The resultant word is then transmitted . \nFor received words: \nif the FIFOs are enabled, the data byte and the 4-bit  status (break, frame, \nparity, and overrun) is pushed onto the 12-bit wide re ceive FIFO \nif the FIFOs are not enabled, the data byte and status  are stored in the \nreceiving holding register (the bottom word of the rece ive FIFO). \nBit(s)  Field Name  Description  Type  Reset  \n31:12   Reserved  - Write as 0, read as don't care    \n11 OE Overrun error. This bit is set to 1 if data is \nreceived and the receive FIFO is already \nfull. \nThis is cleared to 0 once there is an empty \nspace in the FIFO and a new character can \nbe written to it. RW 0x0 \n10 BE Break error. This bit is set to 1 if a break \ncondition was detected, indicating that the \nreceived data input \nwas held LOW for longer than a full-word \ntransmission time (defined as start, data, \nparity and stop \nbits). \nIn FIFO mode, this error is associated with \nthe character at the top of the FIFO. When \na break occurs, \nonly one 0 character is loaded into the \nFIFO. The next character is only enabled \nafter the receive data \ninput goes to a 1 (marking state), and the \nnext valid start bit is received. RW 0x0 \n9 PE Parity error. When set to 1, it indicates that \nthe parity of the received data character \ndoes not match the \nparity that the EPS and SPS bits in the Line \nControl Register, UART_LCRH select. In \nFIFO mode, this error is associated with the \ncharacter at the top of the FIFO. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 180 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 FE Framing error. When set to 1, it indicates \nthat the received character did not have a \nvalid stop bit (a valid \nstop bit is 1). In FIFO mode, this error is \nassociated with the character at the top of \nthe FIFO. RW 0x0 \n7:0 DATA Receive (read) data character. \nTransmit (write) data character. RW 0x0 \n \n \nRSRECR Register  \nSynopsis  The UART_RSRECR Register is the receive status register/e rror clear \nregister. If the status is read from this register, then the status information for \nbreak, framing and parity corresponds to the data char acter read from the \nData Register, UART_DR. The status information for ov errun is set \nimmediately when an overrun condition occurs. NOTE: The  received data \ncharacter must be read first from the Data Register, UA RT_DR on before \nreading the error status associated with that data chara cter from this register. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 OE Overrun error. This bit is set to 1 if data is \nreceived and the receive FIFO is already \nfull. \nThis is cleared to 0 once there is an empty \nspace in the FIFO and a new character can \nbe written to it. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 181 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2 BE Break error. This bit is set to 1 if a break \ncondition was detected, indicating that the \nreceived data input \nwas held LOW for longer than a full-word \ntransmission time (defined as start, data, \nparity and stop \nbits). \nIn FIFO mode, this error is associated with \nthe character at the top of the FIFO. When \na break occurs, \nonly one 0 character is loaded into the \nFIFO. The next character is only enabled \nafter the receive data \ninput goes to a 1 (marking state), and the \nnext valid start bit is received. RW 0x0 \n1 PE Parity error. When set to 1, it indicates that \nthe parity of the received data character \ndoes not match the \nparity that the EPS and SPS bits in the Line \nControl Register, UART_LCRH select. In \nFIFO mode, this error is associated with the \ncharacter at the top of the FIFO. RW 0x0 \n0 FE Framing error. When set to 1, it indicates \nthat the received character did not have a \nvalid stop bit (a valid \nstop bit is 1). In FIFO mode, this error is \nassociated with the character at the top of \nthe FIFO. RW 0x0 \n \n \nFR Register  \nSynopsis  The UART_FR Register is the flag register. \nBit(s)  Field Name  Description  Type  Reset  \n31:9  Reserved  - Write as 0, read as don't care    \n8 RI Unsupported, write zero, read as don't care RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 182 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n7 TXFE Transmit FIFO empty. The meaning of this \nbit depends on the state of the FEN bit in \nthe Line Control Register, UARTLCR_ \nLCRH. \nIf the FIFO is disabled, this bit is set when \nthe transmit holding register is empty. \nIf the FIFO is enabled, the TXFE bit is set \nwhen the transmit FIFO is empty. This bit \ndoes not indicate if there is data in the \ntransmit shift register. RW 0x1 \n6 RXFF Receive FIFO full. The meaning of this bit \ndepends on the state of the FEN bit in the \nUARTLCR_ LCRH Register. \nIf the FIFO is disabled, this bit is set when \nthe receive holding register is full. \nIf the FIFO is enabled, the RXFF bit is set \nwhen the receive FIFO is full. RW 0x0 \n5 TXFF Transmit FIFO full. The meaning of this bit \ndepends on the state of the FEN bit in the \nUARTLCR_ LCRH Register. \nIf the FIFO is disabled, this bit is set when \nthe transmit holding register is full. \nIf the FIFO is enabled, the TXFF bit is set \nwhen the transmit FIFO is full. RW 0x0 \n4 RXFE Receive FIFO empty. The meaning of this \nbit depends on the state of the FEN bit in \nthe UARTLCR_H \nRegister. \nIf the FIFO is disabled, this bit is set when \nthe receive holding register is empty. \nIf the FIFO is enabled, the RXFE bit is set \nwhen the receive FIFO is empty. RW 0x0 \n3 BUSY UART busy. If this bit is set to 1, the UART \nis busy transmitting data. This bit remains \nset until the complete byte, including all the \nstop bits, has been sent from the shift \nregister. \nThis bit is set as soon as the transmit FIFO \nbecomes non-empty, regardless of whether \nthe UART is \nenabled or not. RW 0x0 \n2 DCD Unsupported, write zero, read as don't care RW 0x0 \n1 DSR Unsupported, write zero, read as don't care RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 183 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n0 CTS Clear to send. This bit is the complement of \nthe UART clear to send, nUARTCTS, \nmodem status input. That is, the bit is 1 \nwhen nUARTCTS is LOW. RW 0x0 \n \n \nILPR Register  \nSynopsis  This is the disabled IrDA register, writing to it has n ot effect and reading \nreturns 0. \nBit(s)  Field Name  Description  Type  Reset  \n31:0 ILPR Reserved - write zero, read as don't care. RW 0x0 \n \n \nIBRD Register  \nSynopsis  The UART_IBRD Register is the integer part of the ba ud rate divisor value. \nBit(s)  Field Name  Description  Type  Reset  \n31:16   Reserved  - Write as 0, read as don't care    \n15:0 IBRD The integer baud rate divisor. RW 0x0 \n \n \nFBRD Register  \nSynopsis  The UART_FBRD Register is the fractional part of the b aud rate divisor value. \nThe baud rate divisor is calculated as follows: \nBaud rate divisor BAUDDIV = (FUARTCLK/(16 Baud rate))  \nwhere FUARTCLK is the UART reference clock frequency. The  BAUDDIV is \ncomprised of the integer value IBRD and the fractional value FBRD. NOTE: \nThe contents of the IBRD and FBRD registers are not up dated until \ntransmission or reception of the current character is compl ete.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 184 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:6  Reserved  - Write as 0, read as don't care    \n5:0 FBRD The fractional baud rate divisor. RW 0x0 \n \n \nLCRH Register  \nSynopsis  The UARTLCR_ LCRH Register is the line control register . \nNOTE: The UART_LCRH, UART_IBRD, and UART_FBRD regist ers must not \nbe changed: \nwhen the UART is enabled \nwhen completing a transmission or a reception when it ha s been programmed \nto become disabled. \nBit(s ) Field Name  Description  Type  Reset  \n31:8  Reserved  - Write as 0, read as don't care    \n7 SPS Stick parity select. \n0 = stick parity is disabled \n1 = either: \nif the EPS bit is 0 then the parity bit is \ntransmitted and checked as a 1 \nif the EPS bit is 1 then the parity bit is \ntransmitted and checked as a 0. See Table \n25 9. RO 0x0 \n6:5 WLEN Word length. These bits indicate the \nnumber of data bits transmitted or received \nin a frame as follows: \nb11 = 8 bits \nb10 = 7 bits \nb01 = 6 bits \nb00 = 5 bits. RW 0x0 \n4 FEN Enable FIFOs: \n0 = FIFOs are disabled (character mode) \nthat is, the FIFOs become 1-byte-deep \nholding registers \n1 = transmit and receive FIFO buffers are \nenabled (FIFO mode). RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 185 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n3 STP2 Two stop bits select. If this bit is set to 1, \ntwo stop bits are transmitted at the end of \nthe frame. The receive \nlogic does not check for two stop bits being \nreceived. RW 0x0 \n2 EPS Even parity select. Controls the type of \nparity the UART uses during transmission \nand reception: \n0 = odd parity. The UART generates or \nchecks for an odd number of 1s in the data \nand parity bits. \n1 = even parity. The UART generates or \nchecks for an even number of 1s in the \ndata and parity bits. \nThis bit has no effect when the PEN bit \ndisables parity checking and generation. \nSee Table 25 9. RW 0x0 \n1 PEN Parity enable: \n0 = parity is disabled and no parity bit \nadded to the data frame \n1 = parity checking and generation is \nenabled. See Table 25 9. RW 0x0 \n0 BRK Send break. If this bit is set to 1, a low-level \nis continually output on the TXD output, \nafter completing transmission of the current \ncharacter. RW 0x0 \n \n \nCR Register  \nSynopsis  The UART_CR Register is the control register. \nNOTE: \nTo enable transmission, the TXE bit and UARTEN bit must  be set to 1. \nSimilarly, to enable reception, the RXE bit and UART EN bit, must be set to 1. \nNOTE: \nProgram the control registers as follows: \n1. Disable the UART. \n2. Wait for the end of transmission or reception of the  current character. \n3. Flush the transmit FIFO by setting the FEN bit to 0 in the Line Control \nRegister, UART_LCRH. \n4. Reprogram the Control Register, UART_CR. \n5. Enable the UART.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 186 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nBit(s)  Field Name  Description  Type  Reset  \n31:16   Reserved  - Write as 0, read as don't care    \n15 CTSEN CTS hardware flow control enable. If this bit \nis set to 1, CTS hardware flow control is \nenabled. Data is only transmitted when the \nnUARTCTS signal is asserted. RW 0x0 \n14 RTSEN RTS hardware flow control enable. If this bit \nis set to 1, RTS hardware flow control is \nenabled. Data \nis only requested when there is space in \nthe receive FIFO for it to be received. RW 0x0 \n13 OUT2 Unsupported, write zero, read as don't care RO 0x0 \n12 OUT1 Unsupported, write zero, read as don't care RO 0x0 \n11 RTS Request to send. This bit is the \ncomplement of the UART request to send, \nnUARTRTS, modem status output. That is, \nwhen the bit is programmed to a 1 then \nnUARTRTS is LOW. RW 0x0 \n10 DTR Unsupported, write zero, read as don't care RO 0x0 \n9 RXE Receive enable. If this bit is set to 1, the \nreceive section of the UART is enabled. \nData reception occurs for UART signals. \nWhen the UART is disabled in the middle of \nreception, it completes the current \ncharacter before stopping. RW 0x1 \n8 TXE Transmit enable. If this bit is set to 1, the \ntransmit section of the UART is enabled. \nData transmission occurs for UART signals. \nWhen the UART is disabled in the middle of \ntransmission, it completes the current \ncharacter before stopping. RW 0x1 \n7 LBE Loopback enable. If this bit is set to 1, the \nUARTTXD path is fed through to the \nUARTRXD path. In UART mode, when this \nbit is set, the modem outputs are also fed \nthrough to the modem inputs. This bit is \ncleared to 0 on reset, to disable loopback. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 187 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6:3  Reserved  - Write as 0, read as don't care    \n2 SIRLP Unsupported, write zero, read as don't care RO 0x0 \n1 SIREN Unsupported, write zero, read as don't care RO 0x0 \n0 UARTEN UART enable:  \n0 = UART is disabled. If the UART is \ndisabled in the middle of transmission or \nreception, it completes the current \ncharacter before stopping. \n1 = the UART is enabled. RW 0x0 \n \n \nIFLS Register  \nSynopsis  The UART_IFLS Register is the interrupt FIFO level se lect register. You can \nuse this register to define the FIFO level that trigge rs the assertion of the \ncombined interrupt signal. \nThe interrupts are generated based on a transition th rough a level rather than \nbeing based on the level. That is, the interrupts are  generated when the fill \nlevel progresses through the trigger level. \nThe bits are reset so that the trigger level is when th e FIFOs are at the half-\nway mark. \nBit(s)  Field Name  Description  Type  Reset  \n31:12   Reserved  - Write as 0, read as don't care    \n11:9 RXIFPSEL Unsupported, write zero, read as don't care RO 0x0 \n8:6 TXIFPSEL Unsupported, write zero, read as don't care RO 0x0 \n5:3 RXIFLSEL Receive interrupt FIFO level select. The \ntrigger points for the receive interrupt are as \nfollows: \nb000 = Receive FIFO becomes 1/8 full \nb001 = Receive FIFO becomes 1/4 full \nb010 = Receive FIFO becomes 1/2 full \nb011 = Receive FIFO becomes 3/4 full \nb100 = Receive FIFO becomes 7/8 full \nb101-b111 = reserved. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 188 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n2:0 TXIFLSEL Transmit interrupt FIFO level select. The \ntrigger points for the transmit interrupt are \nas follows: \nb000 = Transmit FIFO becomes 1/8 full \nb001 = Transmit FIFO becomes 1/4 full \nb010 = Transmit FIFO becomes 1/2 full \nb011 = Transmit FIFO becomes 3/4 full \nb100 = Transmit FIFO becomes 7/8 full \nb101-b111 = reserved. RW 0x0 \n \n \nIMSC Register  \nSynopsis  The UART_IMSC Register is the interrupt mask set/clear register. It is a \nread/write register. On a read this register returns th e current value of the \nmask on the relevant interrupt. On a write of 1 to th e particular bit, it sets the \ncorresponding mask of that interrupt. A write of 0 clea rs the corresponding \nmask. \nBit(s)  Field Name  Description  Type  Reset  \n31:11   Reserved  - Write as 0, read as don't care    \n10 OEIM Overrun error interrupt mask. A read \nreturns the current mask for the interrupt. \nOn a write of 1, the mask of the \nUARTOEINTR interrupt is set. A write of 0 \nclears the mask. RW 0x0 \n9 BEIM Break error interrupt mask. A read returns \nthe current mask for the UARTBEINTR \ninterrupt. On a write of 1, the mask of the \ninterrupt is set. A write of 0 clears the mask.  RW 0x0 \n8 PEIM Parity error interrupt mask. A read returns \nthe current mask for the UARTPEINTR \ninterrupt. On a write of 1, the mask of the \ninterrupt is set. A write of 0 clears the mask.  RW 0x0 \n7 FEIM Framing error interrupt mask. A read \nreturns the current mask for the \nUARTFEINTR interrupt. On a write of 1, the \nmask of the interrupt is set. A write of 0 \nclears the mask. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 189 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n6 RTIM Receive timeout interrupt mask. A read \nreturns the current mask for the \nUARTRTINTR interrupt. On a write of 1, the \nmask of the interrupt is set. A write of 0 \nclears the mask. RW 0x0 \n5 TXIM Transmit interrupt mask. A read returns the \ncurrent mask for the UARTTXINTR \ninterrupt. On a write of 1, the mask of the \ninterrupt is set. A write of 0 clears the mask.  RW 0x0 \n4 RXIM Receive interrupt mask. A read returns the \ncurrent mask for the UARTRXINTR \ninterrupt. On a write of 1, the mask of the \ninterrupt is set. A write of 0 clears the mask.  RW 0x0 \n3 DSRMIM Unsupported, write zero, read as don't care RO 0x0 \n2 DCDMIM Unsupported, write zero, read as don't care RO 0x0 \n1 CTSMIM nUARTCTS modem interrupt mask. A read \nreturns the current mask for the \nUARTCTSINTR interrupt. On a write of 1, \nthe mask of the interrupt is set. A write of 0 \nclears the mask. RW 0x0 \n0 RIMIM Unsupported, write zero, read as don't care RO 0x0 \n \n \nRIS Register  \nSynopsis  The UART_RIS Register is the raw interrupt status regist er. It is a read-only \nregister. This register returns the current raw status value, prior to masking, of \nthe corresponding interrupt. \nNOTE: All the bits, except for the modem status interru pt bits (bits 3 to 0), are \ncleared to 0 when reset. The modem status interrupt bit s are undefined after \nreset. \nBit(s)  Field Name  Description  Type  Reset  \n31:11   Reserved  - Write as 0, read as don't care     \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 190 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n10 OERIS Overrun error interrupt status. Returns the \nraw interrupt state of the UARTOEINTR \ninterrupt. RW 0x0 \n9 BERIS Break error interrupt status. Returns the \nraw interrupt state of the UARTBEINTR \ninterrupt. RW 0x0 \n8 PERIS Parity error interrupt status. Returns the \nraw interrupt state of the UARTPEINTR \ninterrupt. RW 0x0 \n7 FERIS Framing error interrupt status. Returns the \nraw interrupt state of the UARTFEINTR \ninterrupt. RW 0x0 \n6 RTRIS Receive timeout interrupt status. Returns \nthe raw interrupt state of the UARTRTINTR \ninterrupt. RW 0x0 \n5 TXRIS Transmit interrupt status. Returns the raw \ninterrupt state of the UARTTXINTR \ninterrupt. RW 0x0 \n4 RXRIS Receive interrupt status. Returns the raw \ninterrupt state of the UARTRXINTR \ninterrupt. RW 0x0 \n3 DSRRMIS Unsupported, write zero, read as don't care RW 0x0 \n2 DCDRMIS Unsupported, write zero, read as don't care RW 0x0 \n1 CTSRMIS nUARTCTS modem interrupt status. \nReturns the raw interrupt state of the \nUARTCTSINTR interrupt. RW 0x0 \n0 RIRMIS Unsupported, write zero, read as don't care RW 0x0 \n \n \nMIS Register   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 191 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nSynopsis  The UART_MIS Register is the masked interrupt status re gister. This register \nreturns the current masked status value of the correspo nding interrupt. \nNOTE: All the bits, except for the modem status interru pt bits (bits 3 to 0), are \ncleared to 0 when reset. The modem status interrupt bit s are undefined after \nreset. \nBit(s)  Field Name  Description  Type  Reset  \n31:11   Reserved  - Write as 0, read as don't care    \n10 OEMIS Overrun error masked interrupt status. \nReturns the masked interrupt state of the \nUARTOEINTR interrupt. RW 0x0 \n9 BEMIS Break error masked interrupt status. \nReturns the masked interrupt state of the \nUARTBEINTR interrupt. RW 0x0 \n8 PEMIS Parity error masked interrupt status. \nReturns the masked interrupt state of the \nUARTPEINTR interrupt. RW 0x0 \n7 FEMIS Framing error masked interrupt status. \nReturns the masked interrupt state of the \nUARTFEINTR interrupt. RW 0x0 \n6 RTMIS Receive timeout masked interrupt status. \nReturns the masked interrupt state of the \nUARTRTINTR interrupt. RW 0x0 \n5 TXMIS Transmit masked interrupt status. Returns \nthe masked interrupt state of the \nUARTTXINTR interrupt. RW 0x0 \n4 RXMIS Receive masked interrupt status. Returns \nthe masked interrupt state of the \nUARTRXINTR interrupt. RW 0x0 \n3 DSRMMIS Unsupported, write zero, read as don't care RW 0x0 \n2 DCDMMIS Unsupported, write zero, read as don't care RW 0x0 \n1 CTSMMIS nUARTCTS modem masked interrupt \nstatus. Returns the masked interrupt state \nof the UARTCTSINTR interrupt. RW 0x0 \n0 RIMMIS Unsupported, write zero, read as don't care RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 192 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \n \nICR Register  \nSynopsis  The UART_ICR Register is the interrupt clear register.  \nBit(s)  Field Name  Description  Type  Reset  \n31:11   Reserved  - Write as 0, read as don't care    \n10 OEIC Overrun error interrupt clear. Clears the \nUARTOEINTR interrupt. RW 0x0 \n9 BEIC Break error interrupt clear. Clears the \nUARTBEINTR interrupt. RW 0x0 \n8 PEIC Parity error interrupt clear. Clears the \nUARTPEINTR interrupt. RW 0x0 \n7 FEIC Framing error interrupt clear. Clears the \nUARTFEINTR interrupt.. RW 0x0 \n6 RTIC Receive timeout interrupt clear. Clears the \nUARTRTINTR interrupt. RW 0x0 \n5 TXIC Transmit interrupt clear. Clears the \nUARTTXINTR interrupt. RW 0x0 \n4 RXIC Receive masked interrupt status. Returns \nthe masked interrupt state of the \nUARTRXINTR interrupt. RW 0x0 \n3 DSRMIC Unsupported, write zero, read as don't care RW 0x0 \n2 DCDMIC Unsupported, write zero, read as don't care RW 0x0 \n1 CTSMIC nUARTCTS modem masked interrupt \nstatus. Returns the masked interrupt state \nof the UARTCTSINTR interrupt. RW 0x0 \n0 RIMIC Unsupported, write zero, read as don't care RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 193 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nDMACR Register  \nSynopsis  This is the disabled DMA Control Register, writing to i t has not effect and \nreading returns 0. \nBit(s)  Field Name  Description  Type  Reset  \n31:3  Reserved  - Write as 0, read as don't care    \n2 DMAONERR Unsupported, write zero, read as don't care RW 0x0 \n1 TXDMAE Unsupported, write zero, read as don't care RW 0x0 \n0 RXDMAE Unsupported, write zero, read as don't care RW 0x0 \n \n \nITCR Register  \nSynopsis  This is the Test Control Register UART_ITCR. \nBit(s)  Field Name  Description  Type  Reset  \n31:2  Reserved  - Write as 0, read as don't care    \n1 ITCR1 Test FIFO enable. When this bit it 1, a write \nto the Test Data Register, UART_DR writes \ndata into the receive FIFO, and reads from \nthe UART_DR register reads data out of \nthe transmit FIFO. \nWhen this bit is 0, data cannot be read \ndirectly from the transmit FIFO or written \ndirectly to the receive FIFO (normal \noperation). RW 0x0 \n0 ITCR0 Integration test enable. When this bit is 1, \nthe UART is placed in integration test \nmode, otherwise it is in normal operation. RW 0x0 \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 194 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nITIP Register  \nSynopsis  This is the Test Control Register UART_ITIP. \nBit(s)  Field Name  Description  Type  Reset  \n31:4  Reserved  - Write as 0, read as don't care    \n3 ITIP3 Reads return the value of the nUARTCTS \nprimary input. RW 0x0 \n2:1  Reserved  - Write as 0, read as don't care    \n0 ITIP0 Reads return the value of the UARTRXD \nprimary input. RW 0x0 \n \n \nITOP Register  \nSynopsis  This is the Test Control Register UART_ITOP. \nBit(s)  Field Name  Description  Type  Reset  \n31:12   Reserved  - Write as 0, read as don't care    \n11 ITOP11 Intra-chip output. Writes specify the value \nto be driven on UARTMSINTR. \nReads return the value of UARTMSINTR at \nthe output of the test multiplexor. RW 0x0 \n10 ITOP10 Intra-chip output. Writes specify the value \nto be driven on UARTRXINTR. \nReads return the value of UARTRXINTR at \nthe output of the test multiplexor. RW 0x0 \n9 ITOP9 Intra-chip output. Writes specify the value \nto be driven on UARTTXINTR. \nReads return the value of UARTTXINTR at \nthe output of the test multiplexor. RW 0x0  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 195 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n8 ITOP8 Intra-chip output. Writes specify the value \nto be driven on UARTRTINTR. \nReads return the value of UARTRTINTR at \nthe output of the test multiplexor. RW 0x0 \n7 ITOP7 Intra-chip output. Writes specify the value \nto be driven on UARTEINTR. \nReads return the value of UARTEINTR at \nthe output of the test multiplexor. RW 0x0 \n6 ITIP6 Intra-chip output. Writes specify the value \nto be driven on UARTINTR. \nReads return the value of UARTINTR at the \noutput of the test multiplexor. RW 0x0 \n5:4  Reserved  - Write as 0, read as don't care    \n3 ITIP3 Primary output. Writes specify the value to \nbe driven on nUARTRTS. RW 0x0 \n2:1  Reserved  - Write as 0, read as don't care    \n0 ITIP0 Primary output. Writes specify the value to \nbe driven on UARTTXD. RW 0x0 \n \n \nTDR Register  \nSynopsis  UART_TDR is the test data register. It enables data to  be written into the \nreceive FIFO and read out from the transmit FIFO for t est purposes. This test \nfunction is enabled by the ITCR1bit in the Test Contro l Register, UART_ITCR. \nBit(s)  Field Name  Description  Type  Reset  \n31:11   Reserved  - Write as 0, read as don't care    \n10:0 TDR10_0 When the ITCR1 bit is set to 1, data is \nwritten into the receive FIFO and read out \nof the transmit FIFO. RW 0x0 \n \n \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 196 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n14 Timer (ARM side) \n14.1 Introduction \nThe ARM Timer is based  on a ARM AP804, but it has a number of differences  with the standard \nSP804: \n\u2022 There is only one timer. \n\u2022 It only runs in continuous mode. \n\u2022 It has a extra clock pre-divider register. \n\u2022 It has a extra stop-in-debug-mode control bit. \n\u2022 It also has a 32-bit free running counter. \nThe clock from the ARM timer is derived from the sy stem clock. This clock can change dynamically \ne.g. if the system goes into reduced power or in lo w power mode. Thus the clock speed adapts to \nthe overal system performance capabilities. For acc urate timing it is recommended to use the \nsystem timers.  \n14.2 Timer Registers: \n \nThe base address for the ARM timer register is 0x7E 00B000. \n \nAddress  \noffset 8 Description  \n0x400  Load  \n0x404  Value  (Read Only)  \n0x408  Control  \n0x40C  IRQ Clear/Ack  (Write only)  \n0x410  RAW IRQ  (Read Only)  \n0x414  Masked IRQ  (Read Only)  \n0x418  Reload  \n0x41C  Pre -divider  (Not in real 804!)  \n0x420  Free running counter  (Not in real 804!)  \n \n  \nTimer Load register \nThe timer load register sets the time for the timer  to count down. This value is loaded into the timer  \nvalue register after the load register has been wri tten or if the timer-value register has counted \ndown to 0. \n \n                                                             \n8 This is the offset which needs to be added to the base address to get the full hardware address.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 197 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTimer Value register: \nThis register holds the current timer value and is counted down when the counter is running. It is \ncounted down each timer clock until the value 0 is reached. Then the value register is re-loaded from \nthe timer load register and the interrupt pending b it is set. The timer count down speed is set by the  \ntimer pre-divide register. \n \nTimer control register: \nThe standard SP804 timer control register consist o f 8 bits but in the BCM implementation there are \nmore control bits for the extra features. Control b its 0-7 are identical to the SP804 bits, albeit som e \nfunctionality of the SP804 is not implemented. All new control bits start from bit 8 upwards. \nDifferences between a real 804 and the BCM implemen tation are shown in italics. \nName: Timer control  Address: base + 0x40C  Reset: 0x3E0020  \nBit(s)  R/W  Function  \n31:10  - <Unused>  \n23:16  R/W  Free running counter pre -scaler. Freq is sys_clk/(prescale+1)  \nThese bits do not exists in a standard 804! Reset v alue is 0x3E \n15:10  - <Unused>  \n9 R/W  0 : Free running counter Disabled  \n1 : Free running counter Enabled \nThis bit does not exists in a standard 804 timer! \n8 R/W  0 : Timers keeps running if ARM is in debug halted mode  \n1 : Timers halted if ARM is in debug halted mode \nThis bit does not exists in a standard 804 timer! \n7 R/W  0 : Timer disabled  \n1 : Timer enabled \n6 R/W  Not used , The timer is always in free running mode.  \nIf this bit is set it enables periodic mode in a st andard 804. That \nmode is not supported in the BC2835M. \n5 R/W  0 : Timer interrupt disabled  \n1 : Timer interrupt enabled \n4 R/W  <Not used>  \n3:2  R/W  Pre -scale bits:  \n00 : pre-scale is clock / 1 (No pre-scale) \n01 : pre-scale is clock / 16  \n10 : pre-scale is clock / 256  \n11 : pre-scale is clock / 1 (Undefined in 804)  \n1 R/W  0 : 16 -bit counters  \n1 : 23-bit counter \n0 R/W  Not used , The timer is always in wrapping mode.  \nIf this bit is set it enables one-shot mode in real  804. That mode is \nnot supported in the BCM2835. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 198 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nTimer IRQ clear register: \nThe timer IRQ clear register is write only. When wr iting this register the interrupt-pending bit is \ncleared. \nWhen reading this register it returns 0x544D5241 wh ich is the ASCII reversed value for \"ARMT\". \nTimer Raw IRQ register \nThe raw IRQ register is a read-only register. It sh ows the status of the interrupt pending bit. \nName: Raw IRQ  Address: base + 0x40C  Reset: 0x3E0020  \nBit(s)  R/W  Function  \n31:0  R 0 \n0 R 0 : The interrupt pending bits is clear  \n1 : The interrupt pending bit is set.  \n \nThe interrupt pending bits is set each time the val ue register is counted down to zero. The interrupt \npending bit can not by itself generates interrupts.  Interrupts can only be generated if the interrupt \nenable bit is set. \n \nTimer Masked IRQ register: \nThe masked IRQ register is a read-only register. It  shows the status of the interrupt signal. It is si mply \na logical AND of the interrupt pending bit and the interrupt enable bit. \nName: Masked IRQ  Address: base + 0x40C  Reset: 0x3E0020  \nBit(s)  R/W  Function  \n31:0  R 0 \n0 R 0 : Interrupt line not asserted.  \n1 :Interrupt line is asserted, (the interrupt pendi ng and the interrupt \nenable bit are set.) \n \nTimer Reload register: \nThis register is a copy of the timer load register.  The difference is that a write to this register do es \nnot trigger an immediate reload of the timer value register. Instead the timer load register value is \nonly accessed if the value register has finished co unting down to zero.  \n \nThe timer  pre-divider register: \nName: pre -divide  Address: base + 0x41C  Reset: 0x07D  \nBit(s)  R/W  Function  \n31:10  - <Unused>  \n9:0  R/W  Pre -divider value.  \n \nThe Pre-divider register is not present in the SP80 4.   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 199 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nThe pre-divider register is 10 bits wide and can be  written or read from. This register has been added  \nas the SP804 expects a 1MHz clock which we do not h ave. Instead the pre-divider takes the APB \nclock and divides it down according to: \ntimer_clock = apb_clock/(pre_divider+1) \nThe reset value of this register is 0x7D so gives a  divide by 126. \n \nFree running counter \nName: Free running  Address: base + 0x420  Reset: 0x000  \nBit(s)  R/W  Function  \n31:0  R Counter value  \n \nThe free running counter is not present in the SP80 4.  \nThe free running counter is a 32 bits wide read onl y register. The register is enabled by setting bit 9 \nof the Timer control register. The free running cou nter is incremented immediately after it is \nenabled. The timer can not be reset but when enable d, will always increment and roll-over. The free \nrunning counter is also running from the APB clock and has its own clock pre-divider controlled by \nbits 16-23 of the timer control register. \nThis register will be halted too if bit 8 of the co ntrol register is set and the ARM is in Debug Halt \nmode. \n  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 200 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n15 USB \n \nThe USB core used in the Videocore is build from Sy nopsys IP. Details about the block can be found in \nDWC_otg_databook.pdf (Which can also be downloaded from  \nhttps://www.synopsys.com/dw/ipdir.php?ds=dwc_usb_2_ 0_hs_otg  ) .  \n \n15.1 Configuration \nA number of features of the block are specified before the  block is build and thus can not be \nchanged using software. The above mentioned document has a list of these under the chapter \n\"Configuration Parameters\". The following table list all configuration parameters mentioned in \nthat chapter and the values which have been chosen.  \n \nFeature/Parameter  Selected value  \nMode of Operation  0: HNP - and SRP -Capable OTG (Device and \nHost)  \nLPM Mode of Operation  0: Non -LPM -capable core  \nHSIC Mode of Operation  0: Non -HSIC -capable core  \nArchitecture  2: Internal DMA  \nPoint -to -Point Application Only  0: No  \nHigh -Speed PHY Interfaces  1: UTMI+  \nUSB 1.1 Full -Speed Serial Transceiver Interface  1: Dedicated FS  \nUSB IC_USB Transceiver Interface  0: Non -IC_USB -capable  \nDefault (Power on) Interface selection: FS_USB/IC_U SB  0 : FS_USB interface  \nData Width of the UTMI+ Interface  0: 8 bits  \nEnable I2C Interface  0: None  \nEnable ULPI Carkit  0: No  \nEnable PHY Vendor Control Interface  0: No   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 201 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nFeature/Parameter  Selected value  \nNumber of Device Mode Endpoints in Addition to Control \nEndpoint 0  7 \nEnable Dedicated Transmit FIFOs for Device IN Endpo ints  1: Yes  \nEnable descriptor based scatter/gather DMA  0: No  \nEnable Option for Endpoint - Specific Interrupt  0: No  \nNumber of Device Mode Periodic IN Endpoints  0  \nNumber  of Device Mode IN Endpoints including Control Endpo int \n0 8 \nNumber of Device Mode Control Endpoints in Addition  to \nEndpoint 0  0 \nNumber of Host Mode Channels  8 \nIs Periodic OUT Channel Support Needed in Host Mode  1: Yes  \nTotal Data FIFO RAM Depth  4096  \nEnable Dynamic FIFO Sizing  1: Yes  \nLargest Rx Data FIFO Depth  4096  \nLargest Non -Periodic Host Tx Data FIFO Depth  1024  \nLargest Non -periodic Tx Data FIFO Depth  4096  \nLargest Host Mode Tx Periodic Data FIFO Dept  4096  \nNon-periodic Request Queue Depth  8 \nHost Mode Periodic Request Queue Depth 8 \nDevice Mode IN Token Sequence Learning Queue Depth  8 \nWidth of Transfer Size Counters  19   \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 202 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \nFeature/Parameter  Selected value  \nWidth of Packet Counters  10  \nRemove Optional Features  0: No  \nPower -on Value of User ID Register  0x2708A000  \nEnable Power Optimization  0: No  \nIs Minimum AHB Operating Frequency Less than 60 MHz  1: Yes  \nReset Style of Clocked always Blocks in RTL  0: Asynchronous  \nInstantiate Double - Synchronization Flops  1: Yes  \nEnable Filter on \u201ciddig\u201d Signal from PHY  1: Yes  \nEnable Filter on \u201cvbus_valid\u201d Signal from PHY  1: Yes  \nEnable Filter on \u201ca_valid\u201d Signal from PHY  1: Yes  \nEnable Filter on \u201cb_valid\u201d Signal from PHY  1: Yes  \nEnable Filter on \u201csession_end\u201d Signal from PHY  1: Yes  \nDirection of Endpoints  Mode is {IN and OUT} for all endpoin ts  \nLargest Device Mode Periodic Tx Data FIFO n Depth   768 for all endpoints (Except 0)  \nLargest Device Mode IN Endpoint Tx FIFOn Depth (n =  0 to 15) \nwhen using dynamic FIFO sizing 0=32  \n1..5=512 \n6,7=768 \n \n15.2 Extra / Adapted registers. \nBesides the registers as specified in the documentation of Synopsys a number of extra registers \nhave been added. These control the Analogue USB Phy and t he connections of the USB block \ninto the Video core bus structure. Also the USB_GAHBCFG register has an alternative \nfunction for the bits [4:1].  \n \nBase Address of the USB block  \u2013 0x7E98_0000  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 203 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nOffset \nAddress Description Size  Read/ \nWrite \n0x080 USB_MDIO_CNTL  MDIO interface control   R/W  \n0x084 USB_MDIO_GEN Data for MDIO interface  32 R/W  \n0x088 USB_VBUS_DRV Vbus and other Miscellaneous controls  R/W  \n \n \nUSB MDIO Control (USB_MDIO_CNTL) \n \nAddress  0x 7E98 0080 \n Bit \nNumber  Field \nName Description Read/  \nWrite  Reset  \n31 mdio_busy 1= MDIO read or write in progress \n0= MDIO Idle  R 0 \n30-24 - Unused  - 0 \n23 bb_mdo Direct write (bitbash) MDO output R/W 0 \n22 bb_mdc Direct write (bitbash) MDC output R/W 0 \n21 bb_enbl 1= MDIO bitbash enable \n0= MDIO under control of the phy R/W 0 \n20 freerun 1= MDC is continous active \n0 = MDC only active during data transfer R/W 0 \n19:16 mdc_ratio MDC clock freq is sysclk/mdc_ratio R/W 0 \n15:0 mdi 16-bit read of MDIO input shift register. Updates on \nfalling edge of MDC RO 0 \n  \nTable 15-1 MDIO Control \n \nUSB MDIO Data (USB_MDIO_DATA) \n \nAddress  0x 7E98 0084 \n Bit \nNumber  Field \nName Description Read/  \nWrite  Reset  \n31-0 mdio_data 32-bit sequence to send over MDIO bu s W 0 \n31-0 mdio_data 32-bit sequence received from MDIO b us R 0 \n  \nTable 15-2 USB MDIO data \nA Preamble is not auto-generated so any MDIO access mus t be preceded by a write to this \nregister of 0xFFFFFFFF. Furthermore, a bug in the USB PH Y requires an extra clock edge so \na write of 0x00000000 must follow the actual access.  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 204 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nUSB VBUS (USB_VBUS) \n \nAddress  0x 7E98 0088 \n Bit \nNumber  Field \nName Description Read/  \nWrite  Reset \n31-20 - Unused - 0 \n19-16 axi_priority Sets the USB AXI priority level R/W 0 \n15:10 - Unused - 0 \n9 vbus_irq 1=one or more bits of [6:4] have changed  since \nlast read. \nThis bit is cleared when the register is read. RC 0 \n8 vbus_irq_en 1=Enable IRQ on VBUS status change R/ W 0 \n7 afe_non_driving 1=USB PHY AFE pull ups/pull downs  are off \n0=Normal USB AFE operation \n(Has no effect if MDIO mode is enabled in the \nphy) R/W 0 \n6 utmisrp_dischrgv \nbus Drive VBUS R 0 \n5 utmisrp_chrgvbu \ns Charge VBUS R 0 \n4 utmiotg_drvvbus  Discharge VBUS R 0 \n3 utmiotg_avalid A session Valid R/W 0 \n2 utmiotg_bvalid B session Valid R/W 0 \n1 utmiotg_vbusvali \nd VBUS valid R/W 0 \n0 utmisrp_sessend  Session end R/W 0 \n  \nTable 15-3 USB MDIO data \nThe RW bits in this register are fed into the USB2.0 cont roller and the RO bits are coming out \nof it.  In the real device, it will be up to the softwa re to communicate this information between \nthe USB2.0 controller and external VBUS device (some of these have I2C control, others will \nhave to interface via GPIO). \nUSB AHB configuration (USB_GAHBCFG) \n \nAddress  0x 7E98 0008 \nThe USB_GAHBCFG register has been adapted. Bits [4:1] whi ch are marked in the Synopsys \ndocumentation as \"Burst Length/Type (HBstLen)\" have been  used differently. \n[4] 1 = Wait for all outstanding AXI writes to complete before signalling (internally) that \nDMA is done.  \n0 = don't wait.  \n[3] Not used \n[2:1] Sets the maximum AXI burst length, but the bits are inverted,  \n00 = maximum AXI burst length of 4,  \n01 = maximum AXI burst length of 3, \n10 = maximum AXI burst length of 2 \n11 = maximum AXI burst length of 1  \n06 February 2012 Broadcom Europe Ltd. 406 Science Park Milton Road Cambridge CB4 0WW Page 205 \n \u00a9 2012 Broadcom Corporation.  All rights reserved \n \nPersonal Notes: \n \n  \n                                     \n \n  \n3-Axis Digital Compass IC  \nHMC 5883L \n \n \nThe Honeywell HMC5883L  is a surface -mount , multi -chip module designed for \nlow-field magnetic sensing  with a digital interface for applications such as low -\ncost compassing and magnetometry . The HMC5883L  includes ou r state-of-the-\nart, high -resolution HMC 118X series magneto -resistive sensors plus an ASIC \ncontaining amplifi cation,  automatic degaussing strap driver s, offset cancellation,  \nand a 12-bit ADC that enables 1 \u00b0 to 2\u00b0 compass heading accuracy.  The I2C \nserial bu s allows for eas y interface . The HMC5883L  is a 3.0x3.0x0.9mm surface \nmount 16-pin leadless chip carrier  (LCC). Applications for the HMC5883L  \ninclude Mobile Phones, Netbooks, Consumer Electronic s, Auto Navigation \nSystems , and  Personal Navigation Devices.  \n \nThe HMC5883L  utilizes Honeywell\u2019s Anisotropic Magnetoresistive (AMR) technology th at provides advantages over other  \nmagnetic sensor  technologies. The se anisotropic, directional sensors  feature precision in -axis sensitivity and linearity .  \nThese sensors\u2019  solid-state construction  with very low cross -axis sensitivity is designed to measure both the direction and \nthe magnitude of Earth\u2019 s magnetic fields, from milli-gauss to 8 gauss. Honeywell\u2019s Magnetic Sensors are among the most \nsensitive and reliable low -field sensors in the industry.  \n \n FEATURES                                   BENEFITS  \n \n\uf034 3-Axis Magnetoresistive Sensor s and \nASIC in a 3.0x3.0x0.9mm LCC Surface \nMount Package  \uf034 Small Size for Highly Integrated Products. Just Add a Micro - \nController Interface, P lus Two External SMT Capacitors  \nDesigned for High Volume, Cost Sensitive OEM Designs  \nEasy to Assemble & Compatible with High Speed SMT Assembly  \n    \n\uf034 12-Bit ADC Coupled with Low Noise \nAMR Sensors Achieves 2 milli-gauss \nField Resolution in \u00b1 8 Gauss Fields  \uf034 Enables 1 \u00b0 to 2\u00b0 Degree Compass Heading Accuracy   \n    \n\uf034 Built-In Self Test  \uf034 Enables Low -Cost Functionality Test after Assembly in Production  \n    \n\uf034 Low Voltage Operations ( 2.16 to 3.6 V) \nand Low Power Consumption ( 100 \u03bcA) \uf034 Compatible for Battery Powered Applications  \n    \n\uf034 Built-In Strap Drive Circuit s \uf034 Set/Reset  and Offset Strap Drivers for Degaussing, Self Test, and \nOffset Compensation  \n    \n\uf034 I2C Digital Interface  \uf034 Popular Two -Wire Serial Data Interface for Consu mer Electronics  \n    \n\uf034 Lead Free Package Construction  \uf034 RoHS Compliance  \n    \n\uf034 Wide Magnetic Field Range  (+/-8 Oe) \uf034 Sensor s Can Be Used in Strong Magnetic Field Environments  with a \n1\u00b0 to 2\u00b0 Degree Compass Heading Accuracy  \n    \n\uf034 Software and Algorithm Support \nAvailable  \uf034 Compassing Heading, Hard Iron, Soft Iron, and Auto Calibration \nLibraries Available  \n    \n\uf034 Fast 1 60 Hz Maximum Output Rate  \uf034 Enable s Pedestrian Navigation and LBS Applications  \nAdvanced Information   \n \nHMC5883L  \n \n2                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n SPECIFICATIONS  (* Tested at 25 \u00b0C except stated otherwise. ) \nCharacteristics  Conditions*  Min Typ Max Units  \nPower Supply       \n    Supply Voltage  VDD  Referenced to AGND  \nVDD IO Referenced to DGND  2.16 \n1.71 2.5 \n1.8 3.6 \nVDD+0.1  Volts  \nVolts  \n    Average Current  Draw  Idle Mode  \nMeasurement Mode ( 7.5 Hz ODR;  \nNo measurement  averag e, MA1:MA0 = 00 ) \nVDD = 2.5V, VDDIO = 1.8V  (Dual Supply)  \nVDD = VDDIO = 2.5V (Single Supply)  - \n- \n 2 \n100 \n - \n- \n \u03bcA \n\u03bcA \n \nPerformance       \n    Field Range  Full scale (FS)  -8  +8 gauss  \n    Mag Dynamic Range  3-bit gain control  \u00b11  \u00b18 gauss  \n    Sensitivity (Gain)  VDD=3.0V, GN=0 to 7, 12 -bit ADC  230  1370  LSb/g auss  \n    Digital Resolution  VDD=3.0V, GN=0 to 7, 1 -LSb, 1 2-bit ADC  0.73  4.35 milli-gauss  \n    Noise Floor  \n    (Field Resolution)  \n VDD=3.0V, GN=0, No measurement \naverage, Standard Deviation 100 samples  \n(See typical performance graphs below)   2  milli-gauss  \n    Linearity  \u00b12.0 gauss  input range    0.1 \u00b1% FS  \n    Hysteresis  \u00b12.0 gauss  input range   \u00b125  ppm \n    Cross -Axis Sensitivity  Test Conditions: Cross field = 0.5 gauss,  \nHapplied = \u00b13 gauss   \u00b10.2%   %FS/gauss  \n    Output Rate (ODR)  Continuous Measurment Mode  \nSingle Measurement Mode  0.75  75 \n160 Hz \nHz \n    Measur ement Period  From receiving command to data ready   6  ms \n    Turn-on Time  Ready for I2C commands  \nAnalog Circuit Ready for Measurements   200 \n50  \u03bcs \nms \n    Gain Tolerance  All gain/dynamic range settings   \u00b15  % \n    I2C Address  8-bit read address  \n8-bit writ e address   0x3D  \n0x3C   hex \nhex \n    I2C Rate  Controlled by I2C Master    400 kHz \n    I2C Hysteresis  Hysteresis of Schmitt trigger inputs on SCL  \nand SDA  -  Fall (VDDIO=1.8V)  \nRise (VDDIO=1.8V)    \n0.2*VDDIO  \n0.8*VDDIO    \nVolts  \nVolts  \n    Self Test  X & Y Axes  \nZ Axis  \u00b11.16 \n\u00b11.08  gauss  \nX & Y  & Z Axes  (GN=5) Positive Bias  \nX & Y & Z Axes (GN=5) Negative Bias  243 \n-575  575 \n-243 LSb \n    Sensitivity Tempco  TA = -40 to 125 \u00b0C, Uncompensated Output   -0.3  %/\u00b0C \nGeneral       \n    ESD Voltage  Human Body Model (all pins)  \nCharged Device Model (all pins)    2000  \n750 Volts  \n    Operating Temperature  Ambient  -30  85 \u00b0C \n    Storage Temperature  Ambient, unbiased  -40  125 \u00b0C  \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           3                                                                                      \n \n   Characteristics  Conditions*  Min Typ Max Units  \n    Reflow Classification  MSL 3, 260 \uf0b0C Peak Temperature      \n    Package Size  Length and Width  2.85 3.00 3.15 mm \n    Package Height   0.8 0.9 1.0 mm \n    Package Weight     18  mg \n \nAbsolute Maximum Ratings  (* Tested at 25 \u00b0C except stated otherwise.)  \nCharacteristics  Min Max Units  \n    Supply Voltage VDD  -0.3 4.8 Volts \n    Supply Voltage VDD IO -0.3 4.8 Volts \n \nPIN CONFIGURATIONS   \nPin Name  Description  \n1 SCL Serial  Clock \u2013 I2C Master/Slave Clock  \n2 VDD  Power Supply  (2.16V to 3.6V)  \n3 NC Not to be Connected  \n4 S1 Tie to VDD IO \n5 NC Not to be Connected  \n6 NC Not to be Connected  \n7 NC Not to be Connected  \n8 SETP  Set/Reset Strap Positive \u2013 S/R Capacitor (C2) Connection  \n9 GND  Supply Ground  \n10 C1 Reservoir Capacitor (C1) Connection  \n11 GND  Supply Ground  \n12 SETC  S/R Capacitor (C2) Connection  \u2013 Driver Side  \n13 VDD IO IO Power Supply  (1.71V to VDD)  \n14 NC Not to be C onnected  \n15 DRDY  Data Ready , Interrupt Pin.  Internally pulled high.  Optional connection.  Low for 250 \n\u00b5sec when data is placed in the data output registers . \n16 SDA Serial Data \u2013 I2C Master/Slave Data  \n \nTable 1: Pin Configurations   \n \nHMC5883L  \n \n4                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n \n \nArrow indicates dire ction of magnetic  field that generates a positive output reading in Normal Measurement configuration.  \n \nPACKAGE OUTLINES  \n \nPACKAGE DRAWING HMC5883L  (16-PIN LPCC, dimensions in millimeters)  \n \n \nMOUNTING CONSIDERATIONS  \n \nThe following is the recommend printed ci rcuit board (PCB) footprint for the HMC5883L .  \n  \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           5                                                                                      \n \n   \n0.1001.2751.275\n0.500\n3.0003.0000.450\n0.300\nx 8x 12\nHMC5 8 83  L an d  P a d  P a ttern\n(A ll d im e nsio ns a re in  mm) \n \nLAYOUT CONSIDERATIONS  \n \nBesides keeping all components that may contain ferrous materials (nickel, etc.) away from the sensor  on both sides of \nthe PCB , it is also recommend ed that there is no conducting copper under/near the sensor in any of the PCB layers. See  \nrecommended layout below. Notice that the one trace under the sensor in the dual supply mode is not expected to carry \nactive current since it is for pin 4 pull -up to VDDIO.  Power and ground plan es are  removed under the sensor to minimize \npossible source of magnetic noise. For best results, use non -ferrous materials for all exposed copper coding.  \n \n     \n  \n \n \n  \n \nHMC5883L  \n \n6                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n PCB Pad Definition  and Traces  \n \nThe HMC5883L  is a fine pitch LCC packa ge.  Refer to previous figure for recommended PCB footprint  for proper package \ncentering.  Size the traces between the HMC5883L  and the external capacitors (C1 and C2) to handle the 1 ampere peak \ncurrent pulses with low voltage drop on the traces.  \n \nStencil Design and Solder Paste  \nA 4 mil stencil and 100% paste coverage is recommended for the electrical contact pads.   \n \nReflow Assembly  \nThis device is classified as MSL 3 with 260 \uf0b0C peak reflow t emperature. A baking process  (125\uf0b0C, 24 hrs)  is required if \ndevice is not kept continuously in a dry (< 10% RH) environment  before assembly. No special reflow profile is required for \nHMC5883L , which is compatible with lead eutectic and lead -free solder paste reflow profiles. Honeywell recommends \nadherence to solder paste manufac turer\u2019s guidelines.  Hand soldering is not recommended. Built -in self test can be used \nto verify device functionalities after assembly.  \n \nExternal Capacitors  \n \nThe two external capacitors should be ceramic type construction with low ESR characteristics . The exact ESR values are \nnot critical but values less than 200 milli -ohms are recommended. Reservoir capacitor C1 is nominally 4.7 \u00b5F in \ncapacitance, with the set/reset capacitor C2 nominally 0.22 \u00b5F in capacitance. Low ESR characteristics may not be in \nmany small SMT ceramic capacitors (0402), so be prepared to up -size the capacitors to gain Low ESR characteristics.  \n \n \nINTERNAL SCHEMATIC DIAGRAM  \nHMC5883L  \n \n \n  \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           7                                                                                      \n \n   DUAL  SUPPLY REFERENCE DESIGN  \n \n \n \n \nSINGLE SUPPLY REFERENCE DESIGN  \n \n  \n \nHMC5883L  \n \n8                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n PERFORMANCE  \n \nThe following g raph(s) highlight HMC5883L \u2019s performance . \n \nTypical Noise Floor (Field Resolution)  \n \n      \n00.511.522.53\n0 1 2 3 4 5 6 7Resolution -Std Dev 100 Readings \n(mGa)\nGainHMC5883L Resolution\nExpon. (1)\nExpon. (2)\nExpon. (4)\nExpon. (8)1 Avg\n2 Avg\n4 Avg\n8Avg\n     \n  \n \n \nTypical Measurement Period in Single -Measurement Mode  \n \n \n* Monitoring of the DRDY Interrupt pin is only required  if maximum output rate is desired. \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           9                                                                                      \n \n   BASIC DEV ICE OPERATION  \n \nAnisotropic Magneto -Resistive Sensors  \n \nThe Honeywell HMC5883L  magnetoresistive sensor circuit is a trio of sensors and application specific support circuits to \nmeasure magnetic fields. With power supply applied, the sensor converts any incid ent magnetic field in the sensitive axis \ndirections to a differential voltage output. The magnetoresistive sensors are made of a nickel -iron (Permalloy) thin -film and \npatterned as a resistive strip element. In the presence of a magnetic field, a change in the bridge resistive elements \ncauses a corresponding change in voltage across the bridge outputs.  \n \nThese resistive elements are aligned together to have a common sensitive axis (indicated by arrows in the pinout  \ndiagram ) that will provide positive voltage change with magnetic fields increasing in the sensitive direction. Because the \noutput is  only proportion al to the magnetic field component along its axis , additional sensor bridges  are placed at \northogonal directions to permit accurate measurement of magne tic field in any orientation .  \n \nSelf Test  \n \nTo check the HMC5883L  for proper operation, a self test feature in incorporated in which the sensor is internally excited \nwith a nominal magnetic field  (in either positive or negative bias configuration) .  This fi eld is then measured and reported. \nThis function is enabled and the polarity is set by bits MS[n] in the configuration register  A. An internal current source \ngenerate s DC current (about 10 mA)  from the VDD supply.  This DC current is applied to the offset strap s of the magneto -\nresistive sensor, which creates an artificial magnetic field bias on the sensor. The difference of this measurement  and the \nmeasurement of the ambient field  will be put in the data output register for each of the three axes. By using this built -in \nfunction, the manufacturer can quickly verify the sensor\u2019s full functionality after the assembly without additional test setu p. \nThe self test results can also be used to estimate/compensate the sensor\u2019s sensitivity drift due to temperature.  \n \nFor each \u201c self t est measurement\u201d, the ASIC:  \n1. Sends a \u201cSet\u201d p ulse \n2. Takes one m easurement (M1)  \n3. Sends the (~10 mA) offset current to generate the (~1.1 Gauss) offset field and takes another \nmeasurement (M2)  \n4. Puts the difference of the two measurements in s ensor\u2019s data output r egister:  \n \n  Output = [M2 \u2013 M1] (i.e. o utput = offset field only) \n \nSee SELF TEST OPERATION section later in this datasheet for additional details . \n \nPower Management  \n \nThis device has two different domains of power supply. The first one is VDD that is the power supply for internal \noperations and the second one is VDDIO that is dedicated to IO interface. It is possible to work with VDDIO equal to VDD ;  \nSingle Supply mode, or with VDDIO lower than VDD allowing HMC5883L to be compatible with other devices on board.  \n \nI2C Interface  \n \nControl of this device is carried out via the I2C bus.  This device will be connected to this bus as a slave device under the \ncontrol of a master device, such as the processor.  \n \nThis device is compliant with I2C-Bus Speci fication , document number:  9398 393 40011.  As an I2C compatible device, \nthis device has a 7 -bit serial address and supports I2C protocols.  This device support s standard and fast modes, 100kHz \nand 400kHz , respectively, but does not support the high speed  mode (Hs).  External  pull-up resistors are required to  \nsupport  these  standard and fast speed modes.   \n \nActivities required by the master (register read and write) have priority over internal activities, such as the measurement.  \nThe purpose of this priority  is to not keep the master waiting and the I2C bus engaged for longer than necessary . \n \nInternal Clock  \n \nThe device has  an internal clock for internal digital logic functions and timing management.  This clock is not available to \nexternal usage.   \n \nHMC5883L  \n \n10                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n  \nH-Bridge for Set/Reset Strap Drive  \n \nThe ASIC contains  large switching FETs capable of delivering a large but brief pulse to the Set/Reset strap of the sensor.  \nThis strap is largely a resistive load.   There is no need for an external Set/Reset circuit. The controllin g of the Set/Reset \nfunction is done automatically by the ASIC for each measurement. One half of the difference from the measurements \ntaken after a set pulse and after a reset pulse will be put in the data output register for each of the three axes. By doin g \nso, the sensor\u2019s internal offset  and its temperature dependence  is removed/cancelled for all measurements.  The set/reset \npulses also effectively remove  the past magnetic history (magnetism) in the sensor, if any.  \n \nFor each \u201cm easurement\u201d, the ASIC:  \n1. Sends a \u201cSet\u201d p ulse \n2. Takes one m easurement (Mset)  \n3. Sends a \u201cReset\u201d p ulse \n4. Takes another m easurement (Mreset)  \n5. Puts the following result in sensor\u2019s data output r egister:   \n \n  Output = [Mset \u2013 Mreset] / 2  \n \nCharge Current Limit  \n \nThe current that reservoir capacitor (C 1) can draw when charging is limited  for both  single supply and dual supply \nconfiguration s. This prevents drawing down the supply voltage  (VDD).  \n \nMODES OF OPERATION  \n \nThis device has several operating modes whose primary purpose is power management  and is c ontrolled by the Mode \nRegister .  This section describes these modes.  \n \nContinuous -Measurement Mode  \n \nDuring continuous -measurement mode, the device continuously makes measurements , at user selectable rate,  and \nplaces measured data in data output registers.  Data can be re -read from the data output registers if necessary; however, \nif the master does not ensure that the data register is accessed before the completion of the next measurement, the  data \noutput registers are updated with the new measurement.   To co nserve current between measurements, the device is \nplaced in a state similar to idle mode, but the Mode Register  is not changed to Idle Mode.  That is, MD[n] bits are \nunchanged.  Settings in the Configuration Register  A affect the data output rate (bits DO [n]), the measurement \nconfiguration (bits MS[n]), when in continuous -measurement mode.    All registers maintain values while in continuous -\nmeasurement mode.  The I2C bus is enabled for use by other devices on the network in while continuous -measurement \nmode. \n \nSingle -Measurement Mode  \n \nThis is the default power -up mode. During single -measurement mode, the device makes a single measurement and \nplaces the measured data in data output registers.  After the measurement is complete and output data registers are \nupdated, the device is placed in idle mode, and the Mode Register is changed to idle mode by setting MD[n] bits.  Settings \nin the configuration register affect the measurement configuration (bits MS[n])when in single -measurement mode.    All \nregisters mainta in values while in single -measurement mode.  The I2C bus is enabled for use by other devices on the \nnetwork while in single -measurement mode.  \n \nIdle Mode  \n \nDuring this mode the device is accessible through the I2C bus, but major sources of power consumption  are disabled, \nsuch as, but not limited to, the ADC, the amplifier, and the sensor bias current.  All registers maintain values while in idl e \nmode.  The I2C bus is enabled for use by other devices on the network while in idle mode.   \n \n \n  \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           11                                                                                      \n \n   REGISTERS  \n \nThis de vice is  controlled and configured via a number of on -chip registers, which are described in this section.  In the \nfollowing descriptions, set implies a logic 1, and reset  or clear  implies a logic 0, unless stated otherwise.   \n \nRegister List  \nThe table below  lists the registers and their access.  All address locations are 8 bits.  \n \nAddress Location  Name  Access  \n00 Configuration Register A  Read/Write  \n01 Configuration Register B  Read/Write  \n02 Mode Register  Read/Write  \n03 Data Output X MSB Register  Read  \n04 Data Output X LSB Register  Read  \n05 Data Output Z MSB Register  Read  \n06 Data Output Z LSB Register  Read  \n07 Data Output Y MSB Register  Read  \n08 Data Output Y LSB Register  Read  \n09 Status Register  Read  \n10 Identification Register A  Read  \n11 Identification Re gister B  Read  \n12 Identification Register C  Read  \n \nTable 2: Register List  \n \nRegister Access  \n \nThis section describes the process of reading from and writing to this device.  The devices uses an address pointer to \nindicate which register location is to be read  from or written to.  These pointer locations are sent from the master to this \nslave device and succeed the 7 -bit address (0x1E) plus 1 bit read/write identifier , i.e. 0x3D for read and 0x3C for write . \n \nTo minimize the communication between the master and this device, the address pointer updated automatically without \nmaster intervention. The register pointer will be incremented by 1 automatically after the current register has been read \nsuccessfully.   \n \nThe address pointer value itself cannot be read via the  I2C bus.  \nAny attempt to read an invalid address location returns 0\u2019s, and any write to an invalid address location or an undefined bit  \nwithin a valid address location is ignored by this device.   \n \nTo move the address pointer to a random  register location , first issue a \u201cwrite\u201d to that register location with no data byte \nfollowing the commend. For example, to move the address pointer to register 10, send 0x3C 0x0A.  \n  \n \nHMC5883L  \n \n12                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n Configuration Register A  \n \nThe configuration register is used to configure the device for s etting the data output rate and measurement configuration.  \nCRA0 through CRA7 indicate bit locations, with CRA  denoting the bits that are in the configuration register. CRA7 denotes \nthe first bit of the data stream.  The number in parenthesis indicates the  default value of that bit. CRA default is 0x10.  \n \nCRA7  CRA6  CRA5  CRA4  CRA3  CRA2  CRA1  CRA0  \n(0) MA1(0) MA0(0) DO2 (1)  DO1 (0)  DO0 (0)  MS1 (0)  MS0 (0)  \nTable 3: Configuration Register A  \n \nLocation  Name  Description  \nCRA7  CRA7  Bit CRA7  is reserved for future fun ction . Set to 0 when \nconfiguring CRA.  \nCRA 6 to CRA5  MA1 to MA0  Select number  of sample s averaged (1 to 8) per \nmeasurement output . \n00 = 1 (Default) ; 01 =  2; 10 = 4; 11 = 8   \nCRA4 to CRA2  DO2 to DO0  Data Output Rate Bits.  These bits set the rate at which dat a \nis written to all three data output registers.   \nCRA1 to CRA0  MS1 to MS0  Measurement Configuration Bits.  These bits define the \nmeasurement flow of the device, specifically whether or not \nto incorporate an applied bias into the measurement.  \nTable  4: Configuration Register A Bit Designations  \n \nThe Table below shows all selectable  output rates  in continuous measurement mode .  All three channels shall be \nmeasured within a given output rate. Other output rate s with maximum rate of 1 60 Hz can be achieved by monitoring \nDRDY interrupt pin in single measurement mode.  \n \nDO2 DO1 DO0 Typical  Data Output Rate (Hz)  \n0 0 0 0.75 \n0 0 1 1.5 \n0 1 0 3 \n0 1 1 7.5 \n1 0 0 15 (Default)  \n1 0 1 30 \n1 1 0 75 \n1 1 1 Reserved  \nTable  5: Data Output Rates  \n \nMS1  MS0 Measurement Mode  \n0 0 Normal measurement configuration ( Default).  In normal measurement \nconfiguration the device follows normal measurement flow.  The positive and \nnegative pins of the resistive load  are left floating and high impedance.  \n0 1 Positive bias configuration  for X, Y, and Z axes . In this configuration, a positive \ncurrent  is forced across the resistive load for all three  axes.  \n1 0 Negative bias configuration  for X , Y and Z axes . In this configuration, a negative \ncurrent  is forced across the resistive load for all three  axes .. \n1 1 This configuration is reserved . \nTable  6: Measurement Modes   \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           13                                                                                      \n \n   Configuration Register B  \n \nThe configuration register B for setting the device gain.  CRB0 through CRB7 indicate bit locations, with CRB  denoting the \nbits that are in the conf iguration register. CRB7 denotes the first bit of the data stream.  The number in parenthesis \nindicates the default value of that bit. CRB default is 0x 20.  \n \nCRB7  CRB6  CRB5  CRB4  CRB3  CRB2  CRB1  CRB0  \nGN2 (0)  GN1 (0)  GN0 (1)  (0) (0) (0) (0) (0) \nTable  7:  Configuration  B Register  \n \nLocation  Name  Description  \nCRB7 to CRB5  GN2 to GN0  Gain Configuration Bits.  These bits configure the gain for \nthe device.  The gain configuration is common for all \nchannels.  \nCRB4  to CRB0  0 These bits must be cleared for correct op eration.  \nTable  8:  Configuration  Register B Bit Designations  \n \nThe table below shows nominal gain settings.  Use the \u201cGain\u201d column to convert counts to Gauss . The \u201c Digital  Resolution\u201d \ncolumn is the theoretical v alue in term of milli -Gauss per count  (LSb) which is the inverse of the values in the \u201c Gain \u201d \ncolumn . The effective resolution of the usable signal  also depends o n the noise floor of the system, i.e.  \n \nEffective Resolution = Max ( Digital  Resolution, Noise Floor)  \n \nChoose a lower gain value (higher GN#) w hen total field strength causes overflow in one of the data output registers  \n(saturation) . Note that  the very first measurement after a gain change maintains the same gain as the previous setting. \nThe new gain setting is effective from the second measureme nt and on.  \n \nGN2 GN1 GN0 Recommended \nSensor Field \nRange  Gain  \n(LSb/ \nGauss)  Digital  \nResolution \n(mG/LS b) Output Range  \n0 0 0 \u00b1 0.88 Ga 1370  0.73 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n0 0 1 \u00b1 1.3 Ga 1090 (default)  0.92 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n0 1 0 \u00b1 1.9 Ga 820 1.22 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n0 1 1 \u00b1 2.5 Ga 660 1.52 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n1 0 0 \u00b1 4.0 Ga 440 2.27 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n1 0 1 \u00b1 4.7 Ga 390 2.56 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n1 1 0 \u00b1 5.6 Ga 330 3.03 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \n1 1 1 \u00b1 8.1 Ga 230 4.35 0xF800 \u20130x07FF  \n(-2048 \u20132047 )  \nTable  9:  Gain Settings   \n \nHMC5883L  \n \n14                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n Mode Register  \n \nThe mode register is an 8 -bit register from which data can be read or to which data can be written.  This register is used to \nselect the operating mode of the device.  MR0 thro ugh MR7 indicate bit locations, with MR denoting the bits that are in the \nmode register. MR7 denotes the first bit of the data stream.  The number in parenthesis indicates the default value of that \nbit. Mode register default is 0x01.  \n \nMR7  MR6  MR5  MR4  MR3  MR2 MR1  MR0  \nHS(0) (0) (0) (0) (0) (0) MD1 ( 0) MD0 ( 1) \nTable  10:  Mode  Register  \n \nLocation  Name  Description  \nMR7 to \nMR2  HS Set this pin to enable High Speed I2C, 3400kHz.  \n \nMR1 to \nMR0  MD1 to \nMD0  Mode Select Bits.  These bits select the operation mode of \nthis device.  \nTable  11:  Mode  Register Bit Designations  \n \nMD1  MD0  Operating Mode  \n0 0 Continuous -Measurement  Mode.  In continuous -measurement  mode, \nthe device continuously performs measurement s and places the \nresult in the data register.  RDY goes high when ne w data is placed \nin all three registers.  After a power -on or a write to the mode or \nconfiguration register, the first measurement set is available from all \nthree data output registers after a period of 2/f DO and subsequent \nmeasurements are available at a frequency of f DO, where f DO is the \nfrequency of data output.  \n0 1 Single -Measurement  Mode  (Default) .  When single -measurement  \nmode is selected, device performs a single measurement, se ts RDY \nhigh and returned to idle mode .  Mode register returns to idle mode \nbit values.  The measurement remains in the data output register and \nRDY remains high until the data output register is read or another \nmeasurement  is performed.   \n1 0 Idle Mode.  Device is placed in idle mode.  \n1 1 Idle Mode.  Device is placed in idle mode.  \nTable  12:  Operating Modes   \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           15                                                                                      \n \n   Data Output X Registers A and B  \n \nThe data output X registers are two 8 -bit registers, data output register A and data output register B.  These registers \nstore the measurement result from channel X.  Data output X regist er A contains the MSB from the measurement result, \nand data output X register B contains the LSB from the measurement result.  The value stored in these two registers is a \n16-bit value in 2\u2019s complement form, whose range is 0xF800 to 0x07FF.  DXRA0 through  DXRA7 and DXRB0 through \nDXRB7 indicate bit locations, with DXRA  and DXRB  denoting the bits that are in the data output X registers. DXRA7 and \nDXRB7 denote the first bit of the data stream.  The number in parenthesis indicates the default value of that bit .   \n \nIn the event the ADC reading overflows or underflows for the given channel, or if there is a math overflow during the bias \nmeasurement, this data register will contain the value -4096. This register value will clear when after the next valid \nmeasureme nt is made.   \n   \nDXRA7  DXRA6  DXRA5  DXRA4  DXRA3  DXRA2  DXRA1  DXRA0  \n(0) (0) (0) (0) (0) (0) (0) (0) \nDXRB7  DXRB6  DXRB5  DXRB4  DXRB3  DXRB2  DXRB1  DXRB0  \n(0) (0)  (0) (0) (0) (0) (0) (0) \nTable  13:  Data Output X Registers A and B  \n \nData Output Y Registers A and B \n \nThe data output Y registers are two 8 -bit registers, data output register A and data output register B.  These registers \nstore the measurement result from channel Y.  Data output Y register A contains the MSB from the measurement result, \nand data output  Y register B contains the LSB from the measurement result.  The value stored in these two registers is a \n16-bit value in 2\u2019s complement form, whose range is 0xF800 to 0x07FF.  DYRA0 through DYRA7 and DYRB0 through \nDYRB7 indicate bit locations, with DYRA  and DYRB  denoting the bits that are in the data output Y registers. DYRA7 and \nDYRB7 denote the first bit of the data stream.  The number in parenthesis indicates the default value of that bit.     \n \nIn the event the ADC reading overflows or underflows for th e given channel, or if there is a math overflow during the bias \nmeasurement, this data register will contain the value -4096. This register value will clear when after the next valid \nmeasurement is made.   \n \nDYRA7  DYRA6  DYRA5  DYRA4  DYRA3  DYRA2  DYRA1  DYRA0  \n(0) (0) (0) (0) (0) (0) (0) (0) \nDYRB7  DYRB6  DYRB5  DYRB4  DYRB3  DYRB2  DYRB1  DYRB0  \n(0) (0)  (0) (0) (0) (0) (0) (0) \nTable  14:  Data Output Y Registers A and B  \n \nData Output Z Registers A and B  \n \nThe data output Z registers are two 8 -bit registers, data outpu t register A and data output register B.  These registers \nstore the measurement result from channel Z.  Data output Z register A contains the MSB from the measurement result, \nand data output Z register B contains the LSB from the measurement result.  The v alue stored in these two registers is a \n16-bit value in 2\u2019s complement form, whose range is 0xF800 to 0x07FF.  DZRA0 through DZRA7 and DZRB0 through \nDZRB7 indicate bit locations, with DZRA  and DZRB  denoting the bits that are in the data output Z registers.  DZRA7 and \nDZRB7 denote the first bit of the data stream.  The number in parenthesis indicates the default value of that bit.   \n \nIn the event the ADC reading overflows or underflows for the given channel, or if there is a math overflow during the bias \nmeas urement, this data register will contain the value -4096. This register value will clear when after the next valid \nmeasurement is made.   \n  \n \nHMC5883L  \n \n16                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n DZRA7  DZRA6  DZRA5  DZRA4  DZRA3  DZRA2  DZRA1  DZRA0  \n(0) (0) (0) (0) (0) (0) (0) (0) \nDZRB7  DZRB6  DZRB5  DZRB4  DZRB3  DZRB2  DZRB1  DZRB0  \n(0) (0)  (0) (0) (0) (0) (0) (0) \nTable  15:  Data Output Z Registers A and B  \n \nData Output Register Operation  \n \nWhen one or more of the output registers are read, new data cannot be placed in any of the output data registers until all \nsix data output registers are read.  This requirement also impacts DRDY and RDY, which cannot be cleared until new \ndata is placed in all the output registers.   \n \n \nStatus Register  \n \nThe status register is an 8 -bit read -only register.  This register is used to indicat e device status.  SR0 through SR7 \nindicate bit locations, with SR denoting the bits that are in the status register. SR7 denotes the first bit of the data stream.   \n \nSR7 SR6 SR5 SR4 SR3 SR2 SR1 SR0 \n(0) (0) (0) (0) (0)  (0) LOCK (0)  RDY(0)  \nTable  16:  Status Register  \n \nLocation  Name  Description  \nSR7 to \nSR2 0 These bits  are reserved .  \nSR1 LOCK  Data output register lock.  This bit is set when : \n1.some but not all for of the six data output registers have \nbeen read , \n2. Mode register has been  read.   \nWhen this b it is set, the six data output registers are locked \nand any new data will not be placed in these register until \none of these conditions are met:  \n1.all six bytes have been read, 2. the mode  register  is \nchanged,  \n3. the measurement  configuration  (CRA) is chan ged, \n4. power is reset.  \nSR0 RDY  Ready Bit.  Set when data is written to all six data registers.  \nCleared when device initiates a write to the data output \nregisters and after one or more of the data output registers \nare written to.  When RDY bit is clear i t shall remain cleared \nfor a 250 \u03bcs.  DRDY pin can be used as an alternative to \nthe status register for monitoring the device for \nmeasurement  data.  \nTable  17:  Status  Register Bit Designations   \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           17                                                                                      \n \n   Identification Register A  \n \nThe identification register A is used to identify the device.  IRA0  through IRA7 indicate bit locations, with IRA denoting the \nbits that are in the identification register A. IRA7 denotes the first bit of the data stream.  The number in parenthesis \nindicates the default value of that bit.   \n \nThe identification value for t his device is stored in this register.  This is a read -only register.  \nRegister values.  ASCII value H \n \nIRA7  IRA6  IRA5  IRA4  IRA3  IRA2  IRA1  IRA0  \n0 1 0 0 1 0 0 0 \nTable  18:  Identification Register A Default Values  \nIdentification Register B  \n \nThe identificati on register B is used to identify the device.  IRB0 through IRB7 indicate bit locations, with IRB denoting the \nbits that are in the identification register A. IRB7 denotes the first bit of the data stream.    \n  \nRegister values.  ASCII value 4  \n \n \nTable  19:  Identification Register B Default Values  \nIdentification Register C  \n \nThe identification register C is used to identify the device.  IRC0 through IRC7 indicate bit locations, with IRC denoting the \nbits that are in the identification register A. IRC7 denotes the first bit of the data stream.     \n \nRegister values.  ASCII value 3  \n \n \nTable  20:  Identification Register C Default Values  \nI2C COMMUNICA TION PROTOCOL  \n \nThe HMC5883L  communicates via a two -wire I2C bus syst em as a slave device. The HMC5883L  uses a simple protocol \nwith the interface protocol defined by the I2C bus specification, and by this document . The data rate is at the standard -\nmode 100k bps or 400kbps rates as defined in the I2C Bus Specification s. The bus bit format is an 8 -bit Data/Address \nsend and a 1 -bit acknowledge bit. The format of the data bytes (payload) shall be case sensitive ASCII charact ers or \nbinary data to the HMC5883L  slave, and binary data returned. Negative binary values will be in two\u2019s complement fo rm. \nThe default (factory) HMC5883L  8-bit slave address is 0x3C for write operations, or 0x3D for read operations.  \n \nThe HMC5883L  Serial Clock (SCL) and  Serial Data (SDA) lines  require resistive pull -ups (Rp) between the master device \n(usually a host  microprocessor) and the HMC5883L . Pull -up resistance values of about 2.2K to 10K ohms ar e \nrecommended with a nominal  VDD IO voltage . Other resistor values may be used as defined in t he I2C Bus Specifications \nthat can be tied to VDD IO. \n \nThe SCL and SDA lines in this bus specification may be connected to multiple  devices. The bus can be a single master to \nmultiple slaves, or it can be a multiple master configuration. All data transfers are initiated by the master device , which is \nresponsible for generating the clock signal, and the data transfers are 8 bit long. All devices are addressed by I2C\u2019s \nunique 7 -bit address. After each 8 -bit transfer, the master device generates a 9th clock pul se, and releases the SDA line. \nThe receiving device (addressed slave) will pull the SDA line low to acknowledge (ACK) the successful transfer or leave \nthe SDA high to negative acknowledge (NACK).  IRB7  IRB6  IRB5 IRB4  IRB3  IRB2  IRB1  IRB0  \n0 0 1 1 0 1 0 0 \nIRC7  IRC6  IRC5  IRC4  IRC3  IRC2  IRC1  IRC0  \n0 0 1 1 0 0 1 1  \n \nHMC5883L  \n \n18                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n  \nPer the I2C spec, all transitions in the SDA line must occu r when SCL is low.  This requirement leads to two unique \nconditions on the bus associated with the SDA transitions when SCL is high. Master device pulling the SDA line low while \nthe SCL line is high indicates the Start (S) condition, and the Stop (P) condi tion is when the SDA line is pulled high while \nthe SCL line is high. The I2C protocol also allows for the Restart condition in which the master device issues a second \nstart condition without issuing a stop.  \n \nAll bus transactions begin with the master devic e issuing the start sequence followed by the slave address byte.  The \naddress byte contains the slave address; the upper 7 bits (bits7 -1), and the Least Significant bit (LSb).  The LSb of the \naddress byte designates if the operation is a read (LSb=1) or a write (LSb=0).  At the 9th clock pulse, the receiving  slave \ndevice will issue the ACK (or NACK).  Following these bus events, the master will send data bytes for a write operation, or \nthe slave will clock out data with a read operation. All bus transaction s are terminated with the master issuing a stop \nsequence.  \n \nI2C bus control can be implemented with either hardware logic or in software. Typical hardware designs will release the \nSDA and SCL lines as appropriate to allow the slave device to manipulate thes e lines.  In a software implementation, care \nmust be taken to perform these tasks in code.  \n \nOPERATIONAL EXAMPLES  \n \nThe HMC5883L  has a fairly quick  stabilization time from no voltage to stable and ready for data retrieval. The nominal 56 \nmilli-seconds with t he factory default  single measurement  mode means that the six bytes of magnetic data registers \n(DXRA, D XRB, D ZRA, D ZRB, D YRA, and D YRB) are filled with a valid first measurement.  \n \nTo change the measurement mode to continuous measurement mode, after the pow er-up time send the three bytes:  \n \n0x3C 0x02 0x00  \n \nThis writes the 00 into the second register or mode register to switch from single to continuous measurement mode \nsetting. With the data rate at the factory default of 1 5Hz updates, a 67 milli-second typica l delay should be allowed by the \nI2C master before querying the HMC58 83L data registers for new  measurements. To clock out the new data, send:  \n \n0x3D, and clock out DXRA, DXRB, DZRA, DZRB, DYRA, and DYRB  located in r egisters 3 through 8. The HMC5883L  will \nautomatically re -point back to register 3 for the next 0x3D query . All six data registers must be read properly before new \ndata can be placed in any of these data registers.  \n \nBelow is an example of a  (power -on) initialization process for \u201ccontinuous -measure ment mode \u201d: \n \n1. Write CRA (00) \u2013 send 0x3C 0x00  0x70  (8-average, 15 Hz default, normal measurement)  \n2. Write CRB (01) \u2013 send 0x3C 0x01  0xA0  (Gain=5, or any other desired gain)  \n3. Write Mode (02) \u2013 send 0x3C 0x02  0x00  (Continuous -measurement mode)  \n4. Wait 6 ms or monit or status register or DRDY hardware interrupt pin  \n5. Loop  \nSend 0x3D 0x06  (Read all 6 bytes. I f gain is changed then  this data set is using  previous gain)  \nConvert three 16 -bit 2\u2019s compliment hex values to decimal values and assign to X, Z, Y, respectively.  \nSend 0x3C 0x03  (point to first data register 03)  \nWait about 67 ms (if 15 Hz rate)  or monitor status register or DRDY hardware interrupt pin  \nEnd_loop  \n \nBelow is an example of a (power -on) initialization process for \u201csingle -measurement mode \u201d: \n \n1. Write CRA (00) \u2013 send 0x3C 0x00  0x70  (8-average, 15 Hz default  or any other rate , normal measurement)  \n2. Write CRB (01) \u2013 send 0x3C 0x01  0xA0  (Gain=5, or any other desired gain)  \n3. For each measurement query:  \nWrite Mode (02) \u2013 send 0x3C 0x02  0x01  (Single -measurement mode)  \nWait 6 ms or monitor status register or DRDY hardware interrupt pin  \nSend 0x3D 0x06 (Read all 6 bytes . If gain is changed then this data set is using previous gain ) \nConvert three  16-bit 2\u2019s compliment hex values to decimal values and assign to X, Z, Y, respectivel y. \n \n  \n \nHMC5883L  \n \nwww.honeywell.com                                                                                                                                                           19                                                                                      \n \n   SELF TEST OPERATION  \n \nTo check the HMC5883L  for proper operation, a self test feature in incorporated in which the sensor offset straps are \nexcited to create a nominal field strength (bias field) to be measured. To implement self test, the least signif icant bits (MS1 \nand MS0) of configuration register A are changed from 00 to 01  (positive b ias) or 10 (negetive b ias). \n \nThen, b y placing the mode register into single  or continuous -measurement  mode, two data acquisition cycles will be made \non each magnetic vector. The first acquisition will be a set pulse followed shortly by measurement data of the external \nfield. The second acquisition will have the offset strap excited (about 10 mA) in the positive bias mode  for X , Y, and Z \naxes to create about a 1.1 gauss  self test field plus the external field. The first acquisition values will be subtracted from \nthe second acquisition, and the net measurement will be placed into the data output registers.   \n \nSince self test adds ~1.1 Gauss additional field to the existing  field s trength, using a reduced gain setting prevents sensor \nfrom being saturated and data registers overflowed . For example, i f the configuration register B is set to 0xA0 (Gain= 5), \nvalues around + 452 LSb (1.16 Ga * 390 LSb/Ga) will be placed in the X an d Y data output registers  and around +421 \n(1.08 Ga * 390 LSb/Ga) will be placed  in Z data output register . To leave the self test mode, change MS1 and MS0 bit of \nthe configuration register A back to 00 (Normal Measurement Mode).  Acceptable limits of the se lf test values depend  on \nthe gain setting . Limits for Gain =5 is provided in the specification table.  \n \nBelow is an example of a \u201cpositive self test \u201d process using continuous -measurement mode:  \n \n1. Write CRA (00) \u2013 send 0x3C 0x00  0x71  (8-average, 15 Hz default, positive self test measurement)  \n2. Write CRB (01) \u2013 send 0x3C 0x01  0xA0  (Gain=5)  \n3. Write Mode (02) \u2013 send 0x3C 0x02  0x00  (Continuous -measurement mode)  \n4. Wait 6 ms or monitor status register or DRDY hardware interrupt pin  \n5. Loop  \nSend 0x3D 0x06  (Read all 6 bytes . If gain is changed then  this data set is using  previous gain ) \nConvert three  16-bit 2\u2019s compliment hex values to decimal values and assign to X, Z, Y, respectively.  \nSend 0x3C 0x03  (point to first data register 03)  \nWait about 67 ms (if 15 Hz rate)  or monitor st atus register or DRDY hardware interrupt pin  \nEnd_loop  \n6. Check limits \u2013 \nIf all 3 axes  (X, Y, and Z) are within reasonable limits (243 to 575  for Gain=5 , adjust these limits basing on the \ngain setting used . See an example below. ) Then  \n All 3 axes pass positive  self test \n Write CRA (00) \u2013 send 0x3C 0x00  0x70  (Exit self test mode  and this procedure ) \nElse  \nIf Gain< 7 \nWrite CRB (01) \u2013 send 0x3C 0x01  0x_0  (Increase gain  setting  and retry , skip the next data set)  \nElse \nAt least one axis did not pass positive self test \nWrite CRA (00) \u2013 send 0x3C 0x00  0x70  (Exit self test mode  and this procedure)  \nEnd If  \n \nBelow is an example of how to adjust the \u201cpositive  self\u201d test limits basing on the gain setting : \n \n1. If Gain = 6,  self test limits are :  \nLow Limit = 243 * 330/390 = 206  \nHigh Limit = 575 * 330/390 = 487  \n \n2. If Gain = 7,  self test limits are :  \nLow Limit = 243 * 230/390 = 143  \nHigh Limit = 575 * 230/390 = 339  \n \n \n \n \n \n  \n \nHMC5883L  \n \n20                                                                                                                                                             www.honeywell.com                                                                                                                                            \n \n SCALE FACTOR TEMPERATURE COMPENSATION  \n  \nThe built -in self test can also be used to periodically compensate the scaling errors due to temperature variations. A \ncompensation factor can be found b y comparing the self test outputs with the ones obtained at a known temperature. For \nexample, if the self test output is 400 at room temperature and 300 at the current temperature th en a compensation  factor \nof (400/300) should be applied to all current magnetic readings. A temperature sensor is not required using this method . \n \nBelow is an example of a temperature compensation process using positive self test method:  \n \n1. If self test measurement at a temperature \u201c when the last magnetic calibration was done\u201d:  \nX_STP = 400  \nY_STP = 410  \nZ_STP = 420  \n2. If self test m easurement at a different t mperature:  \nX_STP = 300 (Lower than before)  \nY_STP = 310 (Lower than before)  \nZ_STP = 320 (Lower than befo re) \nThen  \nX_TempComp = 400/300  \nY_TempComp = 410/310  \nZ_TempComp = 420/320  \n3. Applying to all n ew measurements:  \nX = X * X_TempComp  \nY = Y * Y_TempComp  \nZ = Z * Z_TempComp  \nNow all 3 axes are temperature compensated, i.e. sensitivity is same as \u201cwhen the last mag netic calibration was \ndone\u201d; therefore, the calibration coefficients can be applied without m odification.  \n4. Repeat this process p eriodically  or,for every \u0394t degrees of temperature change measured, if available . \n \n \n \n \nORDERING INFORMATION  \n \nOrdering Number  Product  \n \nHMC5883L -T \nHMC5883L -TR  \n  \nCut Tape  \nTape and Reel 4k pieces/reel  \n \n  \nFIND OUT MORE  \n \nFor more information on Honeywell\u2019s Magnetic Sensors visit us online at www. magneticsensors .com  or contact us at  \n1-800-323-8295 (763 -954-2474 internationally).  \n \nThe application c ircuits herein constitute typical usage and interface of Honeywell product. Honeywell does not warranty or assume liability o f customer -\ndesigned circuits derived from this description or depiction.  \n \nHoneywell reserves the right to make changes to improve reliability, function or design. Honeywell does not assume any liability arising out of the \napplication or use of any product or circuit described herein; neither does it convey any license under its patent rights nor  the rights of others.  \n \nU.S. Patents 4 ,441,072, 4,533,872, 4,569,742, 4,681,812, 4,847,584 and 6,529,114 apply to the technology described  \n \n \n \n \n \n \n \n \nHoneywell  \n12001 Highway 55  \nPlymouth, MN 55441  \nTel: 800 -323-8295  \nwww. magneticsensors .com \n Form #  900405  Rev E \nFebruary 2013 \n\u00a92010 Honeywell In ternational Inc.  \nFEATURES\n/C0068DIGITAL OUTPUT: I 2C Serial 2-Wire\n/C0068RESOLUTION: 9- to 12-Bits, User-Selectable\n/C0068ACCURACY:\n\u00b12.0\u00b0C from \u221225 \u00b0C to +85 \u00b0C (max)\n\u00b13.0\u00b0C from \u221255 \u00b0C to +125 \u00b0C (max)\n/C0068LOW QUIESCENT CURRENT: \n45\u00b5A, 0.1 \u00b5A Standby\n/C0068WIDE SUPPLY RANGE: 2.7V to 5.5V\n/C0068TINY SOT23-6 PACKAGE\nAPPLICATIONS\n/C0068POWER-SUPPLY TEMPERATURE\nMONITORING\n/C0068COMPUTER PERIPHERAL THERMALPROTECTION\n/C0068NOTEBOOK COMPUTERS\n/C0068CELL PHONES\n/C0068BATTERY MANAGEMENT\n/C0068OFFICE MACHINES\n/C0068THERMOSTAT CONTROLS\n/C0068ENVIRONMENTAL MONITORING AND HVAC\n/C0068ELECTROMECHANICAL DEVICETEMPERATUREDESCRIPTION\nThe TMP100 and TMP101 are two-wire, serial output\ntemperature sensors available in SOT23-6 packages.Requiring no external components, the TMP100 andTMP101 are capable of reading temperatures with a\nresolution of 0.0625 \u00b0C.\nThe TMP100 and TMP101 feature SMBus and I\n2C\ninterface compatibility, with the TMP100 allowing up toeight devices on one bus. The TMP101 of fers SMBus alert\nfunction with up to three devices per bus.\nThe TMP100 and TMP101 are ideal for extended\ntemperature measurement in a variety of communication,\ncomputer, consumer, environmental, industrial, and\ninstrumentation applications.\nThe TMP100 and TMP101 are specified for operation over\na temperature range of \u221255 \u00b0C to +125 \u00b0C.\nDiode\nTemp.\nSensor\n\u2206\u03a3\nA/D\nConverter\nOSCControl\nLogic\nSerial\nInterface\nConfig\nand Temp\nRegister\nTMP100Temperature\nGNDSCL1\n2\n36\n5\n41\n2\n36\n5\n4ADD1SDA\nADD0\nV+Diode\nTemp.\nSensor\n\u2206\u03a3\nA/D\nConverter\nOSCControl\nLogic\nSerial\nInterface\nConfig\nandTemp\nRegister\nTMP101Temperature\nGNDSCL\nALERTSDA\nADD0\nV+TMP100\nTMP101\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007\nDigital Temperature Sensor\nwith I2C/C0116 Interface\n/C0080/C0082/C0079/C0068/C0085/C0067/C0084/C0073/C0079/C0078  /C0068/C0065/C0084/C0065  /C0105/C0110/C0102/C0111/C0114/C0109/C0097/C0116/C0105/C0111/C0110  /C0105/C0115 /C0099/C0117/C0114/C0114/C0101/C0110/C0116  /C0097/C0115 /C0111/C0102 /C0112/C0117/C0098/C0108/C0105/C0099/C0097/C0116/C0105/C0111/C0110  /C0100/C0097/C0116/C0101/C0046  /C0080/C0114/C0111/C0100/C0117/C0099/C0116/C0115\n/C0099/C0111/C0110/C0102/C0111/C0114/C0109  /C0116/C0111 /C0115/C0112/C0101/C0099/C0105/C0102/C0105/C0099/C0097/C0116/C0105/C0111/C0110/C0115  /C0112/C0101/C0114 /C0116/C0104/C0101 /C0116/C0101/C0114/C0109/C0115  /C0111/C0102 /C0084/C0101/C0120/C0097/C0115  /C0073/C0110/C0115/C0116/C0114/C0117/C0109/C0101/C0110/C0116/C0115  /C0115/C0116/C0097/C0110/C0100/C0097/C0114/C0100  /C0119/C0097/C0114/C0114/C0097/C0110/C0116/C0121/C0046\n/C0080/C0114/C0111/C0100/C0117/C0099/C0116/C0105/C0111/C0110  /C0112/C0114/C0111/C0099/C0101/C0115/C0115/C0105/C0110/C0103  /C0100/C0111/C0101/C0115  /C0110/C0111/C0116 /C0110/C0101/C0099/C0101/C0115/C0115/C0097/C0114/C0105/C0108/C0121  /C0105/C0110/C0099/C0108/C0117/C0100/C0101  /C0116/C0101/C0115/C0116/C0105/C0110/C0103  /C0111/C0102 /C0097/C0108/C0108 /C0112/C0097/C0114/C0097/C0109/C0101/C0116/C0101/C0114/C0115/C0046\nwww.ti.comCopyright \uf8e9 2002\u22122007, T exas Instruments IncorporatedPlease be aware that an important notice concerning availability, standard warranty, and use in critical applications of T exasInstruments\nsemiconductor products and disclaimers thereto appears at the end of this data sheet.\nI2C is a trademark of NXP Semiconductors. All other trademarks are the property of their respective owners./C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n2ABSOLUTE MAXIMUM RATINGS (1)\nPower Supply, V+ 7.5V. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \nInput Voltage(2) \u22120.5V to 7.5V . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \nOperating Temperature Range \u221255 \u00b0C to +125 \u00b0C . . . . . . . . . . . . . . . \nStorage Temperature Range \u221260 \u00b0C to +150 \u00b0C . . . . . . . . . . . . . . . . . \nJunction Temperature (T J max) +150 \u00b0C . . . . . . . . . . . . . . . . . . . . . . \nESD Rating, Human Body Model 2000V . . . . . . . . . . . . . . . . . . . . . \nMachine Model 200V . . . . . . . . . . . . . . . . . . . . . . . \n(1)Stresses above these ratings may cause permanent damage.\nExposure to absolute maximum conditions for extended periods\nmay degrade device reliability. These are stress ratings only, and\nfunctional operation of the device at these or any other conditions\nbeyond those specified is not supported.\n(2)Input voltage rating applies to all TMP100 and TMP101 input\nvoltages.This integrated circuit can be damaged by ESD. Texas\nInstruments recommends that all integrated circuits be\nhandled with appropriate precautions. Failure to observe\nproper handling and installation procedures can cause damage.\nESD damage can range from subtle performance degradation to\ncomplete device failure. Precision integrated circuits may be more\nsusceptible to damage because very small parametric changes could\ncause the device not to meet its published specifications.\nORDERING INFORMATION (1)\nPRODUCT PACKAGE-LEAD PACKAGE DESIGNATOR PACKAGE MARKING\nTMP100 SOT23-6 DBV T100 TMP100 SOT23-6 DBV T100\nTMP101 SOT23-6 DBV T101 TMP101 SOT23-6 DBV T101\n(1)For the most current package and ordering information, see the Package Option Addendum at the end of this document, or see the TI web site\nat www.ti.com.\nPIN CONFIGURATION\nTop View SOT23 Top View SOT23\nSCL\nGND\nADD1SDA\nADD0V+1\n2\n36\n5\n4\nT100\nTMP100SCL\nGND\nALERTSDA\nADD0\nV+1236\n54\nT101\nTMP101\n/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n3ELECTRICAL CHARACTERISTICS   \nAt TA = \u221255 \u00b0C to +125 \u00b0C and V+ = 2.7V to 5.5V, unless otherwise noted.\nPARAMETER TEST CONDITIONSTMP100, TMP101\nUNIT PARAMETER TEST CONDITIONSMIN TYP MAXUNIT\nTEMPERATURE INPUT\nRange \u221255 +125 \u00b0C\nAccuracy (temperature error) \u221225\u00b0C to +85 \u00b0C \u00b10.5 \u00b12.0 \u00b0C\n\u221255\u00b0C to +125 \u00b0C \u00b11.0 \u00b13.0 \u00b0C\nResolution Selectable \u00b10.0625 \u00b0C\nDIGITAL INPUT/OUTPUT\nInput Logic Levels:\nVIH 0.7(V+) 6.0 V\nVIL \u22120.5 0.3(V+) V\nInput Current, I IN 0V \u2264 VIN \u2264 6V 1 \u00b5A\nOutput Logic Levels:\nVOL SDA IOL = 3mA 0 0.15 0.4 V\nVOL ALERT IOL = 4mA 0 0.15 0.4 V\nResolution Selectable 9 to 12 Bits\nConversion Time 9-Bit 40 75 ms\n10-Bit 80 150 ms\n11-Bit 160 300 ms\n12-Bit 320 600 ms\nConversion Rate 9-Bit 25 s/s\n10-Bit 12 s/s\n11-Bit 6 s/s\n12-Bit 3 s/s\nPOWER SUPPLY\nOperating Range 2.7 5.5 V\nQuiescent Current IQ Serial Bus Inactive 45 75 \u00b5A\nSerial Bus Active, SCL Frequency = 400kHz 70 \u00b5A\nSerial Bus Active, SCL Frequency = 3.4MHz 150 \u00b5A\nShutdown Current ISD Serial Bus Inactive 0.1 1 \u00b5A\nSerial Bus Active, SCL Frequency = 400kHz 20 \u00b5A\nSerial Bus Active, SCL Frequency = 3.4MHz 100 \u00b5A\nTEMPERATURE RANGE\nSpecified Range \u221255 +125 \u00b0C\nStorage Range \u221260 +150 \u00b0C\nThermal Resistance /C0113JA SOT23-6 Surface-Mount 200 \u00b0C/W/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n4TYPICAL CHARACTERISTICS\nAt TA = +25 \u00b0C and V+ = 5.0V, unless otherwise noted.\n70\n60\n504030QUIESCENT CURRENTvs TEMPERATURE\nTemperature( /C0095C)\u221260 \u221240 \u22122 002 04 06 08 01 0 0 1 2 0 1 4 0IQ(\u00b5A)\nSerialBusInactiveV+=5 V\nV +=2 .7V1.0\n0.9\n0.80.70.60.50.40.3\n0.2\n0.1\n0.0\n\u22120.1SHUTDOWNCURRENTvs TEMPERATURE\nTemperature( /C0095C)\u221260 \u221240 \u221220 0 20 40 60 80 100 120 140ISD(\u00b5A)\n400\n350\n300\n250CONVERSION TIME vsTEMPERATURE\nTemperature( /C0095C)\u221260 \u221240 \u22122 002 04 06 08 0 1 0 0 1 2 0 1 4 0Conversion Time(ms)V+ = 5V\nV+ = 2.7V\nNOTE: 12\u2212bit resolution.2.0\n1.51.0\n0.50.0\n\u22120.5\n\u22121.0\n\u22121.5\n\u22122.0TEMPERATURE ACCURACY vs TEMPERATURE\nTemperature( /C0095C)\u221260 \u221240 \u221220 0 20 40 60 80 100 120 140TemperatureError( /C0095C)\n3 TypicalUnits NOTE: 12\u2212bit resolution.\n180\n160\n140\n120\n100\n80\n60\n40\n20\n0QUIESCENT CURRENTWITH\nBUS ACTIVITYvsTEMPERATURE\nSCLFrequency (Hz)10k 100k 1M 10MIQ(\u00b5A)125/C0095C\nFASTMODE Hs MODE\u221255/C0095C\u221255/C0095C125/C0095C\n25/C0095C25/C0095C/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n5APPLICATIONS INFORMATION\nThe TMP100 and TMP101 are digital temperature sensors\noptimal for thermal management and thermal protection\napplications. The TMP100 and TMP101 are I2C and\nSMBus interface-compatible and are specified over atemperature range of \u221255 \u00b0C to +125 \u00b0C.\nThe TMP100 and TMP101 require no external\ncomponents for operation except for pull-up resistors on\nSCL, SDA, and ALERT, although a 0.1 \u00b5F bypass\ncapacitor is recommended, as shown in Figure 1 andFigure 2.\nTMP1010.1\u00b5FV+\nGND2534\nADD0\n(Input)ALERT\n(Output)1\n6SCL\nSDAToI2C\nController\nNOTE: (1)SCL, SDAandALERT\nrequirepull\u2212up resistorsfor\nI2Cbus applications.\nFigure 1. Typical Connections of the TMP101\nTMP1000.1\u00b5FV+\nGND2534\nADD0\n(Input)ADD1\n(Input)1\n6SCL\nSDAToI2C\nController\nNOTE: (1) SCLandSDA\nrequire pull\u2212upresistors for\nI2C bus applications.\nFigure 2. Typical Connections of the TMP100\nThe die flag of the lead frame is connected to pin 2. The\nsensing device of the TMP100 and TMP101 is the chip\nitself. Thermal paths run through the package leads as well\nas the plastic package. The lower thermal resistance ofmetal causes the leads to provide the primary thermal\npath. The GND pin of the TMP100 or TMP101 is directly\nconnected to the metal lead frame, and is the best choice\nfor thermal input.To maintain the accuracy in applications requiring air or\nsurface temperature measurement, care should be taken\nto isolate the package and leads from ambient airtemperature. A thermally-conductive adhesive will assistin achieving accurate surface temperature measurement.\nPOINTER REGISTER\nFigure 3 shows the internal register structure of the\nTMP100 and TMP101. The 8-bit Pointer Register of the\nTMP100 and TMP101 is used to address a given dataregister. The Pointer Register uses the two LSBs toidentify which of the data registers should respond to a\nread or write command. Table 1 identifies the bits of the\nPointer Register byte. Table 2 describes the pointeraddress of the registers available in the TMP100 andTMP101. Power-up Reset value of P1/P0 is 00.\nI/O\nControl\nInterfaceSCL\nSDATemperature\nRegister\nConfiguration\nRegister\nTLOW\nRegister\nTHIGH\nRegisterPointer\nRegister\nFigure 3. Internal Register Structure of the\nTMP100 and TMP101\nTable 1. Pointer Register Type\nP7P6P5P4P3P2P1P0\n000000Register Bits\nTable 2. Pointer Addresses of the TMP100 and\nTMP101 Registers\nP1 P0REGISTER\n0 0Temperature Register (READ Only)\n0 1Configuration Register (READ/WRITE)\n1 0TLOW Register (READ/WRITE)\n1 1THIGH Register (READ/WRITE)\nTEMPERATURE REGISTER\nThe Temperature Register of the TMP100 or TMP101 is a\n12-bit read-only register that stores the output of the most\nrecent conversion. Two bytes must be read to obtain data\nand are described in Table 3 and Table 4. The first 12 bitsare used to indicate temperature with all remaining bits/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n6equal to zero. Data format for temperature is summarized\nin Table 5. Following power-up or reset, the Temperature\nRegister will read 0 \u00b0C until the first conversion is complete.\nTable 3. Byte 1 of Temperature Register\nD7D6D5D4D3D2D1D0\nT11T10T9T8T7T6T5T4\nTable 4. Byte 2 of Temperature Register\nD7D6D5D4D3D2D1D0\nT3T2T1T00000\nTable 5. Temperature Data Format\nTEMPERATURE\n(\u00b0C)DIGITAL OUTPUT\n(BINARY) HEX\n128 0111  1111  1111 7FF\n127.9375 0111  1111  1111 7FF\n100 0110 0100 0000 640\n80 0101 0000 0000 500\n75 0100 1011 0000 4B0\n50 0011 0010 0000 320\n25 0001 1001 0000 190\n0.25 0000 0000 0100 004\n0.0 0000 0000 0000 000\n\u22120.25 1111  1111  1100 FFC\n\u221225 1110 0111 0000 E70\n\u221255 1100 1001 0000 C90\n\u2212128 1000 0000 0000 800\nThe user can obtain 9, 10, 11, or 12 bits of resolution by\naddressing the Configuration Register and setting theresolution bits accordingly. For 9-, 10-, or 11-bit resolution,\nthe most significant bits in the Temperature Register are\nused with the unused LSBs set to zero.\nCONFIGURATION REGISTER\nThe Configuration Register is an 8-bit read/write register\nused to store bits that control the operational modes of the\ntemperature sensor. Read/write operations are performed\nMSB first. The format of the Configuration Register for the\nTMP100 and TMP101 is shown in Table 6, followed by abreakdown of the register bits. The power-up/reset valueof the Configuration Register is all bits equal to 0. The\nOS/ALERT bit will read as 1 after power-up/reset.\nTable 6. Configuration Register Format\nBYTE D7 D6D5D4D3D2D1D0\n1OS/ALERT R1R0F1F0POLTMSD\nSHUTDOWN MODE (SD)\nThe Shutdown Mode of the TMP100 and TMP101 allows\nthe user to save maximum power by shutting down all\ndevice circuitry other than the serial interface, which\nreduces current consumption to less than 1 \u00b5A. For the\nTMP100 and TMP101, Shutdown Mode is enabled whenthe SD bit is 1. The device will shutdown once the current\nconversion is completed. For SD equal to 0, the device will\nmaintain continuous conversion.\nTHERMOSTAT MODE (TM)\nThe Thermostat Mode bit of the TMP101 indicates to thedevice whether to operate in Comparator Mode (TM = 0)or Interrupt Mode (TM = 1). For more information on\ncomparator and interrupt modes, see the HIGH and LOW\nLimit Registers  section.\nPOLARITY (POL)\nThe Polarity Bit of the TMP101 allows the user to adjust the\npolarity of the ALERT pin output. If POL = 0, the ALERT pin\nwill be active LOW, as shown in Figure 4. For POL = 1 the\nALERT pin will be active HIGH, and the state of the ALERT\npin is inverted.\nMeasured\nTemperatureTHIGH\nTLOW\nTMP101ALERTPIN\n(Comparator Mode)\nPOL= 0\nTMP101ALERTPIN\n(InterruptMode)\nPOL= 0\nTMP101ALERTPIN\n(Comparator Mode)\nPOL= 1\nTMP101ALERTPIN\n(InterruptMode)\nPOL= 1\nRead Read\nTimeRead\nFigure 4. Output Transfer Function Diagrams\nFAULT QUEUE (F1/F0)\nA fault condition occurs when the measured temperature\nexceeds the user-defined limits set in the T HIGH and TLOW\nRegisters. Additionally, the number of fault conditions\nrequired to generate an alert may be programmed usingthe Fault Queue. The Fault Queue is provided to prevent\na false alert due to environmental noise. The Fault Queue\nrequires consecutive fault measurements in order totrigger the alert function. If the temperature falls belowT\nLOW, prior to reaching the number of programmed\nconsecutive faults limit, the count is reset to 0. Table 7\ndefines the number of measured faults that may beprogrammed to trigger an alert condition in the device./C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n7Table 7. Fault Settings of the TMP100 and\nTMP101\nF1 F0 CONSECUTIVE FAULTS\n0 0 1\n0 1 2\n1 0 4\n1 1 6\nCONVERTER RESOLUTION (R1/R0)\nThe Converter Resolution Bits control the resolution of the\ninternal Analog-to-Digital (A/D) converter. This allows the\nuser to maximize efficiency by programming for higherresolution or faster conversion time. Table 8 identifies the\nResolution Bits and relationship between resolution and\nconversion time.\nTable 8. Resolution of the TMP100 and TMP101\nR1R0 RESOLUTIONCONVERSION TIME\n(typical)\n00 9 Bits (0.5 \u00b0C) 40ms\n01 10 Bits (0.25 \u00b0C) 80ms\n1011 Bits (0.125 \u00b0C) 160ms\n1112 Bits (0.0625 \u00b0C) 320ms\nOS/ALERT (OS)\nThe TMP100 and TMP101 feature a One-Shot\nTemperature Measurement Mode. When the device  is inShutdown Mode, writing a 1 to the OS/ALERT bit will start\na single temperature conversion. The device will return to\nthe shutdown state at the completion of the singleconversion. This is useful to reduce power consumption in\nthe TMP100 and TMP101 when continuous monitoring of\ntemperature is not required.\nReading the OS/ALERT bit will provide information about\nthe Comparator Mode status. The state of the POL bit willinvert the polarity of data returned from the OS/ALERT bit.\nFor POL = 0, the OS/ALERT will read as 1 until the\ntemperature equals or exceeds T\nHIGH for the programmed\nnumber of consecutive faults, causing the OS/ALERT bit\nto read as 0. The OS/ALERT bit will continue to read as 0\nuntil the temperature falls below T LOW for the programmed\nnumber of consecutive faults when it will again read as 1.The status of the TM bit does not affect the status of the\nOS/ALERT bit.\nHIGH AND LOW LIMIT REGISTERS\nIn Comparator Mode (TM = 0), the ALERT pin of theTMP101 becomes active when the temperature equals or\nexceeds the value in T\nHIGH and generates a consecutive\nnumber of faults according to fault bits F1 and F0. TheALERT pin will remain active until the temperature falls\nbelow the indicated T\nLOW value for the same number of\nfaults.In Interrupt Mode (TM = 1) the ALERT Pin becomes active\nwhen the temperature equals or exceeds T HIGH for a\nconsecutive number of fault conditions. The ALERT pinremains active until a read operation of any register occurs\nor the device successfully responds to the SMBus Alert\nResponse Address. The ALERT pin will also be cleared if\nthe device is placed in Shutdown Mode. Once the ALERTpin is cleared, it will only become active again by the\ntemperature falling below T\nLOW. When the temperature\nfalls below T LOW, the ALERT pin will become active and\nremain active until cleared by a read operation of anyregister or a successful response to the SMBus Alert\nResponse Address. Once the ALERT pin is cleared, the\nabove cycle will repeat with the ALERT pin becomingactive when the temperature equals or exceeds T\nHIGH.\nThe ALERT pin can also be cleared by resetting the device\nwith the General Call Reset command. This will also clear\nthe state of the internal registers in the device returning thedevice to Comparator Mode (TM = 0).\nBoth operational modes are represented in Figure 4.\nTable 9 and Table 10 describe the format for the T\nHIGH and\nTLOW registers. Power-up Reset values for T HIGH and\nTLOW are: THIGH = 80 \u00b0C and T LOW = 75 \u00b0C. The format of\nthe data for T HIGH and TLOW is the same as for the\nTemperature Register.\nTable 9. Bytes 1 and 2 of T HIGH Register\nBYTE D7D6D5D4D3D2D1D0\n1H11H10H9H8H7H6H5H4\nBYTE D7D6D5D4D3D2D1D0\n2H3H2H1H00000\nTable 10. Bytes 1 and 2 of T LOW Register\nBYTE D7D6D5D4D3D2D1D0\n1L11L10L9L8L7L6L5L4\nBYTE D7D6D5D4D3D2D1D0\n2L3L2L1L00000\nAll 12 bits for the Temperature, T HIGH, and TLOW registers\nare used in the comparisons for the ALERT function for allconverter resolutions. The three LSBs in T\nHIGH and TLOW\ncan affect the ALERT output even if the converter is\nconfigured for 9-bit resolution.\nSERIAL INTERFACE\nThe TMP100 and TMP101 operate only as slave deviceson the I\n2C bus and SMBus. Connections to the bus are\nmade via the open-drain I/O lines SDA and SCL. TheTMP100 and TMP101 support the transmission protocolfor fast (up to 400kHz) and high-speed (up to 3.4MHz)\nmodes. All data bytes are transmitted most significant bit\nfirst./C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n8SERIAL BUS ADDRESS\nTo program the TMP100 and TMP101, the master must\nfirst address slave devices via a slave address byte. The\nslave address byte consists of seven address bits, and adirection bit indicating the intent of executing a read orwrite operation.\nThe TMP100 features two address pins to allow up to eight\ndevices to be addressed on a single I\n2C interface. Table 11\ndescribes the pin logic levels used to properly connect up\nto eight devices. Float indicates the pin is left unconnected.\nThe state of pins ADD0 and ADD1 is sampled on the first\nI2C bus communication and should be set prior to any\nactivity on the interface.\nTable 11. Address Pins and Slave Addresses for\nthe TMP100\nADD1 ADD0 SLAVE ADDRESS\n0 0 1001000\n0 Float 1001001\n0 1 1001010\n1 0 1001100\n1 Float 1001101\n1 1 1001110\nFloat 0 1001011\nFloat 1 1001111\nThe TMP101 features one address pin and an ALERT pin,\nallowing up to three devices to be connected per bus. Pin\nlogic levels are described in Table 12. The address pins of\nthe TMP100 and TMP101 are read after reset or inresponse to an I\n2C address acquire request. Following\nreading, the state of the address pins is latched to\nminimize power dissipation associated with detection.\nTable 12. Address Pins and Slave Addresses for\nthe TMP101\nADD0 SLAVE ADDRESS\n0 1001000\nFloat 1001001\n1 1001010\nBUS OVERVIEW\nThe device that initiates the transfer is called a master, and\nthe devices controlled by the master are slaves. The bus\nmust be controlled by a master device that generates the\nserial clock (SCL), controls the bus access, and generates\nthe START and STOP conditions.\nTo address a specific device, a START condition is\ninitiated, indicated by pulling the data-line (SDA) from a\nHIGH to LOW logic level while SCL is HIGH. All slaves on\nthe bus shift in the slave address byte, with the last bitindicating whether a read or write operation is intended.\nDuring the ninth clock pulse, the slave being addressed\nresponds to the master by generating an Acknowledgeand pulling SDA LOW.Data transfer is then initiated and sent over eight clock\npulses followed by an Acknowledge Bit. During data\ntransfer SDA must remain stable while SCL is HIGH, asany change in SDA while SCL is HIGH will be interpreted\nas a control signal.\nOnce all data have been transferred, the master generates\na STOP condition indicated by pulling SDA from LOW to\nHIGH, while SCL is HIGH.\nWRITING/READING TO THE TMP100 AND\nTMP101\nAccessing a particular register on the TMP100 and\nTMP101 is accomplished by writing the appropriate value\nto the Pointer Register. The value for the Pointer Register\nis the first byte transferred after the I2C slave address byte\nwith the R/W  bit LOW. Every write operation to the\nTMP100 and TMP101 requires a value for the Pointer\nRegister. (Refer to Figure 6.)\nWhen reading from the TMP100 and TMP101, the last\nvalue stored in the Pointer Register by a write operation is\nused to determine which register is read by a read\noperation. To change the register pointer for a readoperation, a new value must be written to the PointerRegister. This is accomplished by issuing an I\n2C slave\naddress byte with the R/W  bit LOW, followed by the Pointer\nRegister Byte. No additional data are required. The mastercan then generate a START condition and send the I\n2C\nslave address byte with the R/W  bit HIGH to initiate the\nread command. See Figure 7 for details of this sequence.\nIf repeated reads from the same register are desired, it isnot necessary to continually send the Pointer Register\nbytes as the TMP100 and TMP101 will remember the\nPointer Register value until it is changed by the next write\noperation.\nSLAVE MODE OPERATIONS\nThe TMP100 and TMP101 can operate as slave receiversor slave transmitters.\nSlave Receiver Mode:\nThe first byte transmitted by the master is the slaveaddress, with the R/W\n bit LOW. The TMP100 or TMP101\nthen acknowledges reception of a valid address. The next\nbyte transmitted by the master is the Pointer Register. TheTMP100 or TMP101 then acknowledges reception of thePointer Register byte. The next byte or bytes are written to\nthe register addressed by the Pointer Register. The\nTMP100 and TMP101 will acknowledge reception of each\ndata byte. The master may terminate data transfer bygenerating a START or STOP condition.\nSlave Transmitter Mode:\nThe first byte is transmitted by the master and is the slaveaddress, with the R/W\n bit HIGH. The slave acknowledges\nreception of a valid slave address. The next byte is\ntransmitted by the slave and is the most significant byte of\nthe register indicated by the Pointer Register. The master/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n9acknowledges reception of the data byte. The next byte\ntransmitted by the slave is the least significant byte. The\nmaster acknowledges reception of the data byte. Themaster may terminate data transfer by generating aNot-Acknowledge on reception of any data byte, or\ngenerating a START or STOP condition.\nSMBus ALERT FUNCTION\nThe TMP101 supports the SMBus Alert function. Whenthe TMP101 is operating in Interrupt Mode (TM = 1), the\nALERT pin of the TMP101 may be connected as anSMBus Alert signal. When a master senses that an ALERT\ncondition is present on the ALERT line, the master sends\nan SMBus Alert command (00011001) on the bus. If theALERT pin of the TMP101 is active, the TMP101 willacknowledge the SMBus Alert command and respond by\nreturning its slave address on the SDA line. The eighth bit\n(LSB) of the slave address byte will indicate if thetemperature exceeding T\nHIGH or falling below T LOW\ncaused the ALERT condition. For POL = 0, this bit will be\nLOW if the temperature is greater than or equal to T HIGH.\nThis bit will be HIGH if the temperature is less than T LOW.\nThe polarity of this bit will be inverted if POL = 1. Refer toFigure 8 for details of this sequence.\nIf multiple devices on the bus respond to the SMBus Alert\ncommand, arbitration during the slave address portion of\nthe SMBus alert command will determine which device will\nclear its ALERT status. If the TMP101 wins the arbitration,\nits ALERT pin will become inactive at the completion of theSMBus Alert command. If the TMP101 loses the\narbitration, its ALERT pin will remain active.\nThe TMP100 will also respond to the SMBus ALERT\ncommand if its TM bit is set to 1. Since it does not have an\nALERT pin, the master needs to periodically poll thedevice by issuing an SMBus Alert command. If theTMP100 has generated an ALERT, it will acknowledge the\nSMBus Alert command and return its slave address in the\nnext byte.GENERAL CALL\nThe TMP100 and TMP101 respond to the I2C General Call\naddress (0000000) if the eighth bit is 0. The device will\nacknowledge the General Call address and respond tocommands in the second byte. If the second byte is00000100, the TMP100 and TMP101 will latch the status\nof their address pins, but will not reset. If the second byte\nis 00000110, the TMP100 and TMP101 will latch the statusof their address pins and reset their internal registers.\nPOR (POWER-ON RESET)\nThe TMP100 and TMP101 both have on-chip power-on\nreset circuits that reset the device to default settings when\nthe device is powered on. This circuit activates when thepower supply is less than 0.3V for more than 100ms.  If the\nTMP100 and TMP101 are powered down by removing\nsupply voltage from the device, but the supply voltage isnot assured to be less than 0.3V, it is recommended toissue a General Call reset command on the I\n2C interface\nbus to ensure that the TMP100 and TMP101 are\ncompletely reset.\nHIGH-SPEED MODE\nIn order for the I2C bus to operate at frequencies above\n400kHz, the master device must issue an Hs-mode master\ncode (00001XXX) as the first byte after a START condition\nto switch the bus to high-speed operation. The TMP100and TMP101 will not acknowledge this byte as required by\nthe I\n2C specification, but will switch their input filters on\nSDA and SCL and their output filters on SDA to operate in\nHs-mode, allowing transfers at up to 3.4MHz. After theHs-mode master code has been issued, the master will\ntransmit an I\n2C slave address to initiate a data transfer\noperation. The bus will continue to operate in Hs-modeuntil a STOP condition occurs on the bus. Upon receiving\nthe STOP condition, the TMP100 and TMP101 will switch\ntheir input and output filters back to fast-mode operation./C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n10TIMING DIAGRAMS\nThe TMP100 and TMP101 are I2C and SMBus\ncompatible. Figure 5 to Figure 8 describe the various\noperations on the TMP100 and TMP101. Bus definitionsare given below. Parameters for Figure 5 are defined inTable 13.\nBus Idle:  Both SDA and SCL lines remain HIGH.\nStart Data Transfer: A change in the state of the SDA line,\nfrom HIGH to LOW, while the SCL line is HIGH, defines a\nSTART condition. Each data transfer is initiated with a\nSTART condition.\nStop Data Transfer:  A change in the state of the SDA line\nfrom LOW to HIGH while the SCL line is HIGH defines aSTOP condition. Each data transfer is terminated with a\nrepeated START or STOP condition.Data Transfer:  The number of data bytes transferred\nbetween a START and a STOP condition is not limited and\nis determined by the master device. The receiveracknowledges the transfer of data.\nAcknowledge:  Each receiving device, when addressed,\nis obliged to generate an Acknowledge bit. A device thatacknowledges must pull down the SDA line during the\nAcknowledge clock pulse in such a way that the SDA line\nis stable LOW during the HIGH period of the Acknowledgeclock pulse. Setup and hold times must be taken intoaccount. On a master receive, the termination of the data\ntransfer can be signaled by the master generating a\nNot-Acknowledge on the last byte that has beentransmitted by the slave.\nTable 13. Timing Diagram Definitions\nPARAMETERFAST MODE HIGH-SPEED MODE\nUNITS PARAMETERMIN MAX MIN MAXUNITS\nSCLK Operating Frequency f(SCLK) 0.4 3.4 MHz\nBus Free TIme Between STOP and START Conditions t(BUF) 600 160 ns\nHold time after repeated START condition.\nAfter this period, the first clock is generated.t(HDSTA) 600 160 ns\nRepeated START Condition Setup Time t(SUSTA) 600 160 ns\nSTOP Condition Setup Time t(SUSTO) 600 160 ns\nData HOLD Time t(HDDAT) 0 0 ns\nData Setup Time t(SUDAT) 100 10 ns\nSCLK Clock LOW Period t(LOW) 1300 160 ns\nSCLK Clock HIGH Period t(HIGH) 600 60 ns\nClock/Data Fall Time tF 300 160 ns\nClock/Data Rise Time tR 300 160 ns\nfor SCLK \u2264 100kHz tR 1000 ns/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n11I2C TIMING DIAGRAMS\nSCL\nSDAt(LOW)tRtF t(HDSTA)\nt(HDSTA)\nt(HDDAT)\nt(BUF)t(SUDAT)t(HIGH)t(SUSTA)t(SUSTO)\nPS SP\nFigure 5. I 2C Timing Diagram\nFrame1I2C Slave Address Byte Frame2 Pointer Register Byte\nFrame4DataByte21\nStartBy\nMasterACKBy\nTMP100orTMP101ACKBy\nTMP100orTMP101\nACK By\nTMP100orTMP101Stop By\nMaster19 1\n1\nD7 D6 D5 D4 D3 D2 D1 D09\nFrame3DataByte1ACKBy\nTMP100orTMP1011\nD7SDA\n(Continued)SCL\n(Continued)\nD6 D5 D4 D3 D2 D1 D099\nSDASCL\n0 0 1 A2 A1 A0 R/W 0 0 0 0 0 0 P1 P0 \u2026\u2026\nFigure 6. I 2C Timing Diagram for Write Word Format/C0084/C0077/C0080/C0049/C0048/C0048\n/C0084/C0077/C0080/C0049/C0048/C0049\nSBOS231G \u2212 JANUARY 2002 \u2212 REVISED NOVEMBER 2007www.ti.com\n12Fra me1I2C Slave AddressByte Frame2 Pointer Register Byte1\nStart By\nMasterACKBy\nTMP100orTMP101ACKBy\nTMP100orTMP101\nFra me3I2C Slave AddressByte Frame 4Data Byte1ReadRegisterStart By\nMasterACKBy\nTMP100orTMP101ACKBy\nMasterFrom\nTMP100orTMP10119 19\n19 19SDASCL\n001 A 2 A 1 A 0 R / W 000000 P 1 P 0 \u2026\n\u2026\n\u2026\u2026\nSDA\n(Continued)SCL\n(Continued)\nSDA\n(Continued)SCL\n(Continued)1 0 0 1 A2 A1 A0 R/W D7 D6 D5 D4 D3 D2 D1 D0\nFrame5DataB y te2ReadRegi sterStopBy\nMasterACK By\nMasterFrom\nTMP100orTMP10119\nD7 D6 D5 D4 D3 D2 D1 D0\nFigure 7. I 2C Timing Diagram for Read Word Format\nFrame1SMBusALERTResponseAddressByte Frame2SlaveAddressFromTMP100StartBy\nMasterACK By\nTMP100orTMP101From\nTMP100orTMP101NACKBy\nMasterStopBy\nMaster19 19\nSDASCLALERT\n0001100 R / W 1001A 2 A 1 A 0 Status\nFigure 8. Timing Diagram for SMBus ALERTPACKAGE OPTION ADDENDUM\nwww.ti.com 11-Apr-2013\nAddendum-Page 1PACKAGING INFORMATION\nOrderable Device Status\n(1)Package Type Package\nDrawingPinsPackage\nQtyEco Plan\n(2)Lead/Ball Finish MSL Peak Temp\n(3)Op Temp (\u00b0C) Top-Side Markings\n(4)Samples\nSN0312100DBVR ACTIVE SOT-23 DBV 63000Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T100\nTMP100NA/250 ACTIVE SOT-23 DBV 6250Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR T100\nTMP100NA/250G4 ACTIVE SOT-23 DBV 6250Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR T100\nTMP100NA/3K ACTIVE SOT-23 DBV 63000Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T100\nTMP100NA/3KG4 ACTIVE SOT-23 DBV 63000Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T100\nTMP101NA/250 ACTIVE SOT-23 DBV 6250Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T101\nTMP101NA/250G4 ACTIVE SOT-23 DBV 6250Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T101\nTMP101NA/3K ACTIVE SOT-23 DBV 63000Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T101\nTMP101NA/3KG4 ACTIVE SOT-23 DBV 63000Green (RoHS\n& no Sb/Br)CU NIPDAU Level-2-260C-1 YEAR -55 to 125 T101\n \n(1) The marketing status values are defined as follows:\nACTIVE: Product device recommended for new designs.\nLIFEBUY:  TI has announced that the device will be discontinued, and a lifetime-buy period is in effect.\nNRND: Not recommended for new designs. Device is in production to support existing customers, but TI does not recommend using this part in a new design.\nPREVIEW:  Device has been announced but is not in production. Samples may or may not be available.\nOBSOLETE:  TI has discontinued the production of the device.\n \n(2) Eco Plan - The planned eco-friendly classification: Pb-Free (RoHS), Pb-Free (RoHS Exempt), or Green (RoHS & no Sb/Br) - please check http://www.ti.com/productcontent  for the latest availability\ninformation and additional product content details.\nTBD:  The Pb-Free/Green conversion plan has not been defined.\nPb-Free (RoHS):  TI's terms \"Lead-Free\" or \"Pb-Free\" mean semiconductor products that are compatible with the current RoHS requirements for all 6 substances,  including the requirement that\nlead not exceed 0.1% by weight in homogeneous materials. Where designed to be soldered at high temperatures, TI Pb-Free products are suitable for use in specified lead-free processes.\nPb-Free (RoHS Exempt):  This component has a RoHS exemption for either 1) lead-based flip-chip solder bumps used between the die and package, or 2) lead-based  die adhesive used between\nthe die and leadframe. The component is otherwise considered Pb-Free (RoHS compatible) as defined above.\nGreen (RoHS & no Sb/Br):  TI defines \"Green\" to mean Pb-Free (RoHS compatible), and free of Bromine (Br)  and Antimony (Sb) based flame retardants (Br or Sb do not exceed 0.1% by weight\nin homogeneous material)\n PACKAGE OPTION ADDENDUM\nwww.ti.com 11-Apr-2013\nAddendum-Page 2(3) MSL, Peak Temp. -- The Moisture Sensitivity Level rating according to the JEDEC industry standard classifications, and peak solder temperature.\n \n(4) Multiple Top-Side Markings will be inside parentheses. Only one Top-Side Marking contained in parentheses and separated by a \"~\" will appear on a device. If a line is indented then it is a\ncontinuation of the previous line and the two combined represent the entire Top-Side Marking for that device.\n \nImportant Information and Disclaimer: The information provided on this page represents TI's knowledge and belief as of the date that it is provided. TI bases its knowledge and belief on information\nprovided by third parties, and makes no representation or warranty as to the accuracy of such information. Efforts are underway to better integrate information from third parties. TI has taken and\ncontinues to take reasonable steps to provide representative and accurate information but may not have conducted destructive testing or chemical analysis on incoming materials and chemicals.\nTI and TI suppliers consider certain information to be proprietary, and thus CAS numbers and other limited information may not be available for release.\n \nIn no event shall TI's liability arising out of such information exceed the total purchase price of the TI part(s) at issue in this document sold by TI to Customer on an annual basis.\n \n OTHER QUALIFIED VERSIONS OF TMP100, TMP101 :\n\u2022Automotive: TMP101-Q1\n\u2022Enhanced Product: TMP100-EP\n NOTE: Qualified Version Definitions:\n\u2022Automotive - Q100 devices qualified for high-reliability automotive applications targeting zero defects\n\u2022Enhanced Product - Supports Defense, Aerospace and Medical ApplicationsTAPE AND REEL INFORMATION\n*All dimensions are nominal\nDevice Package\nTypePackage\nDrawingPinsSPQ Reel\nDiameter\n(mm)Reel\nWidth\nW1 (mm)A0\n(mm)B0\n(mm)K0\n(mm)P1\n(mm)W\n(mm)Pin1\nQuadrant\nTMP100NA/250 SOT-23 DBV 6250 178.0 9.03.233.171.374.08.0 Q3\nTMP100NA/3K SOT-23 DBV 63000 178.0 9.03.233.171.374.08.0 Q3\nPACKAGE MATERIALS INFORMATION\nwww.ti.com 26-Jan-2013\nPack Materials-Page 1*All dimensions are nominal\nDevice Package Type Package Drawing Pins SPQ Length (mm) Width (mm) Height (mm)\nTMP100NA/250 SOT-23 DBV 6250 180.0 180.0 18.0\nTMP100NA/3K SOT-23 DBV 63000 180.0 180.0 18.0\nPACKAGE MATERIALS INFORMATION\nwww.ti.com 26-Jan-2013\nPack Materials-Page 2IMPORTANT NOTICE\nTexasInstruments Incorporated anditssubsidiaries (TI)reservetherighttomakecorrections, enhancements, improvements andother\nchangestoitssemiconductor productsandservicesperJESD46, latestissue,andtodiscontinue anyproductorserviceperJESD48, latest\nissue.Buyersshouldobtainthelatestrelevantinformation beforeplacingordersandshouldverifythatsuchinformation iscurrentand\ncomplete. Allsemiconductor products(alsoreferredtohereinas\u201ccomponents \u201d)aresoldsubjecttoTI\u2019stermsandconditions ofsale\nsuppliedatthetimeoforderacknowledgment.\nTIwarrantsperformance ofitscomponents tothespecifications applicable atthetimeofsale,inaccordance withthewarrantyinTI\u2019sterms\nandconditions ofsaleofsemiconductor products. Testingandotherqualitycontroltechniques areusedtotheextentTIdeemsnecessary\ntosupportthiswarranty. Exceptwheremandated byapplicable law,testingofallparameters ofeachcomponent isnotnecessarily\nperformed.\nTIassumes noliabilityforapplications assistance orthedesignofBuyers\u2019products. Buyersareresponsible fortheirproductsand\napplications usingTIcomponents. Tominimize therisksassociated withBuyers\u2019productsandapplications, Buyersshouldprovide\nadequate designandoperating safeguards.\nTIdoesnotwarrantorrepresent thatanylicense,eitherexpressorimplied,isgrantedunderanypatentright,copyright, maskworkright,or\notherintellectual propertyrightrelatingtoanycombination, machine, orprocessinwhichTIcomponents orservicesareused.Information\npublished byTIregarding third-party productsorservicesdoesnotconstitute alicensetousesuchproductsorservicesorawarrantyor\nendorsement thereof.Useofsuchinformation mayrequirealicensefromathirdpartyunderthepatentsorotherintellectual propertyofthe\nthirdparty,oralicensefromTIunderthepatentsorotherintellectual propertyofTI.\nReproduction ofsignificant portionsofTIinformation inTIdatabooksordatasheetsispermissible onlyifreproduction iswithoutalteration\nandisaccompanied byallassociated warranties, conditions, limitations, andnotices.TIisnotresponsible orliableforsuchaltered\ndocumentation. Information ofthirdpartiesmaybesubjecttoadditional restrictions.\nResaleofTIcomponents orserviceswithstatements differentfromorbeyondtheparameters statedbyTIforthatcomponent orservice\nvoidsallexpressandanyimpliedwarranties fortheassociated TIcomponent orserviceandisanunfairanddeceptive business practice.\nTIisnotresponsible orliableforanysuchstatements.\nBuyeracknowledges andagreesthatitissolelyresponsible forcompliance withalllegal,regulatory andsafety-related requirements\nconcerning itsproducts, andanyuseofTIcomponents initsapplications, notwithstanding anyapplications-related information orsupport\nthatmaybeprovidedbyTI.Buyerrepresents andagreesthatithasallthenecessary expertise tocreateandimplement safeguards which\nanticipate dangerous consequences offailures,monitorfailuresandtheirconsequences, lessenthelikelihood offailuresthatmightcause\nharmandtakeappropriate remedialactions.Buyerwillfullyindemnify TIanditsrepresentatives againstanydamages arisingoutoftheuse\nofanyTIcomponents insafety-critical applications.\nInsomecases,TIcomponents maybepromoted specifically tofacilitatesafety-related applications. Withsuchcomponents, TI\u2019sgoalisto\nhelpenablecustomers todesignandcreatetheirownend-product solutions thatmeetapplicable functional safetystandards and\nrequirements. Nonetheless, suchcomponents aresubjecttotheseterms.\nNoTIcomponents areauthorized foruseinFDAClassIII(orsimilarlife-critical medicalequipment) unlessauthorized officersoftheparties\nhaveexecuted aspecialagreement specifically governing suchuse.\nOnlythoseTIcomponents whichTIhasspecifically designated asmilitarygradeor\u201cenhanced plastic\u201daredesigned andintendedforusein\nmilitary/aerospace applications orenvironments. Buyeracknowledges andagreesthatanymilitaryoraerospace useofTIcomponents\nwhichhavenotbeensodesignated issolelyattheBuyer'srisk,andthatBuyerissolelyresponsible forcompliance withalllegaland\nregulatory requirements inconnection withsuchuse.\nTIhasspecifically designated certaincomponents asmeetingISO/TS16949 requirements, mainlyforautomotive use.Inanycaseofuseof\nnon-designated products, TIwillnotberesponsible foranyfailuretomeetISO/TS16949.\nProducts Applications\nAudio www.ti.com/audio Automotive andTransportation www.ti.com/automotive\nAmplifiers amplifier.ti.com Communications andTelecom www.ti.com/communications\nDataConverters dataconverter.ti.com Computers andPeripherals www.ti.com/computers\nDLP\u00aeProducts www.dlp.com Consumer Electronics www.ti.com/consumer-apps\nDSP dsp.ti.com EnergyandLighting www.ti.com/energy\nClocksandTimers www.ti.com/clocks Industrial www.ti.com/industrial\nInterface interface.ti.com Medical www.ti.com/medical\nLogic logic.ti.com Security www.ti.com/security\nPowerMgmt power.ti.com Space,AvionicsandDefense www.ti.com/space-avionics-defense\nMicrocontrollers microcontroller.ti.com VideoandImaging www.ti.com/video\nRFID www.ti-rfid.com\nOMAPApplications Processors www.ti.com/omap TIE2ECommunity e2e.ti.com\nWirelessConnectivity www.ti.com/wirelessconnectivity\nMailingAddress: TexasInstruments, PostOfficeBox655303,Dallas,Texas75265\nCopyright \u00a92013,TexasInstruments IncorporatedDocument Number: MPL115A2\nRev 8, 06/2012Freescale Semiconductor\nData Sheet: Technical Data\n\u00a9 2009-2012 Freescale Semiconducto r, Inc. All ri ghts reserved.\nMiniature I2C Digital Barometer\nThe MPL115A2 is an absolute pressure sensor with a digital I2C output targeting \nlow cost applications. A miniature 5 by 3 by 1.2 mm LGA package is ideally \nsuited for the space constrained requirem ents of portable electronic devices. \nLow current consumptions of 5 \uf06dA during Active mode and 1 \uf06dA during \nShutdown (Sleep) mode are essential when focusing on low-power applications. \nThe wide operating temperature range sp ans from -40\u00b0C to +105\u00b0C to fit \ndemanding environmental conditions.\nThe MPL115A2 employs a MEMS pressure sensor with a conditioning IC to \nprovide accurate pressure measurement s from 50 to 115 kPa. An integrated \nADC converts pressure and temperature sensor readings to digitized outputs via \na I2C port. Factory calibration data is stored internally in an on-board ROM. \nUtilizing the raw sensor output and calib ration data, the host microcontroller \nexecutes a compensation algorithm to render Compensated Absolute Pressure \nwith \u00b11 kPa accuracy.\nThe MPL115A2 pressure sensor\u2019s small form factor, low power capability, \nprecision, and digital output optimize it for barometric measurement applications.\nFeatures\n\u2022 Digitized pressure and temperature information together with programmed \ncalibration coefficients for host micro use.\n\u2022 Factory Calibrated\n\u2022 50 kPa to 115 kPa Absolute Pressure\n\u2022 \u00b11 kPa Accuracy\n\u2022 2.375V to 5.5V Supply\u2022 Integrated ADC\n\u2022I\n2C Interface (operates up to 400 kHz)\n\u20227  b i t  I2C address = 0x60\n\u2022 Monotonic Pressure and Temperature Data Outputs\u2022 Surface Mount RoHS Compliant Package\nApplication Examples\n\u2022 Barometry (portable and desktop)\n\u2022 Altimeters\n\u2022 Weather Stations\n\u2022 Hard Disk-Drives (HDD)\u2022 Industrial Equipment\n\u2022 Health Monitoring\n\u2022 Air Control Systems\nORDERING INFORMATION\nDevice Name Package Options Case No.# of Ports Pressure Type Digital \nInterface None Single Dual Gauge Differential Absolute\nMPL115A2 Tray 2015 \u2022 \u2022 I2C\nMPL115A2T1 Tape & Reel (1000) 2015 \u2022 \u2022 I2C\nMPL115A2T2 Tape & Reel (5000) 2015 \u2022 \u2022 I2CMPL115A2\n50 to 115 kPa\nTop ViewMPL115A2\n5.0 mm by 3.0 mm by 1.2 mm\nPin Connections1\nNCSDAVDD\nCAP\nSHDNGND\nRSTSCL\n2\n3\n48\n7\n6\n5\nSensors\n2 Freescale Semiconductor, Inc.MPL115A21 Block Diagram and Pin Descriptions\nFigure 1. Block Diagram and Pin Connections\nTable 1. Pin Description\nPin Name Function\n1 VDD VDD Power Supply Connection: VDD range is 2.375V to 5.5V. \n2 CAP 1 \uf06dF connected to ground.\n3 GND Ground\n4 SHDNShutdown: Connect to GND to disable the device. When in shutdown, the part draws no more than 1 \uf06dA supply \ncurrent and all communications pins (RST , SCL, SDA) are high impedance. Connect to VDD for normal \noperation.\n5 RST Reset: Connect to ground to disable I2C communications. \n6 NC NC: No connection \n7 SDA(1)\n1. Use 4.7k pullup resistors for I2C communication.SDA: Serial data I/O line\n8 SCL(1)I2C Serial Clock Input.Diff   \nAmp \nTemp\nSensor\nMUXADC\nSCL\nGNDVDD\nSDATemperaturePressureCoefficient\nStorage\nADDR\nADDRADDR\nADDR\nADDR\nI2C\nInterfaceSHDN\nRSTCAP\nDiff   Amp \nTemp\nSensor\nMUXADC\nSCL\nGNDVDD\nSDATemperaturePressureCoefficient\nStorage\nADDR\nADDRADDR\nADDR\nADDRADDR\nADDR\nADDR\nI2C\nInterfaceSHDN\nRSTCAPVDD\nCAP\nSHDN\nSDA\nRST\nGNDSCL\uf06dC1 \uf06dF\n1 \uf06dF\nMicrocontroller4.7 k\n4.7 kSensors\nFreescale Semiconductor, Inc. 3MPL115A22  Mechanical and Elect rical Specifications\n2.1 Maximum Ratings\nVoltage (with respect to GN D unless otherwise noted) \nVDD..................................................................................................................... -0.3 V to +5.5 V\nSHDN , RST, SDA, SCL ...............................................................................-0.3 V to VDD+0.3 V\nOperating Temperature Range ..........................................................................-40\u00b0C to +105\u00b0C\nStorage Temperature Range .............................................................................-40\u00b0C to +125\u00b0C\nOverpressure................................................................................................................ 100 0 kPa\n2.2 Operating Characteristics\nVDD =  2.375 V to 5.5 V, TA = -40\u00b0C to +105\u00b0C, unless otherwise noted. Typical values are at VDD = 3.3 V, TA = +25\u00b0C.  \nRef Parameters Symbol Conditions Min Typ Max Units\n1 Operating Supply Voltage VDD2.375 3.3 5.5 V\n2 Supply Current IDDShutdown (SHDN  = GND) \u2014 \u2014 1 \uf06dA\nStandby \u2014 3.5 10 \uf06dA\nAverage \u2013 at one measurement per second \u2014 5 6 \uf06dA\nPressure Sensor\n3 Range 50 \u2014 115 kPa\n4 Resolution \u20140 . 1 5 \u2014k P a\n5 Accuracy -20\u00baC to 85\u00baC \u2014 \u2014 \u00b11 kPa\n6 Power Supply Rejection Typical operating circuit at DC 0.1 \u2014 kPa/V\n100 mV p-p 217 Hz square wave plus 100 mV \npseudo random noise with 10 MHz bandwidth0.1 \u2014 kPa\n7 Conversion Time\n(Start Pressure and Temperature Conversion )tc Time between start convert command and data available in the Pressure and Temperature registers\u20141 . 6 3 m s\n8 Wakeup Time tw Time between leaving Shutdown mode (SHDN\n goes high) and communicating with \nthe device to issue a command or read data.\u20143 5 m s\nI2C I/O Stages: SCL, SDA\n9 SCL Clock Frequency fSCL\u2014 \u2014 400 kHz\n10 Low Level Input Voltage VIL \u2014\u2014 0 . 3 VDDV\n11 High Level Input Voltage VIH 0.7VDD\u2014\u2014 V\nI2C Outputs: SDA\n12 Data Setup Time tSUSetup time from command receipt to ready to transmit0\u2014 0 . 4 s\nI\n2C Addressing\nMPL115A2 uses 7-bit addressing, does not acknowledge the general call address 0000000. Slave address has been set to 0x60 or 11 00000.Sensors\n4 Freescale Semiconductor, Inc.MPL115A23 Overview of Functions/Operation\nFigure 2. Sequence Flow Chart\nThe MPL115A interfaces to a host (or syst em) microcontroller in the user\u2019s application. All communications are via  I2C. A typical \nusage sequence is as follows:\nInitial Power-up All circuit elements are active. I\n2C port pins are high impedance and associated registers are cleared. The device then enters \nstandby mode.Reading Coefficient DataThe user then typically accesses the part and reads the coefficien t data. The main circuits within the slave device are disable d \nduring read activity. The coefficients are usually stored in the host microcontoller local memory but can be re-read at any tim e.\nIt is not necessary to read the values stored in the host microc ontroller multiple times because the coefficients within a devi ce \nare constant and do not change. However, note that the coefficient s will be different from device to device, and cannot be used  \nfor another part.Data ConversionThis is the first step that is performed each time a new pressure reading is required which is initiated by the host sending th e \nCONVERT command. The main system circuits are activated (w ake) in response to the command and after the conversion \ncompletes, the result is placed into the Pr essure and Temperatur e ADC output registers.\nThe conversion completes within the maximum conversion time, tc (see Row 7, in the Operating Characteristics Table). The \ndevice then enters standby mode.Compensated Pressure ReadingAfter the conversion has been given sufficient time to complete, the host microcontroller reads the result from the ADC output \nregisters and calculates the Compensated Pressure, a barome tric/atmospheric pressure value which is compensated for \nchanges in temperature and pressure sensor linearity. This is done using the coefficient data from the MPL115A and the raw \nsampled pressure and temperature ADC output values, in a compensa tion equation (detailed later). Note that this is an absolute \npressure measurement with a vacuum as a reference.From this step the host controller may either wait and then retu rn to the Data Conversion step to obtain the next pressure read ing \nor it may go to the Shutdown step.Reading \ncoefficient data\nData conversionInitial \npowerup\nCompensated \npressure reading\nShutdownSensors\nFreescale Semiconductor, Inc. 5MPL115A2Shutdown\nFor longer periods of inactivity  the user may assert the SHDN  input by driving this pin low to  reduce system power consumption. \nThis removes power from all internal circuits, including any re gisters. In the shutdown state, the Pressure and Temperature \nregisters will be reset, losing any previous ADC output values.This step is exited by taking the SHDN\n pin high. Wait for the maximum wakeup time, tw (see Row 8, in the Operating \nCharacteristics Table), after which another pressure reading can be taken by transitioning to the data Conversion step.\n \nFor values with less than 16 bits, the lower LSBs are zero. For ex ample, c12 is 14 bits and is stored into 2 bytes as follows:\nc12 MS byte = c12[13:6] = [c12b13 , c12b12 , c12b11 , c12b10 , c12b9 , c12b8 , c12b7 , c12b6]\nc12 LS byte = c12[5:0] & \u201c00\u201d = [c12b5 , c12b4 , c12b3 , c12b2 , c12b1 , c12b0 , 0 , 0]\n3.1 Pressure, Temperature and Coef ficient Bit-Width Specifications\nThe table below specifies the initial coefficient bit-width spec ifications for the compensation algorithm and the specification s for \nPressure and Temperature ADC values. Table 2. Device Memory Map\nAddress Name Description Size (bits)\n0x00 Padc_MSB 10-bit Pressure ADC output value MSB 8\n0x01 Padc_LSB 10-bit Pressure ADC output value LSB 2\n0x02 Tadc_MSB 10-bit Temperature ADC output value MSB 8\n0x03 Tacd_LSB 10-bit Temperature ADC output value LSB 2\n0x04 a0_MSB a0 coefficient MSB 8\n0x05 a0_LSB a0 coefficient LSB 8\n0x06 b1_MSB b1 coefficient MSB 8\n0x07 b1_LSB b1 coefficient LSB 8\n0x08 b2_MSB b2 coefficient MSB 8\n0x09 b2_LSB b2 coefficient LSB 8\n0x0A c12_MSB c12 coefficient MSB 8\n0x0B c12_LSB c12 coefficient LSB 8\n0x0C Reserved* \u2014 \u2014\n0x0D Reserved* \u2014 \u2014\n0x0E Reserved* \u2014 \u2014\n0x0F Reserved* \u2014 \u2014\n0x10 Reserved \u2014 \u2014\n0x11 Reserved \u2014 \u2014\n0x12 CONVERT Start Pressure and Temperature Conversion \u2014\n*These registers are set to 0x00. These are reserved, and we re previously utilized as Coefficient values, c11 and \nc22, which were always 0x00.\nPressure, Temperature and Compensation Coefficient Specifications\na0 b1 b2 c12 Padc Tadc\nTotal Bits 16 16 16 14 10 10\nSign Bits 1 1 1 1 0 0\nInteger Bits 12 2 1 0 10 10\nFractional Bits 3 13 14 13 0 0\ndec pt zero pad 0 0 0 9 0 0Sensors\n6 Freescale Semiconductor, Inc.MPL115A2Example Binary Format Definitions: \na0 Signed, Integer Bits = 12, Fractional Bits = 3 : Coeff a0 = S I11 I10 I9 I8 I7 I6 I5 I4 I3 I2 I1 I0 . F2 F1 F0\nb1 Signed, Integer Bits = 2, Fractional Bits = 7 : Coeff b1 = S I1 I0 . F12 F10 F9 F8 F7 F6 F5 F4 F3 F2 F1 F0\nb2 Signed, Integer Bits = 1, Fractional Bits = 14 : Coeff b2 = S I0 . F13 F12 F10 F9 F8 F7 F6 F5 F4 F3 F2 F1 F0\nc12 Signed, Integer Bits = 0, Fractional Bits = 13,  dec pt zero pad = 9 : Coeff c12 = S 0 . 000 000 000 F12 F10 F9 F8 F7 F6 F5 F4 F3 F2 F1 F0\nPadc Unsigned, Integer Bits = 10 : Padc U = I9 I8 I7 I6 I5 I4 I3 I2 I1 I0\nTadc Unsigned, Integer Bits =10 : Tadc U = I9 I8 I7 I6 I5 I4 I3 I2 I1 I0\nNOTE: Negative coefficients are coded in 2\u2019s complement notation.\n3.2 Compensation\nThe 10-bit compensated pressure output, Pcomp, is calculated as follows: \nEqn. 1\nWhere:\nPadc is the 10-bit pressure  ADC output of the MPL115A\nTadc is the 10-bit temperatur e ADC output of the MPL115A \na0 is the pressure offset coefficient\nb1 is the pressure sensitivity coefficient\nb2 is the temperature coefficient of offset (TCO)\nc12 is the temperature coefficient of sensitivity (TCS)\nPcomp will produce a value of 0 with an inpu t pressure of 50 kPa and will produce a full-scale value of 1023 with an input pres sure \nof 115 kPa.\nEqn. 2\n3.3 Evaluation Sequence, Arithmetic Circuits\nThe following is an example of the calculation for Pcomp,  the compensated pressure output. Input values are in bold.\nc12x2 = c12 * Tadc\na1 = b1  + c12x2\na1x1 = a1 * Padc\ny1 = a0 + a1x1\na2x2 = b2  * Tadc\nPcomp = y1 + a2x2\nThis can be calculated as a succession of Mult iply Accumulates (MACs) operations of the form y = a + b * x:Pcomp a0 b1 c12 Tadc \uf0d7 +\uf028\uf029 Padc b2 Tadc \uf0d7 +\uf0d7 + =\nPressure (kPa) P =c o m p115 50 \u2013\n1023---------------------- 50+ \uf0d7\na\nb\nxy +\nXSensors\nFreescale Semiconductor, Inc. 7MPL115A2The polynomial  can be evaluated ( Equation 1 ) as a sequence of 3 MACs:\nPlease refer to Freescale application note AN3785 for more detailed notes on implementation.\n3.4 I2C Device Read/Write Operations\nAll device read/write operations are memory mapped. Device acti ons e.g. \u201cStart Conversions\u201d ar e controlled by writing to the \nappropriate memory address location. \n\u2022F o r  I2C the 7-bit Device Address (from Table 2) has a read/write toggle bit, where the least significant bit is \u20181\u2019 for read \noperations or \u20180\u2019 for writ e operations.  The Device Address is 0xC0 for a Write  and the Device Address is 0xC1 for a  Read .\n\u2022 The most significant bit in the Command tables below is not us ed and is don't care (X). In examples given it\u2019s set to \u20180\u2019.\nRefer to Sensor I2C Setup and FAQ Application Note AN4481 for more information on I2C communication between the sensor \nand host controller.\nX = Don\u2019t care\n1 = The command byte needs to be paired with a 0x00 as part of the I2C exchange to complete the passing of Start Conversions.Table 3. I2C Write Commands\nCommand Binary HEX(1)\nDevices Address + Write bit 1100 0000 0xC0\nStart Conversions X001 0010 0x12Pcomp a0 b1 c12 Tadc \uf0d7 +\uf028\uf029 Padc b2 Tadc \uf0d7 +\uf0d7 + =\nb1\nc12\nTadc\na0\nb2\nTadcPadca1\ny1\ny PCompSensors\n8 Freescale Semiconductor, Inc.MPL115A2The actions taken by the part in response to each command are as follows:\nX = don\u2019t care\nThese are MPL115A2 I2C commands to read coefficients, execute Pressure a nd Temperature conversions, and to read Pressure \nand Temperature data. The sequence of the commands for the interaction is given as an example to operate the MPL115A2. \nUtilizing this gathered data, an example of the calculating the Compensated Pressure reading is given in floating point notatio n.\nI2C Commands (simplified for communication)\nDevice Address + write bit \u201cTo Write\u201d = 0xC0\nDevice Address + read bit \u201cTo Read\u201d = 0xC1\nCommand to Write \u201cConvert Pressure and Temperature\u201d = 0x12Command to Read \u201cPressure ADC High byte\u201d = 0x00\nCommand to Read \u201cPressure ADC Low byte\u201d = 0x01\nCommand to Read \u201cTemperature ADC High byte\u201d = 0x02Command to Read \u201cTemperature ADC Low byte\u201d = 0x03\nCommand to Read \u201cCoefficient data byte 1 High byte\u201d = 0x04\nRead Coefficients:\n[0xC0], [0x04], [0xC1], [0x3E] , [0xCE], [0xB3], [0xF9], [0xC5], [0x17], [0x33], [0xC8]\nFigure 3.  I\n2C Read Coefficient DatagramTable 4. I2C Write Command Description\nCommand Action Taken\nStart ConversionsWake main circuits. Start clock. Allow supply stabilization time. Select pressure  sensor input. Appl y positive sensor \nexcitation and perform A to D conversion. Select temperature input.  Perform A to D conversion. Load the Pressure and \nTemperature registers with the result. Shut down main circuits and clock.\nTable 5. I2C Read Command Description\nCommand Binary HEX(1)\nDevice Address + Read bit 1100 0001 0xC1\nRead Pressure MSB X000 0000 0x00\nRead Pressure LSB X000 0001 0x01\nRead Temperature MSB X000 0010 0x02\nRead Temperature LSB X000 0011 0x03\nRead Coefficient data byte 1 X000 0100 0x04\nSensors\nFreescale Semiconductor, Inc. 9MPL115A2Figure 4.  I2C Start Conversion Datagram\nCommand to I2C Start Conversion, 0x12\nFigure 5.  I2C Read Results Datagrama0 coefficient MSB =0x3E\na0 coefficient LSB =0xCE a0 coefficient =0x3ECE =2009.75\nb1 coefficient MSB =0xB3\nb1 coefficient LSB =0xF9 b1 coefficient =0xB3F9 =-2.37585\nb2 coefficient MSB =0xC5\nb2 coefficient LSB =0x17 b2 coefficient =0xC517 = -0.92047\nc12 coefficient MSB =0x33\nc12 coefficient LSB =0xC8 c12 coefficient =0x33C8 =0.000790\nPressure MSB =0x66\nPressure LSB =0x80 Pressure =0x6680 =0110  0110  1100 0000\n=410 ADC counts\nTemperature MSB =0x7E\nTemperature LSB =0xC0 Temperature =0x7EC0 =0111  1110  1100 0000\n=507 ADC counts\nSensors\n10 Freescale Semiconductor, Inc.MPL115A23.5 Example of Pressure Compensated Calc ulation in Floating-point Notation\nPressure Compensation:\nUsing the evaluation sequence shown in Section 3.3:\n4 Solder Recommendations\n1. Use SAC solder alloy (i.e., Sn-Ag-Cu) with a melting point of about 217\u00b0C. It is recommended to use SAC305 \n(i.e., Sn-3.0 wt.% Ag-0.5 wt.% Cu).\n2. Reflow\n\u2022 Ramp up rate: 2 to 3\u00b0C/s.\n\u2022 Preheat flat (soak): 110 to 130s.\n\u2022 Reflow peak temperature: 250 \u00b0C to 260\u00b0C (depends on exact SAC alloy composition).\n\u2022 Time above 217\u00b0C: 40 to 90s (depends on board type,  thermal mass of the board/ quantities in the reflow).\n\u2022 Ramp down: 5 to 6\u00b0C/s.\u2022 Using an inert reflow environment (with O\n2 level about 5 to 15 ppm).\nNOTE: The stress level and signal offset of the device also depend s on the board type, board core material, board thickness \nand metal finishing of the board.\nPlease refer to Freescale application note AN3150, Soldering Re commendations for Pressure Sensor Devices for any additional \ninformation.  a0 coefficient =2009.75\nb1 coefficient =-2.37585\nb2 coefficient =-0.92047\nc12 coefficient =0.000790\nPressure =410 ADC counts\nTemperature =507 ADC counts\nc12x2 = c12 * Tadc =  0.000790 * 507 = 0.40053\na1 = b1 + c12x2 = -2.37585 + 0.40053 = -1.97532\na1x1 = a1 * Padc = -1.97532 * 410 = -809.8812y1 = a0 + a1x1 = 2009.75 + (-809.8812) = 1199.8688\na2x2 = b2 * Tadc = -0.92047 * 507 = -466.67829\nPComp = y1 + a2x2 = 1199.8688 + (-466.67829) = 733.19051Pcomp a0 b1 c12 Tadc \uf0d7 +\uf028\uf029 Padc b2 Tadc \uf0d7 +\uf0d7 + =\nSensors\nFreescale Semiconductor, Inc. 11MPL115A25 Handling Recommendations\nIt is recommended to handle the MPL115A pressure sensor with a vacuum pick and place tool. Sharp objects utilized to move \nthe MPL115A pressure sensor increase the possibility of damage via a foreign object/tool into the small exposed port.\nThe sensor die is sensitive to light exposure. Direct light expos ure through the port hole can lead to varied accuracy of press ure \nmeasurement. Avoid such exposure to the port during normal operation.Please note that the Pin 1 designator is on the bottom of the package. Do not use the port as a orientation reference in produc tion.\n6 Soldering/Landing Pad Information\nThe LGA package is compliant with the RoHS standard. It is re commended to use a no-clean solder paste to reduce cleaning \nexposure to high pressure and chemical agents that can da mage or reduce life span of the Pressure sensing element.\nFigure 6. MPL115A2 Recommended PCB Landing PatternSensors\n12 Freescale Semiconductor, Inc.MPL115A27 Tape and Reel Specifications\nFigure 7. LGA (3 by 5) Embossed Carrier Tape Dimensions\nFigure 8. Device Orientation in Chip Carrier(I) Measured from centerline of sprocket hole to \ncenterline of pocket.\n(II) Cumulative tolerance of 10 sprocket holes is \n\u00b10.20.\n(III) Measured from centerline of sprocket hole to \ncenterline of pocket.\n(IV) Other material available.\nDimensions are in millimeters.Ao 3.35 \u00b1 0.10\nBo 5.35 \u00b1 0.10\nKo 1.20 \u00b1 0.10F 5.50 \u00b1 0.10\nP1 8.00 \u00b1 0.10\nW 12.00 \u00b1 0.10\nPin 1 Index AreaSensors\n13 Freescale Semiconductor, Inc.MPL115A2PACKAGE DIMENSIONS\n CASE 2015-02\nISSUE A\nLGA PACKAGESensors\n14 Freescale Semiconductor, Inc.MPL115A2Related Documentation\nThe MPL115A2 device features and operations are described in a variety of reference manuals, user guides, and application \nnotes. To find the most-current versions of these documents:\n1. Go to the Freescale homepage at:\nhttp://www.freescale.com/\n2. In the Keyword search box at the top of the page, enter the device number MPL115A2.\n3. In the Refine Your Result pane on the left, click on the Documentation link.Sensors\nFreescale Semiconductor, Inc. 15MPL115A2Table 6. Revision History\nRevision \nnumberRevision \ndateDescription of changes\n8 06/2012  \u2022 Updated graphic on page 1, Section 2.2 Oper ating Characteristics: Ref 7: Conversion Time: \nchanged Typ from 3.0 to 1.6, Se ction 3.0 Overview of Function s/Operation: Reading Coefficient \nData deleted statement that reading of coeffi cients may be executed only once, Table 2: added \nSize (bits) column in table, added new Section 3.4 I2C Device Read/Write Operations\n \u0081\n \u0081MPL115A2\nRev. 8\n6/2012Information in this document is provided solely to enable system and software \nimplementers to use Freescale Semiconduc tor products. There are no express or \nimplied copyright licenses granted hereunder to design or fabricate any integrated \ncircuits or integrated circuits based on the information in this document.\nFreescale Semiconductor reserves the right to make changes without further notice to \nany products herein. Freescale Semiconductor makes no warranty, representation or \nguarantee regarding the suitability of its products for any particular purpose, nor does Freescale Semiconductor assume any liability ar ising out of the application or use of any \nproduct or circuit, and specifically discl aims any and all liability, including without \nlimitation consequential or incidental damages. \u201cTypical\u201d parameters that may be provided in Freescale Semiconductor data s heets and/or specifications can and do vary \nin different applications and actual performance may vary over time. All operating parameters, including \u201cTypicals\u201d, must be validated for each customer application by customer\u2019s technical experts. Freescale Se miconductor does not convey any license \nunder its patent rights nor the rights of others. Freescale Semiconductor products are not designed, intended, or authorized for use as components in systems intended for surgical implant into the body, or other applications intended to support or sustain life, or for any other application in which the fa ilure of the Freescale Semiconductor product \ncould create a situation where personal injury or death may occur. Should Buyer purchase or use Freescale Semiconductor  products for any such unintended or \nunauthorized application, Buyer shall indemni fy and hold Freescale Semiconductor and \nits officers, employees, subsidiaries, affili ates, and distributors harmless against all \nclaims, costs, damages, and expenses, and reasonable attorney fees arising out of, \ndirectly or indirectly, any claim of personal injury or death associated with such unintended or unauthorized use, even if such claim alleges that Freescale Semiconductor was negligent regarding the design or manufacture of the part. \nFreescale and the Freescale logo are trademarks of Freescale Semiconductor, Inc., \nReg. U.S. Pat. & Tm. Off. All other product or service names are the property of their \nrespective owners.\n\u00a9 2012 Freescale Semiconductor, Inc. All rights reserved.\n.\nVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 1 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Fully Integrated Proximity and Ambient Light Sensor with\nInfrared Emitter, I2C Interface, and Interrupt Function\nDESCRIPTION\nThe VCNL4010 is a fully integrated proximity and ambient light sensor. Fully integrated me ans that the infrared emitter \nis included in the package. It has 16 bit resolution. It includes a signal processing IC and features standard I\n2C \ncommunication interface. It features an interrupt function.\nAPPLICATIONS\n\u2022 Proximity sensor for mobile devices (e.g. smart phones, \ntouch phones, PDA, GPS) for touch screen locking, power saving, etc.\n\u2022 Integrated ambient light f unction for display/keypad \ncontrast control and dimming of mobile devices\n\u2022 Proximity/optical switch for consumer, computing and \nindustrial devices and displays\n\u2022 Dimming control for consumer, computing and industrial \ndisplaysFEATURES\n\u2022 Package type: surface mount\u2022 Dimensions (L x W x H in mm): 3.95 x 3.95 x 0.75\u2022 Integrated infrared emitter, ambient light sensor, \nproximity sensor, and signal conditioning IC\n\u2022 Interrupt function\u2022 Supply voltage range V\nDD: 2.5 V to 3.6 V\n\u2022 Supply voltage range IR anode: 2.5 V to 5 V\u2022 Communication via I\n2C interface\n\u2022I2C Bus H-level range: 1.7 V to 5 V\n\u2022 Floor life: 168 h, MSL 3, acc. J-STD-020\u2022 Low stand by current consumption: 1.5 \u03bcA\u2022 Material categorization: For definitions of compliance \nplease see www.vishay.com/doc?99912\n \nPROXIMITY FUNCTION\n\u2022 Built-in infrared emitter and photo-pin-diode for proximity \nfunction\n\u2022 16 bit effective resolution for proximity detection range \nensures excellent cross talk immunity\n\u2022 Programmable LED drive current from 10 mA to 200 mA in \n10 mA steps\n\u2022 Excellent ambient light su ppression by modulating the \ninfrared signal\n\u2022 Proximity distance up to 200 mm\nAMBIENT LIGHT FUNCTION\n\u2022 Built-in ambient light photo-pin-diode with close-to- \nhuman-eye sensitivity\n\u2022 16 bit dynamic range from 0.25 lx to 16 klx\u2022 100 Hz and 120 Hz flicker noise rejection     \nNote\n(1)Adjustable through I2C interface\n22297-2GND\n12\n11   nc IR anode    1\nIR cathode    2IR cathode    3\nSDA    4\nSCL    510   nc9     nc8     nc7     V\nDD\n6\nINT13\nGND\nPRODUCT SUMMARY\nPART NUMBEROPERATING \nRANGE\n(mm)OPERATING \nVOLTAGE \nRANGE\n(V)I2C BUS \nVOLTAGE \nRANGE\n(V)LED PULSE \nCURRENT (1)\n(mA)AMBIENT \nLIGHT \nRANGE\n(lx)AMBIENT \nLIGHT \nRESOLUTION\n(lx)OUTPUT \nCODE\nVCNL4010 1 to 200 2.5 to 3.6 1.7 to 5 10 to 200 0.25 to 16 383 0.25 16 bit, I2CVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 2 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Notes\n(1)MOQ: minimum order quantity\n(2)VCNL4000 Demokit provides USB dong le, basic softwa re including Vishay licence. The VCNL4 010 sensor board coul d be ordered free of \ncharge by contacting sensorstechsupport@vishay.com . Software updates for VCNL4010 can be  downloaded from our web site: \nwww.vishay.com/???/ORDERING INFORMATION\nORDERING CODE PACKAGING VOLUME (1)REMARKS\nVCNL4010-GS08Tape and reelMOQ: 1800 pcs3.95 mm x 3.95 mm x 0.75 mmVCNL4010-GS18 MOQ: 7000 pcsVCNL4000Demokit \n(2)- MOQ: 1 pc -\nABSOLUTE MAXIMUM RATINGS (Tamb = 25 \u00b0C, unless otherwise specified)\nPARAMETER TEST CONDITION SYMBOL MIN. MAX. UNITSupply voltage V\nDD - 0.3 5.5 V\nOperation temperature range T amb - 25 + 85 \u00b0C\nStorage temperature range T stg - 40 + 85 \u00b0C\nTotal power dissipation T amb \u2264 25 \u00b0C P tot 50 mW\nJunction temperature T j 100 \u00b0C\nBASIC CHARACTERISTICS (Tamb = 25 \u00b0C, unless otherwise specified)\nPARAMETER TEST CONDITION SYMBOL MIN. TYP. MAX. UNITSupply voltage V\nDD 2.5 3.6 V\nSupply voltage IR anode 2.5 5 VI\n2C Bus H-level range 1.7 5 V\nINT H-level range   1.7 5 VINT low voltage 3 mA sink current 0.4 VCurrent consumptionStandby current,\nno IRED-operation1.5 2 \u03bcA\nCurrent consumptionproximity mode incl. IRED (averaged)2 measurements per second, \nIRED current 20 mA5\u03bc A\n250 measurements per second, \nIRED current 20 mA520 \u03bcA\n2 measurements per second, \nIRED current 200 mA35 \u03bcA\n250 measurements per second, \nIRED current 200 mA4.0 mA\nCurrent consumption ambient light mode2 measurements per second\naveraging = 12.5 \u03bcA\n8 measurements per second\naveraging = 110 \u03bcA\n2 measurements per second\naveraging = 64160 \u03bcA\n8 measurements per second\naveraging = 64640 \u03bcA\nAmbient light resoluti on Digital resolution (LSB count ) 0.25 lx\nAmbient light outputE\nV = 100 lx\naveraging = 64400 counts\nI2C clock rate range f SCL 3400 kHzVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 3 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000CIRCUIT BLOCK DIAGRAM\nNote\u2022 nc must not be electrically connected  \nPads 8 to 11 are only considered as solder padsTEST CIRCUIT\nBASIC CHARACTERISTICS (Tamb = 25 \u00b0C, unless otherwise specified)\n Fig. 1 - Idle Current vs. Ambient Temperature\n Fig. 2 - Idle Current vs. V DD Fig. 3 - Proximity Value vs. Distance\n Fig. 4 - Forward Current vs. Temperature22299-1GND\n12\n11   nc IR anode    1\nIR cathode    2IR cathode    3\nSDA    4\nSCL    510   nc9     nc8     nc7     V\nDDAmbiProxiIRED PD\nPD\n13\nGND6\nINTVCNL4010\nASIC\nd = 20 mm  Kodak gray card (18 % reflectivity)\nVCNL4010 IRED  30 mm x 30 mm\nProxi-PD22300-1\n2.4\n1.01.21.41.81.62.02.2\n110 - 50\n- 30 10 50 90 - 10 30 70IDD - Supply Current Idle Mode (\u03bcA)\nTamb - Ambient Temperature (\u00b0C) 22301VDD = 3.6 V\nVDD = 3.5 V\nVDD = 3.3 V\nVDD = 3.1 VVDD = 2.5 V\nVDD = 2.7 V\nVDD = 2.9 V\n2.4\n1.01.21.41.61.82.02.2\n3.8 2.4 2.6 2.8 3.0 3.2 3.4 3.6IDD - Supply Current Idle Mode (\u03bcA)\nVDD - Supply Voltage (V) 22302100 \u00b0C\n80 \u00b0C\n55 \u00b0C\n25 \u00b0C\n- 10 \u00b0C\n- 40 \u00b0C100 000\n1100100010 000\n10\n0.1 1 10 100Proximity Value (ct s)\nDistance to Reflecting Card (mm) 22303Media: Kodak gray cardMod. fre quency = 390 kHzLED current 200 mA\nLED current 100 mA\nLED current 20 mA\n250\n050100150200\n140 - 60- 20 20 60 100IIRED - Forward Current IRED (mA)\nTamb - Ambient Temperature (\u00b0C) 2230420 mA40 mA60 mA80 mA100 mA120 mA140 mA160 mA180 mA200 mAVIRED = 2.5 VVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 4 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000 Fig. 5 - Relative Radian t Intensity vs. Wavelength\n Fig. 6 - Relative Radiant Intensity vs. Angular Displacement\n Fig. 7 - Relative Spectral Sensitivity vs. Wavelength\n(Proximity Sensor) Fig. 8 - Relative Radiant Sensitivity vs. Angular Displacement\n(Proximity  Sensor)\n Fig. 9 - Ambient Ligh t Value vs. Illuminance\n Fig. 10 - Relative Spectral Sensitivity vs. Wavelength \n(Ambient Light Sensor)1.1\n00.20.40.60.80.91.0\n0.10.30.50.7\n1050 750800 850 900 950 1000Ie, rel - Relative Radiant Inten sity\n\u03bb - Wavelength (nm) 22305IF = 100 mA\n0\u00b0 20\u00b0\n40\u00b0\n60\u00b0\n80\u00b00.60.70.80.91.0\n0 0.10.20.30.40.5Irel - Relative Radiant Inten sity\n22306\n\u03d5 - Angular Displacement\n1.1\n00.20.40.60.80.91.0\n0.10.30.50.7\n1100 400500 600 700 800 900 1000S(\u03bb)rel - Relative Spectral Sensitivity\n\u03bb - Wavelength (nm) 223070\u00b0 20\u00b0\n40\u00b0\n60\u00b080\u00b00.60.70.80.91.0\n0 0.10.20.30.40.5Srel - Relative Sensitivity\n22308\n\u03d5 - Angular Displacement\n100 000\n1100100010 000\n10Ambient Light Signal (ct s)\nEV - Illuminance (lx)0.1 1 10 100 1000 10 000\n00.20.40.60.81.0\n1100 400500 600 700 800 900 1000S(\u03bb)rel - Relative Spectral Sensitivity\n\u03bb - Wavelength (nm)VCNL4010Human eyeVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 5 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000 Fig. 11 - Relative Radiant Sens itivity vs. Angular Displacement\n(Ambient Light Sensor)\nAPPLICATION INFORMATION\nVCNL4010 is a cost effective solution of proximity and ambient light sensor with I2C bus interface. The st andard serial digital \ninterface is easy to access \u201cProximity Signal\u201d and \u201cLight Intens ity\u201d without complex calculatio n and programming by external \ncontroller. Beside the digital ou tput also a flexible programma ble interrupt pin is available.\n1. Application Circuit\n Fig. 12 - Application Circuit\n(x) = Pin Number\nNote\u2022 The interrupt pin is an open drain output . The needed pull-up resistor may be connected to the same supply voltage as the appl ication \ncontroller and the pull-up resistors at SDA/ SCL. Proposed value R2 should be >1 k \u03a9 , e.g. 10 k \u03a9 to 100 k \u03a9. \nProposed value for R3 and R4, e.g. 2.2 k \u03a9 to 4.7 k \u03a9, depend also on the I\n2C bus speed.  \nFor detailed description about set-up and use of the interrupt as well as more application related information see AN: \u201cDesigni ng VCNL4010 \ninto an Application\u201d.0\u00b0 20\u00b0\n40\u00b0\n60\u00b080\u00b0\n0.60.70.80.91.0\n0 0.10.20.30.40.5Srel - Relative Sensitivity\n22311Vertical\nHorizontal\n\u03d5 - Angular Displacement\n22312-2Host\nMicro Controller\nI2C Bu s Clock SCL\nI2C Bu s Data SDAVCNL4010\nINT (6)\nSCL (5)\nSDA (4)GND (12, 13)VDD (7)IR_Anode (1)C1 C2\nC3 C4R1100 nF\n100 nF 10 \u03bcF22 \u03bcF\n10R\nGPIO2.5 V to 3.6 V2.5 V to 5.0 V1.7 V to 5.0 VR2 R3 R4VCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 6 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?910002. I2C Interface\nThe VCNL4010 contains seventeen 8 bit registers for operation cont rol, parameter setup and result  buffering. All registers are \naccessible via I2C communication. Figure  13 shows the basic I2C communication with VCNL4010.\nThe built in I2C interface is compatible with all I2C modes (standard, fast and high speed).\nI2C H-level range = 1.7 V to 5 V.\nPlease refer to the I2C specification from NXP for details. \n Fig. 13 - Send Byte /Receive Byte Protocol\nDevice AddressThe VCNL4010 has a fix slave address for the host programming and accessing sele ction. The predefined 7 bit \nI\n2C bus address is set to 0010 011 = 13h. The least \nsignificant bit (LSB) defines re ad or write mode. Accordingly \nthe bus address is set to 0010 0 11x  = 26h for write, 27h for \nread.Register AddressesVCNL4010 has seventeen user accessible 8 bit registers. The register addresses are 80h (register #0) to 90h (register #16). \nREGISTER FUNCTIONS\nRegister #0 Command RegisterRegister address = 80h  \nThe register #0 is for starting ambient ligh t or proximity measurements. This register contains 2 flag bits for data ready indi cation. \nNote\u2022 With setting bit 3 and bit 4 at the same write command, a simultaneously measurement of ambient  light and proximity is done. Beside als_en \nand/or prox_en first se lftimed_en needs to be set. On-demand measurement mode s are disabled if selftime d_en bit is set. For the  \nselftimed_en mode changes in reading rates (reg #4 and reg #2) can be made only when b0 (selftimed_en bit) = 0. For the als_od mode \nchanges to the reg #4 can be made only when  b4 (als_od bit) = 0; this is to avoid synchronization problems  and undefined states  between \nthe clock domains. In effect this means that it is only reason able to change rates while no selftimed conversion is ongoing.S Slave addre ss\nRdReceive byte Read data from VCNL4010\nA Regi ster addre ss A Wr P\nS Slave addre ss P A A Data byteSend byte Write command to VCNL4010\nS = start condition\nP = stop condition\nA = acknowledgeHost action\nVCNL4010 re sponseS Slave addre ss A Regi ster addre ss A Wr P Data byte A\n22313-1\nTABLE 1 - COMMAND REGISTER #0\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nconfig_lock als_data_rdy prox_data_rdy als_od prox_od als_en prox_en selftimed_en\nDescription\nconfig_lock Read only bit. Value = 1 \nals_data_rdyRead only bit. Value = 1 when ambient light measurement data is available in the result registers. This bit \nwill be reset when one of the corresponding result registers (reg #5, reg #6) is read.\nprox_data_rdyRead only bit. Value = 1 when proximity measurement data  is available in the result registers. This bit will \nbe reset when one of the corresponding result registers (reg #7, reg #8) is read.\nals_odR/W bit. Starts a single on-demand measurement for ambient light. If averaging is enabled, starts a \nsequence of readings and stores the averaged result . Result is available at the end of conversion for \nreading in the registers #5(HB) and #6(LB). \nprox_odR/W bit. Starts a single on-demand measurement for proximity.Result is available at the end of conversion for reading in the registers #7(HB) and #8(LB).\nals_en R/W bit. Enables periodic als measurement\nprox_en R/W bit. Enables peri odic proximity measurement\nselftimed_enR/W bit. Enables state machine and LP oscillator for self timed measurements; no measurement is performed until the corr esponding bit is setVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 7 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Register #1 Product ID Revision RegisterRegister address = 81h. This regi ster contains information about product ID and product revision.\nRegister data value of current revision = 21h.\nRegister #2 Rate of Proximity MeasurementRegister address = 82h.\nNote\u2022 If self_timed measurement is running, any new value written in this register will not be taken over until the mode is actualy cycled.\nRegister #3 LED Current Setting for Proximity ModeRegister address = 83h. This register is to se t the LED current value for proximity measurement.\nThe value is adjustable in steps of 10 mA from 0 mA to 200 mA.\nThis register also contains information about the used device fuse program ID.TABLE 2 - PRODUCT ID REVISION REGISTER #1\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nProduct ID Revision ID\nDescription\nProduct ID Read only bits. Value = 2\nRevision ID Read on ly bits. Value = 1\nTABLE 3 - PROXIMITY RATE REGISTER #2\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nn/aRate of Proximity Measurement (no. of \nmeasurements per second)\nDescription\nProximity rateR/W bits.  \n000 - 1.95 measurements/s (DEFAULT)  \n001 - 3.90625 measurements/s  \n010 - 7.8125 measurements/s  \n011 - 16.625 measurements/s  \n100 - 31.25 measurements/s  \n101 - 62.5 measurements/s  \n110 - 125 measurements/s  \n111 - 250 measurements/s\nTABLE 4 - IR LED CURRENT REGISTER #3\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nFuse prog ID IR LED current value\nDescription\nFuse prog IDRead only bits.  \nInformation about fuse program revision used for initial setup/calibration of the device.\nIR LED current valueR/W bits. IR LED current = Value (dec.) x 10 mA. Valid Range = 0 to 20d. e.g. 0 = 0 mA , 1 = 10 mA, \u2026., 20 = 200 mA (2 = 20 mA = DEFAULT) LED Current is limited to 200 mA for values higher as 20d. VCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 8 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Register #4 Ambient Light Parameter RegisterRegister address = 84h. \nNote\u2022 If self_timed measurement is running, any new value written in this register will not be taken over until the mode is actualy cycled.\nRegister #5 and #6 Ambient Light Result RegisterRegister address = 85h and 86h. These registers are the result registers fo r ambient light measurement readings.\nThe result is a 16 bit value. The high byte is stor ed in register #5 and the low byte in register #6.TABLE 5 - AMBIENT LIGHT PARAMETER REGISTER #4\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nCont. conv. \nmodeals_rateAuto offset \ncompensationAveraging function\n(number of measur ements per run)\nDescription\nCont. conversion modeR/W bit. Continuous  conversion mode.\nEnable = 1; Disable = 0 = DEFAULTThis function can be us ed for performing faster ambient ligh t measurements. Plea se refer to the \napplication information chapter 3.3 for details about this function. \nAmbient light me asurement rateR/W bits. Ambient li ght measurement rate  \n000 - 1 samples/s  \n001 - 2 samples/s  = DEFAULT  \n010 - 3 samples/s  \n011 - 4 samples/s  \n100 - 5 samples/s  \n101 - 6 samples/s  \n110 - 8 samples/s  \n111 - 10 samples/s\nAuto offset compensationR/W bit. Automatic offset compensation.Enable = 1 = DEFAULT;  Disable = 0In order to compensate a technology, package or te mperature related drift of the ambient light values \nthere is a built in automatic offset compensation function. \nWith active auto offset compensation the offset value is measured before each ambient light measurement and subtracted automatically from actual reading. \nAveraging functionR/W bits. Averaging function. Bit values sets the number of single conversions done during one measurement cycle. Result is the average value of all conversions.Number of conversions = 2\ndecimal_value e.g. 0 = 1 conv., 1 = 2 conv, 2 = 4 conv., \u2026.7 = 128 conv.  \nDEFAULT = 32 conv. (bit 2 to bit 0: 101)\nTABLE 6 - AMBIENT LIGHT RESULT REGISTER #5\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nRead only bits. High byte (15:8) of ambient light measurement result\nTABLE 7 - AMBIENT LIGHT RESULT REGISTER #6\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nRead only bits. Low byte (7:0) of  ambient light measurement resultVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 9 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Register #7 and #8 Proximity Measurement Result Register\nRegister address = 87h and 88h. Thes e registers are the result registers for proximity measurement readings.\nThe result is a 16 bit value. The high byte is stor ed in register #7 and the low byte in register #8.\nRegister #9 Interrupt Control Register Register address = 89h. TABLE 8 - PROXIMITY RESULT REGISTER #7 \nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nRead only bits. High byte (15:8)  of proximity measurement result\nTABLE 9 - PROXIMITY RESULT REGISTER #8 \nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nRead only bits. Low byte (7:0) of proximity measurement result\nTABLE 10 - INTERRUPT CONTROL REGISTER #9 \nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nInt count exceed n/aINT_PROX_\nready_ENINT_ALS_\nready_ENINT_THRES_ENINT_THRES_\nSEL\nDescription\nInt count exceedR/W bits. These bits contain the number of consecutive measurements needed above/below the threshold000 - 1 count = DEFAULT001 - 2 count010 - 4 count011 - 8 count100 -16 count101 - 32 count110 - 64 count111 - 128 count\nINT_PROX_ready_EN R/W bit. Enables interr upt generation at pr oximity data ready\nINT_ALS_ ready_EN R/W bit. Enables interr upt generation at ambient data ready\nINT_THRES_EN R/W bit. Enables in terrupt generation when high or low threshold is exceeded\nINT_THRES_SELR/W bit. If 0: thresholds are applied to proxim ity measurements\nIf 1: thresholds are a pplied to als measurementsVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 10 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Register #10 and #11 Low ThresholdRegister address = 8Ah and 8Bh. Th ese registers contain the low threshold value. Th e value is a 16 bit word. The high byte is \nstored in register #10 and the low byte in register #11. \nRegister #12 and #13 High ThresholdRegister address = 8Ch and 8Dh. These registers contain the high threshold value. The value is a 16 bit word. The high byte is \nstored in register #12 and the low byte in register #13. \nRegister #14 Interrupt Status RegisterRegister address = 8Eh. This register contains information abou t the interrupt status for either proximity or ALS function and \nindicates if high or low going threshold exceeded. \nNote\u2022 Once an interrupt is generated the corresponding status bit goes to 1 and stays there unless it is cleared by writing a 1 in t he corresponding \nbit. The int pad will be pulled down wh ile at least one of the status bit is 1.TABLE 11 - LOW THRESHOLD REGISTER #10\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nR/W bits. High byte (15:8)  of low threshold value\nTABLE 12 - LOW THRESHOLD REGISTER #11\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nR/W bits. Low byte (7:0) of low threshold value\nTABLE 13 - HIGH THRESHOLD REGISTER #12\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nR/W bits. High byte (15:8) of high threshold value\nTABLE 14 - HIGH THRESHOLD REGISTER #13\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nDescription\nR/W bits. Low byte (7:0) of high threshold value\nTABLE 15 - INTERRUPT STATUS REGISTER #14\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nn/a int_prox_ready int_als_r eady int_th_low int_th_hi\nDescription\nint_prox_ready R/W bit. Indicates a generated interrup t for proximity\nint_als_ready R/W bit. Indicates  a generated in terrupt for als\nint_th_low R/W bit. Indicates a low threshold exceed\nint_th_hi R/W bit. Indicates  a high threshold exceedVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 11 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Register #15 Proximity Modulator Timing AdjustmentRegister address = 8Fh. \nNote\u2022 The settings for best performance will be provided by Vishay. With first samples this is evaluated to:  \nDelay Time = 0 ; Dead Time = 1 and Prox Fr equency = 0 . With that register#15 should be  programmed with 1  (= default value).\nRegister #16 Ambient IR Light Level RegisterRegister address = 90h.This register is not intended  to be used by customer.\n3. IMPORTANT APPLICATION HINTS AND EXAMPLES\n3.1 Receiver standby modeIn standby mode the receiver has th e lowest current consumption of about 1.5 \u03bcA. In this mode only the I\n2C interface is active. \nThis is always valid, when there are no measurement demands for proximity and ambient light ex ecuted. Also the current sink \nfor the IR-LED is inactive, so there is no need for changing register #3 (IR LED current). 3.2 Data Read In order to get a certain register  value, the register has to be  addressed without data  like shown in the following scheme. Aft er \nthis register addressing, the data fr om the addressed register is writte n after a subsequent read command. \n Fig. 14 - Send Byte /Receive Byte Protocol\nThe stop condition between these write and read sequences is no t mandatory. It works also with  a repeated start condition. \nNote\u2022 For reading out 2 (or more) subsequent registers like the result registers, it is not necessary to address each of the registe rs separately. After \none read command the internal register counter is increased auto matically and any subsequent read command is accessing the next  \nregister.  \n TABLE 16 - PROXIMITY MODULATOR TIMING ADJUSTMENT #15\nB i t  7B i t  6B i t  5B i t  4B i t  3B i t  2B i t  1B i t  0\nModulation delay time Proximity frequency Modulation dead time\nDescription\nModulation delay timeR/W bits. Setting a delay time  between IR LED signal and IR input signal evaluation.\nThis function is for compensation of delays from IR LED and IR phot o diode. Also in respect to the \npossibility for setting different proximity signal freq uency. Correct adjustment is optimizing measurement \nsignal level. ( DEFAULT = 0)\nProximity frequencyR/W bits. Setting the proximit y IR test signal frequency\nThe proximity measurement is using a square IR signal as measurement signal. Four different values are possible:00 = 390.625 kHz (DEFAULT)01 = 781.25 kHz10 = 1.5625 MHz11 = 3.125 MHz\nModulation dead timeR/W bits. Setting a dead time in evaluation of IR signal at the slopes of the IR signal. ( DEFAULT = 1)This function is for reducing of possible dist urbance effects.\nThis function is reduci ng signal level and should be used carefully.\nS Slave addre ss\nRdReceive byte Read data from VCNL4010\nAR e g i ster addre ss A Wr P\nS Slave addre ss P A A Data byte\nS = start condition\nP = stop condition\nA = acknowledgeHost action\nVCNL4010 re sponseVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 12 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000Example: read register \u201cAmbient Light Result Register\u201d #5 and #6:\nAddressing:command: 26h, 85h (V CNL4010_I2C_Bus_Write_Adr., Ambient Light Result Register #5 [85])\nRead register #5:command: 27h, data (VCNL4010_I2C_Bus_Read_Adr., {High Byte Data of Ambient Light Result register #5 \n[85])}Read register #6:command: 27h, data (VCNL4010_I\n2C_Bus_Read_Adr., {Low Byte Data of Ambient Light Result register #6 \n[86])}3.3 Continuous Conversion Mode  in Ambient Light Measurement\nIn the following is a detail description of the function \u201ccontinuous conversion\u201d (bit 7 of register #4)Standard mode (bit 7 of reg #4 = 0):  \nIn standard mode the ambient light measurem ent is done during a fixed time frame of  100 ms. The single measurement itself \ntakes actually only appr. 300 \u03bcs.The following figures show examples of this measurement timing in standard mode  using averaging function 2 and 8 as \nexamples for illustration (p ossible values up to 128).\n Fig. 15 - Ambient Light Measurement with Averaging = 2;\nFinal Measurement Result = Average of these 2 Measurements  Fig. 16 - Ambient Light Meas urement with Averaging = 8;\nFinal Measurement Result = Average of these 8 Measurements \nNote\u2022\u2265 Independent of setting of averaging the result is available only after 100 ms.\n Continuous conversion mode (bit 7 of register #4 = 1):  \nIn continuous conversion mode the single measuremen ts are done directly subsequent after each other.\nSee following examples in figure 17 and 18\n Fig. 17 - Ambient Light Measurement with Averaging = 2;\nusing Continuous Conversion Mode  Fig. 18 - Ambient Light Meas urement with Averaging = 8;\nusing Continuous Conversion Mode50 m s\n100 m sStart\n2231512.5 m sStart\n100 m s\n22316\n460 \u03bc sStart\n1.5 m s 22317460 \u03bc sStart\n4.2 m s\n22318VCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 13 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000PACKAGE DIMENSIONS  in millimeters\nDrawing-No.:  6.550-5317.01-4 Not indicated tolerance s \u00b1 0.1VCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 14 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000TAPE AND REEL DIMENSIONS  in millimeters\nDrawing-No.: 9.800-5103.01-4Leader and trailer tape:Parts mounted\nEmpty Trailer 200mm min.Empty Leader 400mm min.\nDirection of pulling outUnreel direction\u00d8 60 min.\u00d8 Y2 \u00b1 0.5\nLabel po sted herecoming out from reelTape po sition\n12.4 + 2\n18.4 max.\u00d8 21 \u00b1 0.8\n100mm min. with cover tape\nspecification saccording to DINtechnical drawing sNot indicated tolerance s \u00b1 0.1\n2\n1.75\n5.5\n12 \u00b1 0.38 44.25\n\u00d8 1.54.250.9\n0.3Reel size \"Y\"\nGS 08 \u00d8 180 \u00b1 2 = 1800 pc s.\nGS 18 \u00d8 330 \u00b1 2 = 7000 pc s.\n\u00d8 13 \u00b1 0.2\nX 2:1XVCNL4010\nwww.vishay.comVishay Semiconductors \n \nRev. 1.4, 29-Oct-13 15 Document Number: 83462\nFor technical questions, contact: sensorstechsupport@vishay.com\nTHIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE. THE PRODUCTS DESCRIBED HEREIN AND THIS DOCUMENT\nARE SUBJECT TO SPECIFIC DISCLAIMERS, SET FORTH AT www.vishay.com/doc?91000SOLDER PROFILE\n Fig. 19 - Lead (Pb)-free Refl ow Solder Profile acc. J-STD-020DRYPACK\nDevices are packed in moistu re barrier bags (MBB) to \nprevent the products from mo isture absorption during \ntransportation and storage. Each bag contains a desiccant.\nFLOOR LIFE\nFloor life (time between soldering and removing from MBB) must not exceed the time  indicated on MBB label:\nFloor life: 168 h Conditions: T\namb < 30 \u00b0C, RH < 60 %\nMoisture sensitivity level 3, according to J-STD-020\nDRYING\nIn case of moisture absorpt ion devices should be baked \nbefore soldering. Conditions see J-STD-020 or label. Devices taped on reel dry us ing recommended conditions \n192 h at 40 \u00b0C (+ 5 \u00b0C), RH < 5 %.050100150200250300\n0 50 100 150 200 250 300Time (s)Temperature (\u00b0C)240 \u00b0C245 \u00b0Cmax. 260 \u00b0C\nmax. 120 s max. 100 s217 \u00b0C\nmax. 30 s\nmax. ramp up 3 \u00b0C/s max. ramp down 6 \u00b0C/s\n19841255 \u00b0CLegal Disclaimer Notice\nwww.vishay.comVishay\n \nRevision: 02-Oct-12 1 Document Number: 91000Disclaimer\nALL PRODUCT, PRODUCT SPECIFICATIONS AND DATA ARE SUBJECT TO CHANGE WITHOUT NOTICE TO IMPROVE\nRELIABILITY, FUNCTION OR DESIGN OR OTHERWISE. \nVishay Intertechnology, Inc., its affiliates, agents, and employee s, and all persons acting on it s or their behalf (collectivel y,\n\u201cVishay\u201d), disclaim any and all liability for any errors, inaccuracies or incompleteness contained in any datasheet or in any o ther\ndisclosure relating to any product.Vishay makes no warranty, repres entation or guarantee regarding the suitabilit y of the products for any particular purpose or\nthe continuing production of any product.  To the maximum extent  permitted by applicable law, Vi shay disclaims (i) any and all\nliability arising out of the application or use of any product, (ii) any and all liability, including without limitation specia l,\nconsequential or incidental damages, and (iii) any and all i mplied warranties, including warra nties of fitness for particular\npurpose, non-infringement  and merchantability. \nStatements regarding the suitability of products for certain type s of applications are based on Vishay\u2019s knowledge of typical\nrequirements that are often placed on Vishay products in generic applications.  Such statements are not binding statementsabout the suitability of products for a particular application.  It is the customer\u2019s responsib ility to validate that a particu lar\nproduct with the properties descri bed in the product specification is suitable fo r use in a particular application.  Parameters\nprovided in datasheets and/or specification s may vary in different applications an d performance may vary over time.  All\noperating parameters, including typical pa rameters, must be validated for each customer application by the customer\u2019s\ntechnical experts. Product specifications do not expand or otherwise modify Vish ay\u2019s terms and condit ions of purchase,\nincluding but not limited to the warranty expressed therein.\nExcept as expressly indicate d in writing, Vishay products are not designed for use in medical, life-saving, or life-sustaining\napplications or for any other application in  which the failure of the Vi shay product could result in personal injury or death.\nCustomers using or selling Vishay products not expressly indicated for use in such applications do so  at their own risk.  Pleas e\ncontact authorized Vishay personnel to ob tain written terms and conditions regarding  products designed for such applications.\nNo license, express or implied, by  estoppel or otherwise, to any intellectual prope rty rights is granted by this document or by\nany conduct of Vishay.  Product names and markings noted herein may be trad emarks of their respective owners.\nMaterial Category Policy\nVishay Intertechnology, Inc. hereby certi fies that all its products that are id entified as RoHS-Compliant fulfill the\ndefinitions and restrictions defined under Directive 2011/65/EU of The Euro pean Parliament and of the Council\nof June 8, 2011 on the restriction of the use of certain hazardous substances  in electrical and electronic equipment\n(EEE) - recast, unless otherwis e specified as non-compliant.\nPlease note that some Vishay  documentation may still make reference to RoHS Directive 2002/95/ EC. We confirm that\nall the products identified  as being compliant to Directive 2002 /95/EC conform to Directive 2011/65/EU.\nVishay Intertechnology, Inc. hereby certifi es that all its products that are identified as Ha logen-Free follow Halogen-Free\nrequirements as per JEDEC JS709A stan dards.  Please note that some Vishay  documentation may still make reference\nto the IEC 61249-2-21 definition.  We co nfirm that all the products identified  as being compliant to IEC 61249-2-21\nconform to JEDEC JS709A standards.  \n                          Your specialist in innovating humidity & temperature sensors   \n \n \nMaxDetect Technology Co., Ltd.                          http://www.humiditycn.com \n---------------------------- ------------- \nT h o m a s  L i u  ( S a l e s  M a n a g e r )                                  \nEmail: thomasliu198518@yahoo.com.cn , sales@humiditycn.com  - 1 -\n Digital relative humidity & temperature sensor RHT03       \n1. Feature & Application:  \n* H i g h  p r e c i s i o n                     \n* C a p a c i t i v e  t y p e         *Full range temperature compensated   \n*Relative humidity and temperature measurement \n* C a l i b r a t e d  d i g i t a l  s i g n a l                *Outstanding long-term stability    \n*Extra components not needed *Long transmission distance, up to 100 meters   \n*Low power consumption         \n*4 pins packaged and fully interchangeable  \n2. Description: \nRHT03 output calibrated digital signal. It applys excl usive digital-signal-collecting-technique and humidity \nsensing technology, assuring its reliability and stability. It s sensing elements is connected with 8-bit single-chip \ncomputer. Every sensor of this model is temperature compensate d and calibrated in accurate calibration chamber and the \ncalibration-coefficient is saved in type of programme in OTP memory, when the sensor is detecting, it will cite \ncoefficient from memory. \nSmall size & low consumption & long transmission distance(100m) enable RHT03 to be suited in all kinds of  \nharsh application occasions. Single-row packaged with four pins, making the connection very convenient. \n3. Technical Specification:   \nModel RHT03 \nPower supply 3.3-6V DC \nOutput signal digital signal via MaxDetect 1-wire bus \nSensing element Polymer humidity capacitor \nOperating range humidity 0-100%RH;              temperature -40~80Celsius \nAccuracy humidity +-2%RH (Max +-5%RH);  temperature +-0.5Celsius \nResolution or sensitivity humidity 0.1%RH;                temperature 0.1Celsius \nR e p e a t a b i l i t y  h u m i d i t y  + - 1 % R H ;                 t e m p e r a t u r e  + - 0 . 2 C e l s i u s   \n                          Your specialist in innovating humidity & temperature sensors   \n \n \nMaxDetect Technology Co., Ltd.                          http://www.humiditycn.com \n---------------------------- ------------- \nT h o m a s  L i u  ( S a l e s  M a n a g e r )                                  \nEmail: thomasliu198518@yahoo.com.cn , sales@humiditycn.com  - 2 -Humidity hysteresis +-0.3%RH \nLong-term Stability +-0.5%RH/year \nInterchangeability fully interchangeable \n4. Dimensions: (unit----mm) \n \n5. Electrical connection diagram: \n   \n6. Operating specifications: \n(1) Power and Pins  \nPower's voltage should be 3.3-6V DC. When power is supp lied to sensor, don't send any instruction to the sensor \nwithin one second to pass unstable status. One capacito r valued 100nF can be added between VDD and GND for \nwave filtering.    \n(2) Communication and signal  \nMaxDetect 1-wire bus is used for communication between MCU and RHT03. ( MaxDetect 1-wire bus is \nspecially designed by MaxDetect Technology Co., Ltd. , it 's different from Maxim/Dallas 1-wire bus, so it's \nincompatible with Dallas 1-wire bus.)  \n \nIllustration of MaxDetect 1-wire bus: \nData is comprised of integral and decimal part, the following is the formula for data.  DATA=8 bit integral RH data+8 bit decimal RH data+8 bit integral T data+8 bit decimal T data+8 bit check-sum  \n                          Your specialist in innovating humidity & temperature sensors   \n \n \nMaxDetect Technology Co., Ltd.                          http://www.humiditycn.com \n---------------------------- ------------- \nT h o m a s  L i u  ( S a l e s  M a n a g e r )                                  \nEmail: thomasliu198518@yahoo.com.cn , sales@humiditycn.com  - 3 -  \nIf the data transmission is right, check-sum should be: \nCheck sum=8 bit integral RH data+8 bit decimal RH data+8 bit integral T data+8 bit decimal T data \n \nExample: MCU has received 40 bits data from RHT03 as  \n        0000 0010 1000 1100  0000 0001 0101 1111   1110 1110  \n        1 6  b i t s  R H  d a t a        1 6  b i t s  T  d a t a         c h e c k  s u m  \n        Check sum=0000 0010+1000 1100+0000 0001+0101 1111=1110 1110  \n        RH= (0000 0010 1000 1100)/10=65.2%RH            T=(0000 0001 0101 1111)/10=\n35.1\u001f \nWhen highest bit of temperature is 1, it m eans the temperature is below 0 degree Celsius. \nExample: 1000 0000 0110 0101 , T= minus 10.1\u001f \n           1 6  b i t s  T  d a t a  \n When MCU send start signal, RHT03 change from standby-s tatus to running-status. When MCU finishs sending \nthe start signal, RHT03 will send response signal of 40-bit data  that reflect the relative humidity and temperature  \nto MCU. Without start signal from MCU, RHT03 will not give response signal to MCU. One start signal for one \nresponse data from RHT03 that reflect the relative humidity and temperature. RHT03 will change to standby \nstatus when data collecting finished if it don't receive start signal from MCU again.  \nSee below figure for overall communication process, the interval of whole process must beyond 2 seconds.\n \n   \n  \n                          Your specialist in innovating humidity & temperature sensors   \n \n \nMaxDetect Technology Co., Ltd.                          http://www.humiditycn.com \n---------------------------- ------------- \nT h o m a s  L i u  ( S a l e s  M a n a g e r )                                  \nEmail: thomasliu198518@yahoo.com.cn , sales@humiditycn.com  - 4 -------------------------------------------------------------------------------------------------------------------------------- ----- \n1) Step 1: MCU send out start signal to RHT03 and RHT03 send response signal to MCU \n \n  Data-bus's free status is high voltage level. When communication between MCU and RHT03 begins, MCU \nwill pull low data-bus and this process must beyond at le ast 1~10ms to ensure RHT03 could detect MCU's signal, \nthen MCU will pulls up and wait 20-40us for RHT03's response.    When RHT03 detect the start signal, RHT03 will pull low the bus 80us as response signal, then RHT03 pulls \nup 80us for preparation to send data. See below figure: \n  \n  \n------------------------------------------------------------------------------------------------------------------------------- ----- \n2). Step 2: RHT03 send data to MCU   When RHT03 is sending data to MCU, every bit's tran smission begin with low-voltage-level that last 50us, the \nfollowing high-voltage-level signal's length decide the bit is \"1\" or \"0\".  See below figures: \n \n  \n                          Your specialist in innovating humidity & temperature sensors   \n \n \nMaxDetect Technology Co., Ltd.                          http://www.humiditycn.com \n---------------------------- ------------- \nT h o m a s  L i u  ( S a l e s  M a n a g e r )                                  \nEmail: thomasliu198518@yahoo.com.cn , sales@humiditycn.com  - 5 -\n \n   Attention:  \n   If signal from RHT03 is always high-voltage-level, it means RHT03 is not working properly, please check \nthe electrical connection status. \n7. Electrical Characteristics: \nItems Condition Min Typical Max Unit \nPower supply DC 3.3 5 6 V \nMeasuring 1  1.5 mA Current supply \nStand-by 40 Null 50 uA \nCollecting \nperiod Second  2  Second \n8. Attentions of application:  \n(1) Operating and storage conditions \n   We don't recommend the applying RH-range beyond the range stated in this specification. The RHT03 sensor \ncan recover after working in abnormal operating condition to  calibrated status, but will accelerate sensors' aging. \n(2) Attentions to chemical materials   \n   Vapor from chemical materials may interfere RHT03's sensitive-elements and debase RHT03's sensitivity. \n(3) Disposal when (1) & (2) happens \n   Step one: Keep the RHT03 sensor at condition of Temperature 50~60Celsius, humidity <10%RH for 2 hours; \n   Step two: After step one, keep the RHT03 sensor  at condition of Temperat ure 20~30Celsius, humidity \n>70%RH for 5 hours.  \n                          Your specialist in innovating humidity & temperature sensors   \n \n \nMaxDetect Technology Co., Ltd.                          http://www.humiditycn.com \n---------------------------- ------------- \nT h o m a s  L i u  ( S a l e s  M a n a g e r )                                  \nEmail: thomasliu198518@yahoo.com.cn , sales@humiditycn.com  - 6 -(4) Attention to temperature's affection \n   Relative humidity strongly depend on temperature, that is why we use temperature compensation technology \nto ensure accurate measurement of RH. But it's still be mu ch better to keep the sensor at same temperature when \nsensing. \n   RHT03 should be mounted at the place as far as pos sible from parts that may cause change to temperature. \n(5) Attentions to light \n   Long time exposure to strong light and ultraviolet may debase RHT03's performance. \n(6) Attentions to connection wires \n   The connection wires' quality will effect communication's quality and distance, high quality shielding-wire is recommended. \n(7) Other attentions \n   * Welding temperature should be bellow 260Celsius.  \n   * Avoid using the sensor under dew condition. \n   * Don't use this product in safety or emergency stop devices or any other occasion that failure of RHT03 may cause personal injury. \n \n \n      ", "language": "PDF", "image": "PDF", "pagetype": "PDF", "links": "PDF"}